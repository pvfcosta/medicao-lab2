file,class,method,constructor,line,cbo,cboModified,fanin,fanout,wmc,rfc,loc,returnsQty,variablesQty,parametersQty,methodsInvokedQty,methodsInvokedLocalQty,methodsInvokedIndirectLocalQty,loopQty,comparisonsQty,tryCatchQty,parenthesizedExpsQty,stringLiteralsQty,numbersQty,assignmentsQty,mathOperationsQty,maxNestedBlocksQty,anonymousClassesQty,innerClassesQty,lambdasQty,uniqueWordsQty,modifiers,logStatementsQty,hasJavaDoc
C:\medicao-lab2\repos\interviews\leetcode\stack\DailyTemperatures.java,DailyTemperatures,dailyTemperatures/1[int[]],false,8,2,0,0,0,4,4,12,1,4,1,4,0,0,2,0,0,0,0,1,5,1,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\uva\Friends.java,Friends,"union/2[int,int]",false,114,1,3,1,2,2,2,7,0,0,2,2,2,1,0,1,0,0,0,0,2,0,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\interviews\uva\Friends.java,Friends,"join/2[int,int]",false,142,0,1,1,0,2,0,10,0,0,2,0,0,0,0,0,0,0,0,0,4,0,1,0,0,0,3,9,0,false
C:\medicao-lab2\repos\interviews\uva\Friends.java,Friends,"startUnion/3[int,int[],int[]]",false,100,1,1,1,0,2,0,6,0,1,3,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\interviews\uva\Friends.java,Friends,main/1[java.lang.String[]],false,53,1,2,0,2,5,6,22,0,13,1,6,2,2,3,0,0,0,2,8,14,0,2,0,0,0,26,9,0,false
C:\medicao-lab2\repos\interviews\uva\Friends.java,Friends,find/1[int],false,129,1,3,2,1,2,1,6,1,0,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,2,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\design\MinStack.java,Node,"Node/2[int,int]",true,21,0,0,0,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\ValidPalindrome.java,ValidPalindrome,isPalindrome/1[java.lang.String],false,2,0,0,0,0,7,4,18,2,2,1,4,0,0,3,1,0,0,0,2,2,1,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\binary-search\ClosestBinarySearchTreeValue.java,ClosestBinarySearchTreeValue,"closestValue/2[TreeNode,double]",false,17,1,0,0,0,4,2,9,2,3,2,2,0,0,0,1,0,0,0,0,3,2,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\LongestPalindrome.java,LongestPalindrome,longestPalindrome/1[java.lang.String],false,2,1,0,0,0,4,6,14,1,3,1,6,0,0,1,0,0,1,0,5,3,3,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\ValidateBinarySearchTree.java,ValidateBinarySearchTree,isValidBST/1[TreeNode],false,29,2,1,0,1,2,1,6,2,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\ValidateBinarySearchTree.java,ValidateBinarySearchTree,"validBSTRecursive/3[TreeNode,long,long]",false,37,2,3,2,1,4,1,11,3,0,3,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\CloneGraph.java,CloneGraph,cloneGraph/1[UndirectedGraphNode],false,34,1,0,0,0,4,5,14,3,1,1,5,0,0,1,1,0,0,0,0,1,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\PoorPigs.java,PoorPigs,"poorPigs/3[int,int,int]",false,12,0,0,0,0,2,1,7,1,1,3,1,0,0,1,0,0,0,0,2,1,2,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\GroupShiftedStrings.java,GroupShiftedStrings,groupStrings/1[String[]],false,17,4,0,0,0,6,8,26,1,8,1,8,0,0,3,0,0,1,1,3,10,2,3,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\RemoveInvalidParentheses.java,RemoveInvalidParentheses,removeInvalidParentheses/1[String],false,11,2,0,0,0,1,1,5,1,1,1,1,0,0,0,0,0,0,0,2,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\RemoveInvalidParentheses.java,RemoveInvalidParentheses,"remove/5[String,List<String>,int,int,char[]]",false,17,3,0,0,0,10,7,26,1,4,5,7,0,0,2,6,0,1,0,12,4,3,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\MajorityElement.java,MajorityElement,majorityElement/1[int[]],false,5,1,0,0,0,6,3,18,3,1,1,3,0,0,1,1,0,0,0,7,1,3,2,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\ImplementTrie.java,TrieNode,TrieNode/1[char],true,18,1,4,4,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\IntegerToEnglishWords.java,IntegerToEnglishWords,helper/1[int],false,34,1,3,2,1,4,1,14,4,0,1,1,1,0,0,1,0,0,4,7,0,7,1,0,0,0,3,2,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\IntegerToEnglishWords.java,IntegerToEnglishWords,numberToWords/1[int],false,14,1,1,0,1,4,2,15,2,2,1,2,1,1,1,2,0,0,3,7,4,3,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\uva\PeskyPalindromes.java,PeskyPalindromes,findUniquePalindromes/1[java.util.List<java.lang.String>],false,82,0,1,1,0,5,2,20,1,4,1,2,0,0,2,1,0,0,0,3,5,1,3,0,0,0,13,9,0,false
C:\medicao-lab2\repos\interviews\uva\PeskyPalindromes.java,PeskyPalindromes,generateSubstrings/1[java.lang.String],false,58,0,1,1,0,4,4,12,1,4,1,4,0,0,2,0,0,0,0,2,4,1,3,0,0,0,8,9,0,false
C:\medicao-lab2\repos\interviews\uva\PeskyPalindromes.java,PeskyPalindromes,main/1[java.lang.String[]],false,38,1,2,0,2,2,5,10,0,5,1,5,2,1,1,0,0,0,5,0,4,2,1,0,0,0,15,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\InorderSuccessorInBST.java,InorderSuccessorInBST,"inorderSuccessor/2[TreeNode,TreeNode]",false,15,1,0,0,0,3,0,13,1,1,2,0,0,0,1,1,0,0,0,0,4,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\company\twitter\ImplementTrie.java,Trie,startsWith/1[String],false,68,1,0,0,0,3,3,10,2,1,1,3,0,0,1,0,0,0,0,0,2,0,2,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\company\twitter\ImplementTrie.java,Trie,search/1[String],false,48,1,0,0,0,4,3,15,3,1,1,3,0,0,1,1,0,0,0,0,2,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\company\twitter\ImplementTrie.java,Trie,Trie/0,true,27,1,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\company\twitter\ImplementTrie.java,Trie,insert/1[String],false,32,1,0,0,0,3,4,10,0,1,1,4,0,0,1,0,0,0,0,0,3,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\uva\OpenSource.java,OpenSource$Anonymous1,"compare/2[Pair,Pair]",false,116,1,0,0,0,2,2,6,2,0,2,2,0,0,0,1,0,0,0,1,0,0,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\ProductofArrayExceptSelf.java,ProductOfArrayExceptSelf,productExceptSelf/1[int[]],false,11,0,0,0,0,5,0,19,1,6,1,0,0,0,2,0,0,0,0,9,10,4,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-one-arrays-and-strings\Permutation.java,Permutation,"permutation/2[java.lang.String,java.lang.String]",false,4,2,0,0,0,5,3,17,3,4,2,3,0,0,2,1,0,0,0,3,4,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\EightQueens.java,EightQueens,"checkValid/3[java.lang.Integer[],int,int]",false,26,0,1,1,0,4,1,14,3,4,3,1,0,0,1,2,0,0,0,1,4,2,2,0,0,0,11,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\EightQueens.java,EightQueens,"placeQueens/3[int,java.lang.Integer[],ArrayList<java.lang.Integer[]>]",false,8,2,3,1,2,4,4,13,0,1,3,4,2,1,1,1,0,0,0,2,2,1,3,0,0,0,15,0,0,false
C:\medicao-lab2\repos\interviews\uva\SkewBinary.java,SkewBinary,main/1[java.lang.String[]],false,52,0,0,0,0,4,10,18,0,7,1,10,0,0,2,0,0,3,1,4,9,3,2,0,0,0,14,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\BinaryTreeIsBalanced.java,BinaryTreeIsBalanaced,getHeight/1[TreeNode],false,6,0,0,0,0,2,2,6,2,0,1,2,0,0,0,1,0,0,0,2,0,1,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\BinaryTreeIsBalanced.java,BinaryTreeIsBalanaced,isBalanced/1[TreeNode],false,13,0,0,0,0,3,3,12,3,1,1,3,0,0,0,1,0,0,0,1,1,1,1,0,0,0,12,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\backtracking\GeneralizedAbbreviation.java,GeneralizedAbbreviation,generateAbbreviations/1[String],false,8,2,0,0,0,1,1,5,1,1,1,1,0,0,0,0,0,0,1,2,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\backtracking\GeneralizedAbbreviation.java,GeneralizedAbbreviation,"backtrack/5[List,String,int,String,int]",false,16,0,0,0,0,4,4,12,0,0,5,4,0,0,0,1,0,1,1,6,1,4,2,0,0,0,5,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-seven-mathematics-and-probability\WouldIntersect.java,Line,Intersect/1[Line],false,17,1,0,0,0,3,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-seven-mathematics-and-probability\WouldIntersect.java,Line,"Line/2[double,double]",true,12,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\ThreeStacks.java,ThreeStacks,peek/1[int],false,28,2,2,0,2,2,2,7,1,1,1,2,2,1,0,0,0,0,0,0,1,0,1,0,0,0,11,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\ThreeStacks.java,ThreeStacks,absTopOfStack/1[int],false,41,0,3,3,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\ThreeStacks.java,ThreeStacks,"push/2[int,int]",false,8,2,1,0,1,2,1,7,0,0,2,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,8,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\ThreeStacks.java,ThreeStacks,pop/1[int],false,18,2,2,0,2,2,2,9,1,1,1,2,2,1,0,0,0,0,0,1,2,0,1,0,0,0,8,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\ThreeStacks.java,ThreeStacks,isEmpty/1[int],false,36,0,2,2,0,2,0,3,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\SummaryRanges.java,SummaryRanges,summaryRanges/1[int[]],false,6,2,0,0,0,6,1,20,2,3,1,1,0,0,2,3,0,1,3,6,3,6,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\uva\Newspaper.java,Newspaper,main/1[java.lang.String[]],false,47,0,0,0,0,6,10,30,0,11,1,10,0,0,4,3,0,0,3,6,13,4,4,0,0,0,22,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\backtracking\AndroidUnlockPatterns.java,AndroidUnlockPatterns,"DFS/4[boolean,int[][],int,int]",false,56,0,0,0,0,7,1,17,3,2,4,1,0,0,1,2,0,1,0,9,5,1,2,0,0,0,9,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\backtracking\AndroidUnlockPatterns.java,AndroidUnlockPatterns,"numberOfPatterns/2[int,int]",false,29,0,0,0,0,2,1,16,1,4,2,1,0,0,1,0,0,0,0,49,23,5,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\InvertBinaryTree.java,InvertBinaryTree,invertTree/1[TreeNode],false,27,2,2,1,1,2,1,9,2,1,1,1,1,0,0,1,0,0,0,0,3,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\divide-and-conquer\KthLargestElementInAnArray.java,KthLargestElementInAnArray,"findKthLargest/2[int[],int]",false,10,0,0,0,0,1,1,5,1,1,2,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\TowersOfHanoi.java,Tower,add/1[int],false,37,0,2,2,0,3,4,8,0,0,1,4,0,0,0,0,0,0,1,0,0,1,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\TowersOfHanoi.java,Tower,moveTopTo/1[Tower],false,46,1,3,1,2,1,4,5,0,1,1,4,2,1,0,0,0,0,3,0,1,1,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\TowersOfHanoi.java,Tower,index/0,false,33,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\TowersOfHanoi.java,Tower,Tower/1[int],true,28,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\TowersOfHanoi.java,Tower,"moveDisks/3[int,Tower,Tower]",false,52,1,4,2,2,2,2,7,0,0,3,2,2,2,0,0,0,0,0,3,0,2,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\AddBinary.java,AddBinary,"addBinary/2[java.lang.String,java.lang.String]",false,9,0,0,0,0,6,5,21,1,5,2,5,0,0,1,1,0,0,0,10,8,6,2,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\SearchInRotatedSortedArray.java,SearchInRotatedSortedArray,"search/2[int[],int]",false,10,0,0,0,0,9,0,27,2,3,2,0,0,0,1,1,0,1,0,8,7,8,3,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\uva\GoldbachConjecture.java,GoldbachConjecture,sieveOfEratosthenes/1[int],false,66,1,1,1,0,5,0,14,1,4,1,0,0,0,3,0,0,0,0,4,6,5,3,0,0,0,11,10,0,false
C:\medicao-lab2\repos\interviews\uva\GoldbachConjecture.java,GoldbachConjecture,main/1[java.lang.String[]],false,42,2,1,0,1,7,3,22,0,7,1,3,1,1,2,1,0,0,3,3,9,2,4,0,0,0,17,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\MergeKSortedLists.java,MergeKSortedLists$Anonymous1,"compare/2[ListNode,ListNode]",false,19,1,0,0,0,3,0,11,3,0,2,0,0,0,0,1,0,0,0,3,0,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\ImplementTrie.java,ImplementTrie,insert/1[java.lang.String],false,36,1,1,0,1,3,4,10,0,1,1,4,0,0,1,0,0,0,0,0,3,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\ImplementTrie.java,ImplementTrie,startsWith/1[java.lang.String],false,71,1,0,0,0,3,3,10,2,1,1,3,0,0,1,0,0,0,0,0,2,0,2,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\ImplementTrie.java,ImplementTrie,search/1[java.lang.String],false,51,1,0,0,0,4,3,15,3,1,1,3,0,0,1,1,0,0,0,0,2,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\ImplementTrie.java,ImplementTrie,Trie/0,false,31,1,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\binary-search\PowerOfXToTheN.java,PowerOfXToTheN,"myPow/2[double,int]",false,4,0,0,0,0,5,2,13,3,0,2,2,0,0,0,2,0,0,0,9,2,7,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\PalindromeNumber.java,PalindromeNumber,isPalindrome/1[int],false,4,0,0,0,0,4,0,12,2,2,1,0,0,0,1,2,0,0,0,6,4,3,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\uva\BasicRemains.java,BasicRemains,main/1[java.lang.String[]],false,33,0,0,0,0,3,6,12,0,4,1,6,0,0,1,1,0,1,0,1,4,0,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\InsertDeleteGetRandomO1.java,RandomizedSet,RandomizedSet/0,true,37,2,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\hash-table\InsertDeleteGetRandomO1.java,RandomizedSet,insert/1[int],false,43,0,0,0,0,2,3,10,2,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\hash-table\InsertDeleteGetRandomO1.java,RandomizedSet,getRandom/0,false,65,0,0,0,0,1,3,5,1,2,0,3,0,0,0,0,0,1,0,0,2,1,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\hash-table\InsertDeleteGetRandomO1.java,RandomizedSet,remove/1[int],false,55,0,0,0,0,2,3,8,2,0,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,13,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\HouseRobberII.java,HouseRobberII,rob/1[int[]],false,10,0,0,0,0,4,1,19,3,3,1,1,0,0,1,1,0,0,0,22,9,11,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\uva\HighSchoolPhysics.java,HighSchoolPhysics,main/1[java.lang.String[]],false,24,0,0,0,0,2,5,11,0,5,1,5,0,0,1,0,0,0,2,3,6,2,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\RegularExpressionMatching.java,RegularExpressionMatching,"isMatch/2[String,String]",false,21,0,0,0,0,13,2,31,2,4,2,2,0,0,3,8,0,1,0,27,10,20,4,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\MissingRanges.java,MissingRanges,"findMissingRanges/3[int[],int,int]",false,6,2,0,0,0,4,1,9,1,4,3,1,0,0,1,2,0,0,0,5,4,3,1,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\MissingRanges.java,MissingRanges,"addMissing/3[ArrayList<String>,long,long]",false,17,1,0,0,0,3,1,11,1,0,3,1,0,0,0,1,0,0,2,0,0,2,1,0,0,0,4,0,0,false
C:\medicao-lab2\repos\interviews\uva\JollyJumpers.java,JollyJumpers,main/1[java.lang.String[]],false,30,1,0,0,0,7,6,23,0,7,1,6,0,0,3,1,0,1,2,6,8,4,3,0,0,0,12,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\ReverseString.java,ReverseString,reverseString/1[java.lang.String],false,7,1,0,0,0,5,2,12,2,4,1,2,0,0,1,3,0,0,0,4,6,1,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\TrappingRainWater.java,TrappingRainWater,trap/1[int[]],false,7,1,0,0,0,3,1,20,1,5,1,1,0,0,1,0,0,0,0,5,9,3,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\uva\PseudoPrimeNumbers.java,PseudoPrimeNumbers,main/1[java.lang.String[]],false,44,0,0,0,0,6,5,26,0,7,1,5,0,0,1,2,0,0,6,3,10,2,3,0,0,0,12,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\DecodeWays.java,DecodeWays,numDecodings/1[java.lang.String],false,16,1,0,0,0,6,4,18,2,3,1,4,0,0,1,3,0,1,0,16,6,9,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\company\google\ShortestDistanceFromAllBuildings.java,ShortestDistanceFromAllBuildings,shortestDistance/1[int[][]],false,19,4,0,0,0,21,5,48,2,20,1,5,0,0,7,8,0,0,0,28,23,3,7,0,0,0,25,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\PalindromeLinkedList.java,PalindromeLinkedList,isPalindrome/1[ListNode],false,10,2,0,0,0,8,2,23,3,3,1,2,0,0,2,7,0,0,0,0,7,0,2,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\EditDistance.java,EditDistance,"minDistance/2[java.lang.String,java.lang.String]",false,10,1,0,0,0,6,3,26,1,10,2,3,0,0,4,1,0,0,0,16,14,10,3,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\MinimumSizeSubarraySum.java,MinimumSizeSubarraySum,"minSubArrayLen/2[int,int[]]",false,7,1,0,0,0,6,1,17,2,4,2,1,0,0,2,3,0,0,0,6,7,1,2,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\FlattenNestedListIterator.java,FlattenNestedListIterator,next/0,false,42,0,0,0,0,1,2,3,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\FlattenNestedListIterator.java,FlattenNestedListIterator,hasNext/0,false,47,1,0,0,0,4,8,13,2,2,0,8,0,0,2,0,0,0,0,2,2,1,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\FlattenNestedListIterator.java,FlattenNestedListIterator,NestedIterator/1[List<NestedInteger>],false,35,1,0,0,0,2,3,5,0,1,1,3,0,0,1,0,0,0,0,2,1,1,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\PrintPaths.java,PrintPaths,depth/1[TreeNode],false,45,2,3,2,1,2,2,8,2,0,1,2,1,0,0,1,0,0,0,2,0,1,1,0,0,0,5,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\PrintPaths.java,PrintPaths,"findSum/2[TreeNode,int]",false,32,3,2,0,2,1,2,5,0,2,2,2,2,2,0,0,0,0,0,1,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\PrintPaths.java,PrintPaths,"print/3[int[],int,int]",false,38,1,1,1,0,2,2,6,0,1,3,2,0,0,1,0,0,0,1,0,1,1,1,0,0,0,4,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\PrintPaths.java,PrintPaths,"findSum/4[TreeNode,int,int[],int]",false,6,3,4,2,2,4,2,16,1,2,4,2,2,1,1,2,0,0,0,4,5,2,2,0,0,0,11,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\FindTheDifference.java,FindTheDifference,"findTheDifference/2[String,String]",false,20,0,0,0,0,3,2,11,1,4,2,2,0,0,2,0,0,3,0,4,6,1,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\CreateBinarySearchTree.java,CreateBinarySearchTree,createMinimalBST/1[int[]],false,16,3,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\CreateBinarySearchTree.java,CreateBinarySearchTree,"createMinimalBST/3[int[],int,int]",false,5,3,3,2,1,2,1,10,2,2,3,1,1,0,0,0,0,1,0,3,4,4,1,0,0,0,12,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\ValidParentheses.java,ValidParentheses,isValid/1[java.lang.String],false,6,1,0,0,0,15,6,24,3,2,1,6,0,0,1,10,0,0,0,3,2,1,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\BattleshipsInABoard.java,BattleshipsInABoard,"sink/4[char[][],int,int,int]",false,38,2,3,2,1,6,1,8,1,0,4,1,1,0,0,1,0,0,0,7,1,4,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\BattleshipsInABoard.java,BattleshipsInABoard,countBattleships/1[char[][]],false,23,2,1,0,1,4,1,12,1,3,1,1,1,1,2,1,0,0,0,5,3,0,3,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\TwoSum.java,TwoSum,"twoSum/2[int[],int]",false,12,1,0,0,0,3,3,13,2,3,2,3,0,0,1,0,0,0,0,4,5,2,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\ReverseLinkedList.java,ReverseLinkedList,reverseList/1[ListNode],false,12,1,0,0,0,3,0,13,2,2,1,0,0,0,1,2,0,0,0,0,5,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\BombEnemy.java,BombEnemy,maxKilledEnemies/1[char[][]],false,15,0,0,0,0,13,2,25,2,5,1,2,0,0,2,9,0,1,0,14,8,4,3,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\BombEnemy.java,BombEnemy,"killedEnemiesCol/3[char[][],int,int]",false,63,0,0,0,0,4,0,10,1,1,3,0,0,0,1,2,0,0,0,2,1,1,2,0,0,0,6,2,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\BombEnemy.java,BombEnemy,"killedEnemiesRow/3[char[][],int,int]",false,48,0,0,0,0,4,0,10,1,1,3,0,0,0,1,2,0,0,0,3,1,1,2,0,0,0,5,2,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\MagicIndex.java,MagicIndex,magicFast/1[int[]],false,21,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\MagicIndex.java,MagicIndex,"magicFast/3[int[],int,int]",false,5,2,3,2,1,6,1,15,4,1,3,1,1,0,0,1,0,1,0,5,1,4,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\JudgeRouteCircle.java,JudgeRouteCircle,judgeCircle/1[java.lang.String],false,13,0,0,0,0,8,2,19,1,3,1,2,0,0,1,6,0,0,0,5,3,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\divide-and-conquer\ExpressionAddOperators.java,ExpressionAddOperators,"helper/7[List<String>,String,String,int,int,long,long]",false,22,1,0,0,0,7,6,22,1,2,7,6,0,0,1,5,0,0,3,6,2,15,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\divide-and-conquer\ExpressionAddOperators.java,ExpressionAddOperators,"addOperators/2[String,int]",false,11,2,0,0,0,3,2,8,2,1,2,2,0,0,0,2,0,0,1,4,1,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\SortColors.java,SortColors,sortColors/1[int[]],false,9,1,0,0,0,5,0,19,0,5,1,0,0,0,2,1,0,0,0,5,9,0,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\uva\OpenSource.java,OpenSource,main/1[java.lang.String[]],false,67,1,2,0,2,9,13,50,0,7,1,13,0,0,4,0,0,2,5,6,9,3,6,1,0,0,21,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\bit-manipulation\SumOfTwoInteger.java,SumOfTwoIntegers,"getSum/2[int,int]",false,7,0,0,0,0,4,0,14,3,1,2,0,0,0,1,3,0,0,0,4,3,1,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\SparseMatrixMultiplication.java,SparseMatrixMultiplication,"multiply/2[int[][],int[][]]",false,24,0,0,0,0,6,0,18,1,7,2,0,0,0,3,2,0,0,0,7,8,1,5,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\WordSquares.java,WordSquares,wordSquares/1[java.lang.String[]],false,19,7,1,0,1,6,7,18,2,5,1,7,1,1,2,2,0,0,0,14,5,3,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\WordSquares.java,WordSquares,"helper/5[List<List<java.lang.String>>,List<java.lang.String>,int,int,Map<java.lang.String,Set<java.lang.String>>]",false,46,5,3,2,1,5,8,19,2,3,5,8,1,0,2,2,0,0,0,4,3,3,1,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\bit-manipulation\NumberOfOneBits.java,NumberOfOneBits,hammingWeight/1[int],false,7,0,0,0,0,3,0,11,2,1,1,0,0,0,1,2,0,1,0,6,3,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\LoggerRateLimiter.java,LoggerRateLimiter,"shouldPrintMessage/2[int,String]",false,40,0,0,0,0,3,3,15,3,0,2,3,0,0,0,0,0,0,0,1,0,1,2,0,0,0,22,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\hash-table\LoggerRateLimiter.java,LoggerRateLimiter,Logger/0,false,33,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\RemoveElement.java,RemoveElement,"removeElement/2[int[],int]",false,10,1,0,0,0,3,0,9,1,2,2,0,0,0,1,1,0,0,0,2,3,0,2,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\binary-search\FirstBadVersion.java,FirstBadVersion,firstBadVersion/1[int],false,11,0,0,0,0,3,1,14,1,3,1,1,0,0,1,0,0,1,0,3,5,4,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\ValidSudoku.java,ValidSudoku,isValidSudoku/1[char[][]],false,9,2,0,0,0,9,1,21,4,7,1,1,0,0,2,3,0,2,0,11,7,12,3,0,0,0,14,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\BinaryTreeVerticalOrderTraversal.java,BinaryTreeVerticalOrderTraversal,verticalOrder/1[TreeNode],false,68,7,0,0,0,7,8,35,2,9,1,8,0,0,2,3,0,0,0,7,11,4,2,0,0,0,15,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\MaximumSizeSubarraySumEqualsK.java,MaximumSizeSubarraySumEqualsK,"maxSubArrayLen/2[int[],int]",false,18,1,0,0,0,5,4,19,2,4,2,4,0,0,1,1,0,0,0,7,6,3,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\ClimbingStairs.java,ClimbingStairs,climbStairs/1[int],false,8,1,0,0,0,2,0,9,1,2,1,0,0,0,1,0,0,0,0,9,5,5,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\SetOfStacks.java,SetOfStacks,getLastStack/0,false,36,1,2,2,0,2,2,6,2,0,0,2,0,0,0,1,0,0,0,2,0,1,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\SetOfStacks.java,SetOfStacks,pop/0,false,27,2,1,0,1,2,4,8,1,2,0,4,1,1,0,1,0,0,0,2,2,1,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\SetOfStacks.java,SetOfStacks,push/1[int],false,15,2,1,0,1,3,4,11,0,2,1,4,1,1,0,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\uva\ArchaeologistsDilemma.java,ArchaeologistsDilemma,main/1[java.lang.String[]],false,42,0,0,0,0,3,4,15,0,5,1,4,0,0,2,1,0,9,1,3,7,16,2,0,0,0,14,9,0,false
C:\medicao-lab2\repos\interviews\uva\SplittingNumbers.java,SplittingNumbers,main/1[java.lang.String[]],false,42,0,0,0,0,5,3,23,0,7,1,3,0,0,2,3,0,4,1,9,10,4,3,0,0,0,15,9,0,false
C:\medicao-lab2\repos\interviews\uva\BigMod.java,BigMod,main/1[java.lang.String[]],false,37,0,0,0,0,2,4,9,0,4,1,4,0,0,1,0,0,0,0,0,4,0,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\ReverseWordsInAString.java,ReverseWordsInAString,reverseWords/1[java.lang.String],false,7,0,0,0,0,2,2,8,1,3,1,2,0,0,1,0,0,0,3,3,4,3,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\LongestSubstringWithAtMostKDistinctCharacters.java,LongestSubstringWithAtMostKDistinctCharacters,"lengthOfLongestSubstringKDistinct/2[java.lang.String,int]",false,8,1,0,0,0,6,3,21,1,5,2,3,0,0,2,2,0,0,0,8,6,2,3,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\uva\Parity.java,Parity,main/1[java.lang.String[]],false,31,1,1,0,1,5,6,17,0,5,1,6,1,1,2,1,0,0,5,3,5,2,3,0,0,0,18,9,0,false
C:\medicao-lab2\repos\interviews\uva\Parity.java,Parity,convertToBinary/1[int],false,51,0,1,1,0,2,3,8,1,1,1,3,0,0,1,1,0,0,1,3,3,2,1,0,0,0,7,10,0,false
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\MergeSortedArray.java,MergeSortedArray,"merge/4[int[],int,int[],int]",false,7,1,0,0,0,5,0,11,0,3,4,0,0,0,2,0,0,0,0,6,5,4,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\IsSubtree.java,IsSubtree,"matchTree/2[TreeNode,TreeNode]",false,24,2,3,2,1,6,1,8,4,0,2,1,1,0,0,5,0,1,0,0,0,0,1,0,0,0,8,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\IsSubtree.java,IsSubtree,"subTree/2[TreeNode,TreeNode]",false,14,2,4,2,2,4,2,9,3,0,2,2,2,1,0,2,0,1,0,0,0,0,2,0,0,0,9,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\IsSubtree.java,IsSubtree,"containsTree/2[TreeNode,TreeNode]",false,7,2,1,0,1,2,1,6,2,0,2,1,1,2,0,1,0,0,0,0,0,0,1,0,0,0,7,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\StackBoxes.java,StackBoxes,"createStackDP/3[Box[],Box,HashMap<Box,ArrayList<Box>>]",false,7,4,2,1,1,8,8,25,2,5,3,8,1,0,1,3,0,0,0,3,8,0,3,0,0,0,13,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\CoinChange.java,CoinChange,"coinChangeRecursive/3[int[],int,int[]]",false,23,2,3,2,1,8,1,20,4,2,3,1,1,0,1,3,0,0,0,12,4,6,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\CoinChange.java,CoinChange,"coinChange/2[int[],int]",false,15,2,1,0,1,2,1,6,2,0,2,1,1,1,0,0,0,0,0,2,0,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\PaintHouseII.java,PaintHouseII,minCostII/1[int[][]],false,12,0,0,0,0,12,0,31,2,8,1,0,0,0,2,3,0,0,0,18,15,3,3,0,0,0,13,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\FindAllNumbersDisappearedInAnArray.java,FindAllNumbersDisappearedInAnArray,findDisappearedNumbers/1[int[]],false,16,3,0,0,0,6,5,18,1,4,1,5,0,0,3,1,0,0,0,5,4,0,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\EncodeAndDecodeTinyURL.java,EncodeAndDecodeTinyURL,getKey/0,false,13,0,1,1,0,2,2,9,1,1,0,2,0,0,1,0,0,0,1,1,3,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\EncodeAndDecodeTinyURL.java,EncodeAndDecodeTinyURL,encode/1[java.lang.String],false,25,1,1,0,1,1,2,6,1,1,1,2,1,1,0,0,0,0,1,0,1,1,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\EncodeAndDecodeTinyURL.java,EncodeAndDecodeTinyURL,decode/1[java.lang.String],false,34,0,0,0,0,1,2,3,1,0,1,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\IslandPerimeter.java,IslandPerimeter,"numNeighbors/3[int[][],int,int]",false,31,0,0,0,0,7,1,10,3,0,3,1,0,0,0,2,0,0,0,11,1,5,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\IslandPerimeter.java,IslandPerimeter,islandPerimeter/1[int[][]],false,13,0,0,0,0,6,1,15,3,3,1,1,0,0,2,3,0,0,0,5,4,0,3,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\sort\MeetingRooms.java,MeetingRooms$Anonymous1,"compare/2[Interval,Interval]",false,24,1,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\FindTheCelebrity.java,FindTheCelebrity,findCelebrity/1[int],false,13,0,0,0,0,7,1,14,2,3,1,1,0,0,2,1,0,0,0,4,4,0,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\GameOfLife.java,GameOfLife,gameOfLife/1[int[][]],false,16,0,0,0,0,12,1,23,1,7,1,1,0,0,4,5,0,0,0,14,10,0,3,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\GameOfLife.java,GameOfLife,"liveNeighbors/5[int[][],int,int,int,int]",false,45,0,0,0,0,3,2,10,1,3,5,2,0,0,2,0,0,0,0,11,5,6,2,0,0,0,7,2,0,false
C:\medicao-lab2\repos\interviews\company\google\WallsAndGates.java,WallsAndGates,"dfs/4[int[][],int,int,int]",false,31,0,0,0,0,6,1,10,1,0,4,1,0,0,0,0,0,0,0,11,1,8,1,0,0,0,4,0,0,false
C:\medicao-lab2\repos\interviews\company\google\WallsAndGates.java,WallsAndGates,wallsAndGates/1[int[][]],false,20,0,0,0,0,4,1,9,0,2,1,1,0,0,2,1,0,0,0,5,2,0,3,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\ValidBinarySearchTree.java,ValidBinarySearchTree,"checkBST/3[TreeNode,java.lang.Integer,java.lang.Integer]",false,8,2,3,2,1,8,1,12,4,0,3,1,1,0,0,3,0,2,0,0,0,0,1,0,0,0,12,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\ValidBinarySearchTree.java,ValidBinarySearchTree,checkBST/1[TreeNode],false,4,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\interviews\uva\HashmatWarriors.java,HashmatWarriors,main/1[java.lang.String[]],false,29,0,0,0,0,2,6,11,0,5,1,6,0,0,1,0,0,0,2,2,6,1,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\interviews\uva\FactorialFrequenices.java,FactorialFrequenices,"formatOutput/2[int,int[]]",false,65,1,1,1,0,7,2,8,0,1,2,2,0,0,1,5,0,0,4,7,1,1,2,0,0,0,5,10,0,false
C:\medicao-lab2\repos\interviews\uva\FactorialFrequenices.java,FactorialFrequenices,main/1[java.lang.String[]],false,44,2,1,0,1,4,9,18,0,6,1,9,1,1,3,1,0,0,0,4,9,1,2,0,0,0,14,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\bit-manipulation\HammingDistance.java,HammingDistance,"hammingDistance/2[int,int]",false,22,0,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\CombinationSumIV.java,CombinationSumIV,"combinationSum4/2[int[],int]",false,27,0,0,0,0,4,0,12,1,3,2,0,0,0,2,0,0,0,0,6,5,3,3,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\FindPath.java,FindPath,"search/3[Graph,Node,Node]",false,8,3,0,0,0,8,5,28,3,2,3,5,0,0,3,4,0,0,0,0,6,0,5,0,0,0,11,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\MyQueue.java,MyQueue,peek/0,false,31,2,1,0,1,1,2,4,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\MyQueue.java,MyQueue,MyQueue/0,true,6,1,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\MyQueue.java,MyQueue,size/0,false,11,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\MyQueue.java,MyQueue,shiftStacks/0,false,23,0,0,0,0,3,3,7,0,0,0,3,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,2,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\MyQueue.java,MyQueue,add/1[T],false,15,1,0,0,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\MyQueue.java,MyQueue,remove/0,false,36,2,1,0,1,1,2,4,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\ReverseVowelsOfAString.java,ReverseVowelsOfAString,reverseVowels/1[java.lang.String],false,13,1,0,0,0,8,3,23,2,5,1,3,0,0,3,2,0,0,3,3,7,3,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\PaintHouse.java,PaintHouse,minCost/1[int[][]],false,13,0,0,0,0,4,1,11,2,1,1,1,0,0,1,2,0,0,0,24,4,9,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\uva\VirtualFriends.java,VirtualFriends,"union/2[int,int]",false,81,1,2,1,1,3,1,17,3,0,2,1,1,1,0,1,0,0,0,0,6,0,2,0,0,0,4,9,0,false
C:\medicao-lab2\repos\interviews\uva\VirtualFriends.java,VirtualFriends,startUnion/1[int],false,71,0,1,1,0,2,0,6,0,1,1,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\interviews\uva\VirtualFriends.java,VirtualFriends,find/1[int],false,104,1,3,2,1,2,1,6,1,0,1,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,2,9,0,false
C:\medicao-lab2\repos\interviews\uva\VirtualFriends.java,VirtualFriends,main/1[java.lang.String[]],false,42,1,2,0,2,6,10,26,0,9,1,10,2,2,2,0,0,0,1,6,9,0,3,0,0,0,20,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-five-bit-manipulation\FindMissingInteger.java,FindMissingInteger,findMissing/1[ArrayList<BigInteger>],false,8,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-five-bit-manipulation\FindMissingInteger.java,FindMissingInteger,"findMissing/2[ArrayList<BigInteger>,int]",false,13,2,3,2,1,5,4,23,3,4,2,4,1,0,1,1,0,2,0,10,4,6,2,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\ExclusiveTimeOfFunctions.java,ExclusiveTimeOfFunctions,"exclusiveTime/2[int,List<java.lang.String>]",false,31,3,0,0,0,4,9,25,1,5,2,9,0,0,1,0,0,0,3,12,10,4,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\Staircase.java,Staircase,"countWaysDP/2[int,int[]]",false,5,2,2,1,1,4,1,15,4,0,2,1,1,0,0,1,0,0,0,8,1,4,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\interviews\uva\CoconutsRevisited.java,CoconutsRevisited,main/1[java.lang.String[]],false,42,0,0,0,0,9,3,28,0,6,1,3,0,0,3,4,0,1,3,7,8,8,3,0,0,0,15,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\BinaryTreeLevelOrderTraversal.java,BinarySearchTreeLevelOrderTraversal,levelOrder/1[TreeNode],false,27,5,0,0,0,7,4,31,2,6,1,4,0,0,2,3,0,0,0,1,7,0,3,0,0,0,13,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\MinStack.java,MinStack,push/1[int],false,34,1,1,0,1,2,1,10,0,1,1,1,0,0,0,1,0,0,0,0,4,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\MinStack.java,MinStack,pop/0,false,44,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\MinStack.java,MinStack,MinStack/0,true,30,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\stack\MinStack.java,MinStack,getMin/0,false,52,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\MinStack.java,MinStack,top/0,false,48,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\SingleNumberII.java,SingleNumberII,singleNumber/1[int[]],false,8,2,0,0,0,5,4,17,2,1,1,4,0,0,2,1,0,0,0,4,1,1,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-five-bit-manipulation\BinaryRepresentation.java,BinaryRepresentation,printBinary/1[double],false,6,1,0,0,0,6,3,22,3,2,1,3,0,0,1,0,0,0,3,9,4,2,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\interviews\uva\SolveEquation.java,SolveEquation,main/1[java.lang.String[]],false,21,0,0,0,0,15,2,27,0,9,1,2,0,0,3,6,0,2,3,5,10,13,6,0,0,0,18,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\ShortestDistanceFromAllBuildings.java,Shortest,shortestDistance/1[int[][]],false,19,4,0,0,0,21,5,48,2,20,1,5,0,0,7,8,0,0,0,28,23,3,7,0,0,0,25,1,0,false
C:\medicao-lab2\repos\interviews\uva\LightMoreLight.java,LightMoreLight,isAPerfectSquare/1[long],false,45,0,1,1,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,7,10,0,false
C:\medicao-lab2\repos\interviews\uva\LightMoreLight.java,LightMoreLight,main/1[java.lang.String[]],false,32,1,1,0,1,3,3,13,0,2,1,3,1,1,1,1,0,0,2,1,3,0,2,0,0,0,9,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\ContainsDuplicate.java,ContainsDuplicate,containsDuplicate/1[int[]],false,5,1,0,0,0,3,2,12,2,1,1,2,0,0,1,0,0,0,0,1,1,0,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\AddAndSearchWordDataStructureDesign.java,AddAndSearchWordDataStructure,addWord/1[java.lang.String],false,28,1,1,0,1,3,1,10,0,1,1,1,0,0,1,1,0,0,0,0,4,3,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\AddAndSearchWordDataStructureDesign.java,AddAndSearchWordDataStructure,search/1[java.lang.String],false,42,1,1,0,1,1,2,3,1,0,1,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\trie\AddAndSearchWordDataStructureDesign.java,AddAndSearchWordDataStructure,"match/3[char[],int,AddAndSearchWordDataStructure.TrieNode]",false,46,3,3,2,1,6,2,18,4,1,3,2,1,0,1,4,0,0,1,3,1,4,4,0,0,0,7,2,0,false
C:\medicao-lab2\repos\interviews\company\google\ExpressionAddOperators.java,ExpressionAddOperator,"helper/7[List<java.lang.String>,java.lang.String,java.lang.String,int,int,long,long]",false,23,2,3,2,1,7,6,22,1,2,7,6,1,0,1,5,0,0,3,6,2,15,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\company\google\ExpressionAddOperators.java,ExpressionAddOperator,"addOperators/2[java.lang.String,int]",false,11,3,1,0,1,3,2,8,2,1,2,2,1,1,0,2,0,0,1,4,1,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\design\ZigZagIterator.java,ZigZagIterator,hasNext/0,false,37,0,0,0,0,1,1,3,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\design\ZigZagIterator.java,ZigZagIterator,"ZigzagIterator/2[List<Integer>,List<Integer>]",false,22,1,0,0,0,1,1,4,0,0,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\design\ZigZagIterator.java,ZigZagIterator,next/0,false,27,0,0,0,0,2,2,8,1,0,0,2,2,1,0,0,0,0,0,0,3,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\uva\OpenSource.java,Pair,"Pair/2[java.lang.String,int]",true,140,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\BullsAndCows.java,BullsAndCows,"getHint/2[String,String]",false,24,1,0,0,0,5,2,19,1,4,2,2,0,0,1,1,0,0,2,6,4,3,3,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\company\facebook\LowestCommonAncestorOfABinaryTree.java,LowestCommonAncestorsOfABinaryTree,"lowestCommonAncestor/3[TreeNode,TreeNode,TreeNode]",false,24,2,2,1,1,7,1,11,3,2,3,1,1,0,0,6,0,0,0,0,2,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-two-linked-lists\Partition.java,Partition,"partition/2[LinkedListNode,int]",false,5,1,0,0,0,3,0,18,1,3,2,0,0,0,1,1,0,0,0,0,9,0,2,0,0,0,10,0,0,false
C:\medicao-lab2\repos\interviews\uva\BackToIntermediateMath.java,BackToIntermediateMath,main/1[java.lang.String[]],false,39,0,0,0,0,5,7,18,0,9,1,7,0,0,1,2,0,2,6,5,9,10,2,0,0,0,18,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\BalancedBinaryTree.java,BalancedBinaryTree,isBalanced/1[TreeNode],false,17,2,1,0,1,1,1,4,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\BalancedBinaryTree.java,BalancedBinaryTree,height/1[TreeNode],false,22,2,3,2,1,3,3,11,2,2,1,3,1,0,0,1,0,0,0,3,3,2,1,0,0,0,10,2,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\FirstUniqueCharacterInAString.java,FirstUniqueCharacterInAString,firstUniqChar/1[java.lang.String],false,13,1,0,0,0,7,6,19,1,4,1,6,0,0,2,1,0,0,0,4,5,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\queue\MovingAverageFromDataStream.java,MovingAverageFromDataStream,next/1[int],false,27,0,0,0,0,2,3,8,1,0,1,3,0,0,0,1,0,0,0,0,2,1,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\queue\MovingAverageFromDataStream.java,MovingAverageFromDataStream,MovingAverage/1[int],false,22,1,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\tree\LowestCommonAncestorOfABinaryTree.java,LowestCommonAncestorOfABinaryTree,"lowestCommonAncestor/3[TreeNode,TreeNode,TreeNode]",false,24,2,2,1,1,7,1,11,3,2,3,1,1,0,0,6,0,0,0,0,2,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\sort\MeetingRooms.java,MeetingRooms,canAttendMeetings/1[Interval[]],false,17,2,0,0,0,4,1,17,3,1,1,1,0,0,1,1,0,0,0,2,1,1,2,1,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\UniqueBinarySearchTrees.java,UniqueBinarySearchTree,numTrees/1[int],false,13,1,0,0,0,3,0,11,1,3,1,0,0,0,2,0,0,0,0,8,6,4,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\PalindromePermutation.java,PalindromePermutation,canPermutePalindrome/1[java.lang.String],false,2,1,0,0,0,5,2,16,2,4,1,2,0,0,2,1,0,1,0,7,4,1,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\BinaryTreePaths.java,BinaryTreePaths,binaryTreePaths/1[TreeNode],false,24,4,1,0,1,2,1,8,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\BinaryTreePaths.java,BinaryTreePaths,"helper/3[java.lang.String,TreeNode,List<java.lang.String>]",false,36,3,3,2,1,5,2,11,0,0,3,2,1,0,0,4,0,0,2,0,0,3,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\RemoveDuplicatesFromSortedArray.java,RemoveDuplicatesFromSortedArray,removeDuplicates/1[int[]],false,11,1,0,0,0,6,0,15,3,2,1,0,0,0,1,3,0,0,0,6,3,1,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-two-linked-lists\IsPalindrome.java,IsPalindrome,isPalindrome/1[LinkedListNode],false,5,2,0,0,0,6,3,21,2,4,1,3,0,0,2,5,0,0,0,0,8,0,2,0,0,0,13,0,0,false
C:\medicao-lab2\repos\interviews\uva\BrickGame.java,BrickGame,main/1[java.lang.String[]],false,39,0,0,0,0,3,10,17,0,7,1,10,0,0,2,1,0,0,4,7,7,3,2,0,0,0,16,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\MinStack.java,MinStack$Node,"Node/2[int,int]",true,21,0,1,1,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\StrobogrammaticNumber.java,StrobogrammaticNumber,isStrobogrammatic/1[String],false,8,0,0,0,0,3,3,8,2,2,1,3,0,0,1,0,0,0,2,2,2,2,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\MinCostClimbingStairs.java,MinCostClimbingStairs,minCostClimbingStairs/1[int[]],false,18,0,0,0,0,6,1,18,4,2,1,1,0,0,1,4,0,0,0,16,5,6,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\SumOfLeftLeaves.java,SumOfLeftLeaves,sumOfLeftLeaves/1[TreeNode],false,23,2,2,1,1,5,1,16,2,1,1,1,1,0,0,4,0,0,0,2,4,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\MergeKSortedLists.java,MergeKSortedLists,mergeKLists/1[ListNode[]],false,12,3,0,0,0,7,3,34,2,3,1,3,0,0,2,4,0,0,0,2,5,0,2,1,0,0,13,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-one-arrays-and-strings\ReplaceSpaces.java,ReplaceSpaces,"replaceSpaces/2[char[],int]",false,7,1,0,0,0,5,0,22,0,4,2,0,0,0,2,2,0,0,0,11,11,9,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\uva\AddingReversedNumbers.java,AddingReversedNumbers,main/1[java.lang.String[]],false,41,0,0,0,0,2,7,16,0,10,1,7,0,0,1,1,0,0,5,1,10,3,1,0,0,0,16,9,0,false
C:\medicao-lab2\repos\interviews\uva\TheSettlersOfCatan.java,TheSettlersOfCatan,main/1[java.lang.String[]],false,61,2,1,0,1,4,6,21,0,9,1,6,1,1,3,0,0,1,4,12,13,0,2,0,0,0,17,9,0,false
C:\medicao-lab2\repos\interviews\uva\TheSettlersOfCatan.java,TheSettlersOfCatan,"dfs/3[int,int,int]",false,108,1,3,2,1,4,1,14,0,1,3,1,1,0,1,0,0,0,0,7,6,1,2,0,0,0,5,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\WordBreak.java,WordBreak,"wordBreak/2[String,Set<String>]",false,10,1,0,0,0,5,3,13,1,3,2,3,0,0,2,0,0,0,0,4,5,1,3,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\MinimumPathSum.java,MinimumPathSum,minPathSum/1[int[][]],false,11,0,0,0,0,5,1,14,1,4,1,1,0,0,4,0,0,0,0,17,7,6,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-seven-mathematics-and-probability\Operations.java,Operations,"multiply/2[int,int]",false,21,1,4,1,3,4,3,13,2,2,2,3,3,2,1,0,0,0,0,3,4,0,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-seven-mathematics-and-probability\Operations.java,Operations,negate/1[int],false,5,0,4,4,0,3,0,9,1,2,1,0,0,0,1,1,0,0,0,5,4,0,1,0,0,0,4,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-seven-mathematics-and-probability\Operations.java,Operations,"divide/2[int,int]",false,45,1,2,0,2,7,2,19,2,4,2,2,2,2,1,1,0,2,1,7,5,1,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-seven-mathematics-and-probability\Operations.java,Operations,"minus/2[int,int]",false,16,1,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-seven-mathematics-and-probability\Operations.java,Operations,abs/1[int],false,36,1,3,2,1,2,1,8,2,0,1,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,3,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\DeleteNodeInALinkedList.java,DeleteNodeInALinkedList,deleteNode/1[ListNode],false,14,1,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\uva\NumberingRoads.java,NumberingRoads,main/1[java.lang.String[]],false,45,0,0,0,0,8,2,23,0,7,1,2,0,0,2,2,0,0,5,6,9,5,3,0,0,0,13,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\PowerOfTwo.java,PowerOfTwo,isPowerOfTwo/1[int],false,17,0,0,0,0,3,0,7,1,1,1,0,0,0,1,1,0,0,0,2,2,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\binary-search\GuessNumberHigherOrLower.java,GuessNumberHigherOrLower,guessNumber/1[int],false,18,0,0,0,0,4,1,17,2,3,1,1,0,0,1,1,0,1,0,6,5,4,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\LongestConsecutiveSequence.java,LongestConsecutiveSequence,longestConsecutive/1[int[]],false,10,2,0,0,0,7,3,22,2,4,1,3,0,0,3,2,0,0,0,6,5,2,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\uva\IntegerInquiry.java,IntegerInquiry,main/1[java.lang.String[]],false,31,0,0,0,0,3,4,12,0,3,1,4,0,0,1,0,0,0,0,0,4,0,2,0,0,0,9,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\PalindromicSubstrings.java,PalindromicSubstrings,countSubstrings/1[java.lang.String],false,18,1,1,0,1,4,2,10,2,1,1,2,1,1,1,2,0,0,0,4,1,1,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\PalindromicSubstrings.java,PalindromicSubstrings,"extendPalindrome/3[java.lang.String,int,int]",false,31,0,1,1,0,4,2,7,0,0,3,2,0,0,1,1,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-two-linked-lists\FindBeginning.java,FindBeginning,findBeginning/1[LinkedListNode],false,5,1,0,0,0,7,0,20,2,2,1,0,0,0,2,6,0,0,0,0,7,0,2,0,0,0,9,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\SymmetricTree.java,SymmetricTree,"helper/2[TreeNode,TreeNode]",false,35,0,0,0,0,6,1,9,3,0,2,1,0,0,0,5,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\SymmetricTree.java,SymmetricTree,isSymmetric/1[TreeNode],false,27,0,0,0,0,2,1,6,2,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\AddTwoNumbers.java,AddTwoNumbers,"addTwoNumbers/2[ListNode,ListNode]",false,17,1,0,0,0,6,0,24,1,5,2,0,0,0,1,5,0,0,0,7,13,2,2,0,0,0,14,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\JewelsAndStones.java,JewelsAndStones,"numJewelsInStones/2[java.lang.String,java.lang.String]",false,8,1,0,0,0,4,3,13,1,2,2,3,0,0,2,0,0,0,0,2,2,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\StackWithMin.java,NodeWithMin,"NodeWithMin/2[int,int]",true,22,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\DecodeString.java,DecodeString,decodeString/1[java.lang.String],false,10,1,0,0,0,7,7,35,1,8,1,7,0,0,3,2,0,1,2,4,12,3,3,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\TrimABinarySearchTree.java,TrimABinarySearchTree,"trimBST/3[TreeNode,int,int]",false,15,2,2,1,1,4,1,14,4,0,3,1,1,0,0,1,0,0,0,0,2,0,1,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\uva\PrimeFactors.java,PrimeFactors,main/1[java.lang.String[]],false,62,2,3,0,3,3,5,15,0,5,1,5,3,1,1,1,0,0,0,2,8,0,2,0,0,0,16,9,0,false
C:\medicao-lab2\repos\interviews\uva\PrimeFactors.java,PrimeFactors,"formatOutput/3[int,java.util.List<java.lang.Integer>,boolean]",false,95,0,1,1,0,6,7,26,0,3,3,7,0,0,1,1,0,2,4,6,4,6,2,0,0,0,14,8,0,false
C:\medicao-lab2\repos\interviews\uva\PrimeFactors.java,PrimeFactors,"sieveOfEratosthenes/2[boolean[],int]",false,78,1,1,1,0,5,2,16,1,3,2,2,0,0,2,2,0,0,0,3,4,2,3,0,0,0,11,9,0,false
C:\medicao-lab2\repos\interviews\uva\PrimeFactors.java,PrimeFactors,generatePrimeNumbers/0,false,120,1,1,1,0,5,1,15,1,5,0,1,0,0,3,0,0,0,0,6,7,7,3,0,0,0,10,8,0,false
C:\medicao-lab2\repos\interviews\uva\AverageSpeed.java,AverageSpeed,calcHours/1[java.lang.String],false,64,0,1,1,0,1,2,4,1,1,1,2,0,0,0,0,0,1,1,7,1,6,0,0,0,0,4,10,0,false
C:\medicao-lab2\repos\interviews\uva\AverageSpeed.java,AverageSpeed,main/1[java.lang.String[]],false,36,1,1,0,1,3,7,26,0,11,1,7,1,1,1,0,0,1,7,9,17,3,2,0,0,0,25,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\WordSearch.java,WordSearch,"search/5[char[][],int,int,char[],int]",false,32,0,0,0,0,7,1,15,4,1,5,1,0,0,0,2,0,0,0,13,3,8,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\WordSearch.java,WordSearch,"exist/2[char[][],String]",false,18,0,0,0,0,4,2,11,2,3,2,2,0,0,2,0,0,0,0,4,3,0,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\ContainsDuplicatesII.java,ContainsDuplicatesII,"containsNearbyDuplicate/2[int[],int]",false,5,1,0,0,0,4,3,13,2,3,2,3,0,0,1,0,0,0,0,1,3,1,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\BestTimeToBuyAndSellStock.java,BestTimeToBuyAndSellStock,maxProfit/1[int[]],false,17,0,0,0,0,4,1,16,2,3,1,1,0,0,1,1,0,0,0,5,5,1,2,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\LongestCommonPrefix.java,LongestCommonPrefix,longestCommonPrefix/1[java.lang.String[]],false,2,0,0,0,0,7,3,15,3,4,1,3,0,0,2,3,0,0,1,5,4,0,3,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\MaximumProductSubarray.java,MaximumProductSubarray,maxProduct/1[int[]],false,7,0,0,0,0,5,2,17,2,5,1,2,0,0,1,2,0,0,0,6,8,4,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\FindAnagramMappings.java,FindAnagramMappings,"anagramMappings/2[int[],int[]]",false,14,2,0,0,0,3,2,11,1,4,2,2,0,0,2,0,0,0,0,2,5,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\MergeIntervals.java,MergeIntervals$Anonymous1,"compare/2[Interval,Interval]",false,25,0,0,0,0,2,0,6,2,0,2,0,0,0,0,1,0,0,0,0,0,2,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\CountAndSay.java,CountAndSay,countAndSay/1[int],false,12,1,1,0,1,2,1,7,1,2,1,1,1,1,1,0,0,0,1,1,3,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\CountAndSay.java,CountAndSay,helper/1[java.lang.String],false,22,0,1,1,0,3,5,19,1,4,1,5,0,0,1,1,0,0,0,4,6,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\company\linkedin\BinaryTreeLevelOrderTraversal.java,BinaryTreeLevelOrderTraversal,levelOrder/1[TreeNode],false,27,5,0,0,0,7,4,31,2,6,1,4,0,0,2,3,0,0,0,1,7,0,3,0,0,0,13,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-two-linked-lists\DeleteDups.java,RemoveDups,deleteDups/1[LinkedListNode],false,4,2,0,0,0,3,2,14,0,2,1,2,0,0,1,1,0,0,0,0,5,0,2,0,0,0,9,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\LinkedListCycle.java,Solution,hasCycle/1[ListNode],false,16,1,0,0,0,7,0,12,2,2,1,0,0,0,1,6,0,0,0,0,4,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\RomanToInteger.java,RomanToInteger,romanToInt/1[java.lang.String],false,6,1,0,0,0,3,4,21,1,3,1,4,0,0,1,0,0,0,0,12,6,3,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\company\linkedin\MaximumSubarray.java,MaximumSubarray,maxSubArray/1[int[]],false,7,1,0,0,0,3,1,10,1,3,1,1,0,0,1,0,0,1,0,8,6,3,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\UniquePaths.java,UniquePaths,"uniquePaths/2[int,int]",false,8,1,0,0,0,5,0,15,1,5,2,0,0,0,4,0,0,0,0,12,8,5,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\backtracking\Permutations.java,Permutations,permute/1[int[]],false,15,3,0,0,0,4,3,17,1,5,1,3,0,0,3,0,0,0,0,2,5,0,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\bit-manipulation\MaximumProductOfWordLengths.java,MaximumProductOfWordLengths,maxProduct/1[String[]],false,19,1,0,0,0,10,2,23,2,8,1,2,0,0,4,3,0,3,0,10,11,4,3,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\uva\Modex.java,Modex,main/1[java.lang.String[]],false,36,0,0,0,0,2,4,12,0,6,1,4,0,0,1,1,0,0,0,1,6,0,1,0,0,0,14,9,0,false
C:\medicao-lab2\repos\interviews\uva\GoogleIsFeelingLucky.java,GoogleIsFeelingLucky,main/1[java.lang.String[]],false,63,0,0,0,0,9,7,36,0,10,1,7,0,0,3,2,0,0,4,6,13,4,3,0,0,0,16,9,0,false
C:\medicao-lab2\repos\interviews\uva\ICanGuessTheDataStructure.java,ICanGuessTheDataStructure,main/1[java.lang.String[]],false,71,0,0,0,0,22,20,57,0,14,1,20,0,0,2,17,0,4,6,8,14,0,4,0,0,0,23,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\SubsetsII.java,SubsetsII,"helper/4[int[],ArrayList<Integer>,int,List<List<Integer>>]",false,33,2,0,0,0,4,2,11,0,2,4,2,0,0,1,1,0,0,0,2,2,2,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\SubsetsII.java,SubsetsII,subsetsWithDup/1[int[]],false,18,2,0,0,0,3,2,9,2,1,1,2,0,0,0,2,0,0,0,2,1,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\company\linkedin\HouseRobber.java,HouseRobber,rob/1[int[]],false,6,0,0,0,0,5,1,15,3,2,1,1,0,0,1,2,0,0,0,15,5,4,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\BulbSwitcher.java,BulbSwitcher,bulbSwitch/1[int],false,13,0,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\uva\WhatBaseIsThis.java,WhatBaseIsThis,main/1[java.lang.String[]],false,56,0,0,0,0,9,4,34,0,8,1,4,0,0,3,0,2,0,6,4,9,2,4,0,0,0,25,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-one-arrays-and-strings\IsUniqueChars.java,IsUniqueChars,isUniqueChars/1[java.lang.String],false,4,0,0,0,0,4,2,11,2,3,1,2,0,0,1,0,0,3,0,5,4,3,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\UniqueWordAbbreviation.java,UniqueWordAbbreviation,getKey/1[String],false,57,1,0,0,0,2,3,6,2,0,1,3,0,0,0,0,0,0,0,4,0,3,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\UniqueWordAbbreviation.java,UniqueWordAbbreviation,ValidWordAbbr/1[String[]],false,37,2,0,0,0,4,5,14,0,1,1,5,0,0,1,0,0,0,1,0,2,0,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\UniqueWordAbbreviation.java,UniqueWordAbbreviation,isUnique/1[String],false,53,0,0,0,0,1,4,3,1,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\NumberOfIslands.java,NumberOfIslands,numIslands/1[char[][]],false,22,0,0,0,0,3,1,10,1,3,1,1,0,0,2,0,0,0,0,4,5,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\NumberOfIslands.java,NumberOfIslands,"sink/3[char[][],int,int]",false,41,0,0,0,0,6,1,11,2,0,3,1,0,0,0,1,0,0,0,9,1,4,1,0,0,0,3,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\BinarySearchTreeIterator.java,BinarySearchTreeIterator,next/0,false,35,1,0,0,0,2,2,9,1,2,0,2,0,0,1,1,0,0,0,0,3,0,1,0,0,0,11,1,0,true
C:\medicao-lab2\repos\interviews\leetcode\stack\BinarySearchTreeIterator.java,BinarySearchTreeIterator,BSTIterator/1[TreeNode],false,20,1,0,0,0,2,1,7,0,0,1,1,0,0,1,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\stack\BinarySearchTreeIterator.java,BinarySearchTreeIterator,hasNext/0,false,30,0,0,0,0,2,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\SortStack.java,SortStack,sort/1[Stack<java.lang.Integer>],false,7,1,0,0,0,4,4,11,1,2,1,4,0,0,2,0,0,0,0,0,2,0,2,0,0,0,4,9,0,false
C:\medicao-lab2\repos\interviews\uva\HighPrecisionNumber.java,HighPrecisionNumber,main/1[java.lang.String[]],false,48,0,0,0,0,3,7,14,0,4,1,7,0,0,2,1,0,0,2,1,6,0,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\interviews\uva\TheLastNonZeroDigit.java,TheLastNonZeroDigit,main/1[java.lang.String[]],false,33,0,0,0,0,6,6,23,0,8,1,6,0,0,4,2,0,2,1,10,11,9,3,0,0,0,10,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\math\AddDigits.java,AddDigits,addDigits/1[int],false,10,0,0,0,0,3,0,11,1,1,1,0,0,0,2,0,0,0,0,5,4,1,2,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\uva\FiveHundredFactorial.java,FiveHundredFactorial,main/1[java.lang.String[]],false,46,0,0,0,0,3,5,11,0,4,1,5,0,0,2,0,0,0,1,2,5,2,2,0,0,0,9,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\StackWithMin.java,StackWithMin,push/1[int],false,4,2,2,0,2,1,3,4,0,1,1,3,1,1,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\StackWithMin.java,StackWithMin,min/0,false,9,0,1,1,0,2,2,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\two-pointers\MoveZeros.java,MoveZeros,moveZeroes/1[int[]],false,10,1,0,0,0,6,0,16,1,1,1,0,0,0,2,3,0,0,0,4,3,0,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-five-bit-manipulation\SwapBits.java,SwapBits,swapOddEvenBits/1[int],false,5,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,5,0,4,0,2,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\uva\SimplifyingFractions.java,SimplifyingFractions,main/1[java.lang.String[]],false,28,0,0,0,0,3,6,18,0,7,1,6,0,0,1,1,0,0,1,1,9,1,2,0,0,0,17,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-two-linked-lists\DeleteNode.java,DeleteNode,deleteNode/1[LinkedListNode],false,4,1,0,0,0,3,0,9,2,1,1,0,0,0,0,2,0,0,0,0,3,0,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-one-arrays-and-strings\NthToLast.java,NthToLast,"nthToLast/2[LinkedListNode,int]",false,4,1,0,0,0,6,0,15,4,3,2,0,0,0,2,3,0,0,0,3,6,1,2,0,0,0,12,0,0,false
C:\medicao-lab2\repos\interviews\uva\Ants.java,Ants,main/1[java.lang.String[]],false,36,0,0,0,0,6,2,24,0,7,1,2,0,0,2,0,0,0,1,4,10,5,3,0,0,0,14,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\Subsets.java,Subsets,"recurse/4[List<List<Integer>>,int[],Stack,int]",false,28,2,0,0,0,2,4,10,1,0,4,4,0,0,0,1,0,0,0,2,0,2,1,0,0,0,3,2,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\Subsets.java,Subsets,subsets/1[int[]],false,20,3,0,0,0,1,1,5,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\interviews\uva\MischievousChildren.java,MischievousChildren,main/1[java.lang.String[]],false,36,1,1,0,1,8,12,39,0,17,1,12,1,1,4,2,0,0,4,8,19,5,3,0,0,0,24,9,0,false
C:\medicao-lab2\repos\interviews\uva\MischievousChildren.java,MischievousChildren,computeFactorial/1[int],false,76,0,1,1,0,2,0,7,1,2,1,0,0,0,1,0,0,0,0,3,3,2,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\SpiralMatrixII.java,SpiralMatrix,generateMatrix/1[int],false,14,0,0,0,0,10,0,34,2,10,1,0,0,0,5,1,0,0,0,6,14,2,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\InsertInterval.java,InsertInterval,"insert/2[List<Interval>,Interval]",false,23,2,0,0,0,5,6,12,1,1,2,6,0,0,2,0,0,0,0,1,2,0,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-five-bit-manipulation\InsertMIntoN.java,InsertMIntoN,"updateBits/4[int,int,int,int]",false,11,0,0,0,0,1,0,9,1,6,4,0,0,0,0,0,0,3,0,4,6,5,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\OneEditDistance.java,OneEditDistance,"isOneEditDistance/2[java.lang.String,java.lang.String]",false,4,0,0,0,0,6,6,16,4,1,2,6,0,0,1,3,0,0,0,6,1,5,3,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\PlusOneLinkedList.java,PlusOneLinkedList,plusOneRecursive/1[ListNode],false,34,2,3,2,1,3,1,12,3,2,1,1,1,0,0,2,0,0,0,6,3,3,1,0,0,0,9,2,0,false
C:\medicao-lab2\repos\interviews\leetcode\linked-list\PlusOneLinkedList.java,PlusOneLinkedList,plusOne/1[ListNode],false,23,2,1,0,1,2,1,10,2,1,1,1,1,1,0,1,0,0,0,2,2,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-three-stacks-and-queues\TowersOfHanoi.java,TowersOfHanoi,main/1[java.lang.String[]],false,11,1,3,0,3,3,2,11,0,4,1,2,0,0,2,0,0,0,0,9,5,1,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\MinimumWindowSubstring.java,MinimumWindowSubstring,"minWindow/2[java.lang.String,java.lang.String]",false,13,1,0,0,0,10,7,40,2,8,2,7,0,0,4,2,0,0,2,10,10,6,3,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\ValidAnagram.java,ValidAnagram,"isAnagram/2[java.lang.String,java.lang.String]",false,2,1,0,0,0,7,5,25,3,1,2,5,0,0,3,1,0,0,0,4,1,2,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\uva\MultipleOfSeventeen.java,MultipleOfSeventeen,main/1[java.lang.String[]],false,35,0,0,0,0,4,8,19,0,5,1,8,0,0,1,0,0,0,2,0,6,0,2,0,0,0,25,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\BinaryTreeMaximumPathSum.java,BinaryTreeMaximumPathSum,maxPathSumRecursive/1[TreeNode],false,30,2,3,2,1,2,2,9,2,2,1,2,1,0,0,1,0,0,0,3,3,2,1,0,0,0,10,2,0,false
C:\medicao-lab2\repos\interviews\leetcode\tree\BinaryTreeMaximumPathSum.java,BinaryTreeMaximumPathSum,maxPathSum/1[TreeNode],false,25,2,1,0,1,1,1,4,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\LongestPalindromicSubstring.java,LongestPalindromicSubstring,longestPalindrome/1[java.lang.String],false,14,1,1,0,1,7,3,14,2,3,1,3,1,1,2,2,0,0,2,3,4,2,3,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\LongestPalindromicSubstring.java,LongestPalindromicSubstring,isPalindrome/1[java.lang.String],false,31,0,1,1,0,3,2,10,2,2,1,2,0,0,1,1,0,0,0,2,2,1,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\CountingBits.java,CountingBits,countBits/1[int],false,12,0,0,0,0,2,0,8,1,2,1,0,0,0,1,0,0,1,0,6,4,3,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\SameTree.java,SameTree,"isSameTree/2[TreeNode,TreeNode]",false,15,2,2,1,1,8,1,12,4,0,2,1,1,0,0,7,0,0,0,0,0,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\uva\VeryEasy.java,VeryEasy,main/1[java.lang.String[]],false,34,0,0,0,0,3,7,15,0,7,1,7,0,0,2,0,0,0,0,2,9,1,2,0,0,0,13,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\PaintFence.java,PaintFence,"numWays/2[int,int]",false,11,0,0,0,0,3,0,13,2,4,2,0,0,0,1,0,0,2,0,5,6,4,1,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\company\facebook\SquareRootX.java,SquareRootX,mySqrt/1[int],false,6,0,0,0,0,6,0,20,3,3,1,0,0,0,1,2,0,1,0,6,5,8,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\hash-table\GroupAnagrams.java,GroupAnagrams,groupAnagrams/1[String[]],false,14,4,0,0,0,5,8,17,2,3,1,8,0,0,1,2,0,0,0,1,3,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\AllSubsets.java,AllSubsets,"getSubsets/2[ArrayList<java.lang.Integer>,int]",false,4,2,2,1,1,3,5,20,1,4,2,5,1,0,1,1,0,0,0,1,5,1,2,0,0,0,8,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\greedy\BestTimeToBuyAndSellStockII.java,BestTimeToBuyAndSellStockII,maxProfit/1[int[]],false,7,1,0,0,0,5,0,12,2,2,1,0,0,0,1,2,0,0,0,7,3,4,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\backtracking\LetterCombinationsOfAPhoneNumber.java,LetterCombinationsOfAPhoneNumber,"letterCombinationsRecursive/5[List<String>,String,String,int,String[]]",false,43,2,0,0,0,3,4,10,1,2,5,4,0,0,1,1,0,0,0,2,2,3,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\backtracking\LetterCombinationsOfAPhoneNumber.java,LetterCombinationsOfAPhoneNumber,letterCombinations/1[String],false,18,3,0,0,0,3,2,9,2,2,1,2,0,0,0,2,0,0,11,2,2,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\uva\LargestPrimeDivisor.java,LargestPrimeDivisor,main/1[java.lang.String[]],false,31,0,0,0,0,8,5,29,0,6,1,5,0,0,3,5,0,2,0,10,10,3,4,0,0,0,13,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\RepresentingNCents.java,RepresentingNCents,"makeChange/4[int,int[],int,int[][]]",false,11,2,3,2,1,4,1,14,3,4,4,1,1,0,1,0,0,0,0,6,6,5,1,0,0,0,10,0,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\RepresentingNCents.java,RepresentingNCents,makeChange/1[int],false,5,2,1,0,1,1,1,5,1,2,1,1,1,1,0,0,0,0,0,6,2,1,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\IncreasingTripletSubsequence.java,IncreasingTripletSequence,increasingTriplet/1[int[]],false,16,1,0,0,0,5,0,16,2,2,1,0,0,0,1,0,0,0,0,0,4,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\WiggleSort.java,WiggleSort,wiggleSort/1[int[]],false,6,0,0,0,0,3,0,9,0,2,1,0,0,0,1,2,0,2,0,5,4,3,2,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-one-arrays-and-strings\IsRotation.java,IsRotation,"isRotation/2[java.lang.String,java.lang.String]",false,6,0,0,0,0,3,2,8,2,2,2,2,0,0,0,1,0,0,0,1,2,1,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\sort\MeetingRoomsII.java,MeetingRoomsII,minMeetingRooms/1[Interval[]],false,17,2,0,0,0,4,1,21,1,6,1,1,0,0,2,0,0,0,0,4,8,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\LongestIncreasingSubsequence.java,LongestIncreasingSubsequence,lengthOfLIS/1[int[]],false,12,0,0,0,0,6,1,19,2,5,1,1,0,0,2,1,0,0,0,9,9,1,3,0,0,0,13,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\MaximumDepthOfABinaryTree.java,MaximumDepthOfABinaryTree,maxDepth/1[TreeNode],false,15,0,0,0,0,2,2,6,2,0,1,2,0,0,0,1,0,0,0,2,0,1,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\interviews\uva\TheHugeOne.java,TheHugeOne,main/1[java.lang.String[]],false,42,0,0,0,0,5,7,22,0,7,1,7,0,0,2,1,0,0,3,2,8,2,3,0,0,0,17,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\PopulatingNextRightPointersInEachNode.java,PopulatingNextRightPointersInEachNode,connect/1[TreeLinkNode],false,39,3,0,0,0,6,3,23,1,4,1,3,0,0,2,3,0,0,0,0,7,0,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\uva\NumberTheoryForNewbies.java,NumberTheoryForNewbies,main/1[java.lang.String[]],false,30,1,0,0,0,7,8,32,0,12,1,8,0,0,4,2,0,1,3,7,14,4,3,0,0,0,15,9,0,false
C:\medicao-lab2\repos\interviews\uva\DigitCounting.java,DigitCounting,main/1[java.lang.String[]],false,38,1,0,0,0,6,4,23,0,7,1,4,0,0,4,3,0,0,1,9,8,2,3,0,0,0,11,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\bit-manipulation\Utf8Validation.java,Utf8Validation,validUtf8/1[int[]],false,35,0,0,0,0,9,0,26,3,1,1,0,0,0,1,7,0,5,0,16,4,5,3,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\ConvertSortedArrayToBinarySearchTree.java,ConvertSortedArrayToBinarySearchTree,sortedArrayToBST/1[int[]],false,13,3,1,0,1,2,1,7,2,1,1,1,1,1,0,1,0,0,0,3,1,1,1,0,0,0,12,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\depth-first-search\ConvertSortedArrayToBinarySearchTree.java,ConvertSortedArrayToBinarySearchTree,"helper/3[int[],int,int]",false,23,3,3,2,1,2,1,10,2,2,3,1,1,0,0,0,0,1,0,3,4,4,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\interviews\leetcode\bit-manipulation\BinaryWatch.java,BinaryWatch,readBinaryWatch/1[int],false,19,2,0,0,0,4,3,11,1,3,1,3,0,0,2,1,0,0,1,5,3,2,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\PacificAtlanticWaterFlow.java,PacificAtlanticWaterFlow,"dfs/5[int[][],boolean[][],int,int,int]",false,63,0,0,0,0,7,1,12,1,2,5,1,0,0,0,0,0,0,0,7,3,4,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\breadth-first-search\PacificAtlanticWaterFlow.java,PacificAtlanticWaterFlow,pacificAtlantic/1[int[][]],false,28,2,0,0,0,10,2,26,2,9,1,2,0,0,4,3,0,0,0,12,9,2,3,0,0,0,11,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\RotateImage.java,RotateImage,rotate/1[int[][]],false,9,0,0,0,0,5,0,16,0,6,1,0,0,0,4,0,0,0,0,10,10,3,2,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\MultiplyStrings.java,MultiplyStrings,"multiply/2[java.lang.String,java.lang.String]",false,11,1,0,0,0,7,5,20,1,10,2,5,0,0,3,3,0,4,1,10,12,11,2,0,0,0,15,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\GenerateParentheses.java,GenerateParentheses,generateParenthesis/1[int],false,14,3,1,0,1,1,1,5,1,1,1,1,1,1,0,0,0,0,1,2,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\string\GenerateParentheses.java,GenerateParentheses,"generateParenthesisRecursive/5[List<java.lang.String>,java.lang.String,int,int,int]",false,21,2,3,2,1,4,3,12,1,0,5,3,1,0,0,1,0,0,2,3,0,5,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\AllPermutations.java,AllPermutations,getPerms/1[java.lang.String],false,4,2,3,1,2,5,6,20,3,6,1,6,2,1,2,2,0,0,1,4,6,0,2,0,0,0,14,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-nine-recursion-and-dynamic-programming\AllPermutations.java,AllPermutations,"insertCharAt/3[java.lang.String,char,int]",false,26,0,1,1,0,1,2,5,1,2,3,2,0,0,0,0,0,0,0,1,2,1,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\interviews\cracking-the-coding-interview\chapter-four-trees-and-graphs\CreateLinkedListForEachLevel.java,CreateLinkedListForEachLevel,createLinkedList/1[TreeNode],false,5,3,0,0,0,6,2,21,1,3,1,2,0,0,2,3,0,0,0,1,4,0,3,0,0,0,11,0,0,false
C:\medicao-lab2\repos\interviews\uva\BasicallySpeaking.java,BasicallySpeaking,main/1[java.lang.String[]],false,48,0,0,0,0,3,7,15,0,7,1,7,0,0,1,0,0,0,2,1,8,0,2,0,0,0,16,9,0,false
C:\medicao-lab2\repos\interviews\leetcode\dynamic-programming\SentenceScreenFitting.java,SentenceScreenFitting,"wordsTyping/3[String[],int,int]",false,55,1,0,0,0,5,3,17,1,4,3,3,0,0,2,2,0,1,2,4,5,5,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\interviews\leetcode\array\MergeIntervals.java,MergeIntervals,merge/1[List<Interval>],false,17,4,0,0,0,6,6,25,2,2,1,6,0,0,1,3,0,0,0,5,3,3,2,1,0,0,10,1,0,false
C:\medicao-lab2\repos\interviews\uva\WhoSaidCrisis.java,WhoSaidCrisis,main/1[java.lang.String[]],false,36,0,0,0,0,2,4,10,0,4,1,4,0,0,1,1,0,0,0,1,4,0,1,0,0,0,12,9,0,false
C:\medicao-lab2\repos\interviews\uva\SimplyEmirp.java,SimplyEmirp,main/1[java.lang.String[]],false,41,0,0,0,0,5,8,20,0,5,1,8,0,0,1,1,0,0,3,3,5,3,3,0,0,0,14,9,0,false
