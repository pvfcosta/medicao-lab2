file,class,method,constructor,line,cbo,cboModified,fanin,fanout,wmc,rfc,loc,returnsQty,variablesQty,parametersQty,methodsInvokedQty,methodsInvokedLocalQty,methodsInvokedIndirectLocalQty,loopQty,comparisonsQty,tryCatchQty,parenthesizedExpsQty,stringLiteralsQty,numbersQty,assignmentsQty,mathOperationsQty,maxNestedBlocksQty,anonymousClassesQty,innerClassesQty,lambdasQty,uniqueWordsQty,modifiers,logStatementsQty,hasJavaDoc
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\SparseGraph.java,bobo.algo.SparseGraph,V/0,false,25,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\SparseGraph.java,bobo.algo.SparseGraph,E/0,false,26,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\SparseGraph.java,bobo.algo.SparseGraph,"hasEdge/2[int,int]",false,42,0,0,0,0,7,2,6,2,1,2,2,0,0,1,1,0,0,0,3,1,0,2,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\SparseGraph.java,bobo.algo.SparseGraph,"SparseGraph/2[int,boolean]",true,14,0,2,2,0,3,0,8,0,1,2,0,0,0,1,0,0,0,0,3,6,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\SparseGraph.java,bobo.algo.SparseGraph,main/1[java.lang.String[]],false,53,1,2,0,2,1,1,12,0,1,1,1,1,1,0,0,0,0,0,19,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\SparseGraph.java,bobo.algo.SparseGraph,"addEdge/2[int,int]",false,29,0,1,1,0,7,1,7,0,0,2,1,0,0,0,1,0,0,0,2,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSort2.java,MergeSort2,MergeSort2/0,true,9,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSort2.java,MergeSort2,sort/1[Comparable[]],false,55,1,0,0,0,1,1,5,0,2,1,1,0,0,0,0,0,0,0,2,2,1,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSort2.java,MergeSort2,main/1[String[]],false,63,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSort2.java,MergeSort2,"sort/4[Comparable[],Comparable[],int,int]",false,38,0,0,0,0,3,3,10,1,1,4,3,0,0,0,0,0,1,0,5,1,5,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSort2.java,MergeSort2,"merge/5[Comparable[],Comparable[],int,int,int]",false,13,0,0,0,0,5,2,22,0,3,5,2,0,0,1,0,0,0,0,3,7,3,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-10-Binary-Tree-Morris-Traversal\src\PreorderSolution.java,PreorderSolution,preorderTraversal/1[TreeNode],false,13,1,0,0,0,7,1,25,2,3,1,1,0,0,2,6,0,0,0,0,9,0,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-01-Optimized-Selection-Sort\src\bobo\algo\SelectionSort2.java,bobo.algo.SelectionSort2,SelectionSort2/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-01-Optimized-Selection-Sort\src\bobo\algo\SelectionSort2.java,bobo.algo.SelectionSort2,"swap/3[java.lang.Object[],int,int]",false,35,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-01-Optimized-Selection-Sort\src\bobo\algo\SelectionSort2.java,bobo.algo.SelectionSort2,main/1[java.lang.String[]],false,42,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-01-Optimized-Selection-Sort\src\bobo\algo\SelectionSort2.java,bobo.algo.SelectionSort2,sort/1[java.lang.Comparable[]],false,10,1,1,0,1,6,2,14,0,5,1,2,1,1,2,0,0,0,0,6,7,2,4,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,Node,"Node/2[Key,Value]",true,15,0,0,0,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,Node,Node/1[Node],true,21,0,0,0,0,1,0,6,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\FileOperations.java,FileOperations,"firstCharacterIndex/2[String,int]",false,62,0,0,0,0,3,3,4,2,1,2,3,0,0,1,0,0,0,0,0,1,0,2,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\FileOperations.java,FileOperations,"readFile/2[String,Vector<String>]",false,15,6,0,0,0,8,13,32,4,7,2,13,0,0,1,2,1,0,4,3,9,3,3,0,0,0,27,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\05-Quick-Sort\src\bobo\algo\QuickSort.java,bobo.algo.QuickSort,sort/1[java.lang.Comparable[]],false,39,1,1,0,1,1,1,4,0,1,1,1,1,3,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\05-Quick-Sort\src\bobo\algo\QuickSort.java,bobo.algo.QuickSort,QuickSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\05-Quick-Sort\src\bobo\algo\QuickSort.java,bobo.algo.QuickSort,main/1[java.lang.String[]],false,52,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\05-Quick-Sort\src\bobo\algo\QuickSort.java,bobo.algo.QuickSort,"sort/3[java.lang.Comparable[],int,int]",false,29,1,4,2,2,2,2,6,1,1,3,2,2,2,0,0,0,0,0,2,1,2,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\05-Quick-Sort\src\bobo\algo\QuickSort.java,bobo.algo.QuickSort,"partition/3[java.lang.Comparable[],int,int]",false,12,1,2,1,1,3,2,10,1,3,3,2,1,1,1,0,0,0,0,2,3,1,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\05-Quick-Sort\src\bobo\algo\QuickSort.java,bobo.algo.QuickSort,"swap/3[java.lang.Object[],int,int]",false,45,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\03-Lazy-Prim\src\bobo\algo\LazyPrimMST.java,bobo.algo.LazyPrimMST,mstEdges/0,false,63,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\03-Lazy-Prim\src\bobo\algo\LazyPrimMST.java,bobo.algo.LazyPrimMST,visit/1[int],false,51,4,3,0,3,3,3,5,0,0,1,3,0,0,1,0,0,0,0,0,1,0,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\03-Lazy-Prim\src\bobo\algo\LazyPrimMST.java,bobo.algo.LazyPrimMST,LazyPrimMST/1[bobo.algo.WeightedGraph<Weight>],true,17,6,9,0,9,5,12,16,0,2,1,12,0,0,2,1,0,0,0,3,8,1,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\03-Lazy-Prim\src\bobo\algo\LazyPrimMST.java,bobo.algo.LazyPrimMST,result/0,false,68,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\KruskalMST.java,KruskalMST,mstEdges/0,false,47,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\KruskalMST.java,KruskalMST,KruskalMST/1[WeightedGraph],true,12,4,0,0,0,8,15,17,0,6,1,15,0,0,4,0,0,0,0,4,9,2,3,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\KruskalMST.java,KruskalMST,result/0,false,52,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\KruskalMST.java,KruskalMST,main/1[String[]],false,58,6,0,0,0,2,5,12,0,7,1,5,2,1,1,0,0,0,3,2,7,1,1,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeapSort.java,bobo.algo.IndexMinHeapSort,IndexMinHeapSort/0,true,9,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeapSort.java,bobo.algo.IndexMinHeapSort,main/1[java.lang.String[]],false,24,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeapSort.java,bobo.algo.IndexMinHeapSort,sort/1[java.lang.Comparable[]],false,11,1,3,0,3,3,2,6,0,4,1,2,0,0,2,0,0,0,0,2,5,0,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortO.java,bobo.algo.MergeSortO,sort/1[java.lang.Comparable[]],false,56,1,1,0,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortO.java,bobo.algo.MergeSortO,main/1[java.lang.String[]],false,63,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortO.java,bobo.algo.MergeSortO,"sort/3[java.lang.Comparable[],int,int]",false,38,2,5,2,3,3,4,10,1,1,3,4,2,1,0,0,0,1,0,5,1,5,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortO.java,bobo.algo.MergeSortO,"merge/4[java.lang.Comparable[],int,int,int]",false,14,0,1,1,0,5,2,22,0,4,4,2,0,0,1,0,0,0,0,3,8,8,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortO.java,bobo.algo.MergeSortO,MergeSortO/0,true,11,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\LinearSearch.java,LinearSearch,LinearSearch/0,true,6,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\LinearSearch.java,LinearSearch,"firstGreaterOrEqual/2[Comparable[],Comparable]",false,12,1,0,0,0,4,1,5,2,1,2,1,0,0,1,1,0,0,1,2,1,0,2,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\LinearSearch.java,LinearSearch,"firstGreaterThan/2[Comparable[],Comparable]",false,28,1,0,0,0,4,1,5,2,1,2,1,0,0,1,1,0,0,1,2,1,0,2,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\LinearSearch.java,LinearSearch,"lastLessOrEqual/2[Comparable[],Comparable]",false,43,1,0,0,0,4,1,5,2,1,2,1,0,0,1,1,0,0,1,4,1,2,2,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\LinearSearch.java,LinearSearch,"lastLessThan/2[Comparable[],Comparable]",false,58,1,0,0,0,4,1,5,2,1,2,1,0,0,1,1,0,0,1,4,1,2,2,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,main/1[String[]],false,469,3,0,0,0,6,5,18,0,10,1,5,0,0,4,1,0,2,0,7,13,3,2,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,removeMin/0,false,113,0,0,0,0,2,1,3,0,0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,BST/0,true,33,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,isEmpty/0,false,44,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,removeMin/1[Node],false,287,1,0,0,0,2,1,10,2,1,1,1,1,1,0,1,0,0,0,0,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"floor/2[Node,Key]",false,368,1,0,0,0,5,2,8,5,1,2,2,0,0,0,3,0,0,0,2,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"insert/3[Node,Key,Value]",false,193,1,0,0,0,4,2,10,2,0,3,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,inOrder/0,false,70,0,0,0,0,1,1,3,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,inOrder/1[Node],false,250,0,0,0,0,2,2,7,0,0,1,2,1,1,0,1,0,0,0,0,0,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,ceil/1[Key],false,142,2,0,0,0,3,3,5,2,1,1,3,1,1,0,1,0,0,0,2,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,maximum/1[Node],false,278,1,0,0,0,2,1,4,2,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"predecessorFromAncestor/2[Node,Key]",false,421,1,0,0,0,4,2,10,4,1,2,2,0,0,0,2,0,0,0,3,1,0,3,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,preOrder/0,false,65,0,0,0,0,1,1,3,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,floor/1[Key],false,131,2,0,0,0,3,3,5,2,1,1,3,1,1,0,1,0,0,0,2,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,maximum/0,false,106,2,0,0,0,2,1,5,1,1,0,1,1,0,0,1,0,0,0,1,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,successor/1[Key],false,171,2,0,0,0,4,3,7,3,2,1,3,1,1,0,3,0,0,0,0,2,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,preOrder/1[Node],false,240,0,0,0,0,2,2,7,0,0,1,2,1,1,0,1,0,0,0,0,0,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,removeMax/1[Node],false,303,1,0,0,0,2,1,10,2,1,1,1,1,1,0,1,0,0,0,0,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"ceil/2[Node,Key]",false,394,1,0,0,0,5,2,8,5,1,2,2,0,0,0,3,0,0,0,2,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"remove/2[Node,Key]",false,319,1,0,0,0,6,4,32,6,3,2,4,2,1,0,3,0,0,0,2,11,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,postOrder/1[Node],false,260,0,0,0,0,2,2,7,0,0,1,2,1,1,0,1,0,0,0,0,0,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"contain/2[Node,Key]",false,211,0,0,0,0,4,2,6,4,0,2,2,0,0,0,2,0,0,0,2,0,0,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,minimum/1[Node],false,270,1,0,0,0,2,1,4,2,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,predecessor/1[Key],false,153,2,0,0,0,4,3,7,3,2,1,3,1,1,0,3,0,0,0,0,2,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"search/2[Node,Key]",false,226,1,0,0,0,4,2,6,4,0,2,2,0,0,0,2,0,0,0,2,0,0,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,levelOrder/0,false,80,2,0,0,0,4,4,10,0,2,0,4,1,1,1,2,0,0,0,0,2,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,removeMax/0,false,119,0,0,0,0,2,1,3,0,0,0,1,1,0,0,1,0,0,0,0,1,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"successorFromAncestor/2[Node,Key]",false,445,1,0,0,0,4,2,10,4,1,2,2,0,0,0,2,0,1,0,3,1,0,3,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,postOrder/0,false,75,0,0,0,0,1,1,3,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,contain/1[Key],false,54,0,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,remove/1[Key],false,125,0,0,0,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,size/0,false,39,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,"insert/2[Key,Value]",false,49,0,0,0,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,minimum/0,false,99,2,0,0,0,2,1,5,1,1,0,1,1,0,0,1,0,0,0,1,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-06-Predecessor-and-Successor-in-BST\src\bobo\algo\BST.java,BST,search/1[Key],false,59,2,0,0,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\05-DFS-and-Components\src\bobo\algo\Components.java,bobo.algo.Components,dfs/1[int],false,12,2,4,2,2,3,2,7,0,0,1,2,1,0,1,0,0,0,0,0,2,0,2,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\05-DFS-and-Components\src\bobo\algo\Components.java,bobo.algo.Components,Components/1[bobo.algo.Graph],true,24,4,2,0,2,4,2,14,0,2,1,2,1,1,2,0,0,0,0,4,8,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\05-DFS-and-Components\src\bobo\algo\Components.java,bobo.algo.Components,"isConnected/2[int,int]",false,50,1,1,0,1,6,1,5,1,0,2,1,0,0,0,1,0,0,0,2,0,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\05-DFS-and-Components\src\bobo\algo\Components.java,bobo.algo.Components,count/0,false,45,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison\src\bobo\algo\ShellSort.java,ShellSort,sort/1[Comparable[]],false,8,1,0,0,0,6,1,14,0,5,1,1,0,0,4,0,0,0,0,7,10,5,3,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-03-ShellSort-MergeSort-and-QuickSort-Comparison\src\bobo\algo\ShellSort.java,ShellSort,ShellSort/0,true,6,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeapSort.java,bobo.algo.MinHeapSort,sort/1[java.lang.Comparable[]],false,13,1,3,0,3,3,2,6,0,4,1,2,0,0,2,0,0,0,0,2,5,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeapSort.java,bobo.algo.MinHeapSort,main/1[java.lang.String[]],false,25,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeapSort.java,bobo.algo.MinHeapSort,MinHeapSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\ShellSort.java,bobo.algo.ShellSort,sort/1[java.lang.Comparable[]],false,8,0,0,0,0,6,1,14,0,5,1,1,0,0,4,0,0,0,0,7,10,5,3,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\ShellSort.java,bobo.algo.ShellSort,ShellSort/0,true,6,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexHeapSort.java,bobo.algo.IndexHeapSort,sort/1[java.lang.Comparable[]],false,13,1,3,0,3,3,2,6,0,4,1,2,0,0,2,0,0,0,0,3,5,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexHeapSort.java,bobo.algo.IndexHeapSort,IndexHeapSort/0,true,11,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexHeapSort.java,bobo.algo.IndexHeapSort,main/1[java.lang.String[]],false,26,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\03-Merge-Sort-Advance\src\bobo\algo\MergeSort2.java,bobo.algo.MergeSort2,main/1[java.lang.String[]],false,61,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\03-Merge-Sort-Advance\src\bobo\algo\MergeSort2.java,bobo.algo.MergeSort2,sort/1[java.lang.Comparable[]],false,54,1,1,0,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\03-Merge-Sort-Advance\src\bobo\algo\MergeSort2.java,bobo.algo.MergeSort2,"merge/4[java.lang.Comparable[],int,int,int]",false,12,0,1,1,0,5,2,22,0,4,4,2,0,0,1,0,0,0,0,3,8,8,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\03-Merge-Sort-Advance\src\bobo\algo\MergeSort2.java,bobo.algo.MergeSort2,MergeSort2/0,true,9,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\03-Merge-Sort-Advance\src\bobo\algo\MergeSort2.java,bobo.algo.MergeSort2,"sort/3[java.lang.Comparable[],int,int]",false,36,2,5,2,3,3,4,10,1,1,3,4,2,1,0,0,0,1,0,5,1,5,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Graph.java,Graph,E/0,false,7,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Graph.java,Graph,"hasEdge/2[int,int]",false,9,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Graph.java,Graph,adj/1[int],false,11,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Graph.java,Graph,V/0,false,6,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Graph.java,Graph,"addEdge/2[int,int]",false,8,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Graph.java,Graph,show/0,false,10,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\WeightedGraph.java,WeightedGraph,E/0,false,5,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\WeightedGraph.java,WeightedGraph,adj/1[int],false,9,2,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\WeightedGraph.java,WeightedGraph,"hasEdge/2[int,int]",false,7,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\WeightedGraph.java,WeightedGraph,addEdge/1[Edge<Weight>],false,6,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\WeightedGraph.java,WeightedGraph,V/0,false,4,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\WeightedGraph.java,WeightedGraph,show/0,false,8,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU.java,MergeSortBU,"merge/4[Comparable[],int,int,int]",false,11,1,0,0,0,5,2,22,0,4,4,2,0,0,1,0,0,0,0,3,8,8,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU.java,MergeSortBU,sort/1[Comparable[]],false,34,0,0,0,0,3,2,4,0,3,1,2,0,0,2,0,0,0,0,6,5,7,2,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU.java,MergeSortBU,MergeSortBU/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU.java,MergeSortBU,main/1[String[]],false,45,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,hasPathTo/1[int],false,83,0,0,0,0,4,1,4,1,0,1,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,negativeCycle/0,false,70,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,"BellmanFord/2[WeightedGraph,int]",true,17,3,0,0,0,8,7,21,0,4,2,7,1,1,4,2,0,2,0,5,14,2,4,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,shortestPath/1[int],false,89,3,0,0,0,5,7,18,1,3,1,7,0,0,2,1,0,0,0,1,5,0,1,0,0,0,11,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,showPath/1[int],false,115,2,0,0,0,5,9,10,0,2,1,9,0,0,1,1,0,3,1,3,2,2,2,0,0,0,11,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,main/1[String[]],false,130,4,0,0,0,5,5,19,0,7,1,5,1,1,1,1,0,0,7,3,7,2,3,0,0,0,20,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,detectNegativeCycle/0,false,56,1,0,0,0,5,6,9,2,2,0,6,0,0,2,1,0,0,0,1,2,1,3,0,0,0,10,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\BellmanFord.java,BellmanFord,shortestPathTo/1[int],false,75,1,0,0,0,3,2,6,1,0,1,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\InsertionSort.java,InsertionSort,"swap/3[Object[],int,int]",false,35,1,0,0,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\InsertionSort.java,InsertionSort,"sort/3[Comparable[],int,int]",false,24,1,0,0,0,4,1,8,0,3,3,1,0,0,2,0,0,0,0,4,5,3,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\InsertionSort.java,InsertionSort,InsertionSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\InsertionSort.java,InsertionSort,sort/1[Comparable[]],false,11,1,0,0,0,4,1,9,0,4,1,1,0,0,2,0,0,0,0,5,6,2,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\InsertionSort.java,InsertionSort,main/1[String[]],false,42,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapSort.java,bobo.algo.MaxHeapSort,MaxHeapSort/0,true,10,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapSort.java,bobo.algo.MaxHeapSort,sort/1[java.lang.Comparable[]],false,14,1,1,0,1,3,2,6,0,4,1,2,0,0,2,0,0,0,0,3,5,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapSort.java,bobo.algo.MaxHeapSort,main/1[java.lang.String[]],false,26,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\02-Max-Heap-Class-Basic\src\bobo\algo\MaxHeap.java,bobo.algo.MaxHeap,MaxHeap/1[int],true,11,1,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,2,2,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\02-Max-Heap-Class-Basic\src\bobo\algo\MaxHeap.java,bobo.algo.MaxHeap,isEmpty/0,false,22,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\02-Max-Heap-Class-Basic\src\bobo\algo\MaxHeap.java,bobo.algo.MaxHeap,main/1[java.lang.String[]],false,27,1,2,0,2,1,2,4,0,1,1,2,0,0,0,0,0,0,0,1,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\02-Max-Heap-Class-Basic\src\bobo\algo\MaxHeap.java,bobo.algo.MaxHeap,size/0,false,17,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\02-Selection-Sort-Using-Comparable\src\bobo\algo\Student.java,bobo.algo.Student,toString/0,false,31,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\02-Selection-Sort-Using-Comparable\src\bobo\algo\Student.java,bobo.algo.Student,"Student/2[java.lang.String,int]",true,10,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\02-Selection-Sort-Using-Comparable\src\bobo\algo\Student.java,bobo.algo.Student,compareTo/1[bobo.algo.Student],false,19,1,0,0,0,3,1,5,3,0,1,1,0,0,0,0,0,0,0,2,0,0,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\ReadWeightedGraph.java,ReadWeightedGraph,"ReadWeightedGraph/2[WeightedGraph<Double>,String]",true,18,7,0,0,0,7,6,25,0,7,2,6,0,0,1,1,1,0,5,5,7,1,2,0,0,0,45,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\ReadWeightedGraph.java,ReadWeightedGraph,readFile/1[String],false,50,5,0,0,0,4,2,15,0,2,1,2,0,0,0,1,1,0,3,0,3,2,2,0,0,0,20,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Component.java,bobo.algo.Component,dfs/1[int],false,12,2,4,2,2,3,2,7,0,0,1,2,1,0,1,0,0,0,0,0,2,0,2,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Component.java,bobo.algo.Component,"isConnected/2[int,int]",false,50,1,1,0,1,6,1,5,1,0,2,1,0,0,0,1,0,0,0,2,0,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Component.java,bobo.algo.Component,count/0,false,45,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Component.java,bobo.algo.Component,main/1[java.lang.String[]],false,57,3,4,0,4,1,3,13,0,8,1,3,1,1,0,0,0,0,4,2,8,2,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Component.java,bobo.algo.Component,Component/1[bobo.algo.Graph],true,24,4,3,1,2,4,2,14,0,2,1,2,1,1,2,0,0,0,0,4,8,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\WeightedGraph.java,bobo.algo.WeightedGraph,E/0,false,5,0,2,2,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\WeightedGraph.java,bobo.algo.WeightedGraph,adj/1[int],false,9,2,5,5,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\WeightedGraph.java,bobo.algo.WeightedGraph,addEdge/1[bobo.algo.Edge<Weight>],false,6,2,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\WeightedGraph.java,bobo.algo.WeightedGraph,"hasEdge/2[int,int]",false,7,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\WeightedGraph.java,bobo.algo.WeightedGraph,V/0,false,4,0,13,13,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\WeightedGraph.java,bobo.algo.WeightedGraph,show/0,false,8,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\ReadWeightedGraph.java,bobo.algo.ReadWeightedGraph,readFile/1[java.lang.String],false,50,0,1,1,0,4,2,15,0,2,1,2,0,0,0,1,1,0,3,0,3,2,2,0,0,0,20,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\ReadWeightedGraph.java,bobo.algo.ReadWeightedGraph,"ReadWeightedGraph/2[bobo.algo.WeightedGraph<java.lang.Double>,java.lang.String]",true,18,3,6,2,4,7,6,25,0,7,2,6,1,1,1,1,1,0,5,5,7,1,2,0,0,0,45,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST$Node,"Node/2[Key,Value]",true,13,2,0,0,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,contain/1[int],false,96,0,0,0,0,4,0,4,1,0,1,0,0,0,0,1,0,0,0,5,0,3,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,size/0,false,29,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,"change/2[int,Item]",false,108,2,3,0,3,1,3,7,0,0,2,3,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,extractMin/0,false,58,2,2,0,2,2,2,9,1,1,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,"insert/2[int,Item]",false,40,2,2,0,2,4,2,11,0,0,2,2,0,0,0,0,0,0,0,7,4,5,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,extractMinIndex/0,false,71,1,2,0,2,2,2,9,1,1,0,2,0,0,0,0,0,0,0,6,2,1,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,getMin/0,false,84,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,getMinIndex/0,false,90,0,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,shiftDown/1[int],false,147,1,1,0,1,5,2,9,0,1,1,2,0,0,1,0,0,0,0,6,2,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,shiftUp/1[int],false,138,1,1,0,1,3,2,6,0,0,1,2,0,0,1,0,0,0,0,5,1,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,isEmpty/0,false,34,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,getItem/1[int],false,102,2,1,0,1,1,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,IndexMinHeap/1[int],true,17,2,0,0,0,2,0,8,0,1,1,0,0,0,1,0,0,0,0,6,7,3,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,main/1[java.lang.String[]],false,163,1,2,0,2,2,2,5,0,3,1,2,0,0,1,0,0,1,0,2,3,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\IndexMinHeap.java,bobo.algo.IndexMinHeap,"swapIndexes/2[int,int]",false,124,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\DenseGraph.java,bobo.algo.DenseGraph,E/0,false,23,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\DenseGraph.java,bobo.algo.DenseGraph,"addEdge/2[int,int]",false,26,1,1,0,1,7,1,8,1,0,2,1,1,1,0,0,0,0,0,2,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\DenseGraph.java,bobo.algo.DenseGraph,"hasEdge/2[int,int]",false,42,0,1,1,0,5,0,5,1,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\DenseGraph.java,bobo.algo.DenseGraph,V/0,false,22,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\02-Graph-Representation\src\bobo\algo\DenseGraph.java,bobo.algo.DenseGraph,"DenseGraph/2[int,boolean]",true,12,1,0,0,0,2,0,7,0,0,2,0,0,0,0,0,0,0,0,2,4,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\08-Quick-Sort-Three-Ways\src\bobo\algo\QuickSort3Ways.java,bobo.algo.QuickSort3Ways,main/1[java.lang.String[]],false,61,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\08-Quick-Sort-Three-Ways\src\bobo\algo\QuickSort3Ways.java,bobo.algo.QuickSort3Ways,"sort/3[java.lang.Comparable[],int,int]",false,11,2,5,2,3,5,5,28,1,4,3,5,2,1,1,0,0,2,0,9,4,10,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\08-Quick-Sort-Three-Ways\src\bobo\algo\QuickSort3Ways.java,bobo.algo.QuickSort3Ways,"swap/3[java.lang.Object[],int,int]",false,54,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\08-Quick-Sort-Three-Ways\src\bobo\algo\QuickSort3Ways.java,bobo.algo.QuickSort3Ways,sort/1[java.lang.Comparable[]],false,48,1,1,0,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\08-Quick-Sort-Three-Ways\src\bobo\algo\QuickSort3Ways.java,bobo.algo.QuickSort3Ways,QuickSort3Ways/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\03-Shift-Up\src\bobo\algo\PrintableMaxHeap.java,bobo.algo.PrintableMaxHeap,main/1[java.lang.String[]],false,99,1,2,0,2,2,3,7,0,4,1,3,1,2,1,0,0,1,0,4,4,1,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\03-Shift-Up\src\bobo\algo\PrintableMaxHeap.java,bobo.algo.PrintableMaxHeap,PrintableMaxHeap/1[int],true,6,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\03-Shift-Up\src\bobo\algo\PrintableMaxHeap.java,bobo.algo.PrintableMaxHeap,"putBranchInLine/3[java.lang.String,int,int]",false,83,0,1,1,0,3,3,11,1,4,3,3,0,0,0,0,0,4,2,13,6,18,0,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\03-Shift-Up\src\bobo\algo\PrintableMaxHeap.java,bobo.algo.PrintableMaxHeap,treePrint/0,false,11,3,4,1,3,8,9,40,1,14,0,9,2,1,5,1,0,0,4,28,21,14,2,0,0,0,38,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\03-Shift-Up\src\bobo\algo\PrintableMaxHeap.java,bobo.algo.PrintableMaxHeap,"putNumberInLine/5[java.lang.Integer,java.lang.String,int,int,boolean]",false,64,0,1,1,0,4,4,11,1,2,5,4,0,0,0,0,0,2,0,14,5,15,3,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\01-Binary-Search\src\bobo\algo\BinarySearch.java,bobo.algo.BinarySearch,main/1[java.lang.String[]],false,35,1,1,0,1,4,1,11,1,5,1,1,1,1,2,2,0,0,0,5,6,1,2,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\01-Binary-Search\src\bobo\algo\BinarySearch.java,bobo.algo.BinarySearch,"find/2[java.lang.Comparable[],java.lang.Comparable]",false,12,0,1,1,0,4,1,10,2,3,2,1,0,0,1,1,0,1,0,8,5,6,2,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\01-Binary-Search\src\bobo\algo\BinarySearch.java,bobo.algo.BinarySearch,BinarySearch/0,true,7,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,shiftDown/1[int],false,96,1,0,0,0,5,1,11,0,2,1,1,0,0,1,0,0,0,0,6,5,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,extractMax/0,false,58,2,2,0,2,2,2,8,1,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,"swap/2[int,int]",false,77,1,0,0,0,1,0,5,0,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,main/1[java.lang.String[]],false,114,1,3,0,3,4,5,13,0,7,1,5,0,0,3,0,0,1,1,7,8,3,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,MaxHeapO/1[int],true,15,1,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,isEmpty/0,false,44,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,size/0,false,39,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,insert/1[Item],false,49,2,1,0,1,2,1,6,0,0,1,1,0,0,0,0,0,0,0,2,1,2,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,shiftUp/1[int],false,86,1,0,0,0,3,1,8,0,1,1,1,0,0,1,0,0,0,0,5,4,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,MaxHeapO/1[Item[]],true,23,2,1,0,1,3,1,8,0,3,1,1,0,0,2,0,0,0,0,5,7,3,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapO.java,bobo.algo.MaxHeapO,getMax/0,false,70,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortBUO.java,bobo.algo.MergeSortBUO,MergeSortBUO/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortBUO.java,bobo.algo.MergeSortBUO,"merge/4[java.lang.Comparable[],int,int,int]",false,11,0,1,1,0,5,2,22,0,4,4,2,0,0,1,0,0,0,0,3,8,8,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortBUO.java,bobo.algo.MergeSortBUO,sort/1[java.lang.Comparable[]],false,34,2,2,0,2,5,4,5,0,4,1,4,1,1,3,0,0,0,0,11,7,12,3,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Chapter-03-Completed-Code\src\bobo\algo\MergeSortBUO.java,bobo.algo.MergeSortBUO,main/1[java.lang.String[]],false,52,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\02-Binary-Search-Tree-Basics\src\bobo\algo\BST.java,bobo.algo.BST,size/0,false,30,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\02-Binary-Search-Tree-Basics\src\bobo\algo\BST.java,bobo.algo.BST,main/1[java.lang.String[]],false,40,0,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\02-Binary-Search-Tree-Basics\src\bobo\algo\BST.java,bobo.algo.BST,BST/0,true,24,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\02-Binary-Search-Tree-Basics\src\bobo\algo\BST.java,bobo.algo.BST,isEmpty/0,false,35,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort3Ways.java,QuickSort3Ways,sort/1[Comparable[]],false,48,0,0,0,0,1,1,4,0,1,1,1,0,0,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort3Ways.java,QuickSort3Ways,"sort/3[Comparable[],int,int]",false,11,1,0,0,0,5,4,28,1,4,3,4,0,0,1,0,0,2,0,9,4,10,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort3Ways.java,QuickSort3Ways,"swap/3[Object[],int,int]",false,54,1,0,0,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort3Ways.java,QuickSort3Ways,QuickSort3Ways/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort3Ways.java,QuickSort3Ways,main/1[String[]],false,61,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\DenseWeightedGraph.java,DenseWeightedGraph,V/0,false,28,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\DenseWeightedGraph.java,DenseWeightedGraph,"DenseWeightedGraph/2[int,boolean]",true,15,1,0,0,0,4,0,8,0,2,2,0,0,0,2,0,0,0,0,4,7,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\DenseWeightedGraph.java,DenseWeightedGraph,E/0,false,29,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\DenseWeightedGraph.java,DenseWeightedGraph,adj/1[int],false,69,3,0,0,0,5,1,6,1,2,1,1,0,0,1,1,0,0,0,2,2,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\DenseWeightedGraph.java,DenseWeightedGraph,addEdge/1[Edge],false,32,1,0,0,0,8,4,8,1,0,1,4,0,0,0,1,0,0,0,2,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\DenseWeightedGraph.java,DenseWeightedGraph,show/0,false,55,0,0,0,0,4,3,7,0,2,0,3,0,0,2,1,0,0,2,2,2,1,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\DenseWeightedGraph.java,DenseWeightedGraph,"hasEdge/2[int,int]",false,48,0,0,0,0,6,0,5,1,0,2,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Path.java,Path,hasPath/1[int],false,43,0,0,0,0,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Path.java,Path,path/1[int],false,49,2,0,0,0,3,5,12,1,3,1,5,0,0,2,1,0,0,0,1,4,0,1,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Path.java,Path,main/1[String[]],false,85,4,0,0,0,1,3,10,0,4,1,3,0,0,0,0,0,0,2,3,4,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Path.java,Path,dfs/1[int],false,14,0,0,0,0,3,2,7,0,0,1,2,0,0,1,0,0,0,0,0,2,0,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Path.java,Path,"Path/2[Graph,int]",true,24,0,0,0,0,4,2,12,0,1,2,2,0,0,1,0,0,0,0,3,7,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\Path.java,Path,showPath/1[int],false,70,1,0,0,0,3,6,9,0,2,1,6,0,0,1,1,0,0,1,2,2,1,2,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\01-Selection-Sort\src\bobo\algo\SelectionSort.java,bobo.algo.SelectionSort,"swap/3[int[],int,int]",false,22,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\01-Selection-Sort\src\bobo\algo\SelectionSort.java,bobo.algo.SelectionSort,SelectionSort/0,true,6,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\01-Selection-Sort\src\bobo\algo\SelectionSort.java,bobo.algo.SelectionSort,sort/1[int[]],false,8,2,2,1,1,4,1,8,0,4,1,1,1,1,2,0,0,0,0,2,5,1,3,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\01-Selection-Sort\src\bobo\algo\SelectionSort.java,bobo.algo.SelectionSort,main/1[java.lang.String[]],false,28,2,1,0,1,2,4,9,0,2,1,4,1,2,1,0,0,0,0,11,2,0,1,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\05-Insertion-Sort\src\bobo\algo\InsertionSort.java,bobo.algo.InsertionSort,main/1[java.lang.String[]],false,38,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\05-Insertion-Sort\src\bobo\algo\InsertionSort.java,bobo.algo.InsertionSort,InsertionSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\05-Insertion-Sort\src\bobo\algo\InsertionSort.java,bobo.algo.InsertionSort,"swap/3[java.lang.Object[],int,int]",false,31,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\05-Insertion-Sort\src\bobo\algo\InsertionSort.java,bobo.algo.InsertionSort,sort/1[java.lang.Comparable[]],false,10,1,8,7,1,4,2,6,0,3,1,2,1,1,2,0,0,0,0,5,3,2,2,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort.java,bobo.algo.HeapSort,"swap/3[java.lang.Object[],int,int]",false,28,0,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort.java,bobo.algo.HeapSort,"shiftDown2/3[java.lang.Comparable[],int,int]",false,51,0,1,1,0,5,1,11,0,2,3,1,0,0,1,0,0,0,0,9,6,6,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort.java,bobo.algo.HeapSort,"shiftDown/3[java.lang.Comparable[],int,int]",false,35,1,1,0,1,5,2,9,0,1,3,2,1,1,1,0,0,0,0,9,3,6,2,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort.java,bobo.algo.HeapSort,HeapSort/0,true,9,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort.java,bobo.algo.HeapSort,main/1[java.lang.String[]],false,70,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort.java,bobo.algo.HeapSort,sort/1[java.lang.Comparable[]],false,11,1,2,0,2,3,2,8,0,3,1,2,2,1,2,0,0,1,0,8,3,3,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\ReadGraph.java,bobo.algo.ReadGraph,readFile/1[java.lang.String],false,47,0,1,1,0,4,2,15,0,2,1,2,0,0,0,1,1,0,3,0,3,2,2,0,0,0,20,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\ReadGraph.java,bobo.algo.ReadGraph,"ReadGraph/2[bobo.algo.Graph,java.lang.String]",true,16,2,4,1,3,7,5,24,0,6,2,5,1,1,1,1,1,0,5,5,6,1,2,0,0,0,42,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\05-Heapify\src\bobo\algo\HeapSort1.java,bobo.algo.HeapSort1,sort/1[java.lang.Comparable[]],false,14,1,1,0,1,3,2,6,0,4,1,2,0,0,2,0,0,0,0,3,5,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\05-Heapify\src\bobo\algo\HeapSort1.java,bobo.algo.HeapSort1,HeapSort1/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\05-Heapify\src\bobo\algo\HeapSort1.java,bobo.algo.HeapSort1,main/1[java.lang.String[]],false,26,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU2.java,bobo.algo.MergeSortBU2,sort/1[java.lang.Comparable[]],false,35,2,2,0,2,5,4,6,0,5,1,4,1,1,3,0,0,0,0,11,8,12,3,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU2.java,bobo.algo.MergeSortBU2,main/1[java.lang.String[]],false,53,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU2.java,bobo.algo.MergeSortBU2,MergeSortBU2/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-02-MergeSort-and-MergeSortBU-Performance-Comparison\src\bobo\algo\MergeSortBU2.java,bobo.algo.MergeSortBU2,"merge/5[java.lang.Comparable[],java.lang.Comparable[],int,int,int]",false,12,0,1,1,0,5,2,22,0,3,5,2,0,0,1,0,0,0,0,3,7,3,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\05-Heapify\src\bobo\algo\HeapSort2.java,bobo.algo.HeapSort2,main/1[java.lang.String[]],false,23,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\05-Heapify\src\bobo\algo\HeapSort2.java,bobo.algo.HeapSort2,sort/1[java.lang.Comparable[]],false,14,1,1,0,1,2,1,5,0,3,1,1,0,0,1,0,0,0,0,2,4,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\05-Heapify\src\bobo\algo\HeapSort2.java,bobo.algo.HeapSort2,HeapSort2/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\09-Index-Heap-Advance\src\bobo\algo\IndexHeapSort.java,IndexHeapSort,sort/1[Comparable[]],false,13,1,0,0,0,3,2,6,0,4,1,2,0,0,2,0,0,0,0,3,5,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\09-Index-Heap-Advance\src\bobo\algo\IndexHeapSort.java,IndexHeapSort,IndexHeapSort/0,true,11,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\09-Index-Heap-Advance\src\bobo\algo\IndexHeapSort.java,IndexHeapSort,main/1[String[]],false,26,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\FileOperations.java,bobo.algo.FileOperations,"firstCharacterIndex/2[java.lang.String,int]",false,62,0,1,1,0,3,3,4,2,1,2,3,0,0,1,0,0,0,0,0,1,0,2,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\FileOperations.java,bobo.algo.FileOperations,"readFile/2[java.lang.String,java.util.Vector<java.lang.String>]",false,15,1,1,0,1,8,13,32,4,7,2,13,1,1,1,2,1,0,4,3,9,3,3,0,0,0,27,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal\Postorder\src\Solution1.java,TagNode,TagNode/1[TreeNode],true,19,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\04-Merge-Sort-Bottom-Up\src\bobo\algo\MergeSortBU.java,bobo.algo.MergeSortBU,"merge/4[java.lang.Comparable[],int,int,int]",false,11,0,1,1,0,5,2,22,0,4,4,2,0,0,1,0,0,0,0,3,8,8,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\04-Merge-Sort-Bottom-Up\src\bobo\algo\MergeSortBU.java,bobo.algo.MergeSortBU,sort/1[java.lang.Comparable[]],false,34,2,2,0,2,5,4,5,0,4,1,4,1,1,3,0,0,0,0,11,7,12,3,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\04-Merge-Sort-Bottom-Up\src\bobo\algo\MergeSortBU.java,bobo.algo.MergeSortBU,MergeSortBU/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\04-Merge-Sort-Bottom-Up\src\bobo\algo\MergeSortBU.java,bobo.algo.MergeSortBU,main/1[java.lang.String[]],false,58,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\05-Implementation-of-Optimized-Prim-Algorithm\src\bobo\algo\PrimMST.java,bobo.algo.PrimMST,PrimMST/1[bobo.algo.WeightedGraph],true,16,6,7,0,7,5,10,21,0,3,1,10,0,0,3,1,0,2,0,5,12,1,1,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\05-Implementation-of-Optimized-Prim-Algorithm\src\bobo\algo\PrimMST.java,bobo.algo.PrimMST,mstEdges/0,false,76,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\05-Implementation-of-Optimized-Prim-Algorithm\src\bobo\algo\PrimMST.java,bobo.algo.PrimMST,visit/1[int],false,49,4,5,0,5,5,6,18,0,2,1,6,0,0,1,1,0,0,0,1,5,0,3,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\05-Implementation-of-Optimized-Prim-Algorithm\src\bobo\algo\PrimMST.java,bobo.algo.PrimMST,main/1[java.lang.String[]],false,87,4,5,0,5,2,7,12,0,7,1,7,0,0,1,0,0,0,3,2,7,1,1,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\05-Implementation-of-Optimized-Prim-Algorithm\src\bobo\algo\PrimMST.java,bobo.algo.PrimMST,result/0,false,81,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\UnionFind.java,UnionFind,UnionFind/1[int],true,15,0,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\UnionFind.java,UnionFind,"isConnected/2[int,int]",false,41,0,0,0,0,2,1,3,1,0,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\UnionFind.java,UnionFind,find/1[int],false,28,0,0,0,0,4,0,8,1,0,1,0,0,0,1,1,0,1,0,1,2,0,1,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\UnionFind.java,UnionFind,"unionElements/2[int,int]",false,47,0,0,0,0,4,1,15,1,2,2,1,0,0,0,1,0,0,0,1,6,0,1,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,contain/1[int],false,96,0,0,0,0,4,0,4,1,0,1,0,0,0,0,1,0,0,0,5,0,3,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,size/0,false,29,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,"change/2[int,Item]",false,108,0,0,0,0,1,3,7,0,0,2,3,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,extractMin/0,false,58,1,0,0,0,2,2,9,1,1,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,"insert/2[int,Item]",false,40,0,0,0,0,4,2,11,0,0,2,2,0,0,0,0,0,0,0,7,4,5,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,extractMinIndex/0,false,71,0,0,0,0,2,2,9,1,1,0,2,0,0,0,0,0,0,0,6,2,1,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,getMin/0,false,84,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,getMinIndex/0,false,90,0,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,shiftDown/1[int],false,147,0,0,0,0,5,2,9,0,1,1,2,0,0,1,0,0,0,0,6,2,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,shiftUp/1[int],false,138,0,0,0,0,3,2,6,0,0,1,2,0,0,1,0,0,0,0,5,1,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,isEmpty/0,false,34,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,getItem/1[int],false,102,1,0,0,0,1,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,IndexMinHeap/1[int],true,17,2,0,0,0,2,0,8,0,1,1,0,0,0,1,0,0,0,0,6,7,3,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,main/1[String[]],false,163,1,0,0,0,2,2,5,0,3,1,2,0,0,1,0,0,1,0,2,3,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\IndexMinHeap.java,IndexMinHeap,"swapIndexes/2[int,int]",false,124,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapOSort.java,bobo.algo.MaxHeapOSort,sort/1[java.lang.Comparable[]],false,14,1,3,0,3,3,2,6,0,4,1,2,0,0,2,0,0,0,0,3,5,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapOSort.java,bobo.algo.MaxHeapOSort,MaxHeapOSort/0,true,10,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeapOSort.java,bobo.algo.MaxHeapOSort,main/1[java.lang.String[]],false,26,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind2.java,UnionFind2,UnionFind2/1[int],true,12,0,0,0,0,2,0,5,0,1,1,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind2.java,UnionFind2,find/1[int],false,22,0,0,0,0,4,0,5,1,0,1,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind2.java,UnionFind2,"isConnected/2[int,int]",false,33,0,0,0,0,2,1,3,1,0,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind2.java,UnionFind2,"unionElements/2[int,int]",false,39,0,0,0,0,2,1,6,1,2,2,1,0,0,0,1,0,0,0,0,3,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort1.java,HeapSort1,sort/1[Comparable[]],false,14,1,0,0,0,3,2,6,0,4,1,2,0,0,2,0,0,0,0,3,5,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort1.java,HeapSort1,HeapSort1/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort1.java,HeapSort1,main/1[String[]],false,26,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind3.java,UnionFind3,UnionFind3/1[int],true,11,0,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind3.java,UnionFind3,"isConnected/2[int,int]",false,35,0,0,0,0,2,1,3,1,0,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind3.java,UnionFind3,find/1[int],false,24,0,0,0,0,4,0,5,1,0,1,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind3.java,UnionFind3,"unionElements/2[int,int]",false,41,0,0,0,0,3,1,13,1,2,2,1,0,0,0,1,0,0,0,0,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UF.java,UF,"isConnected/2[int,int]",false,6,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UF.java,UF,"unionElements/2[int,int]",false,7,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal\Postorder\src\Solution5.java,Solution5,postorderTraversal/1[TreeNode],false,16,1,0,0,0,7,4,24,2,4,1,4,0,0,2,5,0,0,0,0,9,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal\Postorder\src\Solution6.java,Solution6,postorderTraversal/1[TreeNode],false,16,1,0,0,0,7,4,26,2,4,1,4,0,0,1,5,0,0,0,0,9,0,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind1.java,UnionFind1,"isConnected/2[int,int]",false,25,0,0,0,0,2,1,3,1,0,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind1.java,UnionFind1,UnionFind1/1[int],true,9,0,0,0,0,2,0,5,0,1,1,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind1.java,UnionFind1,"unionElements/2[int,int]",false,31,0,0,0,0,4,1,6,1,3,2,1,0,0,1,2,0,0,0,1,4,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind1.java,UnionFind1,find/1[int],false,18,0,0,0,0,3,0,4,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal\Preorder\src\Solution3.java,Solution3,preorderTraversal/1[TreeNode],false,14,4,0,0,0,5,4,18,2,3,1,4,0,0,1,3,0,0,0,0,6,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\02-Quick-Find\src\bobo\algo\UnionFindTestHelper.java,bobo.algo.UnionFindTestHelper,testUF1/1[int],false,7,1,3,0,3,3,5,16,0,9,1,5,0,0,2,0,0,5,3,3,9,10,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind6.java,UnionFind6,"isConnected/2[int,int]",false,40,0,0,0,0,2,1,3,1,0,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind6.java,UnionFind6,"unionElements/2[int,int]",false,46,0,0,0,0,4,1,15,1,2,2,1,0,0,0,1,0,0,0,1,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind6.java,UnionFind6,UnionFind6/1[int],true,16,0,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind6.java,UnionFind6,find/1[int],false,29,0,0,0,0,4,1,5,1,0,1,1,0,0,0,1,0,1,0,1,1,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind6.java,UnionFind6,show/0,false,69,0,0,0,0,2,2,4,0,1,0,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\UnionFind.java,bobo.algo.UnionFind,UnionFind/1[int],true,15,1,1,1,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\UnionFind.java,bobo.algo.UnionFind,"isConnected/2[int,int]",false,41,1,2,1,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\UnionFind.java,bobo.algo.UnionFind,find/1[int],false,28,0,2,2,0,4,0,8,1,0,1,0,0,0,1,1,0,1,0,1,2,0,1,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\UnionFind.java,bobo.algo.UnionFind,"unionElements/2[int,int]",false,47,1,2,1,1,4,1,15,1,2,2,1,1,1,0,1,0,0,0,1,6,0,1,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal\Postorder\src\Solution4.java,Solution4,postorderTraversal/1[TreeNode],false,16,1,0,0,0,12,4,20,2,4,1,4,0,0,1,10,0,3,0,0,5,0,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal\Preorder\src\Solution1.java,Solution1,preorderTraversal/1[TreeNode],false,14,4,0,0,0,5,4,13,2,3,1,4,0,0,1,3,0,0,0,0,3,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-10-Binary-Tree-Morris-Traversal\src\TreeNode.java,TreeNode,TreeNode/1[int],true,6,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind4.java,UnionFind4,"isConnected/2[int,int]",false,35,0,0,0,0,2,1,3,1,0,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind4.java,UnionFind4,find/1[int],false,24,0,0,0,0,4,0,5,1,0,1,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind4.java,UnionFind4,UnionFind4/1[int],true,11,0,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind4.java,UnionFind4,"unionElements/2[int,int]",false,41,0,0,0,0,4,1,15,1,2,2,1,0,0,0,1,0,0,0,1,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\02-Binary-Search-Tree-Basics\src\bobo\algo\BST.java,bobo.algo.BST$Node,"Node/2[Key,Value]",true,13,2,0,0,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-09-Binary-Tree-Classic-Nonrecursive-Traversal\Preorder\src\Solution2.java,Solution2,preorderTraversal/1[TreeNode],false,14,4,0,0,0,5,4,16,2,3,1,4,0,0,2,3,0,0,0,0,6,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind5.java,UnionFind5,"isConnected/2[int,int]",false,42,0,0,0,0,2,1,3,1,0,2,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind5.java,UnionFind5,"unionElements/2[int,int]",false,48,0,0,0,0,4,1,15,1,2,2,1,0,0,0,1,0,0,0,1,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind5.java,UnionFind5,UnionFind5/1[int],true,16,0,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind5.java,UnionFind5,find/1[int],false,29,0,0,0,0,4,0,8,1,0,1,0,0,0,1,1,0,1,0,1,2,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-02-Path-Compression-Comparison\src\bobo\algo\UnionFind5.java,UnionFind5,show/0,false,71,0,0,0,0,2,2,4,0,1,0,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\SortTestHelper.java,SortTestHelper,"testSort/2[String,Comparable[]]",false,69,4,0,0,0,2,8,15,0,5,2,8,0,0,0,0,1,1,3,0,5,2,1,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\SortTestHelper.java,SortTestHelper,SortTestHelper/0,true,10,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\SortTestHelper.java,SortTestHelper,"generateNearlyOrderedArray/2[int,int]",false,29,1,0,0,0,3,1,12,1,6,2,1,0,0,2,0,0,2,0,2,9,2,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\SortTestHelper.java,SortTestHelper,isSorted/1[Comparable[]],false,59,0,0,0,0,3,1,4,2,1,1,1,0,0,1,0,0,0,0,4,1,2,2,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\SortTestHelper.java,SortTestHelper,"testSort2/2[String,Comparable[]]",false,96,4,0,0,0,2,6,16,2,5,2,6,0,0,0,0,1,0,1,1,5,1,1,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\SortTestHelper.java,SortTestHelper,printArray/1[Object[]],false,47,0,0,0,0,2,2,8,1,1,1,2,0,0,1,0,0,0,0,1,1,0,1,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-3-Index-Min-Heap\src\bobo\algo\SortTestHelper.java,SortTestHelper,"generateRandomArray/3[int,int,int]",false,13,1,0,0,0,3,1,6,1,2,3,1,0,0,1,0,0,2,0,2,3,4,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\DenseWeightedGraph.java,bobo.algo.DenseWeightedGraph,V/0,false,28,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\DenseWeightedGraph.java,bobo.algo.DenseWeightedGraph,addEdge/1[bobo.algo.Edge],false,32,2,6,0,6,8,4,8,1,0,1,4,0,0,0,1,0,0,0,2,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\DenseWeightedGraph.java,bobo.algo.DenseWeightedGraph,"DenseWeightedGraph/2[int,boolean]",true,15,1,0,0,0,4,0,8,0,2,2,0,0,0,2,0,0,0,0,4,7,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\DenseWeightedGraph.java,bobo.algo.DenseWeightedGraph,E/0,false,29,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\DenseWeightedGraph.java,bobo.algo.DenseWeightedGraph,adj/1[int],false,69,2,0,0,0,5,1,6,1,2,1,1,0,0,1,1,0,0,0,2,2,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\DenseWeightedGraph.java,bobo.algo.DenseWeightedGraph,show/0,false,55,1,1,0,1,4,3,7,0,2,0,3,0,0,2,1,0,0,2,2,2,1,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\DenseWeightedGraph.java,bobo.algo.DenseWeightedGraph,"hasEdge/2[int,int]",false,48,0,0,0,0,6,0,5,1,0,2,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ShortestPath.java,ShortestPath,showPath/1[int],false,79,1,0,0,0,3,6,9,0,2,1,6,0,0,1,1,0,0,1,2,2,1,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ShortestPath.java,ShortestPath,length/1[int],false,95,0,0,0,0,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ShortestPath.java,ShortestPath,main/1[String[]],false,101,5,0,0,0,1,4,13,0,5,1,4,0,0,0,0,0,0,3,5,5,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ShortestPath.java,ShortestPath,hasPath/1[int],false,52,0,0,0,0,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ShortestPath.java,ShortestPath,path/1[int],false,58,2,0,0,0,3,5,12,1,3,1,5,0,0,2,1,0,0,0,1,4,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ShortestPath.java,ShortestPath,"ShortestPath/2[Graph,int]",true,17,1,0,0,0,7,5,26,0,3,2,5,0,0,3,0,0,0,0,6,16,1,3,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-10-Binary-Tree-Morris-Traversal\src\InorderSolution.java,InorderSolution,inorderTraversal/1[TreeNode],false,14,1,0,0,0,7,1,25,2,3,1,1,0,0,2,6,0,0,0,0,9,0,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\Pair.java,bobo.algo.Pair,"Pair/2[A,B]",true,8,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\Pair.java,bobo.algo.Pair,a/0,false,13,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\Pair.java,bobo.algo.Pair,b/0,false,17,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\PrimMST.java,PrimMST,main/1[String[]],false,87,6,0,0,0,2,5,12,0,7,1,5,2,1,1,0,0,0,3,2,7,1,1,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\PrimMST.java,PrimMST,mstEdges/0,false,76,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\PrimMST.java,PrimMST,visit/1[int],false,49,1,0,0,0,5,6,18,0,2,1,6,0,0,1,1,0,0,0,1,5,0,3,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\PrimMST.java,PrimMST,PrimMST/1[WeightedGraph],true,16,3,0,0,0,5,10,21,0,3,1,10,0,0,3,1,0,2,0,5,12,1,1,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\PrimMST.java,PrimMST,result/0,false,81,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort2.java,HeapSort2,main/1[String[]],false,23,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort2.java,HeapSort2,sort/1[Comparable[]],false,14,1,0,0,0,2,1,5,0,3,1,1,0,0,1,0,0,0,0,2,4,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\HeapSort2.java,HeapSort2,HeapSort2/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\TestHelper.java,bobo.algo.TestHelper,TestHelper/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\TestHelper.java,bobo.algo.TestHelper,generateOrderedArray/1[int],false,11,0,1,1,0,2,0,5,1,2,1,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\TestHelper.java,bobo.algo.TestHelper,shuffleArray/1[java.lang.Object[]],false,21,0,1,1,0,2,1,9,0,4,1,1,0,0,1,0,0,2,0,1,6,3,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,MinHeap/1[Item],true,22,2,0,0,0,3,1,8,0,3,1,1,0,0,2,0,0,0,0,5,7,3,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,MinHeap/1[int],true,14,2,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,shiftDown/1[int],false,93,0,0,0,0,5,2,9,0,1,1,2,0,0,1,0,0,0,0,6,2,4,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,isEmpty/0,false,43,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,insert/1[Item],false,48,0,0,0,0,2,1,6,0,0,1,1,0,0,0,0,0,0,0,2,1,2,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,"swap/2[int,int]",false,76,1,0,0,0,1,0,5,0,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,getMin/0,false,69,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,extractMin/0,false,57,1,0,0,0,2,2,8,1,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,size/0,false,38,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,main/1[String[]],false,108,2,0,0,0,4,5,13,0,7,1,5,1,1,3,0,0,1,1,7,8,3,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\MinHeap.java,MinHeap,shiftUp/1[int],false,85,0,0,0,0,3,2,6,0,0,1,2,0,0,1,0,0,0,0,5,1,2,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\BinarySearch.java,BinarySearch,"firstGreaterOrEqual/2[Comparable[],Comparable]",false,12,1,0,0,0,4,1,10,1,3,2,1,0,0,1,2,0,1,1,4,5,4,2,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\BinarySearch.java,BinarySearch,"lastLessOrEqual/2[Comparable[],Comparable]",false,51,1,0,0,0,4,1,10,1,3,2,1,0,0,1,2,0,1,1,6,5,6,2,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\BinarySearch.java,BinarySearch,"firstGreaterThan/2[Comparable[],Comparable]",false,32,1,0,0,0,4,1,10,1,3,2,1,0,0,1,2,0,1,1,4,5,4,2,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\BinarySearch.java,BinarySearch,"lastLessThan/2[Comparable[],Comparable]",false,71,1,0,0,0,4,1,10,1,3,2,1,0,0,1,2,0,1,1,6,5,6,2,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-04-More-about-Binary-Search\src\BinarySearch.java,BinarySearch,BinarySearch/0,true,6,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,shiftDown/1[int],false,126,1,1,0,1,5,2,9,0,1,1,2,0,0,1,0,0,0,0,6,2,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,"swapIndexes/2[int,int]",false,106,0,0,0,0,1,0,5,0,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,getMaxIndex/0,false,78,0,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,"insert/2[int,Item]",false,34,2,1,0,1,4,1,9,0,0,2,1,0,0,0,0,0,0,0,6,3,4,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,size/0,false,23,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,getItem/1[int],false,84,1,0,0,0,3,0,4,1,0,1,0,0,0,0,0,0,0,0,4,0,3,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,testIndexes/0,false,143,1,0,0,0,5,2,16,2,4,0,2,0,0,2,1,0,0,1,7,7,3,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,main/1[java.lang.String[]],false,170,1,3,0,3,2,3,6,0,3,1,3,0,0,1,0,0,1,0,2,3,1,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,IndexMaxHeap/1[int],true,15,2,0,0,0,1,0,6,0,0,1,0,0,0,0,0,0,0,0,3,4,2,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,isEmpty/0,false,28,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,extractMax/0,false,48,2,2,0,2,2,2,8,1,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,"change/2[int,Item]",false,90,2,2,0,2,3,2,9,1,1,2,2,0,0,1,1,0,0,0,2,3,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,extractMaxIndex/0,false,60,1,2,0,2,2,2,8,1,1,0,2,0,0,0,0,0,0,0,5,1,1,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,shiftUp/1[int],false,117,1,1,0,1,3,2,6,0,0,1,2,0,0,1,0,0,0,0,5,1,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\08-Index-Heap\src\bobo\algo\IndexMaxHeap.java,bobo.algo.IndexMaxHeap,getMax/0,false,72,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST,size/0,false,30,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST,"insert/2[Key,Value]",false,40,3,1,0,1,3,1,14,1,2,2,1,0,0,1,2,0,0,0,1,6,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST,remove/1[Key],false,86,2,0,0,0,6,1,19,3,3,1,1,0,0,1,5,0,0,0,2,8,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST,search/1[Key],false,74,3,0,0,0,3,1,8,2,1,1,1,0,0,1,2,0,0,0,1,2,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST,contain/1[Key],false,62,2,0,0,0,3,1,8,2,1,1,1,0,0,1,2,0,0,0,1,2,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST,SST/0,true,24,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\04-Binary-Search-Tree-Search\src\bobo\algo\SST.java,bobo.algo.SST,isEmpty/0,false,35,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,MinHeap/1[Item[]],true,22,2,1,0,1,3,1,8,0,3,1,1,0,0,2,0,0,0,0,5,7,3,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,MinHeap/1[int],true,14,1,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,shiftDown/1[int],false,93,1,1,0,1,5,2,9,0,1,1,2,0,0,1,0,0,0,0,6,2,4,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,isEmpty/0,false,43,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,insert/1[Item],false,48,2,1,0,1,2,1,6,0,0,1,1,0,0,0,0,0,0,0,2,1,2,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,"swap/2[int,int]",false,76,1,0,0,0,1,0,5,0,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,getMin/0,false,69,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,extractMin/0,false,57,2,2,0,2,2,2,8,1,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,size/0,false,38,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,shiftUp/1[int],false,85,1,1,0,1,3,2,6,0,0,1,2,0,0,1,0,0,0,0,5,1,2,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-2-Min-Heap\src\bobo\algo\MinHeap.java,bobo.algo.MinHeap,main/1[java.lang.String[]],false,108,1,3,0,3,4,5,13,0,7,1,5,0,0,3,0,0,1,1,7,8,3,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UF.java,bobo.algo.UF,"isConnected/2[int,int]",false,6,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UF.java,bobo.algo.UF,"unionElements/2[int,int]",false,7,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\DenseGraph.java,DenseGraph,show/0,false,51,0,0,0,0,3,2,6,0,2,0,2,0,0,2,0,0,0,1,2,2,1,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\DenseGraph.java,DenseGraph,E/0,false,25,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\DenseGraph.java,DenseGraph,V/0,false,24,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\DenseGraph.java,DenseGraph,adj/1[int],false,62,2,0,0,0,5,1,6,1,2,1,1,0,0,1,0,0,0,0,2,2,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\DenseGraph.java,DenseGraph,"DenseGraph/2[int,boolean]",true,14,0,0,0,0,2,0,7,0,0,2,0,0,0,0,0,0,0,0,2,4,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\DenseGraph.java,DenseGraph,"addEdge/2[int,int]",false,28,0,0,0,0,7,1,8,1,0,2,1,0,0,0,0,0,0,0,2,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\DenseGraph.java,DenseGraph,"hasEdge/2[int,int]",false,44,0,0,0,0,5,0,5,1,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\SparseWeightedGraph.java,bobo.algo.SparseWeightedGraph,addEdge/1[bobo.algo.Edge],false,30,1,5,0,5,7,4,7,0,0,1,4,0,0,0,1,0,0,0,2,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\SparseWeightedGraph.java,bobo.algo.SparseWeightedGraph,V/0,false,26,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\SparseWeightedGraph.java,bobo.algo.SparseWeightedGraph,adj/1[int],false,72,2,0,0,0,3,0,4,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\SparseWeightedGraph.java,bobo.algo.SparseWeightedGraph,"SparseWeightedGraph/2[int,boolean]",true,15,2,0,0,0,3,0,8,0,1,2,0,0,0,1,0,0,0,0,3,6,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\SparseWeightedGraph.java,bobo.algo.SparseWeightedGraph,E/0,false,27,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\SparseWeightedGraph.java,bobo.algo.SparseWeightedGraph,"hasEdge/2[int,int]",false,46,1,1,0,1,7,3,6,2,1,2,3,0,0,1,1,0,0,0,3,1,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\SparseWeightedGraph.java,bobo.algo.SparseWeightedGraph,show/0,false,58,1,2,0,2,3,6,10,0,3,0,6,0,0,2,0,0,0,5,2,3,2,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\02-Merge-Sort\src\bobo\algo\MergeSort.java,bobo.algo.MergeSort,"merge/4[java.lang.Comparable[],int,int,int]",false,11,0,1,1,0,5,2,22,0,4,4,2,0,0,1,0,0,0,0,3,8,8,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\02-Merge-Sort\src\bobo\algo\MergeSort.java,bobo.algo.MergeSort,main/1[java.lang.String[]],false,53,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\02-Merge-Sort\src\bobo\algo\MergeSort.java,bobo.algo.MergeSort,MergeSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\02-Merge-Sort\src\bobo\algo\MergeSort.java,bobo.algo.MergeSort,sort/1[java.lang.Comparable[]],false,46,1,1,0,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\02-Merge-Sort\src\bobo\algo\MergeSort.java,bobo.algo.MergeSort,"sort/3[java.lang.Comparable[],int,int]",false,35,1,4,2,2,2,2,7,1,1,3,2,2,1,0,0,0,1,0,2,1,3,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\SparseGraph.java,SparseGraph,V/0,false,25,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\SparseGraph.java,SparseGraph,E/0,false,26,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\SparseGraph.java,SparseGraph,"hasEdge/2[int,int]",false,42,0,0,0,0,7,2,6,2,1,2,2,0,0,1,1,0,0,0,3,1,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\SparseGraph.java,SparseGraph,"SparseGraph/2[int,boolean]",true,14,1,0,0,0,3,0,8,0,1,2,0,0,0,1,0,0,0,0,3,6,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\SparseGraph.java,SparseGraph,adj/1[int],false,66,1,0,0,0,3,0,4,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\SparseGraph.java,SparseGraph,"addEdge/2[int,int]",false,29,0,0,0,0,7,1,7,0,0,2,1,0,0,0,1,0,0,0,2,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\SparseGraph.java,SparseGraph,show/0,false,54,0,0,0,0,3,4,7,0,2,0,4,0,0,2,0,0,0,3,2,2,2,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,"Edge/3[int,int,Weight]",true,10,1,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,Edge/1[bobo.algo.Edge<Weight>],true,17,2,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,other/1[int],false,28,0,1,1,0,4,0,4,1,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,toString/0,false,34,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,v/0,false,23,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,w/0,false,24,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,compareTo/1[bobo.algo.Edge],false,40,1,1,0,1,3,2,5,3,0,1,2,1,1,0,0,0,0,0,5,0,0,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\01-Weighted-Graph\src\bobo\algo\Edge.java,bobo.algo.Edge,wt/0,false,25,1,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-02-Bubble-Sort\src\bobo\algo\BubbleSort2.java,bobo.algo.BubbleSort2,BubbleSort2/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-02-Bubble-Sort\src\bobo\algo\BubbleSort2.java,bobo.algo.BubbleSort2,"swap/3[java.lang.Object[],int,int]",false,28,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-02-Bubble-Sort\src\bobo\algo\BubbleSort2.java,bobo.algo.BubbleSort2,sort/1[java.lang.Comparable[]],false,10,1,1,0,1,4,2,13,0,3,1,2,1,1,2,0,0,0,0,6,5,2,3,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\SelectionSort.java,SelectionSort,SelectionSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\SelectionSort.java,SelectionSort,main/1[String[]],false,32,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\SelectionSort.java,SelectionSort,"swap/3[Object[],int,int]",false,25,1,0,0,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\SelectionSort.java,SelectionSort,sort/1[Comparable[]],false,10,0,0,0,0,4,2,8,0,4,1,2,0,0,2,0,0,0,0,3,5,1,3,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\05-Insertion-Sort\src\bobo\algo\Main.java,bobo.algo.Main,main/1[java.lang.String[]],false,9,1,1,0,1,1,4,9,1,3,1,4,0,0,0,0,0,0,5,2,3,1,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\05-Implementation-of-Bellman-Ford\src\bobo\algo\BellmanFord.java,bobo.algo.BellmanFord,hasPathTo/1[int],false,83,1,1,0,1,4,1,4,1,0,1,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\05-Implementation-of-Bellman-Ford\src\bobo\algo\BellmanFord.java,bobo.algo.BellmanFord,negativeCycle/0,false,70,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\05-Implementation-of-Bellman-Ford\src\bobo\algo\BellmanFord.java,bobo.algo.BellmanFord,shortestPath/1[int],false,89,4,3,0,3,5,7,18,1,3,1,7,0,0,2,1,0,0,0,1,5,0,1,0,0,0,11,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\05-Implementation-of-Bellman-Ford\src\bobo\algo\BellmanFord.java,bobo.algo.BellmanFord,showPath/1[int],false,115,4,5,0,5,5,9,10,0,2,1,9,0,0,1,1,0,3,1,3,2,2,2,0,0,0,11,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\05-Implementation-of-Bellman-Ford\src\bobo\algo\BellmanFord.java,bobo.algo.BellmanFord,detectNegativeCycle/0,false,56,3,5,0,5,5,6,9,2,2,0,6,0,0,2,1,0,0,0,1,2,1,3,0,0,0,10,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\05-Implementation-of-Bellman-Ford\src\bobo\algo\BellmanFord.java,bobo.algo.BellmanFord,"BellmanFord/2[bobo.algo.WeightedGraph,int]",true,17,4,7,0,7,8,7,21,0,4,2,7,0,0,4,2,0,2,0,5,14,2,4,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\05-Implementation-of-Bellman-Ford\src\bobo\algo\BellmanFord.java,bobo.algo.BellmanFord,shortestPathTo/1[int],false,75,2,2,0,2,3,2,6,1,0,1,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\MergeSort.java,MergeSort,sort/1[Comparable[]],false,55,1,0,0,0,1,1,5,0,2,1,1,0,0,0,0,0,0,0,2,2,1,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\MergeSort.java,MergeSort,main/1[String[]],false,63,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\MergeSort.java,MergeSort,"sort/4[Comparable[],Comparable[],int,int]",false,38,0,0,0,0,3,3,10,1,1,4,3,0,0,0,0,0,1,0,5,1,5,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\MergeSort.java,MergeSort,MergeSort/0,true,9,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\MergeSort.java,MergeSort,"merge/5[Comparable[],Comparable[],int,int,int]",false,13,0,0,0,0,5,2,22,0,3,5,2,0,0,1,0,0,0,0,3,7,3,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,testUF1/1[int],false,10,1,0,0,0,3,5,16,0,9,1,5,0,0,2,0,0,5,3,3,9,10,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,testUF3/1[int],false,62,1,0,0,0,3,5,16,0,9,1,5,0,0,2,0,0,5,3,3,9,10,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,"testUF/4[String,UF,Pair<Integer,Integer>[],Pair<Integer,Integer>[]]",false,162,1,0,0,0,3,7,17,0,8,4,7,0,0,2,0,0,1,4,2,8,4,1,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,testUF2/1[int],false,37,1,0,0,0,3,5,16,0,9,1,5,0,0,2,0,0,5,3,3,9,10,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,UnionFindTestHelper/0,true,7,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,testUF4/1[int],false,87,1,0,0,0,3,5,16,0,9,1,5,0,0,2,0,0,5,3,3,9,10,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,testUF6/1[int],false,137,1,0,0,0,3,5,16,0,9,1,5,0,0,2,0,0,5,3,3,9,10,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFindTestHelper.java,UnionFindTestHelper,testUF5/1[int],false,112,1,0,0,0,3,5,16,0,9,1,5,0,0,2,0,0,5,3,3,9,10,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-10-Binary-Tree-Morris-Traversal\src\PostorderSolution.java,PostorderSolution,"reverseTraversal/2[TreeNode,java.util.ArrayList<java.lang.Integer>]",false,48,1,1,1,0,3,4,15,0,4,2,4,0,0,2,1,0,0,0,1,5,1,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Optional-10-Binary-Tree-Morris-Traversal\src\PostorderSolution.java,PostorderSolution,postorderTraversal/1[TreeNode],false,16,2,2,0,2,7,1,24,2,4,1,1,1,1,2,6,0,0,0,1,11,0,4,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort2Ways.java,QuickSort2Ways,"swap/3[Object[],int,int]",false,68,1,0,0,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort2Ways.java,QuickSort2Ways,sort/1[Comparable[]],false,62,0,0,0,0,1,1,4,0,1,1,1,0,0,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort2Ways.java,QuickSort2Ways,"partition/3[Comparable[],int,int]",false,12,1,0,0,0,7,3,15,1,3,3,3,0,0,3,0,0,2,0,5,3,6,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort2Ways.java,QuickSort2Ways,QuickSort2Ways/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort2Ways.java,QuickSort2Ways,main/1[String[]],false,75,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort2Ways.java,QuickSort2Ways,"sort/3[Comparable[],int,int]",false,49,0,0,0,0,2,2,9,1,1,3,2,0,0,0,0,0,0,0,3,1,3,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\HeapSort.java,HeapSort,main/1[String[]],false,55,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\HeapSort.java,HeapSort,HeapSort/0,true,9,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\HeapSort.java,HeapSort,"swap/3[Object[],int,int]",false,28,1,0,0,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\HeapSort.java,HeapSort,sort/1[Comparable[]],false,11,0,0,0,0,3,2,8,0,3,1,2,0,0,2,0,0,1,0,8,3,3,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\HeapSort.java,HeapSort,"shiftDown/3[Comparable[],int,int]",false,36,1,0,0,0,5,1,11,0,2,3,1,0,0,1,0,0,0,0,9,6,6,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\Graph.java,bobo.algo.Graph,E/0,false,7,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\Graph.java,bobo.algo.Graph,"hasEdge/2[int,int]",false,9,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\Graph.java,bobo.algo.Graph,adj/1[int],false,11,0,4,4,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\Graph.java,bobo.algo.Graph,V/0,false,6,0,10,10,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\Graph.java,bobo.algo.Graph,"addEdge/2[int,int]",false,8,0,2,2,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\04-Read-Graph\src\bobo\algo\Graph.java,bobo.algo.Graph,show/0,false,10,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\RandomGraph.java,bobo.algo.RandomGraph,"RandomGraph/3[bobo.algo.Graph,int,int]",true,6,1,1,0,1,4,2,9,0,4,3,2,0,0,2,0,0,2,0,4,4,5,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\SparseWeightedGraph.java,SparseWeightedGraph,V/0,false,26,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\SparseWeightedGraph.java,SparseWeightedGraph,adj/1[int],false,72,2,0,0,0,3,0,4,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\SparseWeightedGraph.java,SparseWeightedGraph,"SparseWeightedGraph/2[int,boolean]",true,15,2,0,0,0,3,0,8,0,1,2,0,0,0,1,0,0,0,0,3,6,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\SparseWeightedGraph.java,SparseWeightedGraph,E/0,false,27,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\SparseWeightedGraph.java,SparseWeightedGraph,"hasEdge/2[int,int]",false,46,0,0,0,0,7,3,6,2,1,2,3,0,0,1,1,0,0,0,3,1,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\SparseWeightedGraph.java,SparseWeightedGraph,show/0,false,58,1,0,0,0,3,6,10,0,3,0,6,0,0,2,0,0,0,5,2,3,2,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\SparseWeightedGraph.java,SparseWeightedGraph,addEdge/1[Edge],false,30,1,0,0,0,7,4,7,0,0,1,4,0,0,0,1,0,0,0,2,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Dijkstra.java,Dijkstra,"Dijkstra/2[WeightedGraph,int]",true,17,4,0,0,0,10,10,34,0,5,2,10,0,0,3,1,0,1,0,5,19,2,5,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Dijkstra.java,Dijkstra,hasPathTo/1[int],false,75,0,0,0,0,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Dijkstra.java,Dijkstra,shortestPathTo/1[int],false,68,1,0,0,0,3,2,5,1,0,1,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,7,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Dijkstra.java,Dijkstra,shortestPath/1[int],false,81,3,0,0,0,5,7,17,1,3,1,7,0,0,2,1,0,0,0,1,5,0,1,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Dijkstra.java,Dijkstra,showPath/1[int],false,106,2,0,0,0,5,9,9,0,2,1,9,0,0,1,1,0,0,1,3,2,2,2,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Dijkstra.java,Dijkstra,main/1[String[]],false,121,4,0,0,0,3,4,16,0,6,1,4,0,0,1,0,0,0,6,3,6,2,2,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\03-Implementation-of-Dijkstra\src\bobo\algo\Dijkstra.java,bobo.algo.Dijkstra,"Dijkstra/2[bobo.algo.WeightedGraph,int]",true,17,5,11,0,11,10,10,34,0,5,2,10,0,0,3,1,0,1,0,5,19,2,5,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\03-Implementation-of-Dijkstra\src\bobo\algo\Dijkstra.java,bobo.algo.Dijkstra,hasPathTo/1[int],false,75,1,1,0,1,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\03-Implementation-of-Dijkstra\src\bobo\algo\Dijkstra.java,bobo.algo.Dijkstra,shortestPathTo/1[int],false,68,2,2,0,2,3,2,5,1,0,1,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,7,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\03-Implementation-of-Dijkstra\src\bobo\algo\Dijkstra.java,bobo.algo.Dijkstra,shortestPath/1[int],false,81,4,3,0,3,5,7,17,1,3,1,7,0,0,2,1,0,0,0,1,5,0,1,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\03-Implementation-of-Dijkstra\src\bobo\algo\Dijkstra.java,bobo.algo.Dijkstra,showPath/1[int],false,106,4,5,0,5,5,9,9,0,2,1,9,0,0,1,1,0,0,1,3,2,2,2,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,MaxHeap/1[Item],true,22,2,0,0,0,3,1,8,0,3,1,1,0,0,2,0,0,0,0,5,7,3,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,getMax/0,false,69,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,extractMax/0,false,57,1,0,0,0,2,2,8,1,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,shiftDown/1[int],false,93,0,0,0,0,5,2,9,0,1,1,2,0,0,1,0,0,0,0,6,2,4,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,isEmpty/0,false,43,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,insert/1[Item],false,48,0,0,0,0,2,1,6,0,0,1,1,0,0,0,0,0,0,0,2,1,2,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,"swap/2[int,int]",false,76,1,0,0,0,1,0,5,0,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,size/0,false,38,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,main/1[String[]],false,108,2,0,0,0,4,5,13,0,7,1,5,1,1,3,0,0,1,1,7,8,3,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,MaxHeap/1[int],true,14,2,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Optional-1-Optimized-Shift-Up-and-Shift-Down\src\bobo\algo\MaxHeap.java,MaxHeap,shiftUp/1[int],false,85,0,0,0,0,3,2,6,0,0,1,2,0,0,1,0,0,0,0,5,1,2,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\06-Finding-a-Path\src\bobo\algo\Path.java,bobo.algo.Path,hasPath/1[int],false,43,1,3,2,1,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\06-Finding-a-Path\src\bobo\algo\Path.java,bobo.algo.Path,path/1[int],false,49,1,2,1,1,3,5,12,1,3,1,5,1,1,2,1,0,0,0,1,4,0,1,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\06-Finding-a-Path\src\bobo\algo\Path.java,bobo.algo.Path,dfs/1[int],false,14,2,4,2,2,3,2,7,0,0,1,2,1,0,1,0,0,0,0,0,2,0,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\06-Finding-a-Path\src\bobo\algo\Path.java,bobo.algo.Path,"Path/2[bobo.algo.Graph,int]",true,24,4,2,0,2,4,2,12,0,1,2,2,1,1,1,0,0,0,0,3,7,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\06-Finding-a-Path\src\bobo\algo\Path.java,bobo.algo.Path,showPath/1[int],false,70,1,2,0,2,3,7,9,0,2,1,7,2,2,1,1,0,0,1,2,2,1,2,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\Selection.java,bobo.algo.Selection,"solve/4[java.lang.Comparable[],int,int,int]",false,34,1,4,2,2,4,2,7,4,1,4,2,2,2,0,2,0,0,0,2,1,2,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\Selection.java,bobo.algo.Selection,"swap/3[java.lang.Object[],int,int]",false,67,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\Selection.java,bobo.algo.Selection,"solve2/2[java.lang.Comparable[],int]",false,62,1,2,1,1,1,1,3,1,0,2,1,1,4,0,0,0,0,0,1,0,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\Selection.java,bobo.algo.Selection,"partition/3[java.lang.Comparable[],int,int]",false,14,1,2,1,1,3,3,11,1,3,3,3,1,1,1,0,0,2,0,3,3,5,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\Selection.java,bobo.algo.Selection,Selection/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\Selection.java,bobo.algo.Selection,main/1[java.lang.String[]],false,74,2,4,0,4,3,6,18,0,4,1,6,2,4,2,2,0,0,6,4,5,3,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-05-Selection\src\bobo\algo\Selection.java,bobo.algo.Selection,"solve/2[java.lang.Comparable[],int]",false,55,1,3,2,1,4,1,4,1,0,2,1,1,3,0,1,0,0,0,3,0,1,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind6.java,bobo.algo.UnionFind6,"isConnected/2[int,int]",false,39,1,1,0,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind6.java,bobo.algo.UnionFind6,find/1[int],false,28,1,4,3,1,4,1,5,1,0,1,1,1,0,0,1,0,1,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind6.java,bobo.algo.UnionFind6,UnionFind6/1[int],true,15,1,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\Optional-01-Same-Cases-Test-for-UF\src\bobo\algo\UnionFind6.java,bobo.algo.UnionFind6,"unionElements/2[int,int]",false,45,1,1,0,1,4,1,15,1,2,2,1,1,1,0,1,0,0,0,1,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\06-Path-Compression\src\bobo\algo\UnionFind5.java,bobo.algo.UnionFind5,find/1[int],false,28,0,2,2,0,4,0,8,1,0,1,0,0,0,1,1,0,1,0,1,2,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\06-Path-Compression\src\bobo\algo\UnionFind5.java,bobo.algo.UnionFind5,UnionFind5/1[int],true,15,1,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\06-Path-Compression\src\bobo\algo\UnionFind5.java,bobo.algo.UnionFind5,"isConnected/2[int,int]",false,46,1,1,0,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\06-Path-Compression\src\bobo\algo\UnionFind5.java,bobo.algo.UnionFind5,"unionElements/2[int,int]",false,52,1,1,0,1,4,1,15,1,2,2,1,1,1,0,1,0,0,0,1,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\05-Optimize-by-Rank\src\bobo\algo\UnionFind4.java,bobo.algo.UnionFind4,"isConnected/2[int,int]",false,35,1,1,0,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\05-Optimize-by-Rank\src\bobo\algo\UnionFind4.java,bobo.algo.UnionFind4,find/1[int],false,24,0,2,2,0,4,0,5,1,0,1,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\05-Optimize-by-Rank\src\bobo\algo\UnionFind4.java,bobo.algo.UnionFind4,UnionFind4/1[int],true,11,1,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\05-Optimize-by-Rank\src\bobo\algo\UnionFind4.java,bobo.algo.UnionFind4,"unionElements/2[int,int]",false,41,1,1,0,1,4,1,15,1,2,2,1,1,1,0,1,0,0,0,1,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\03-Selection-Sort-Generate-Test-Cases\src\bobo\algo\SortTestHelper.java,bobo.algo.SortTestHelper,SortTestHelper/0,true,6,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\03-Selection-Sort-Generate-Test-Cases\src\bobo\algo\SortTestHelper.java,bobo.algo.SortTestHelper,"generateRandomArray/3[int,int,int]",false,9,0,21,21,0,3,1,6,1,2,3,1,0,0,1,0,0,2,0,2,3,4,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\03-Selection-Sort-Generate-Test-Cases\src\bobo\algo\SortTestHelper.java,bobo.algo.SortTestHelper,printArray/1[java.lang.Object[]],false,21,0,0,0,0,2,3,8,1,1,1,3,0,0,1,0,0,0,0,1,1,0,1,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\04-Optimize-by-Size\src\bobo\algo\UnionFind3.java,bobo.algo.UnionFind3,UnionFind3/1[int],true,11,1,0,0,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\04-Optimize-by-Size\src\bobo\algo\UnionFind3.java,bobo.algo.UnionFind3,"isConnected/2[int,int]",false,35,1,1,0,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\04-Optimize-by-Size\src\bobo\algo\UnionFind3.java,bobo.algo.UnionFind3,find/1[int],false,24,0,2,2,0,4,0,5,1,0,1,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\04-Optimize-by-Size\src\bobo\algo\UnionFind3.java,bobo.algo.UnionFind3,"unionElements/2[int,int]",false,41,1,1,0,1,3,1,13,1,2,2,1,1,1,0,1,0,0,0,0,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\03-Quick-Union\src\bobo\algo\UnionFind2.java,bobo.algo.UnionFind2,UnionFind2/1[int],true,12,1,0,0,0,2,0,5,0,1,1,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\03-Quick-Union\src\bobo\algo\UnionFind2.java,bobo.algo.UnionFind2,find/1[int],false,22,0,2,2,0,4,0,5,1,0,1,0,0,0,1,1,0,1,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\03-Quick-Union\src\bobo\algo\UnionFind2.java,bobo.algo.UnionFind2,"isConnected/2[int,int]",false,33,1,1,0,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\03-Quick-Union\src\bobo\algo\UnionFind2.java,bobo.algo.UnionFind2,"unionElements/2[int,int]",false,39,1,1,0,1,2,1,6,1,2,2,1,1,1,0,1,0,0,0,0,3,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\02-Quick-Find\src\bobo\algo\UnionFind1.java,bobo.algo.UnionFind1,UnionFind1/1[int],true,9,1,1,1,0,2,0,5,0,1,1,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\02-Quick-Find\src\bobo\algo\UnionFind1.java,bobo.algo.UnionFind1,"isConnected/2[int,int]",false,26,1,2,1,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\02-Quick-Find\src\bobo\algo\UnionFind1.java,bobo.algo.UnionFind1,"unionElements/2[int,int]",false,32,1,2,1,1,4,1,6,1,3,2,1,1,1,1,2,0,0,0,1,4,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\06-Union-Find\Course Code (Java)\02-Quick-Find\src\bobo\algo\UnionFind1.java,bobo.algo.UnionFind1,find/1[int],false,19,0,2,2,0,3,0,4,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\BubbleSort.java,BubbleSort,"swap/3[Object[],int,int]",false,27,1,0,0,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\BubbleSort.java,BubbleSort,sort/1[Comparable[]],false,9,0,0,0,0,4,2,13,0,3,1,2,0,0,2,0,0,0,0,6,5,2,3,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-03-Shell-Sort\src\bobo\algo\BubbleSort.java,BubbleSort,BubbleSort/0,true,7,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\07-Quick-Sort-Deal-With-Identical-Keys\src\bobo\algo\QuickSort2Ways.java,bobo.algo.QuickSort2Ways,"swap/3[java.lang.Object[],int,int]",false,69,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\07-Quick-Sort-Deal-With-Identical-Keys\src\bobo\algo\QuickSort2Ways.java,bobo.algo.QuickSort2Ways,sort/1[java.lang.Comparable[]],false,63,1,1,0,1,1,1,4,0,1,1,1,1,3,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\07-Quick-Sort-Deal-With-Identical-Keys\src\bobo\algo\QuickSort2Ways.java,bobo.algo.QuickSort2Ways,QuickSort2Ways/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\07-Quick-Sort-Deal-With-Identical-Keys\src\bobo\algo\QuickSort2Ways.java,bobo.algo.QuickSort2Ways,"partition/3[java.lang.Comparable[],int,int]",false,13,1,2,1,1,7,3,15,1,3,3,3,1,1,3,0,0,2,0,5,3,6,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\07-Quick-Sort-Deal-With-Identical-Keys\src\bobo\algo\QuickSort2Ways.java,bobo.algo.QuickSort2Ways,"sort/3[java.lang.Comparable[],int,int]",false,50,2,5,2,3,2,3,9,1,1,3,3,2,2,0,0,0,0,0,3,1,3,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\07-Quick-Sort-Deal-With-Identical-Keys\src\bobo\algo\QuickSort2Ways.java,bobo.algo.QuickSort2Ways,main/1[java.lang.String[]],false,76,1,1,0,1,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\KruskalMST.java,bobo.algo.KruskalMST,mstEdges/0,false,47,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\KruskalMST.java,bobo.algo.KruskalMST,KruskalMST/1[bobo.algo.WeightedGraph],true,12,5,13,0,13,8,15,17,0,6,1,15,0,0,4,0,0,0,0,4,9,2,3,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\KruskalMST.java,bobo.algo.KruskalMST,result/0,false,52,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\06-Kruskal-Algorithm\src\bobo\algo\KruskalMST.java,bobo.algo.KruskalMST,main/1[java.lang.String[]],false,58,4,5,0,5,2,7,12,0,7,1,7,0,0,1,0,0,0,3,2,7,1,1,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\LazyPrimMST.java,LazyPrimMST,main/1[String[]],false,71,6,0,0,0,2,5,12,0,7,1,5,2,1,1,0,0,0,3,2,7,1,1,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\LazyPrimMST.java,LazyPrimMST,mstEdges/0,false,60,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\LazyPrimMST.java,LazyPrimMST,visit/1[int],false,48,1,0,0,0,3,3,5,0,0,1,3,0,0,1,0,0,0,0,0,1,0,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\LazyPrimMST.java,LazyPrimMST,LazyPrimMST/1[WeightedGraph<Weight>],true,15,4,0,0,0,5,12,16,0,2,1,12,0,0,2,1,0,0,0,3,8,1,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\08-Minimum-Span-Trees\Course Code (Java)\Chapter-08-Completed-Code\src\bobo\algo\LazyPrimMST.java,LazyPrimMST,result/0,false,65,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort.java,QuickSort,"sort/3[Comparable[],int,int]",false,32,0,0,0,0,2,2,9,1,1,3,2,0,0,0,0,0,0,0,3,1,3,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort.java,QuickSort,"swap/3[Object[],int,int]",false,51,1,0,0,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort.java,QuickSort,sort/1[Comparable[]],false,45,0,0,0,0,1,1,4,0,1,1,1,0,0,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort.java,QuickSort,"partition/3[Comparable[],int,int]",false,12,1,0,0,0,3,3,11,1,3,3,3,0,0,1,0,0,2,0,3,3,5,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort.java,QuickSort,QuickSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\06-Heap-Sort\src\bobo\algo\QuickSort.java,QuickSort,main/1[String[]],false,58,1,0,0,0,1,2,6,1,2,1,2,0,0,0,0,0,0,1,3,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-02-Bubble-Sort\src\bobo\algo\BubbleSort.java,bobo.algo.BubbleSort,BubbleSort/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-02-Bubble-Sort\src\bobo\algo\BubbleSort.java,bobo.algo.BubbleSort,"swap/3[java.lang.Object[],int,int]",false,29,0,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\02-Sorting-Basic\Course Code (Java)\Optional-02-Bubble-Sort\src\bobo\algo\BubbleSort.java,bobo.algo.BubbleSort,sort/1[java.lang.Comparable[]],false,10,1,1,0,1,4,2,13,0,3,1,2,1,1,2,0,0,0,0,4,5,2,3,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,extractMax/0,false,58,1,0,0,0,2,2,9,1,1,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,contain/1[int],false,96,0,0,0,0,4,0,4,1,0,1,0,0,0,0,1,0,0,0,5,0,3,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,size/0,false,29,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,getMax/0,false,84,1,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,"change/2[int,Item]",false,108,0,0,0,0,1,3,7,0,0,2,3,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,extractMaxIndex/0,false,71,0,0,0,0,2,2,9,1,1,0,2,0,0,0,0,0,0,0,6,2,1,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,"insert/2[int,Item]",false,40,0,0,0,0,4,2,11,0,0,2,2,0,0,0,0,0,0,0,7,4,5,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,shiftDown/1[int],false,147,0,0,0,0,5,2,9,0,1,1,2,0,0,1,0,0,0,0,6,2,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,shiftUp/1[int],false,138,0,0,0,0,3,2,6,0,0,1,2,0,0,1,0,0,0,0,5,1,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,isEmpty/0,false,34,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,getItem/1[int],false,102,1,0,0,0,1,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,main/1[String[]],false,163,1,0,0,0,2,2,5,0,3,1,2,0,0,1,0,0,1,0,2,3,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,"swapIndexes/2[int,int]",false,124,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,getMaxIndex/0,false,90,0,0,0,0,2,0,4,1,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\04-Heap\Course Code (Java)\Chapter-04-Completed-Code\src\bobo\algo\IndexMaxHeap.java,IndexMaxHeap,IndexMaxHeap/1[int],true,17,2,0,0,0,2,0,8,0,1,1,0,0,0,1,0,0,0,0,6,7,3,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\SST.java,SST,size/0,false,30,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\SST.java,SST,"insert/2[Key,Value]",false,40,1,0,0,0,3,1,14,1,2,2,1,0,0,1,2,0,0,0,1,6,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\SST.java,SST,remove/1[Key],false,86,1,0,0,0,6,1,19,3,3,1,1,0,0,1,5,0,0,0,2,8,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\SST.java,SST,search/1[Key],false,74,2,0,0,0,3,1,8,2,1,1,1,0,0,1,2,0,0,0,1,2,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\SST.java,SST,contain/1[Key],false,62,1,0,0,0,3,1,8,2,1,1,1,0,0,1,2,0,0,0,1,2,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\SST.java,SST,SST/0,true,24,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\Chapter-05-Completed-Code\src\bobo\algo\SST.java,SST,isEmpty/0,false,35,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-04-Inversion-Number\src\bobo\algo\InversionCount.java,bobo.algo.InversionCount,solve/1[java.lang.Comparable[]],false,62,1,2,1,1,1,1,4,1,1,1,1,1,2,0,0,0,0,0,2,1,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-04-Inversion-Number\src\bobo\algo\InversionCount.java,bobo.algo.InversionCount,"merge/4[java.lang.Comparable[],int,int,int]",false,11,0,1,1,0,5,2,25,1,5,4,2,0,0,1,0,0,1,0,5,10,10,2,0,0,0,11,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-04-Inversion-Number\src\bobo\algo\InversionCount.java,bobo.algo.InversionCount,main/1[java.lang.String[]],false,69,2,2,0,2,1,5,10,1,2,1,5,1,3,0,0,0,0,6,3,4,3,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-04-Inversion-Number\src\bobo\algo\InversionCount.java,bobo.algo.InversionCount,InversionCount/0,true,8,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\03-Sorting-Advance\Course Code (Java)\Optional-04-Inversion-Number\src\bobo\algo\InversionCount.java,bobo.algo.InversionCount,"solve/3[java.lang.Comparable[],int,int]",false,48,1,4,2,2,2,2,7,2,3,3,2,2,1,0,0,0,1,0,3,3,5,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ReadGraph.java,ReadGraph,main/1[String[]],false,65,4,0,0,0,1,2,23,0,9,1,2,0,0,0,0,0,0,6,4,10,0,0,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ReadGraph.java,ReadGraph,readFile/1[String],false,47,5,0,0,0,4,2,15,0,2,1,2,0,0,0,1,1,0,3,0,3,2,2,0,0,0,20,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\Chapter-07-Completed-Code\src\bobo\algo\ReadGraph.java,ReadGraph,"ReadGraph/2[Graph,String]",true,16,4,0,0,0,7,5,24,0,6,2,5,0,0,1,1,1,0,5,5,6,1,2,0,0,0,42,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Main.java,Main,main/1[String[]],false,5,0,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,"Edge/3[int,int,Weight]",true,10,0,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,other/1[int],false,28,0,0,0,0,4,0,4,1,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,toString/0,false,34,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,compareTo/1[Edge<Weight>],false,40,1,0,0,0,3,2,5,3,0,1,2,1,1,0,0,0,0,0,5,0,0,2,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,v/0,false,23,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,w/0,false,24,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,Edge/1[Edge<Weight>],true,17,1,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\09-Shortest-Path\Course Code (Java)\Chapter-09-Completed-Code\src\bobo\algo\Edge.java,Edge,wt/0,false,25,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\01-Binary-Search\src\bobo\algo\BinarySearch2.java,bobo.algo.BinarySearch2,BinarySearch2/0,true,7,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\01-Binary-Search\src\bobo\algo\BinarySearch2.java,bobo.algo.BinarySearch2,main/1[java.lang.String[]],false,35,1,1,0,1,4,1,11,1,5,1,1,1,2,2,2,0,0,0,5,6,1,2,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\01-Binary-Search\src\bobo\algo\BinarySearch2.java,bobo.algo.BinarySearch2,"find/4[java.lang.Comparable[],int,int,java.lang.Comparable]",false,9,1,3,2,1,4,2,7,4,1,4,2,1,0,0,1,0,1,0,6,1,5,2,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\05-Binary-Search-Tree\Course Code (Java)\01-Binary-Search\src\bobo\algo\BinarySearch2.java,bobo.algo.BinarySearch2,"find/2[java.lang.Comparable[],java.lang.Comparable]",false,29,1,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,2,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\07-BFS-and-Shortest-Path\src\bobo\algo\ShortestPath.java,bobo.algo.ShortestPath,"ShortestPath/2[bobo.algo.Graph,int]",true,18,3,2,0,2,7,5,26,0,3,2,5,0,0,3,0,0,0,0,6,16,1,3,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\07-BFS-and-Shortest-Path\src\bobo\algo\ShortestPath.java,bobo.algo.ShortestPath,showPath/1[int],false,80,1,2,0,2,3,7,9,0,2,1,7,2,2,1,1,0,0,1,2,2,1,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\07-BFS-and-Shortest-Path\src\bobo\algo\ShortestPath.java,bobo.algo.ShortestPath,hasPath/1[int],false,53,1,3,2,1,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\07-BFS-and-Shortest-Path\src\bobo\algo\ShortestPath.java,bobo.algo.ShortestPath,path/1[int],false,59,1,2,1,1,3,5,12,1,3,1,5,1,1,2,1,0,0,0,1,4,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Play-with-Algorithms\07-Graph-Basics\Course Code (Java)\07-BFS-and-Shortest-Path\src\bobo\algo\ShortestPath.java,bobo.algo.ShortestPath,length/1[int],false,96,1,1,0,1,3,1,4,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
