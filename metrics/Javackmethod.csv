file,class,method,constructor,line,cbo,cboModified,fanin,fanout,wmc,rfc,loc,returnsQty,variablesQty,parametersQty,methodsInvokedQty,methodsInvokedLocalQty,methodsInvokedIndirectLocalQty,loopQty,comparisonsQty,tryCatchQty,parenthesizedExpsQty,stringLiteralsQty,numbersQty,assignmentsQty,mathOperationsQty,maxNestedBlocksQty,anonymousClassesQty,innerClassesQty,lambdasQty,uniqueWordsQty,modifiers,logStatementsQty,hasJavaDoc
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,addFalseTest/0,false,35,2,0,0,0,1,3,6,0,3,0,3,0,0,0,0,0,0,0,5,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,fft/0,false,116,3,0,0,0,1,6,20,0,9,0,6,0,0,0,0,0,0,0,16,10,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,abs/0,false,85,2,0,0,0,1,3,5,0,2,0,3,0,0,0,0,0,0,0,3,2,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,addTest/0,false,26,2,0,0,0,1,3,6,0,3,0,3,0,0,0,0,0,0,0,5,3,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,subtractTest/0,false,44,2,0,0,0,1,3,6,0,3,0,3,0,0,0,0,0,0,0,5,3,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,conjugateTest/0,false,75,2,0,0,0,1,4,7,0,3,0,4,0,0,0,0,0,0,0,4,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,getImaginaryTest/0,false,19,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,1,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,divideWithScalarTest/0,false,104,2,0,0,0,1,4,7,0,3,0,4,0,0,0,0,0,0,0,6,3,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,getRealtest/0,false,12,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,3,1,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,multiplyWithComplexTest/0,false,53,2,0,0,0,1,4,8,0,4,0,4,0,0,0,0,0,0,0,6,4,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,multiplyWithScalarTest/0,false,64,2,0,0,0,1,4,7,0,3,0,4,0,0,0,0,0,0,0,6,3,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FFTTest.java,com.thealgorithms.maths.FFTTest,divideWithComplexTest/0,false,93,2,0,0,0,1,4,8,0,4,0,4,0,0,0,0,0,0,0,6,4,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\FCFSScheduling.java,com.thealgorithms.scheduling.FCFSScheduling,FCFSScheduling/1[java.util.List<com.thealgorithms.devutils.entities.ProcessDetails>],true,14,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\FCFSScheduling.java,com.thealgorithms.scheduling.FCFSScheduling,evaluateWaitingTime/0,false,23,1,4,1,3,3,5,14,1,4,0,5,0,0,1,1,0,0,0,5,6,1,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\FCFSScheduling.java,com.thealgorithms.scheduling.FCFSScheduling,evaluateTurnAroundTime/0,false,42,1,4,1,3,2,5,5,0,1,0,5,0,0,1,0,0,0,0,1,1,1,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\FCFSScheduling.java,com.thealgorithms.scheduling.FCFSScheduling,scheduleProcesses/0,false,18,1,2,0,2,1,2,4,0,0,0,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\IntrospectiveSort.java,com.thealgorithms.sorts.IntrospectiveSort,"heapSort/3[T[],int,int]",false,65,2,3,1,2,3,2,9,0,2,3,2,2,2,2,0,0,1,0,3,2,6,1,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\IntrospectiveSort.java,com.thealgorithms.sorts.IntrospectiveSort,"partition/3[T[],int,int]",false,38,2,2,1,1,3,3,14,1,4,3,3,1,1,1,0,0,2,0,6,4,8,2,0,0,0,9,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\IntrospectiveSort.java,com.thealgorithms.sorts.IntrospectiveSort,sort/1[T[]],false,13,2,1,0,1,1,2,5,1,1,1,2,1,5,0,0,0,1,0,4,1,3,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\IntrospectiveSort.java,com.thealgorithms.sorts.IntrospectiveSort,"insertionSort/3[T[],int,int]",false,53,1,1,1,0,4,1,11,0,3,3,1,0,0,2,0,0,0,0,5,5,4,2,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\IntrospectiveSort.java,com.thealgorithms.sorts.IntrospectiveSort,"introSort/4[T[],int,int,int]",false,25,2,6,2,4,3,4,12,1,1,4,4,4,4,1,1,0,0,0,4,2,4,2,0,0,0,21,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\IntrospectiveSort.java,com.thealgorithms.sorts.IntrospectiveSort,"swap/3[T[],int,int]",false,19,1,3,3,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\IntrospectiveSort.java,com.thealgorithms.sorts.IntrospectiveSort,"heapify/4[T[],int,int,int]",false,75,2,4,2,2,6,3,15,0,3,4,3,2,1,0,1,0,0,0,6,5,6,1,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CRC16Test.java,com.thealgorithms.others.CRC16Test,testCRC16/0,false,12,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Lower.java,com.thealgorithms.strings.Lower,main/1[java.lang.String[]],false,8,1,1,0,1,2,3,6,0,1,1,3,1,1,1,0,0,0,4,0,1,0,1,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Lower.java,com.thealgorithms.strings.Lower,toLowerCase/1[java.lang.String],false,21,1,2,2,0,4,4,9,1,2,1,4,0,0,1,0,0,0,0,1,3,0,2,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AESEncryption.java,com.thealgorithms.ciphers.AESEncryption,"encryptText/2[java.lang.String,javax.crypto.SecretKey]",false,66,1,1,1,0,1,4,5,1,0,2,4,0,0,0,0,0,0,1,0,1,0,0,0,0,0,34,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AESEncryption.java,com.thealgorithms.ciphers.AESEncryption,"decryptText/2[byte[],javax.crypto.SecretKey]",false,80,1,1,1,0,1,4,7,1,3,2,4,0,0,0,0,0,0,1,1,3,0,0,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AESEncryption.java,com.thealgorithms.ciphers.AESEncryption,getSecretEncryptionKey/0,false,49,0,1,1,0,1,3,5,1,1,0,3,0,0,0,0,0,0,1,1,1,0,0,0,0,0,31,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AESEncryption.java,com.thealgorithms.ciphers.AESEncryption,bytesToHex/1[byte[]],false,96,2,1,1,0,2,0,9,1,3,1,0,0,0,1,0,0,0,0,8,5,5,1,0,0,0,32,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AESEncryption.java,com.thealgorithms.ciphers.AESEncryption,main/1[java.lang.String[]],false,25,2,4,0,4,1,6,10,0,4,1,6,4,1,0,0,0,0,5,0,4,4,0,0,0,0,41,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\SJFScheduling.java,com.thealgorithms.scheduling.SJFScheduling,findShortestJob/1[java.util.ArrayList<com.thealgorithms.devutils.entities.ProcessDetails>],false,91,1,2,1,1,4,4,15,2,5,1,4,0,0,1,0,0,0,0,3,7,0,2,0,0,0,44,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\SJFScheduling.java,com.thealgorithms.scheduling.SJFScheduling,SJFScheduling/1[java.util.ArrayList<com.thealgorithms.devutils.entities.ProcessDetails>],true,21,2,1,0,1,1,1,5,0,0,1,1,1,1,0,0,0,0,0,0,2,0,0,0,0,0,27,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\SJFScheduling.java,com.thealgorithms.scheduling.SJFScheduling,scheduleProcesses/0,false,48,2,4,0,4,7,9,28,1,8,0,9,1,1,3,2,0,0,0,5,8,0,3,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\scheduling\SJFScheduling.java,com.thealgorithms.scheduling.SJFScheduling,sortByArrivalTime/0,false,26,1,2,1,1,4,4,13,0,4,0,4,0,0,2,0,0,0,0,6,4,5,3,0,0,0,10,4,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,StackArray/0,true,62,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,push/1[int],false,82,1,5,2,3,2,3,10,0,0,1,3,3,1,0,0,0,0,0,1,1,1,1,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,isEmpty/0,false,141,0,3,3,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,main/1[java.lang.String[]],false,18,1,7,0,7,5,6,15,0,1,1,6,6,4,0,4,0,0,0,9,1,0,0,0,0,0,8,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,size/0,false,170,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,resize/1[int],false,125,1,2,2,0,2,0,8,0,2,1,0,0,0,1,0,0,0,0,1,5,0,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,StackArray/1[int],true,71,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,isFull/0,false,150,0,2,2,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,makeEmpty/0,false,161,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,peek/0,false,116,1,2,1,1,2,2,9,2,0,0,2,1,1,0,0,0,0,1,1,0,0,1,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArray.java,com.thealgorithms.datastructures.stacks.StackArray,pop/0,false,97,1,5,2,3,3,4,13,3,0,0,4,3,1,0,0,0,0,1,3,0,2,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,"moveEntryToLast/1[com.thealgorithms.datastructures.caches.MRUCache.Entry<K,V>]",false,99,3,4,0,4,5,4,20,1,2,1,4,0,0,0,4,0,0,0,0,4,0,1,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,checkCapacity/1[int],false,37,0,0,0,0,2,0,5,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,get/1[K],false,58,4,2,0,2,2,4,8,2,1,1,4,0,0,0,0,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,"addNewEntry/1[com.thealgorithms.datastructures.caches.MRUCache.Entry<K,V>]",false,87,3,2,0,2,2,3,11,1,0,1,3,0,0,0,0,0,0,0,0,3,0,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,setCapacity/1[int],false,28,4,3,0,3,2,5,8,0,2,1,5,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,evict/0,false,43,3,2,0,2,2,2,10,1,1,0,2,0,0,0,1,0,0,1,0,2,0,1,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,MRUCache/0,true,24,1,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,MRUCache/1[int],true,54,1,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache,"put/2[K,V]",false,67,4,7,0,7,3,11,20,1,2,2,11,0,0,0,1,0,0,0,0,3,0,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\CombinationTest.java,com.thealgorithms.backtracking.CombinationTest,testLengthOne/0,false,21,1,0,0,0,3,5,5,0,1,0,5,0,0,0,2,0,0,0,7,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\CombinationTest.java,com.thealgorithms.backtracking.CombinationTest,testNoElement/0,false,12,1,0,0,0,2,2,4,0,1,0,2,0,0,0,1,0,0,0,3,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\CombinationTest.java,com.thealgorithms.backtracking.CombinationTest,testLengthTwo/0,false,31,1,0,0,0,3,4,6,0,2,0,4,0,0,0,2,0,0,0,9,2,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\CaesarTest.java,com.thealgorithms.ciphers.CaesarTest,caesarDecryptTest/0,false,24,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,2,1,2,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\CaesarTest.java,com.thealgorithms.ciphers.CaesarTest,caesarEncryptTest/0,false,12,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,2,1,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\CaesarTest.java,com.thealgorithms.ciphers.CaesarTest,caesarBruteForce/0,false,36,1,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BinaryInsertionSortTest.java,com.thealgorithms.sorts.BinaryInsertionSortTest,BinaryInsertionSortTestDuplicate/0,false,21,3,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,18,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BinaryInsertionSortTest.java,com.thealgorithms.sorts.BinaryInsertionSortTest,BinaryInsertionSortTestNonDuplicate/0,false,13,3,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,22,3,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TopologicalSort.java,com.thealgorithms.sorts.TopologicalSort$Graph,"addEdge/2[java.lang.String,java.lang.String[]]",false,80,1,3,2,1,2,4,4,0,0,2,4,0,0,0,0,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\BinarySearch.java,com.thealgorithms.searches.BinarySearch,"find/2[T[],T]",false,33,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\BinarySearch.java,com.thealgorithms.searches.BinarySearch,main/1[java.lang.String[]],false,69,1,2,0,2,2,11,12,0,8,1,11,0,0,0,1,0,0,2,3,8,1,0,0,0,1,29,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\BinarySearch.java,com.thealgorithms.searches.BinarySearch,"search/4[T[],T,int,int]",false,51,2,3,2,1,4,2,16,4,2,4,2,1,0,0,1,0,1,0,6,2,4,1,0,0,0,27,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtilsRandomGenerator.java,com.thealgorithms.sorts.SortUtilsRandomGenerator,generateInt/1[int],false,43,0,3,3,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtilsRandomGenerator.java,com.thealgorithms.sorts.SortUtilsRandomGenerator,generateArray/1[int],false,22,1,7,6,1,2,1,5,1,2,1,1,1,1,1,0,0,0,0,1,3,0,1,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtilsRandomGenerator.java,com.thealgorithms.sorts.SortUtilsRandomGenerator,(initializer 1),false,10,0,1,0,1,1,1,4,0,0,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtilsRandomGenerator.java,com.thealgorithms.sorts.SortUtilsRandomGenerator,generateDouble/0,false,34,0,2,2,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SinglyLinkedListTest.java,com.thealgorithms.datastructures.lists.SinglyLinkedListTest,swap/0,false,70,3,1,0,1,1,5,8,0,1,0,5,1,1,0,0,0,0,0,9,1,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SinglyLinkedListTest.java,com.thealgorithms.datastructures.lists.SinglyLinkedListTest,clear/0,false,80,3,1,0,1,1,6,7,0,1,0,6,1,1,0,0,0,0,0,3,1,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SinglyLinkedListTest.java,com.thealgorithms.datastructures.lists.SinglyLinkedListTest,detectLoop/0,false,32,4,1,0,1,1,4,14,0,6,0,4,1,1,0,0,0,0,0,6,10,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SinglyLinkedListTest.java,com.thealgorithms.datastructures.lists.SinglyLinkedListTest,createSampleList/1[int],false,17,2,6,6,0,3,2,11,1,4,1,2,0,0,2,0,0,0,0,5,5,2,1,0,0,0,22,2,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SinglyLinkedListTest.java,com.thealgorithms.datastructures.lists.SinglyLinkedListTest,deleteNth/0,false,96,3,1,0,1,1,5,6,0,1,0,5,1,1,0,0,0,0,0,4,1,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SinglyLinkedListTest.java,com.thealgorithms.datastructures.lists.SinglyLinkedListTest,middle/0,false,52,3,1,0,1,1,5,12,0,3,0,5,1,1,0,0,0,0,0,6,6,3,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SinglyLinkedListTest.java,com.thealgorithms.datastructures.lists.SinglyLinkedListTest,search/0,false,89,3,1,0,1,1,4,5,0,1,0,4,1,1,0,0,0,0,0,3,1,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\AllPathsFromSourceToTargetTest.java,com.thealgorithms.backtracking.AllPathsFromSourceToTargetTest,testForSecondCase/0,false,22,1,0,0,0,1,6,10,0,6,0,6,0,0,0,0,0,0,0,43,7,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\AllPathsFromSourceToTargetTest.java,com.thealgorithms.backtracking.AllPathsFromSourceToTargetTest,testForFirstCase/0,false,10,1,0,0,0,1,5,10,0,6,0,5,0,0,0,0,0,0,0,25,7,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\AllPathsFromSourceToTargetTest.java,com.thealgorithms.backtracking.AllPathsFromSourceToTargetTest,testForFourthcase/0,false,46,1,0,0,0,1,5,10,0,6,0,5,0,0,0,0,0,0,0,14,7,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\AllPathsFromSourceToTargetTest.java,com.thealgorithms.backtracking.AllPathsFromSourceToTargetTest,testForThirdCase/0,false,34,1,0,0,0,1,6,10,0,6,0,6,0,0,0,0,0,0,0,39,7,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\KDTreeTest.java,com.thealgorithms.datastructures.trees.KDTreeTest,findMin/0,false,14,3,0,0,0,1,3,6,0,2,0,3,0,0,0,0,0,0,0,18,2,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\KDTreeTest.java,com.thealgorithms.datastructures.trees.KDTreeTest,findNearest/0,false,47,4,1,0,1,1,3,8,0,2,0,3,1,1,0,0,0,0,0,28,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\KDTreeTest.java,com.thealgorithms.datastructures.trees.KDTreeTest,"pointOf/2[int,int]",false,9,3,2,2,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\KDTreeTest.java,com.thealgorithms.datastructures.trees.KDTreeTest,delete/0,false,30,4,1,0,1,1,6,7,0,2,0,6,1,1,0,0,0,0,0,18,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\AlphabeticalTest.java,com.thealgorithms.strings.AlphabeticalTest,isAlphabetical/0,false,10,2,1,0,1,1,3,14,0,6,0,3,0,0,0,0,0,0,6,0,6,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RomanToInteger.java,com.thealgorithms.conversions.RomanToInteger$Anonymous1,(initializer 1),false,12,0,1,0,1,1,1,9,0,0,0,1,0,0,0,0,0,0,0,7,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\MainCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.MainCuckooHashing,main/1[java.lang.String[]],false,7,1,7,0,7,9,10,61,1,4,1,10,0,0,1,0,0,0,17,8,6,1,2,0,0,0,31,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair$Location,"Location/2[double,double]",true,63,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\TreeTestUtils.java,com.thealgorithms.datastructures.trees.TreeTestUtils,createTree/1[java.lang.Integer[]],false,15,1,33,33,0,8,2,31,1,4,1,2,0,0,1,5,0,0,1,4,8,0,3,0,0,0,29,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\QuickSortTest.java,com.thealgorithms.sorts.QuickSortTest,getSortAlgorithm/0,false,9,2,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\HarshadNumber.java,com.thealgorithms.maths.HarshadNumber,isHarshad/1[java.lang.String],false,35,0,0,0,0,4,2,9,2,2,1,2,0,0,1,1,0,0,0,3,3,2,1,0,0,0,23,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\HarshadNumber.java,com.thealgorithms.maths.HarshadNumber,isHarshad/1[long],false,14,0,0,0,0,4,0,10,2,2,1,0,0,0,1,1,0,0,0,6,4,2,1,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\DyanamicProgrammingKnapsack.java,com.thealgorithms.dynamicprogramming.DyanamicProgrammingKnapsack,"max/2[int,int]",false,7,0,1,1,0,2,0,3,1,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\DyanamicProgrammingKnapsack.java,com.thealgorithms.dynamicprogramming.DyanamicProgrammingKnapsack,main/1[java.lang.String[]],false,35,2,1,0,1,1,2,7,0,4,1,2,1,2,0,0,0,0,0,7,4,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\DyanamicProgrammingKnapsack.java,com.thealgorithms.dynamicprogramming.DyanamicProgrammingKnapsack,"knapSack/4[int,int[],int[],int]",false,13,2,2,1,1,6,1,18,1,3,4,1,1,1,2,2,0,0,0,13,6,10,3,0,0,0,7,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\Permutation.java,com.thealgorithms.backtracking.Permutation,"backtracking/3[T[],int,java.util.List<T[]>]",false,32,2,4,2,2,3,4,10,0,1,3,4,2,1,1,1,0,0,0,1,1,1,1,0,0,0,22,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\Permutation.java,com.thealgorithms.backtracking.Permutation,permutation/1[T[]],false,18,2,1,0,1,1,2,6,1,2,1,2,1,2,0,0,0,0,0,1,2,0,0,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\Permutation.java,com.thealgorithms.backtracking.Permutation,"swap/3[int,int,T[]]",false,50,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,19,10,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BogoSortTest.java,com.thealgorithms.sorts.BogoSortTest,bogoSortSingleIntegerArray/0,false,20,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BogoSortTest.java,com.thealgorithms.sorts.BogoSortTest,bogoSortDuplicateStringArray/0,false,60,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,16,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BogoSortTest.java,com.thealgorithms.sorts.BogoSortTest,bogoSortNonDuplicateIntegerArray/0,false,36,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,14,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BogoSortTest.java,com.thealgorithms.sorts.BogoSortTest,bogoSortSingleStringArray/0,false,28,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BogoSortTest.java,com.thealgorithms.sorts.BogoSortTest,bogoSortDuplicateIntegerArray/0,false,44,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,16,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BogoSortTest.java,com.thealgorithms.sorts.BogoSortTest,bogoSortEmptyArray/0,false,12,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BogoSortTest.java,com.thealgorithms.sorts.BogoSortTest,bogoSortNonDuplicateStringArray/0,false,52,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,14,0,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\Heap.java,com.thealgorithms.datastructures.heaps.Heap,deleteElement/1[int],false,37,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\Heap.java,com.thealgorithms.datastructures.heaps.Heap,getElement/0,false,22,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\Heap.java,com.thealgorithms.datastructures.heaps.Heap,insertElement/1[com.thealgorithms.datastructures.heaps.HeapElement],false,29,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\EggDropping.java,com.thealgorithms.dynamicprogramming.EggDropping,"minTrials/2[int,int]",false,9,1,1,1,0,7,1,23,1,7,2,1,0,0,5,0,0,0,0,15,12,6,4,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\EggDropping.java,com.thealgorithms.dynamicprogramming.EggDropping,main/1[java.lang.String[]],false,43,1,1,0,1,1,2,5,0,3,1,2,1,1,0,0,0,0,0,2,3,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RgbHsvConversion.java,com.thealgorithms.conversions.RgbHsvConversion,main/1[java.lang.String[]],false,18,3,3,0,3,1,4,22,0,0,1,4,3,3,0,0,0,0,0,120,0,0,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RgbHsvConversion.java,com.thealgorithms.conversions.RgbHsvConversion,"hsvToRgb/3[double,double,double]",false,95,2,2,1,1,7,2,16,1,4,3,2,1,2,0,0,0,1,3,10,4,7,1,0,0,0,39,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RgbHsvConversion.java,com.thealgorithms.conversions.RgbHsvConversion,convertToInt/1[double],false,225,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RgbHsvConversion.java,com.thealgorithms.conversions.RgbHsvConversion,"getRgbBySection/4[double,double,double,double]",false,191,2,2,1,1,11,1,36,1,3,4,1,1,1,0,0,0,0,0,10,18,12,1,0,0,0,17,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RgbHsvConversion.java,com.thealgorithms.conversions.RgbHsvConversion,"rgbToHsv/3[int,int,int]",false,136,1,1,1,0,11,2,32,1,7,3,2,0,0,0,4,0,7,3,21,11,19,1,0,0,0,36,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RgbHsvConversion.java,com.thealgorithms.conversions.RgbHsvConversion,"approximatelyEqualHsv/2[double[],double[]]",false,178,1,1,1,0,4,1,6,1,3,2,1,0,0,0,0,0,0,0,9,3,3,0,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,inorderSort/0,false,266,2,1,0,1,1,1,5,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,"search/2[com.thealgorithms.datastructures.trees.BSTRecursiveGeneric.Node<T>,T]",false,222,3,1,0,1,4,2,14,4,0,2,2,0,0,0,2,0,0,0,2,0,0,1,0,0,0,25,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,preorder/0,false,284,1,1,0,1,1,3,5,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,remove/1[T],false,249,2,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,find/1[T],false,295,2,1,0,1,2,2,8,2,0,1,2,0,0,0,0,0,0,2,0,0,2,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,inorder/0,false,256,1,1,0,1,1,3,5,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,"delete/2[com.thealgorithms.datastructures.trees.BSTRecursiveGeneric.Node<T>,T]",false,91,3,1,0,1,9,3,35,1,3,2,3,0,0,1,6,0,0,1,2,13,0,3,0,0,0,27,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,add/1[T],false,240,2,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,main/1[java.lang.String[]],false,34,1,10,0,10,1,10,33,0,2,1,10,0,0,0,0,0,0,24,12,2,0,0,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,postorder/0,false,275,1,1,0,1,1,3,5,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,inOrder/1[com.thealgorithms.datastructures.trees.BSTRecursiveGeneric.Node<T>],false,182,3,1,0,1,4,2,12,1,0,1,2,0,0,0,3,0,0,1,0,0,1,1,0,0,0,11,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,preOrder/1[com.thealgorithms.datastructures.trees.BSTRecursiveGeneric.Node<T>],false,146,3,1,0,1,4,2,12,1,0,1,2,0,0,0,3,0,0,1,0,0,1,1,0,0,0,14,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,postOrder/1[com.thealgorithms.datastructures.trees.BSTRecursiveGeneric.Node<T>],false,164,3,1,0,1,4,2,12,1,0,1,2,0,0,0,3,0,0,1,0,0,1,1,0,0,0,11,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,"inOrderSort/2[com.thealgorithms.datastructures.trees.BSTRecursiveGeneric.Node<T>,java.util.List<T>]",false,202,3,1,0,1,4,2,12,1,0,2,2,0,0,0,3,0,0,0,0,0,0,1,0,0,0,25,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,BSTRecursiveGeneric/0,true,27,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric,"insert/2[com.thealgorithms.datastructures.trees.BSTRecursiveGeneric.Node<T>,T]",false,130,3,2,0,2,4,2,12,1,0,2,2,0,0,0,1,0,0,0,2,3,0,1,0,0,0,22,2,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GaussianTest.java,com.thealgorithms.maths.GaussianTest,passTest1/0,false,13,1,0,0,0,1,3,16,0,4,0,3,0,0,0,0,0,0,0,9,5,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\PalindromicPartitioning.java,com.thealgorithms.dynamicprogramming.PalindromicPartitioning,main/1[java.lang.String[]],false,85,1,1,0,1,1,4,9,0,3,1,4,1,1,0,0,0,0,3,0,3,1,0,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\PalindromicPartitioning.java,com.thealgorithms.dynamicprogramming.PalindromicPartitioning,minimalpartitions/1[java.lang.String],false,22,2,1,1,0,12,2,39,1,6,1,2,0,0,5,5,0,2,0,16,16,10,4,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,createLocation/1[int],false,69,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,bruteForce/1[com.thealgorithms.divideandconquer.ClosestPair.Location[]],false,268,2,2,1,1,8,3,37,1,7,1,3,1,1,2,2,0,5,0,16,17,8,5,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,"yQuickSort/3[com.thealgorithms.divideandconquer.ClosestPair.Location[],int,int]",false,161,2,4,2,2,2,2,7,0,1,3,2,2,1,0,0,0,0,0,2,1,2,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,main/1[java.lang.String[]],false,322,1,4,0,4,2,4,27,0,3,1,4,3,5,1,0,0,0,12,40,15,6,1,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,ClosestPair/1[int],true,46,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,setSecondCount/1[int],false,34,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,"xPartition/3[com.thealgorithms.divideandconquer.ClosestPair.Location[],int,int]",false,85,1,1,1,0,3,0,18,1,4,3,0,0,0,1,0,0,0,0,2,9,2,2,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,"xQuickSort/3[com.thealgorithms.divideandconquer.ClosestPair.Location[],int,int]",false,142,2,4,2,2,2,2,7,0,1,3,2,2,1,0,0,0,0,0,2,1,2,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,"buildLocation/2[double,double]",false,73,1,2,1,1,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,"yPartition/3[com.thealgorithms.divideandconquer.ClosestPair.Location[],int,int]",false,112,1,1,1,0,3,0,18,1,4,3,0,0,0,1,0,0,0,0,2,9,2,2,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,setMinNum/1[double],false,30,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\ClosestPair.java,com.thealgorithms.divideandconquer.ClosestPair,"closestPair/2[com.thealgorithms.divideandconquer.ClosestPair.Location[],int]",false,176,2,7,2,5,13,10,67,2,18,2,10,5,3,4,0,0,1,0,19,22,13,5,0,0,0,43,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,getAxisCoordinate/0,false,203,1,3,2,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,getFarChild/1[com.thealgorithms.datastructures.trees.KDTree.Point],false,192,2,2,1,1,2,1,4,2,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,getPoint/0,false,156,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,getNearChild/1[com.thealgorithms.datastructures.trees.KDTree.Point],false,179,2,3,2,1,2,1,4,2,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,"Node/2[com.thealgorithms.datastructures.trees.KDTree.Point,int]",true,151,1,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,getLeft/0,false,160,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,getAxis/0,false,168,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Node,getRight/0,false,164,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMinRecursion.java,com.thealgorithms.maths.FindMinRecursion,"min/3[int[],int,int]",false,37,2,3,2,1,2,2,9,2,3,3,2,1,0,0,1,0,1,0,2,3,3,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMinRecursion.java,com.thealgorithms.maths.FindMinRecursion,"min/2[int[],int]",false,57,2,3,2,1,2,2,3,1,0,2,2,1,0,0,1,0,0,0,4,0,2,0,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMinRecursion.java,com.thealgorithms.maths.FindMinRecursion,main/1[java.lang.String[]],false,11,2,2,0,2,4,7,10,0,4,1,7,2,1,1,2,0,0,0,6,5,3,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple$Node,Node/1[int],true,38,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.FirstFitCPU,"fitProcess/2[int[],int[]]",false,220,2,1,0,1,3,2,11,1,2,2,2,1,1,1,1,0,0,0,0,3,0,2,0,0,0,62,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.FirstFitCPU,"findFirstFit/2[int[],int]",false,195,1,1,1,0,3,0,8,2,1,2,0,0,0,1,0,0,0,0,1,1,0,2,0,0,0,36,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\AnyBaseToDecimal.java,com.thealgorithms.conversions.AnyBaseToDecimal,valOfChar/1[char],false,48,0,1,1,0,4,2,6,1,0,1,2,0,0,0,0,0,1,1,1,0,4,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\AnyBaseToDecimal.java,com.thealgorithms.conversions.AnyBaseToDecimal,"convertToDecimal/2[java.lang.String,int]",false,25,1,2,1,1,3,3,13,1,4,2,3,1,1,1,0,0,0,1,4,6,3,2,0,0,0,29,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\AnyBaseToDecimal.java,com.thealgorithms.conversions.AnyBaseToDecimal,main/1[java.lang.String[]],false,9,1,1,0,1,6,2,7,0,0,1,2,1,2,0,5,0,0,10,10,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,get/1[K],false,53,3,0,0,0,3,5,10,2,2,1,5,0,0,1,0,0,0,0,0,2,1,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,remove/1[K],false,64,2,0,0,0,3,6,13,0,3,1,6,0,0,1,0,0,0,0,0,4,1,2,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,containsKey/1[K],false,79,2,1,0,1,2,1,3,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,GenericHashMapUsingArrayList/0,true,12,1,0,0,0,2,1,7,0,1,0,1,0,0,1,0,0,0,0,3,3,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,"put/2[K,V]",false,20,3,2,0,2,4,7,15,1,2,2,7,0,0,1,0,0,0,0,0,3,2,2,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,reHash/0,false,39,1,1,0,1,4,3,13,0,2,0,3,0,0,3,0,0,0,0,3,4,1,2,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,size/0,false,83,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList,toString/0,false,88,1,0,0,0,3,3,14,1,1,0,3,0,0,2,0,0,0,4,0,1,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HammingDistance.java,com.thealgorithms.strings.HammingDistance,"calculateHammingDistance/2[java.lang.String,java.lang.String]",false,18,0,1,1,0,4,2,13,1,3,2,2,0,0,1,2,0,0,1,2,3,0,2,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph$Edge,"Edge/3[java.lang.String,java.lang.String,int]",true,64,0,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursiveGeneric.java,com.thealgorithms.datastructures.trees.BSTRecursiveGeneric$Node,Node/1[T],true,316,1,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,11,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$HeightStrategy,height/1[int],false,273,0,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$HeightStrategy,nodeHeight/1[int],false,274,0,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LowerBound.java,com.thealgorithms.searches.LowerBound,main/1[java.lang.String[]],false,31,1,2,0,2,3,10,12,0,8,1,10,0,0,0,0,0,0,2,5,8,3,0,0,0,1,27,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LowerBound.java,com.thealgorithms.searches.LowerBound,"find/2[T[],T]",false,78,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LowerBound.java,com.thealgorithms.searches.LowerBound,"search/4[T[],T,int,int]",false,96,2,3,2,1,4,2,16,4,2,4,2,1,0,0,1,0,1,0,4,2,3,1,0,0,0,26,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CircleLinkedList.java,com.thealgorithms.datastructures.lists.CircleLinkedList$Node,"Node/2[E,com.thealgorithms.datastructures.lists.CircleLinkedList.Node<E>]",true,10,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm,produceSubSkyLines/1[java.util.ArrayList<com.thealgorithms.divideandconquer.SkylineAlgorithm.Point>],false,47,2,4,1,3,7,7,30,3,6,1,7,2,1,1,2,0,0,0,10,6,1,3,0,0,0,61,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm,SkylineAlgorithm/0,true,20,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm,"produceFinalSkyLine/2[java.util.ArrayList<com.thealgorithms.divideandconquer.SkylineAlgorithm.Point>,java.util.ArrayList<com.thealgorithms.divideandconquer.SkylineAlgorithm.Point>]",false,98,1,1,1,0,9,4,25,1,4,2,4,0,0,3,2,0,0,0,8,6,3,3,0,0,0,49,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm,getPoints/0,false,27,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\KrishnamurthyNumber.java,com.thealgorithms.maths.KrishnamurthyNumber,main/1[java.lang.String[]],false,47,1,1,0,1,2,4,11,0,2,1,4,1,1,0,0,0,0,3,0,2,2,1,0,0,0,21,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\KrishnamurthyNumber.java,com.thealgorithms.maths.KrishnamurthyNumber,isKMurthy/1[int],false,14,0,1,1,0,5,0,23,3,4,1,0,0,0,2,2,0,0,0,7,7,4,3,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortRecursive.java,com.thealgorithms.sorts.App,main/1[java.lang.String[]],false,77,1,2,0,2,1,2,4,0,1,1,2,0,0,0,0,0,0,0,12,1,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT,findLog2/1[int],false,214,0,1,1,0,2,0,7,1,1,1,0,0,0,1,0,0,1,0,2,1,1,1,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT,"fftBitReversal/3[int,int,java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>]",false,227,2,2,1,1,3,2,10,1,2,3,2,1,1,1,0,0,0,0,1,2,0,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT,"inverseFFT/3[int,boolean,java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>]",false,243,1,2,1,1,3,4,9,1,2,3,4,0,0,1,0,0,0,0,1,2,0,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT,paddingPowerOfTwo/1[java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>],false,285,1,2,1,1,3,2,10,0,3,1,2,0,0,2,0,0,0,0,3,4,1,1,0,0,0,33,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT,"reverseBits/2[int,int]",false,269,0,1,1,0,4,0,9,1,2,2,0,0,0,1,1,0,3,0,6,3,3,2,0,0,0,39,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT,"fft/2[java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>,boolean]",false,186,2,9,1,8,5,12,23,1,11,2,12,4,2,3,0,0,0,0,12,16,10,3,0,0,0,79,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem$Skyline,"Skyline/2[int,int]",true,123,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\JosephusProblem.java,com.thealgorithms.maths.JosephusProblem,"findTheWinner/2[int,int]",false,26,1,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,1,0,1,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\JosephusProblem.java,com.thealgorithms.maths.JosephusProblem,"winner/2[int,int]",false,30,1,3,2,1,2,1,6,2,0,2,1,1,0,0,1,0,1,0,3,0,3,1,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LeastCommonMultipleTest.java,com.thealgorithms.maths.LeastCommonMultipleTest,testForFirst/0,false,12,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,3,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LeastCommonMultipleTest.java,com.thealgorithms.maths.LeastCommonMultipleTest,testForSecond/0,false,22,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,3,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\NewManShanksPrime.java,com.thealgorithms.dynamicprogramming.NewManShanksPrime,"nthManShanksPrime/2[int,int]",false,12,1,0,0,0,3,0,8,1,2,2,0,0,0,1,1,0,0,0,8,5,5,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CollatzConjectureTest.java,com.thealgorithms.maths.CollatzConjectureTest,setUp/0,false,14,2,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,8,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CollatzConjectureTest.java,com.thealgorithms.maths.CollatzConjectureTest,nextNumberFromEvenNumber/0,false,19,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CollatzConjectureTest.java,com.thealgorithms.maths.CollatzConjectureTest,collatzConjecture/0,false,29,1,0,0,0,1,3,4,0,1,0,3,0,0,0,0,0,0,0,15,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CollatzConjectureTest.java,com.thealgorithms.maths.CollatzConjectureTest,sequenceOfNotNaturalFirstNumber/0,false,50,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,2,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CollatzConjectureTest.java,com.thealgorithms.maths.CollatzConjectureTest,nextNumberFromOddNumber/0,false,24,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Polybius.java,com.thealgorithms.ciphers.Polybius,decrypt/1[java.lang.String],false,49,1,0,0,0,2,4,10,1,5,1,4,0,0,1,0,0,0,0,3,6,1,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Polybius.java,com.thealgorithms.ciphers.Polybius,encrypt/1[java.lang.String],false,39,2,1,0,1,2,5,9,1,3,1,5,1,1,1,0,0,0,0,0,3,0,1,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Polybius.java,com.thealgorithms.ciphers.Polybius,findLocationByCharacter/1[char],false,26,0,1,1,0,4,2,12,1,3,1,2,0,0,2,1,0,0,0,2,3,0,3,0,0,0,10,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\EulersFunction.java,com.thealgorithms.others.EulersFunction,main/1[java.lang.String[]],false,30,1,1,0,1,2,2,5,0,1,1,2,1,1,1,0,0,0,0,2,1,0,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\EulersFunction.java,com.thealgorithms.others.EulersFunction,getEuler/1[int],false,14,0,1,1,0,5,0,15,1,2,1,0,0,0,2,2,0,0,0,4,5,5,3,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AbsoluteValue.java,com.thealgorithms.maths.AbsoluteValue,getAbsValue/1[int],false,11,0,0,0,0,2,0,3,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,toString/0,false,109,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,2,0,0,1,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,hashCode/0,false,134,0,0,0,0,2,1,6,1,1,0,1,0,0,0,1,0,1,0,4,3,4,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,"HeapElement/2[int,java.lang.Object]",true,36,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,32,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,HeapElement/1[double],true,64,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,"HeapElement/2[double,java.lang.Object]",true,26,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,32,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,"HeapElement/2[java.lang.Double,java.lang.Object]",true,56,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,33,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,HeapElement/1[java.lang.Integer],true,80,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,getKey/0,false,104,0,6,6,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,equals/1[java.lang.Object],false,119,1,0,0,0,3,1,10,3,1,1,1,0,0,0,2,0,4,0,0,1,0,2,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,"HeapElement/2[java.lang.Integer,java.lang.Object]",true,46,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,33,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,HeapElement/1[java.lang.Double],true,88,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,HeapElement/1[int],true,72,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\HeapElement.java,com.thealgorithms.datastructures.heaps.HeapElement,getInfo/0,false,97,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\graphs\HamiltonianCycleTest.java,com.thealgorithms.datastructures.graphs.HamiltonianCycleTest,testFindHamiltonianCycleShouldReturnHamiltonianCycle/0,false,12,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,31,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\graphs\HamiltonianCycleTest.java,com.thealgorithms.datastructures.graphs.HamiltonianCycleTest,testFindHamiltonianCycleShouldReturnInfinityArray/0,false,29,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,31,2,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Intersection.java,com.thealgorithms.datastructures.hashmap.hashing.Intersection,"intersection/2[int[],int[]]",false,17,1,0,0,0,9,6,17,2,2,2,6,0,0,2,4,0,0,0,7,2,2,2,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Intersection.java,com.thealgorithms.datastructures.hashmap.hashing.Intersection,Intersection/0,true,37,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp$TrieNode,TrieNode/0,true,17,1,2,2,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\bloomfilter\BloomFilterTest.java,com.thealgorithms.datastructures.bloomfilter.BloomFilterTest,test2/0,false,19,2,0,0,0,1,3,7,0,1,0,3,0,0,0,0,0,0,4,2,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\bloomfilter\BloomFilterTest.java,com.thealgorithms.datastructures.bloomfilter.BloomFilterTest,test1/0,false,9,2,0,0,0,1,3,7,0,1,0,3,0,0,0,0,0,0,0,6,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\KMPSearchTest.java,com.thealgorithms.searches.KMPSearchTest,KMPSearchTest4/0,false,55,2,0,0,0,1,3,8,0,4,0,3,0,0,0,0,0,0,2,1,4,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\KMPSearchTest.java,com.thealgorithms.searches.KMPSearchTest,KMPSearchTestFront/0,false,22,2,0,0,0,1,3,8,0,4,0,3,0,0,0,0,0,0,2,1,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\KMPSearchTest.java,com.thealgorithms.searches.KMPSearchTest,KMPSearchTestMiddle/0,false,33,2,0,0,0,1,3,8,0,4,0,3,0,0,0,0,0,0,2,1,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\KMPSearchTest.java,com.thealgorithms.searches.KMPSearchTest,KMPSearchTestNotFound/0,false,44,2,0,0,0,1,3,8,0,4,0,3,0,0,0,0,0,0,2,1,4,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\KMPSearchTest.java,com.thealgorithms.searches.KMPSearchTest,KMPSearchTestLast/0,false,11,2,0,0,0,1,3,8,0,4,0,3,0,0,0,0,0,0,2,1,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CircleLinkedList.java,com.thealgorithms.datastructures.lists.CircleLinkedList,append/1[E],false,38,2,1,0,1,3,0,14,0,0,1,0,0,0,0,2,0,0,1,0,4,0,1,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CircleLinkedList.java,com.thealgorithms.datastructures.lists.CircleLinkedList,main/1[java.lang.String[]],false,97,1,3,0,3,1,3,13,0,1,1,3,1,1,0,0,0,0,0,5,1,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CircleLinkedList.java,com.thealgorithms.datastructures.lists.CircleLinkedList,getSize/0,false,32,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CircleLinkedList.java,com.thealgorithms.datastructures.lists.CircleLinkedList,CircleLinkedList/0,true,24,2,1,0,1,1,0,5,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CircleLinkedList.java,com.thealgorithms.datastructures.lists.CircleLinkedList,remove/1[int],false,70,2,1,1,0,5,0,18,1,4,1,0,0,0,1,1,0,0,1,2,8,0,1,0,0,0,21,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CircleLinkedList.java,com.thealgorithms.datastructures.lists.CircleLinkedList,toString/0,false,57,1,0,0,0,3,0,12,1,2,0,0,0,0,1,2,0,0,3,0,5,1,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\PostfixToInfix.java,com.thealgorithms.datastructures.stacks.PostfixToInfix,getPostfixToInfix/1[java.lang.String],false,77,1,3,1,2,5,12,30,2,8,1,12,2,2,1,0,0,0,2,2,9,0,2,0,0,0,23,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\PostfixToInfix.java,com.thealgorithms.datastructures.stacks.PostfixToInfix,isValidPostfixExpression/1[java.lang.String],false,34,1,2,1,1,10,3,24,6,4,1,3,1,1,1,3,0,1,0,11,6,2,3,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\PostfixToInfix.java,com.thealgorithms.datastructures.stacks.PostfixToInfix,isOperator/1[char],false,21,0,2,2,0,6,0,11,2,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\PostfixToInfix.java,com.thealgorithms.datastructures.stacks.PostfixToInfix,main/1[java.lang.String[]],false,121,1,1,0,1,1,2,7,0,0,1,2,1,3,0,0,0,0,10,0,0,0,0,0,0,0,14,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\HarshadNumberTest.java,com.thealgorithms.maths.HarshadNumberTest,harshadNumber/0,false,9,1,0,0,0,1,3,12,0,0,0,3,0,0,0,0,0,0,5,5,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DistanceFormula.java,com.thealgorithms.maths.DistanceFormula,"minkowskiDistance/3[double[],double[],int]",false,41,1,0,0,0,3,2,13,2,3,3,2,0,0,1,1,0,0,0,5,6,2,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DistanceFormula.java,com.thealgorithms.maths.DistanceFormula,"hammingDistance/2[int[],int[]]",false,27,1,0,0,0,3,1,10,2,2,2,1,0,0,1,1,0,0,0,3,3,1,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DistanceFormula.java,com.thealgorithms.maths.DistanceFormula,"euclideanDistance/4[double,double,double,double]",false,10,0,0,0,0,1,2,6,1,3,4,2,0,0,0,0,0,0,0,2,3,3,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DistanceFormula.java,com.thealgorithms.maths.DistanceFormula,"manhattanDistance/4[double,double,double,double]",false,22,0,0,0,0,1,1,4,1,1,4,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\ArrayLeftRotation.java,com.thealgorithms.others.ArrayLeftRotation,"rotateLeft/2[int[],int]",false,22,1,0,0,0,2,0,10,1,3,2,0,0,0,1,0,0,1,0,2,6,3,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\OctalToDecimal.java,com.thealgorithms.conversions.OctalToDecimal,main/1[java.lang.String[]],false,17,1,1,0,1,2,5,10,0,3,1,5,1,1,0,1,0,0,2,1,3,1,1,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\OctalToDecimal.java,com.thealgorithms.conversions.OctalToDecimal,convertOctalToDecimal/1[java.lang.String],false,34,0,1,1,0,2,2,10,2,1,1,2,0,0,0,0,1,0,1,2,1,0,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\sortOrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.sortOrderAgnosticBinarySearchTest,testAscending/0,false,10,1,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,7,4,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\sortOrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.sortOrderAgnosticBinarySearchTest,testDescending/0,false,19,1,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,7,4,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BubbleSortTest.java,com.thealgorithms.sorts.BubbleSortTest,bubbleSortSingleStringElementArray/0,false,32,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BubbleSortTest.java,com.thealgorithms.sorts.BubbleSortTest,bubbleSortIntegerArray/0,false,40,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,22,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BubbleSortTest.java,com.thealgorithms.sorts.BubbleSortTest,bubbleSortEmptyArray/0,false,16,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BubbleSortTest.java,com.thealgorithms.sorts.BubbleSortTest,bubbleSortStringArray/0,false,60,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,26,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BubbleSortTest.java,com.thealgorithms.sorts.BubbleSortTest,bubbleSortSingleIntegerElementArray/0,false,24,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\matrixTranspose.java,com.thealgorithms.misc.matrixTranspose,main/1[java.lang.String[]],false,23,1,0,0,0,7,3,29,0,6,1,3,0,0,6,0,0,0,9,6,11,2,2,0,0,0,20,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\WorstFitCPUTest.java,com.thealgorithms.others.WorstFitCPUTest,testFitForUseOfOneBlock/0,false,21,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\WorstFitCPUTest.java,com.thealgorithms.others.WorstFitCPUTest,testFitBadCase/0,false,71,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,17,4,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\WorstFitCPUTest.java,com.thealgorithms.others.WorstFitCPUTest,testFitForNoEmptyBlockCell/0,false,41,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\WorstFitCPUTest.java,com.thealgorithms.others.WorstFitCPUTest,testFitForSameInputDifferentQuery/0,false,51,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\WorstFitCPUTest.java,com.thealgorithms.others.WorstFitCPUTest,testFitForMoreBlocksNoFit/0,false,61,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,9,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\WorstFitCPUTest.java,com.thealgorithms.others.WorstFitCPUTest,testFitForEqualProcecesses/0,false,31,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FibonacciNumber.java,com.thealgorithms.maths.FibonacciNumber,isPerfectSquare/1[int],false,23,0,1,1,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FibonacciNumber.java,com.thealgorithms.maths.FibonacciNumber,isFibonacciNumber/1[int],false,37,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,1,0,4,0,4,0,0,0,0,23,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FibonacciNumber.java,com.thealgorithms.maths.FibonacciNumber,main/1[java.lang.String[]],false,8,1,1,0,1,1,1,7,0,0,1,1,1,2,0,0,0,0,0,5,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\PalindromeSinglyLinkedList.java,com.thealgorithms.misc.PalindromeSinglyLinkedList,main/1[java.lang.String[]],false,16,2,4,0,4,2,4,14,0,1,1,4,1,1,0,0,0,0,2,9,1,0,1,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\PalindromeSinglyLinkedList.java,com.thealgorithms.misc.PalindromeSinglyLinkedList,isPalindrome/1[com.thealgorithms.datastructures.lists.SinglyLinkedList],false,32,1,3,1,2,4,4,14,1,4,1,4,0,0,2,1,0,0,0,2,5,0,2,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue$Node,"Node/2[T,com.thealgorithms.datastructures.queues.LinkedQueue.Node<T>]",true,22,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue$Node,Node/0,true,14,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue$Node,Node/1[T],true,18,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\EditDistance.java,com.thealgorithms.dynamicprogramming.EditDistance,"editDistance/2[java.lang.String,java.lang.String]",false,91,2,1,0,1,1,2,4,1,1,2,2,1,1,0,0,0,0,0,2,1,2,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\EditDistance.java,com.thealgorithms.dynamicprogramming.EditDistance,"minDistance/2[java.lang.String,java.lang.String]",false,29,1,1,1,0,8,2,29,1,13,2,2,0,0,4,1,0,0,0,17,18,11,3,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\EditDistance.java,com.thealgorithms.dynamicprogramming.EditDistance,"editDistance/3[java.lang.String,java.lang.String,int[][]]",false,96,2,3,2,1,5,5,26,5,5,3,5,1,0,0,3,0,0,0,12,9,1,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\EditDistance.java,com.thealgorithms.dynamicprogramming.EditDistance,main/1[java.lang.String[]],false,70,1,1,0,1,1,4,11,0,4,1,4,1,1,0,0,0,0,5,0,4,1,0,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,get/1[int],false,44,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,xorTappingBits/0,false,52,0,2,2,0,2,1,7,1,1,0,1,0,0,1,0,0,0,0,0,2,0,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,toString/0,false,76,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,"initialize/2[java.util.BitSet,java.util.BitSet]",false,20,1,3,2,1,1,2,5,0,0,2,2,1,4,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,clock/0,false,36,1,3,1,2,1,2,3,1,0,0,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,rightShift/0,false,66,1,2,1,1,2,2,8,1,2,0,2,1,1,1,0,0,0,0,5,2,3,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,"LFSR/3[int,int,int[]]",true,12,1,1,1,0,1,0,6,0,0,3,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,getClockBit/0,false,40,0,2,2,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,"clock/2[java.util.BitSet,int]",false,26,1,3,1,2,2,3,6,0,2,2,3,2,3,1,0,0,0,0,2,2,1,1,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,pushBit/1[boolean],false,60,1,3,2,1,1,2,5,1,1,1,2,1,2,0,0,0,0,0,1,1,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\LFSR.java,com.thealgorithms.ciphers.a5.LFSR,getLastBit/0,false,48,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\BinaryToOctal.java,com.thealgorithms.conversions.BinaryToOctal,main/1[java.lang.String[]],false,17,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,2,0,2,1,0,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\BinaryToOctal.java,com.thealgorithms.conversions.BinaryToOctal,convertBinaryToOctal/1[int],false,31,0,1,1,0,3,0,16,1,5,1,0,0,0,2,1,0,0,1,10,11,4,2,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\CatalanNumberTest.java,com.thealgorithms.dynamicprogramming.CatalanNumberTest,testCatalanNumber/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LeonardoNumber.java,com.thealgorithms.maths.LeonardoNumber,main/1[java.lang.String[]],false,15,1,1,0,1,2,2,5,0,1,1,2,1,1,1,0,0,0,1,2,1,1,1,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LeonardoNumber.java,com.thealgorithms.maths.LeonardoNumber,leonardoNumber/1[int],false,5,1,3,2,1,4,1,9,3,0,1,1,1,0,0,2,0,1,0,8,0,3,1,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\HexaDecimalToDecimalTest.java,com.thealgorithms.conversions.HexaDecimalToDecimalTest,testhexaDecimalToDecimal/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\CharactersSame.java,com.thealgorithms.strings.CharactersSame,isAllCharactersSame/1[java.lang.String],false,22,0,2,2,0,3,2,8,2,2,1,2,0,0,1,1,0,0,0,2,2,0,2,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\CharactersSame.java,com.thealgorithms.strings.CharactersSame,main/1[java.lang.String[]],false,8,1,1,0,1,1,1,6,0,0,1,1,1,1,0,0,0,0,4,0,0,0,0,0,0,0,9,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake$Vector2,toString/0,false,210,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake$Vector2,rotate/1[double],false,256,1,2,1,1,1,2,8,1,5,1,2,0,0,0,0,0,0,0,1,5,8,0,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake$Vector2,"Vector2/2[double,double]",true,204,0,6,6,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake$Vector2,subtract/1[com.thealgorithms.others.KochSnowflake.Vector2],false,232,1,2,1,1,1,0,5,1,2,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake$Vector2,multiply/1[double],false,244,1,2,1,1,1,0,5,1,2,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake$Vector2,add/1[com.thealgorithms.others.KochSnowflake.Vector2],false,220,1,2,1,1,1,0,5,1,2,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative$Node,Node/1[int],true,305,0,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortRecursive.java,com.thealgorithms.sorts.MergeSortRecursive,merge/1[java.util.List<java.lang.Integer>],false,20,1,4,2,2,2,4,12,2,4,1,4,2,1,0,0,0,0,0,3,6,1,1,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortRecursive.java,com.thealgorithms.sorts.MergeSortRecursive,mergeSort/0,false,15,1,4,3,1,1,1,4,1,1,0,1,1,2,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortRecursive.java,com.thealgorithms.sorts.MergeSortRecursive,MergeSortRecursive/1[java.util.List<java.lang.Integer>],true,11,0,3,3,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortRecursive.java,com.thealgorithms.sorts.MergeSortRecursive,"sort/2[java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>]",false,41,1,4,2,2,6,5,31,5,2,2,5,1,0,0,0,0,0,0,8,2,0,1,2,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\CircularConvolutionFFT.java,com.thealgorithms.maths.CircularConvolutionFFT,"fftCircularConvolution/2[java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>,java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>]",false,44,3,3,0,3,2,7,13,1,3,2,7,1,1,1,0,0,0,0,1,3,0,1,0,0,0,36,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\CircularConvolutionFFT.java,com.thealgorithms.maths.CircularConvolutionFFT,"padding/2[java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>,int]",false,20,1,2,1,1,3,2,8,0,2,2,2,0,0,1,0,0,0,0,1,2,1,2,0,0,0,21,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap,HashMap/1[int],true,8,1,2,1,1,2,0,7,0,1,1,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap,deleteHash/1[int],false,30,2,3,1,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap,displayHashtable/0,false,36,1,2,1,1,2,3,6,0,1,0,3,0,0,1,0,0,0,1,1,1,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap,insertHash/1[int],false,25,2,3,1,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap,hashing/1[int],false,17,0,2,2,0,2,0,7,1,1,1,0,0,0,0,0,0,0,0,1,2,1,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\BinomialCoefficient.java,com.thealgorithms.maths.BinomialCoefficient,"binomialCoefficient/2[int,int]",false,26,1,2,1,1,4,1,9,3,0,2,1,1,0,0,2,0,1,0,6,0,4,1,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MagicSquare.java,com.thealgorithms.maths.MagicSquare,main/1[java.lang.String[]],false,9,1,0,0,0,9,4,35,0,8,1,4,0,0,3,2,0,7,5,18,13,18,3,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,volumeCube/1[double],false,12,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,12,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,"volumeCone/2[double,double]",false,66,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,9,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,"volumePyramid/2[double,double]",false,88,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,"volumeCuboid/3[double,double,double]",false,24,0,0,0,0,1,0,3,1,0,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,volumeSphere/1[double],false,34,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,2,0,2,0,0,0,0,9,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,"volumePrism/2[double,double]",false,77,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,volumeHemisphere/1[double],false,55,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,2,0,2,0,0,0,0,9,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Volume.java,com.thealgorithms.maths.Volume,"volumeCylinder/2[double,double]",false,45,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\SameTreesCheckTest.java,com.thealgorithms.datastructures.trees.SameTreesCheckTest,testBothRootsAreNull/0,false,13,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\SameTreesCheckTest.java,com.thealgorithms.datastructures.trees.SameTreesCheckTest,testSingleNodeTreesAreSame/0,false,24,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,2,2,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\SameTreesCheckTest.java,com.thealgorithms.datastructures.trees.SameTreesCheckTest,testTreesWithDifferentStructure/0,false,65,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,4,2,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\SameTreesCheckTest.java,com.thealgorithms.datastructures.trees.SameTreesCheckTest,testSameTreesFails/0,false,53,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,13,2,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\SameTreesCheckTest.java,com.thealgorithms.datastructures.trees.SameTreesCheckTest,testOneRootIsNull/0,false,18,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,1,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\SameTreesCheckTest.java,com.thealgorithms.datastructures.trees.SameTreesCheckTest,testSameTreesIsSuccessful/0,false,38,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,14,2,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaSphere/0,false,18,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaSquare/0,false,33,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaCylinder/0,false,28,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaCircle/0,false,53,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,surfaceAreaHemisphere/0,false,58,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,surfaceAreaCone/0,false,63,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testAllIllegalInput/0,false,68,2,0,0,0,1,13,3,0,0,0,13,0,0,0,0,0,0,0,34,0,0,0,0,0,36,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaCube/0,false,13,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaParallelogram/0,false,43,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaRectangle/0,false,23,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaTriangleRectangle/0,false,38,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AreaTest.java,com.thealgorithms.maths.AreaTest,testSurfaceAreaTrapezium/0,false,48,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\MergeSortRecursiveTest.java,com.thealgorithms.sorts.MergeSortRecursiveTest,testMergeSortRecursiveCase2/0,false,26,2,2,0,2,1,3,6,0,3,0,3,0,0,0,0,0,0,0,20,3,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\MergeSortRecursiveTest.java,com.thealgorithms.sorts.MergeSortRecursiveTest,testMergeSortRecursiveCase1/0,false,16,2,2,0,2,1,3,6,0,3,0,3,0,0,0,0,0,0,0,12,3,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\TopKWords.java,com.thealgorithms.others.TopKWords$CountWords,CountWords/1[java.lang.String],true,14,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\TopKWords.java,com.thealgorithms.others.TopKWords$CountWords,getDictionary/0,false,18,0,1,1,0,8,8,42,2,4,0,8,0,0,1,2,2,0,2,5,9,1,5,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\WordBoggle.java,com.thealgorithms.misc.WordBoggle,"boggleBoard/2[char[][],java.lang.String[]]",false,12,4,4,1,3,4,2,14,1,5,2,2,1,2,3,0,0,0,0,2,5,0,2,0,0,0,33,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\WordBoggle.java,com.thealgorithms.misc.WordBoggle,"getNeighbors/3[int,int,char[][]]",false,107,1,1,1,0,13,1,28,1,1,3,1,0,0,0,0,0,0,0,27,1,18,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\WordBoggle.java,com.thealgorithms.misc.WordBoggle,"explore/6[int,int,char[][],com.thealgorithms.misc.TrieNode,boolean[][],java.util.Set<java.lang.String>]",false,77,4,4,2,2,5,5,19,2,2,6,5,2,1,1,0,0,0,0,2,5,0,1,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\WordBoggle.java,com.thealgorithms.misc.WordBoggle,main/1[java.lang.String[]],false,27,2,1,0,1,1,3,4,0,1,1,3,1,3,0,0,0,1,17,0,1,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CountChar.java,com.thealgorithms.others.CountChar,CountCharacters/1[java.lang.String],false,12,0,0,0,0,1,2,3,1,0,1,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BucketSort.java,com.thealgorithms.sorts.BucketSort,main/1[java.lang.String[]],false,13,2,1,0,1,3,2,11,0,5,1,2,1,2,2,0,0,0,0,7,6,3,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BucketSort.java,com.thealgorithms.sorts.BucketSort,max/1[int[]],false,92,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,1,2,0,2,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BucketSort.java,com.thealgorithms.sorts.BucketSort,"hash/3[int,int,int]",false,82,0,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,23,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BucketSort.java,com.thealgorithms.sorts.BucketSort,min/1[int[]],false,108,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,1,2,0,2,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BucketSort.java,com.thealgorithms.sorts.BucketSort,bucketSort/1[int[]],false,35,2,9,6,3,6,7,23,1,7,1,7,3,1,5,0,0,0,0,3,8,2,2,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ThreeSumProblem.java,com.thealgorithms.misc.ThreeSumProblem,"TwoPointer/2[int[],int]",false,50,1,1,1,0,5,3,31,1,6,2,3,0,0,2,1,0,0,0,8,10,5,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ThreeSumProblem.java,com.thealgorithms.misc.ThreeSumProblem,"Hashmap/2[int[],int]",false,80,1,1,1,0,6,6,21,1,7,2,6,0,0,3,0,0,0,0,3,7,2,3,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ThreeSumProblem.java,com.thealgorithms.misc.ThreeSumProblem,main/1[java.lang.String[]],false,7,2,4,0,4,2,6,16,0,6,1,6,3,1,1,0,0,3,8,1,7,3,1,0,0,0,22,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ThreeSumProblem.java,com.thealgorithms.misc.ThreeSumProblem,"BruteForce/2[int[],int]",false,28,1,1,1,0,5,3,19,1,5,2,3,0,0,3,1,0,0,0,3,6,3,4,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CombSort.java,com.thealgorithms.sorts.CombSort,main/1[java.lang.String[]],false,65,2,3,0,3,1,3,7,0,2,1,3,0,0,0,0,0,0,1,18,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CombSort.java,com.thealgorithms.sorts.CombSort,nextGap/1[int],false,23,0,1,1,0,2,0,4,1,0,1,0,0,0,0,0,0,2,0,4,1,2,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CombSort.java,com.thealgorithms.sorts.CombSort,sort/1[T[]],false,36,3,3,0,3,5,3,15,1,4,1,3,1,1,2,1,0,0,0,2,7,3,3,0,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PiNilakantha.java,com.thealgorithms.maths.PiNilakantha,calculatePi/1[int],false,23,0,1,1,0,5,0,17,1,3,1,0,0,0,1,1,0,6,1,14,6,11,2,0,0,0,48,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PiNilakantha.java,com.thealgorithms.maths.PiNilakantha,main/1[java.lang.String[]],false,8,1,1,0,1,4,2,6,0,0,1,2,1,1,0,1,0,0,0,7,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\zigZagPattern\zigZagPatternTest.java,com.thealgorithms.strings.zigZagPattern.zigZagPatternTest,palindrome/0,false,9,2,1,0,1,1,2,6,0,2,0,2,0,0,0,0,0,0,4,2,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\HowManyTimesRotatedTest.java,com.thealgorithms.searches.HowManyTimesRotatedTest,testHowManyTimesRotated/0,false,10,2,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,0,12,2,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\ThreeSum.java,com.thealgorithms.others.ThreeSum,main/1[java.lang.String[]],false,21,1,0,0,0,6,4,27,0,8,1,4,0,0,3,1,0,0,3,4,9,5,3,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.AdjacencyList,AdjacencyList/0,true,21,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.AdjacencyList,"addEdge/2[E,E]",false,31,1,0,0,0,3,4,12,0,0,2,4,0,0,0,0,1,0,0,0,0,0,1,0,0,0,17,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.AdjacencyList,getVertices/0,false,54,1,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.AdjacencyList,getAdjacents/1[E],false,47,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.AdjacencyList,printGraph/0,false,61,0,0,0,0,3,4,9,0,0,0,4,0,0,2,0,0,0,2,0,0,2,2,0,0,0,9,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SwapSort.java,com.thealgorithms.sorts.SwapSort,main/1[java.lang.String[]],false,49,2,4,0,4,1,5,17,0,2,1,5,0,0,0,0,0,0,12,8,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SwapSort.java,com.thealgorithms.sorts.SwapSort,sort/1[T[]],false,15,2,1,0,1,4,1,16,1,4,1,1,1,1,1,1,0,0,0,3,6,1,2,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SwapSort.java,com.thealgorithms.sorts.SwapSort,"getSmallerElementCount/2[T[],int]",false,38,2,2,1,1,3,1,9,1,2,2,1,0,0,1,0,0,0,0,2,2,0,2,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\WiggleSort.java,com.thealgorithms.sorts.WiggleSort,"mapIndex/2[int,int]",false,23,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,3,0,3,0,3,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\WiggleSort.java,com.thealgorithms.sorts.WiggleSort,wiggleSort/1[T[]],false,56,2,2,1,1,7,6,21,1,3,1,6,1,2,1,4,0,1,3,9,3,5,2,0,0,0,37,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\WiggleSort.java,com.thealgorithms.sorts.WiggleSort,"triColorSort/2[T[],T]",false,37,3,3,1,2,4,3,20,0,4,2,3,1,1,1,0,0,0,0,5,4,1,2,0,0,0,27,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\WiggleSort.java,com.thealgorithms.sorts.WiggleSort,sort/1[T[]],false,19,2,1,0,1,1,1,3,1,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumSumPartition.java,com.thealgorithms.dynamicprogramming.MinimumSumPartition,getSum/1[int[]],false,62,1,1,1,0,2,0,7,1,1,1,0,0,0,1,0,0,0,0,1,2,0,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumSumPartition.java,com.thealgorithms.dynamicprogramming.MinimumSumPartition,"getMin/2[int[],int]",false,70,1,1,1,0,3,1,10,2,1,2,1,0,0,1,1,0,0,0,3,2,2,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumSumPartition.java,com.thealgorithms.dynamicprogramming.MinimumSumPartition,main/1[java.lang.String[]],false,84,2,1,0,1,4,1,5,0,0,1,1,1,2,0,3,0,0,0,15,0,0,0,0,0,0,7,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumSumPartition.java,com.thealgorithms.dynamicprogramming.MinimumSumPartition,subSet/1[int[]],false,20,3,3,1,2,9,2,32,1,10,1,2,2,1,5,1,0,0,0,17,16,10,3,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,findElements/0,false,135,0,1,1,0,3,3,8,1,3,0,3,0,0,1,0,0,0,0,2,4,0,1,0,0,0,8,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,sortTable/1[java.lang.Object[][]],false,147,1,4,2,2,5,3,15,1,5,1,3,2,1,3,0,0,0,0,10,5,1,3,0,0,0,11,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,"switchColumns/4[java.lang.Object[][],int,int,java.lang.Object[]]",false,189,0,1,1,0,2,0,6,0,1,4,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,abecedariumBuilder/1[int],false,201,0,1,1,0,2,2,7,0,2,1,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,26,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,"encrpyter/3[java.lang.String,java.lang.String,java.lang.String]",false,57,1,2,0,2,3,5,13,1,4,3,5,2,3,2,0,0,0,0,3,7,0,2,0,0,0,30,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,decrypter/0,false,79,0,1,1,0,3,3,9,1,2,0,3,0,0,2,0,0,0,1,1,2,0,2,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,showTable/0,false,209,0,1,1,0,3,2,8,0,0,0,2,0,0,2,0,0,0,1,0,0,1,2,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,"encrpyter/2[java.lang.String,java.lang.String]",false,29,1,4,1,3,3,5,13,1,4,2,5,3,3,2,0,0,0,0,3,6,0,2,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,tableBuilder/1[java.lang.String],false,96,2,4,2,2,4,4,18,1,5,1,4,2,1,2,0,0,0,0,5,8,1,3,0,0,0,43,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,"getColumn/3[java.lang.Object[][],int,int]",false,176,0,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,main/1[java.lang.String[]],false,218,1,3,0,3,1,4,10,0,2,1,4,3,4,0,0,0,0,7,0,2,3,0,0,0,0,22,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ColumnarTranspositionCipher.java,com.thealgorithms.ciphers.ColumnarTranspositionCipher,numberOfRows/1[java.lang.String],false,122,0,1,1,0,2,1,8,2,0,1,1,0,0,0,0,0,1,0,1,0,5,1,0,0,0,22,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,totalCuts/0,false,212,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,toBuckets/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode],false,288,2,3,1,2,3,4,17,1,2,1,4,2,1,2,2,0,0,0,2,9,3,2,0,0,0,20,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,deleteMin/0,false,68,2,5,1,4,7,4,32,2,2,0,4,2,3,1,4,0,3,0,2,9,0,2,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,delete/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode],false,165,2,3,0,3,1,3,4,0,0,1,3,2,7,0,0,0,0,0,1,0,1,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,insert/1[int],false,49,2,4,0,4,2,3,13,1,1,1,3,2,1,0,0,0,0,0,0,2,0,1,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,FibonacciHeap/0,true,17,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,empty/0,false,37,0,4,4,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,cascadingCuts/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode],false,233,2,7,2,5,4,5,15,2,1,1,5,2,2,0,0,0,0,0,0,1,0,2,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,meld/1[com.thealgorithms.datastructures.heaps.FibonacciHeap],false,116,2,3,0,3,3,3,14,1,0,1,3,2,1,0,0,0,0,0,0,3,0,1,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,"decreaseKey/2[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode,int]",false,176,2,6,1,5,3,5,14,2,2,2,5,3,3,0,0,0,0,0,0,3,1,1,0,0,0,26,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,fromBuckets/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode[]],false,312,1,3,1,2,5,2,21,1,2,1,2,0,0,1,2,0,0,0,2,7,0,4,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,findMin/0,false,106,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,cut/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode],false,253,2,4,2,2,4,2,24,0,0,1,2,1,1,0,2,0,0,0,0,8,0,2,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,successiveLink/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode],false,280,2,3,1,2,1,2,4,0,1,1,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,FibonacciHeap/1[int],true,27,1,1,0,1,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,potential/0,false,195,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,updateMin/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode],false,220,1,5,4,1,2,1,5,0,0,1,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,totalLinks/0,false,204,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,size/0,false,134,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,"link/2[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode,com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode]",false,337,1,3,1,2,3,2,17,1,1,2,2,0,0,0,1,0,0,0,0,5,0,1,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap,countersRep/0,false,142,3,2,0,2,3,4,13,2,2,0,4,2,1,1,1,0,0,0,2,3,2,1,0,0,0,37,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\LevenshteinDistanceTests.java,com.thealgorithms.dynamicprogramming.LevenshteinDistanceTests,"levenshteinDistanceTest/3[java.lang.String,java.lang.String,int]",false,12,2,0,0,0,1,2,4,0,1,3,2,0,0,0,0,0,0,4,0,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CombSortTest.java,com.thealgorithms.sorts.CombSortTest,combSortDoubleArray/0,false,71,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,20,3,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CombSortTest.java,com.thealgorithms.sorts.CombSortTest,combSortStringArray/0,false,33,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,20,0,3,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CombSortTest.java,com.thealgorithms.sorts.CombSortTest,combSortIntegerArray/0,false,63,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,20,3,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CombSortTest.java,com.thealgorithms.sorts.CombSortTest,combSortSingleStringElement/0,false,25,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CombSortTest.java,com.thealgorithms.sorts.CombSortTest,combSortEmptyArray/0,false,17,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToOctal.java,com.thealgorithms.conversions.DecimalToOctal,main/1[java.lang.String[]],false,17,0,0,0,0,2,5,14,0,6,1,5,0,0,1,1,0,0,2,6,8,3,1,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\ZigzagTraversal.java,com.thealgorithms.datastructures.trees.ZigzagTraversal,traverse/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,33,1,0,0,0,7,8,31,2,7,1,8,0,0,2,3,0,0,0,2,8,0,3,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToHexaDecimal.java,com.thealgorithms.conversions.DecimalToHexaDecimal,decToHex/1[int],false,29,0,1,1,0,2,4,10,1,3,1,4,0,0,1,0,0,0,0,2,4,1,1,0,0,0,19,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToHexaDecimal.java,com.thealgorithms.conversions.DecimalToHexaDecimal,main/1[java.lang.String[]],false,41,1,1,0,1,1,3,8,0,3,1,3,1,1,0,0,0,0,3,1,3,2,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMaxRecursion.java,com.thealgorithms.maths.FindMaxRecursion,main/1[java.lang.String[]],false,8,2,2,0,2,4,7,10,0,4,1,7,2,1,1,2,0,0,0,6,5,3,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMaxRecursion.java,com.thealgorithms.maths.FindMaxRecursion,"max/3[int[],int,int]",false,34,2,3,2,1,2,2,9,2,3,3,2,1,0,0,1,0,1,0,2,3,3,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMaxRecursion.java,com.thealgorithms.maths.FindMaxRecursion,"max/2[int[],int]",false,54,2,3,2,1,2,2,3,1,0,2,2,1,0,0,1,0,0,0,4,0,2,0,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HorspoolSearch.java,com.thealgorithms.strings.HorspoolSearch,"firstOccurrence/3[java.lang.String,java.lang.String,boolean]",false,99,1,5,2,3,5,5,22,2,4,3,5,3,1,2,1,0,2,0,8,7,7,3,0,0,0,53,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HorspoolSearch.java,com.thealgorithms.strings.HorspoolSearch,getLastComparisons/0,false,81,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HorspoolSearch.java,com.thealgorithms.strings.HorspoolSearch,getShiftValue/1[char],false,178,0,1,1,0,2,1,8,2,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,25,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HorspoolSearch.java,com.thealgorithms.strings.HorspoolSearch,calcShiftValues/1[java.lang.String],false,158,0,1,1,0,2,3,10,1,5,1,3,0,0,1,0,0,0,0,3,5,2,1,0,0,1,50,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HorspoolSearch.java,com.thealgorithms.strings.HorspoolSearch,"charEquals/3[char,char,boolean]",false,140,0,1,1,0,3,1,6,2,0,3,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,20,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HorspoolSearch.java,com.thealgorithms.strings.HorspoolSearch,"findFirst/2[java.lang.String,java.lang.String]",false,60,1,1,0,1,1,1,3,1,0,2,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,23,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\HorspoolSearch.java,com.thealgorithms.strings.HorspoolSearch,"findFirstInsensitive/2[java.lang.String,java.lang.String]",false,71,1,1,0,1,1,1,3,1,0,2,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MinValue.java,com.thealgorithms.maths.MinValue,"min/2[int,int]",false,31,0,1,1,0,2,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MinValue.java,com.thealgorithms.maths.MinValue,main/1[java.lang.String[]],false,10,1,1,0,1,2,3,8,0,4,1,3,1,1,1,1,0,0,0,6,4,2,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\StrandSortTest.java,com.thealgorithms.sorts.StrandSortTest,StrandSortDuplicateTest/0,false,27,3,1,0,1,2,5,9,0,4,0,5,0,0,1,0,0,0,0,11,5,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\StrandSortTest.java,com.thealgorithms.sorts.StrandSortTest,StrandSortNonDuplicateTest/0,false,13,3,1,0,1,2,5,9,0,4,0,5,0,0,1,0,0,0,0,11,5,0,1,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord$Edge,"Edge/3[int,int,int]",true,28,0,2,2,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,hashCode/0,false,154,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,toString/0,false,159,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,1,4,0,0,2,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,setGcd/1[int],false,141,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,getSolution/0,false,145,1,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,setSolution/1[com.thealgorithms.maths.LinearDiophantineEquationsSolver.Solution],false,149,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,equals/1[java.lang.Object],false,123,1,0,0,0,5,2,10,3,1,1,2,0,0,0,4,0,1,0,0,1,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,getGcd/0,false,137,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$GcdSolutionWrapper,"GcdSolutionWrapper/2[int,com.thealgorithms.maths.LinearDiophantineEquationsSolver.Solution]",true,117,1,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\queues\LinkedQueueTest.java,com.thealgorithms.datastructures.queues.LinkedQueueTest,testQue/0,false,10,4,0,0,0,3,5,12,0,4,0,5,0,0,1,1,0,0,0,9,3,0,2,0,0,1,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList$Node,"Node/2[T,int]",true,21,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NextFitTest.java,com.thealgorithms.others.NextFitCPUTest,testFitForUseOfOneBlock/0,false,21,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NextFitTest.java,com.thealgorithms.others.NextFitCPUTest,testFitForNoEmptyBlockCell/0,false,41,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NextFitTest.java,com.thealgorithms.others.NextFitCPUTest,testFitForSameInputDifferentQuery/0,false,51,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NextFitTest.java,com.thealgorithms.others.NextFitCPUTest,testFitForMoreBlocksNoFit/0,false,61,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,9,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NextFitTest.java,com.thealgorithms.others.NextFitCPUTest,testFitForEqualProcecesses/0,false,31,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\CollatzConjecture.java,com.thealgorithms.maths.CollatzConjecture,collatzConjecture/1[int],false,30,1,1,0,1,3,2,12,1,1,1,2,1,1,1,1,0,0,1,2,2,0,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\CollatzConjecture.java,com.thealgorithms.maths.CollatzConjecture,nextNumber/1[int],false,17,0,1,1,0,2,0,6,2,0,1,0,0,0,0,1,0,0,0,5,0,4,1,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\GenericRoot.java,com.thealgorithms.maths.GenericRoot,genericRoot/1[int],false,17,0,1,1,0,4,0,12,1,1,1,0,0,0,1,1,0,0,0,7,5,1,2,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\GenericRoot.java,com.thealgorithms.maths.GenericRoot,main/1[java.lang.String[]],false,8,1,1,0,1,1,2,8,0,4,1,2,1,1,0,0,0,0,4,2,4,2,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm$XComparator,"compare/2[com.thealgorithms.divideandconquer.SkylineAlgorithm.Point,com.thealgorithms.divideandconquer.SkylineAlgorithm.Point]",false,189,1,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestAlternatingSubsequence.java,com.thealgorithms.dynamicprogramming.LongestAlternatingSubsequence,main/1[java.lang.String[]],false,63,1,1,0,1,1,2,5,0,2,1,2,1,1,0,0,0,0,2,8,2,1,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestAlternatingSubsequence.java,com.thealgorithms.dynamicprogramming.LongestAlternatingSubsequence,"AlternatingLength/2[int[],int]",false,16,1,1,1,0,9,1,21,1,5,2,1,0,0,3,0,0,0,0,24,10,4,3,0,0,0,6,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CountSinglyLinkedListRecursion.java,com.thealgorithms.datastructures.lists.CountSinglyLinkedListRecursion,countRecursion/1[com.thealgorithms.datastructures.lists.Node],false,19,2,3,2,1,2,1,3,1,0,1,1,1,0,0,1,0,0,0,2,0,1,0,0,0,0,11,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CountSinglyLinkedListRecursion.java,com.thealgorithms.datastructures.lists.CountSinglyLinkedListRecursion,main/1[java.lang.String[]],false,5,2,3,0,3,3,2,7,0,2,1,2,1,2,1,1,0,0,0,3,2,0,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CountSinglyLinkedListRecursion.java,com.thealgorithms.datastructures.lists.CountSinglyLinkedListRecursion,count/0,false,27,2,3,1,2,1,2,3,1,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\BinaryExponentiation.java,com.thealgorithms.divideandconquer.BinaryExponentiation,"power/2[long,long]",false,28,0,0,0,0,4,0,11,1,2,2,0,0,0,1,1,0,1,0,5,5,2,2,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\BinaryExponentiation.java,com.thealgorithms.divideandconquer.BinaryExponentiation,"calculatePower/2[long,long]",false,16,1,2,1,1,3,1,10,3,1,2,1,1,0,0,2,0,0,0,5,1,4,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\FibbonaciSeries.java,com.thealgorithms.others.FibbonaciSeries,main/1[java.lang.String[]],false,20,0,0,0,0,2,3,12,0,5,1,3,0,0,1,0,0,0,0,2,7,1,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,"insertTail/2[int,com.thealgorithms.datastructures.lists.DoublyLinkedList]",false,217,2,6,4,2,2,1,14,0,1,2,1,0,0,0,0,0,0,0,0,7,0,1,0,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,deleteHead/0,false,273,1,2,2,0,2,0,12,1,1,0,0,0,0,0,1,0,0,0,0,4,0,1,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,clearList/0,false,419,0,1,1,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,deleteTail/0,false,291,1,3,3,0,2,0,12,1,1,0,0,0,0,0,1,0,0,0,0,4,0,1,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,deleteNode/1[com.thealgorithms.datastructures.lists.Link],false,364,2,2,0,2,3,2,13,0,0,1,2,2,1,0,2,0,0,0,0,2,0,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,reverse/0,false,393,1,1,1,0,2,0,14,0,5,0,0,0,0,1,1,0,0,0,0,10,0,1,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,"insertElementByIndex/3[int,int,com.thealgorithms.datastructures.lists.DoublyLinkedList]",false,241,3,4,1,3,5,2,25,0,3,3,2,2,1,1,2,0,0,2,2,8,1,3,0,0,0,32,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,"insertOrdered/2[int,com.thealgorithms.datastructures.lists.DoublyLinkedList]",false,339,3,4,1,3,5,2,20,0,2,2,2,2,1,1,3,0,0,0,0,7,0,1,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,"insertHead/2[int,com.thealgorithms.datastructures.lists.DoublyLinkedList]",false,200,2,5,3,2,2,1,12,0,1,2,1,0,0,0,0,0,0,0,0,5,0,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,removeDuplicates/1[com.thealgorithms.datastructures.lists.DoublyLinkedList],false,376,3,1,0,1,4,1,13,0,2,1,1,1,2,2,3,0,0,0,0,4,0,3,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.LinkOperations,delete/1[int],false,310,2,4,2,2,5,2,22,0,1,1,2,2,1,1,4,0,0,1,0,4,0,2,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\VigenereTest.java,com.thealgorithms.ciphers.VigenereTest,vigenereDecryptTest/0,false,25,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,3,0,3,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\VigenereTest.java,com.thealgorithms.ciphers.VigenereTest,vigenereEncryptTest/0,false,12,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,3,0,3,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LFUCache.java,com.thealgorithms.datastructures.caches.LFUCache,"addNodeWithUpdatedFrequency/1[com.thealgorithms.datastructures.caches.LFUCache<K,V>.Node]",false,90,1,0,0,0,7,0,36,0,1,1,0,0,0,1,5,0,0,0,0,15,0,4,0,0,0,23,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LFUCache.java,com.thealgorithms.datastructures.caches.LFUCache,"removeNode/1[com.thealgorithms.datastructures.caches.LFUCache<K,V>.Node]",false,129,1,0,0,0,3,0,14,0,0,1,0,0,0,0,2,0,0,0,0,4,0,1,0,0,0,16,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LFUCache.java,com.thealgorithms.datastructures.caches.LFUCache,LFUCache/0,true,33,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LFUCache.java,com.thealgorithms.datastructures.caches.LFUCache,"put/2[K,V]",false,67,3,3,0,3,3,7,18,0,2,2,7,0,0,0,0,0,0,0,2,4,0,2,0,0,0,26,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LFUCache.java,com.thealgorithms.datastructures.caches.LFUCache,LFUCache/1[java.lang.Integer],true,37,2,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LFUCache.java,com.thealgorithms.datastructures.caches.LFUCache,get/1[K],false,48,3,2,0,2,2,3,10,2,1,1,3,0,0,0,1,0,0,0,1,2,0,1,0,0,0,31,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PollardRho.java,com.thealgorithms.maths.PollardRho,"g/2[int,int]",false,46,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,2,0,1,0,3,0,0,0,0,25,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PollardRho.java,com.thealgorithms.maths.PollardRho,pollardRho/1[int],false,57,2,2,0,2,3,3,12,1,3,1,3,1,1,1,2,0,0,1,4,6,1,1,0,0,0,31,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\TrinomialTriangle.java,com.thealgorithms.maths.TrinomialTriangle,printTrinomial/1[int],false,28,1,2,1,1,4,3,11,0,3,1,3,1,1,3,0,0,0,2,3,3,2,2,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\TrinomialTriangle.java,com.thealgorithms.maths.TrinomialTriangle,"TrinomialValue/2[int,int]",false,12,1,3,2,1,5,1,9,3,0,2,1,1,0,0,2,0,1,0,9,0,6,1,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\TrinomialTriangle.java,com.thealgorithms.maths.TrinomialTriangle,main/1[java.lang.String[]],false,42,1,1,0,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,1,1,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\EmptyHeapException.java,com.thealgorithms.datastructures.heaps.EmptyHeapException,EmptyHeapException/1[java.lang.String],true,10,0,4,4,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\CatalanNumber.java,com.thealgorithms.dynamicprogramming.CatalanNumber,main/1[java.lang.String[]],false,47,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,2,0,2,1,0,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\CatalanNumber.java,com.thealgorithms.dynamicprogramming.CatalanNumber,findNthCatalan/1[int],false,24,1,1,1,0,3,0,12,1,3,1,0,0,0,2,0,0,0,0,9,7,3,2,0,0,0,27,8,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\TwinPrimeTest.java,com.thealgorithms.maths.TwinPrimeTest,shouldReturn5/0,false,23,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\TwinPrimeTest.java,com.thealgorithms.maths.TwinPrimeTest,shouldReturn7/0,false,10,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\TwinPrimeTest.java,com.thealgorithms.maths.TwinPrimeTest,shouldReturnNegative1/0,false,36,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\TwinPrimeTest.java,com.thealgorithms.maths.TwinPrimeTest,shouldReturn19/0,false,49,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CountingSort.java,com.thealgorithms.sorts.CountingSort,sort/1[java.util.List<T>],false,31,1,1,1,0,3,8,11,1,4,1,8,0,0,2,0,0,0,0,3,3,1,2,0,0,1,26,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CountingSort.java,com.thealgorithms.sorts.CountingSort,streamSort/1[java.util.List<T>],false,55,1,0,0,0,1,12,3,1,6,1,12,0,0,0,0,0,0,0,2,0,1,0,0,0,5,23,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CountingSort.java,com.thealgorithms.sorts.CountingSort,sort/1[T[]],false,18,2,1,0,1,1,3,3,1,0,1,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CountingSort.java,com.thealgorithms.sorts.CountingSort,main/1[java.lang.String[]],false,70,2,6,0,6,1,11,18,0,3,1,11,0,0,0,0,0,0,16,12,3,0,0,0,0,0,14,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,(initializer 1),false,33,2,1,0,1,2,0,7,0,1,0,0,0,0,1,0,0,0,0,4,4,2,1,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,removeByIndex/1[int],false,100,2,2,0,2,3,2,6,0,1,1,2,0,0,0,0,0,0,0,1,1,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,remove/1[T],false,107,2,1,0,1,4,3,24,0,5,1,3,0,0,1,1,0,0,0,1,9,0,3,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,CursorLinkedList/0,true,42,0,0,0,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,indexOf/1[T],false,63,2,0,0,0,3,2,11,2,2,1,2,0,0,1,0,0,0,0,2,3,0,2,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,printList/0,false,48,1,0,0,0,3,2,10,0,2,0,2,0,0,1,2,0,0,0,2,3,0,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,free/1[int],false,137,1,0,0,0,1,0,7,0,2,1,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,append/1[T],false,145,2,1,0,1,3,2,15,0,2,1,2,0,0,1,2,0,0,0,3,7,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,alloc/0,false,168,0,0,0,0,2,0,10,1,2,0,0,0,0,0,1,0,0,0,2,4,0,1,0,0,0,14,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CursorLinkedList.java,com.thealgorithms.datastructures.lists.CursorLinkedList,get/1[int],false,82,1,0,0,0,5,0,15,2,3,1,0,0,0,1,2,0,0,0,3,4,0,3,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AffineCipher.java,com.thealgorithms.ciphers.AffineCipher,main/1[java.lang.String[]],false,62,1,2,0,2,1,4,6,0,2,1,4,2,1,0,0,0,0,3,0,2,2,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AffineCipher.java,com.thealgorithms.ciphers.AffineCipher,decryptCipher/1[java.lang.String],false,27,0,1,1,0,5,2,20,1,5,1,2,0,0,2,2,0,6,1,8,9,8,2,0,0,0,9,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AffineCipher.java,com.thealgorithms.ciphers.AffineCipher,encryptMessage/1[char[]],false,9,1,1,1,0,3,0,12,1,2,1,0,0,0,1,1,0,5,1,2,4,6,2,0,0,0,7,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BogoSort.java,com.thealgorithms.sorts.BogoSort,sort/1[T[]],false,32,2,2,0,2,2,2,6,1,0,1,2,2,1,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BogoSort.java,com.thealgorithms.sorts.BogoSort,nextPermutation/1[T[]],false,23,2,2,1,1,2,2,7,0,3,1,2,0,0,1,0,0,0,0,1,3,2,1,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BogoSort.java,com.thealgorithms.sorts.BogoSort,main/1[java.lang.String[]],false,40,2,4,0,4,1,3,7,0,3,1,3,0,0,0,0,0,0,5,9,3,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BogoSort.java,com.thealgorithms.sorts.BogoSort,isSorted/1[T[]],false,13,2,2,1,1,3,1,8,2,1,1,1,0,0,1,0,0,0,0,3,1,2,2,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.Node,Node/1[int],true,38,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Pangram.java,com.thealgorithms.strings.Pangram,isPangram2/1[java.lang.String],false,46,0,1,1,0,4,3,12,3,1,1,3,0,0,1,1,0,0,0,2,2,0,2,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Pangram.java,com.thealgorithms.strings.Pangram,isPangram/1[java.lang.String],false,24,1,2,2,0,7,2,15,2,2,1,2,0,0,2,0,0,1,0,2,3,1,2,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Pangram.java,com.thealgorithms.strings.Pangram,main/1[java.lang.String[]],false,11,1,1,0,1,1,1,6,0,0,1,1,1,1,0,0,0,0,4,0,0,0,0,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PalindromeNumber.java,com.thealgorithms.maths.PalindromeNumber,isPalindrome/1[int],false,18,0,1,1,0,4,0,13,1,3,1,0,0,0,1,2,0,0,1,6,5,4,1,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PalindromeNumber.java,com.thealgorithms.maths.PalindromeNumber,main/1[java.lang.String[]],false,5,1,1,0,1,1,1,5,0,0,1,1,1,1,0,0,0,0,0,3,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DualPivotQuickSortTest.java,com.thealgorithms.sorts.DualPivotQuickSortTest,quickSortWithIntegerArrayShouldPass/0,false,32,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,12,3,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DualPivotQuickSortTest.java,com.thealgorithms.sorts.DualPivotQuickSortTest,quickSortForArrayWithNegativeValuesShouldPass/0,false,40,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,12,3,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DualPivotQuickSortTest.java,com.thealgorithms.sorts.DualPivotQuickSortTest,quickSortSingleValueArrayShouldPass/0,false,24,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DualPivotQuickSortTest.java,com.thealgorithms.sorts.DualPivotQuickSortTest,quickSortForArrayWithDuplicateValuesShouldPass/0,false,48,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,12,3,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DualPivotQuickSortTest.java,com.thealgorithms.sorts.DualPivotQuickSortTest,quickSortWithStringArrayShouldPass/0,false,56,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,12,0,3,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DualPivotQuickSortTest.java,com.thealgorithms.sorts.DualPivotQuickSortTest,quickSortEmptyArrayShouldPass/0,false,16,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\SubsetCountTest.java,com.thealgorithms.dynamicprogramming.SubsetCountTest,singleSubsetSO/0,false,26,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\SubsetCountTest.java,com.thealgorithms.dynamicprogramming.SubsetCountTest,hasMultipleSubsetSO/0,false,21,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\SubsetCountTest.java,com.thealgorithms.dynamicprogramming.SubsetCountTest,singleElementSubset/0,false,15,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\SubsetCountTest.java,com.thealgorithms.dynamicprogramming.SubsetCountTest,hasMultipleSubset/0,false,10,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\LowerTest.java,com.thealgorithms.strings.LowerTest,toLowerCase/0,false,9,2,1,0,1,1,2,8,0,3,0,2,0,0,0,0,0,0,6,0,3,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\PermutationTest.java,com.thealgorithms.backtracking.PermutationTest,testMultipleElements/0,false,24,1,0,0,0,1,4,5,0,1,0,4,0,0,0,0,0,0,0,8,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\PermutationTest.java,com.thealgorithms.backtracking.PermutationTest,testNoElement/0,false,12,1,0,0,0,1,3,4,0,1,0,3,0,0,0,0,0,0,0,2,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\PermutationTest.java,com.thealgorithms.backtracking.PermutationTest,testSingleElement/0,false,18,1,0,0,0,1,3,4,0,1,0,3,0,0,0,0,0,0,0,4,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardScoreTest.java,com.thealgorithms.maths.StandardScoreTest,test4/0,false,24,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardScoreTest.java,com.thealgorithms.maths.StandardScoreTest,test3/0,false,19,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardScoreTest.java,com.thealgorithms.maths.StandardScoreTest,test2/0,false,14,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardScoreTest.java,com.thealgorithms.maths.StandardScoreTest,test1/0,false,9,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\PalindromeTest.java,com.thealgorithms.strings.PalindromeTest,palindrome/0,false,9,2,3,0,3,3,5,10,0,2,0,5,0,0,2,0,0,0,8,0,2,0,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\ReverseStackUsingRecursion.java,com.thealgorithms.others.ReverseStackUsingRecursion,reverseUsingRecursion/1[java.util.Stack<java.lang.Integer>],false,35,1,4,2,2,2,5,9,1,1,1,5,2,1,0,0,0,0,0,0,1,0,1,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\ReverseStackUsingRecursion.java,com.thealgorithms.others.ReverseStackUsingRecursion,insertAtEnd/1[int],false,48,1,3,2,1,2,5,11,0,1,1,5,1,0,0,0,0,0,0,0,1,0,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\ReverseStackUsingRecursion.java,com.thealgorithms.others.ReverseStackUsingRecursion,main/1[java.lang.String[]],false,12,1,1,0,1,4,7,14,0,2,1,7,1,2,3,0,0,0,2,4,2,0,1,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PythagoreanTriple.java,com.thealgorithms.maths.PythagoreanTriple,main/1[java.lang.String[]],false,8,1,1,0,1,1,1,8,0,0,1,1,1,1,0,0,0,0,0,18,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PythagoreanTriple.java,com.thealgorithms.maths.PythagoreanTriple,"isPythagTriple/3[int,int,int]",false,27,0,1,1,0,4,0,8,2,0,3,0,0,0,0,1,0,3,0,3,0,4,1,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.LinkedListStack,push/1[int],false,76,1,2,1,1,1,0,7,1,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.LinkedListStack,peek/0,false,108,0,1,1,0,2,0,6,1,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.LinkedListStack,LinkedListStack/0,true,65,0,1,1,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.LinkedListStack,pop/0,false,90,1,1,1,0,2,0,11,1,2,0,0,0,0,0,1,0,0,1,1,4,0,1,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.LinkedListStack,toString/0,false,116,1,0,0,0,2,5,9,1,2,0,5,0,0,1,1,0,0,2,1,3,1,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.LinkedListStack,getSize/0,false,142,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.LinkedListStack,isEmpty/0,false,133,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\MergeSortedSinglyLinkedList.java,com.thealgorithms.datastructures.lists.MergeSortedSinglyLinkedList,main/1[java.lang.String[]],false,5,2,4,0,4,2,4,11,0,3,1,4,1,1,1,0,0,0,3,4,4,1,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\MergeSortedSinglyLinkedList.java,com.thealgorithms.datastructures.lists.MergeSortedSinglyLinkedList,"merge/2[com.thealgorithms.datastructures.lists.SinglyLinkedList,com.thealgorithms.datastructures.lists.SinglyLinkedList]",false,30,2,5,1,4,6,2,25,1,5,2,2,0,0,1,4,0,0,0,0,12,1,2,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\ConvolutionFFT.java,com.thealgorithms.maths.ConvolutionFFT,"convolutionFFT/2[java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>,java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>]",false,48,3,4,1,3,2,8,14,1,3,2,8,1,1,1,0,0,0,0,2,3,2,1,0,0,0,51,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\ConvolutionFFT.java,com.thealgorithms.maths.ConvolutionFFT,"padding/2[java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>,int]",false,20,1,2,1,1,3,2,8,0,2,2,2,0,0,1,0,0,0,0,1,2,1,2,0,0,0,21,10,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CheckTreeIsSymmetricTest.java,com.thealgorithms.datastructures.trees.CheckTreeIsSymmetricTest,testRootNull/0,false,14,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CheckTreeIsSymmetricTest.java,com.thealgorithms.datastructures.trees.CheckTreeIsSymmetricTest,testSingleNodeTree/0,false,19,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,1,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CheckTreeIsSymmetricTest.java,com.thealgorithms.datastructures.trees.CheckTreeIsSymmetricTest,testSymmetricTree/0,false,25,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,7,1,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CheckTreeIsSymmetricTest.java,com.thealgorithms.datastructures.trees.CheckTreeIsSymmetricTest,testNonSymmetricTree/0,false,31,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,7,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,VectorCrossProduct/0,true,49,0,1,1,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,"VectorCrossProduct/3[int,int,int]",true,62,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,16,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,crossProduct/1[com.thealgorithms.maths.VectorCrossProduct],false,93,1,2,1,1,1,0,7,1,1,1,0,0,0,0,0,0,7,0,0,4,9,0,0,0,0,18,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,test/0,false,112,1,5,1,4,1,4,8,0,4,0,4,3,1,0,0,0,0,1,6,4,1,0,0,0,0,11,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,dotProduct/1[com.thealgorithms.maths.VectorCrossProduct],false,83,1,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,18,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,magnitude/0,false,73,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,5,0,0,0,0,8,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,displayVector/0,false,104,0,1,1,0,1,1,3,0,0,0,1,0,0,0,0,0,0,3,0,0,1,0,0,0,0,7,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VectorCrossProduct.java,com.thealgorithms.maths.VectorCrossProduct,main/1[java.lang.String[]],false,108,1,1,0,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\BlowfishTest.java,com.thealgorithms.ciphers.BlowfishTest,testDecrypt/0,false,26,1,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,3,0,4,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\BlowfishTest.java,com.thealgorithms.ciphers.BlowfishTest,testEncrypt/0,false,12,1,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,3,0,4,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\JumpSearch.java,com.thealgorithms.searches.JumpSearch,main/1[java.lang.String[]],false,7,1,2,0,2,4,1,9,0,3,1,1,0,0,1,3,0,0,0,16,3,0,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\JumpSearch.java,com.thealgorithms.searches.JumpSearch,"find/2[T[],T]",false,25,1,0,0,0,5,3,14,2,4,2,3,0,0,2,1,0,0,0,4,5,4,2,0,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\IterativeTernarySearch.java,com.thealgorithms.searches.IterativeTernarySearch,"find/2[T[],T]",false,29,1,0,0,0,5,1,23,3,6,2,1,0,0,1,2,0,2,0,10,8,9,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\IterativeTernarySearch.java,com.thealgorithms.searches.IterativeTernarySearch,main/1[java.lang.String[]],false,56,1,2,0,2,2,9,12,0,8,1,9,0,0,0,1,0,0,2,3,8,1,0,0,0,1,31,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RootPrecision.java,com.thealgorithms.others.RootPrecision,"squareRoot/2[int,int]",false,21,0,1,1,0,1,1,8,1,3,2,1,0,0,0,0,0,0,0,2,4,2,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RootPrecision.java,com.thealgorithms.others.RootPrecision,main/1[java.lang.String[]],false,7,1,1,0,1,1,4,7,0,3,1,4,1,1,0,0,0,0,0,0,3,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kruskal.java,com.thealgorithms.datastructures.graphs.Kruskal$Edge,"Edge/3[int,int,int]",true,26,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSort.java,com.thealgorithms.sorts.MergeSort,"merge/4[T[],int,int,int]",false,53,2,2,1,1,5,2,18,0,3,4,2,0,0,1,0,0,0,1,2,7,3,2,0,0,0,25,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSort.java,com.thealgorithms.sorts.MergeSort,"doSort/3[T[],int,int]",false,34,2,4,2,2,2,2,8,0,1,3,2,2,1,0,0,0,1,0,2,1,3,1,0,0,0,15,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSort.java,com.thealgorithms.sorts.MergeSort,sort/1[T[]],false,23,2,1,0,1,1,1,5,1,0,1,1,1,2,0,0,0,0,0,2,1,1,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CRCAlgorithmTest.java,com.thealgorithms.others.CRCAlgorithmTest,test2/0,false,21,2,0,0,0,1,4,6,0,1,0,4,0,0,0,0,0,0,1,3,1,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CRCAlgorithmTest.java,com.thealgorithms.others.CRCAlgorithmTest,test1/0,false,11,2,0,0,0,1,4,6,0,1,0,4,0,0,0,0,0,0,1,3,1,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\Utils.java,com.thealgorithms.ciphers.a5.Utils,"increment/2[java.util.BitSet,int]",false,11,0,1,1,0,4,2,11,2,1,2,2,0,0,1,0,0,0,0,3,1,1,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\SearchInARowAndColWiseSortedMatrix.java,com.thealgorithms.searches.SearchInARowAndColWiseSortedMatrix,"search/2[int[][],int]",false,14,1,0,0,0,5,0,20,2,4,2,0,0,0,1,1,0,0,0,7,6,1,2,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ValidBSTOrNotTest.java,com.thealgorithms.datastructures.trees.ValidBSTOrNotTest,testRootNull/0,false,13,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ValidBSTOrNotTest.java,com.thealgorithms.datastructures.trees.ValidBSTOrNotTest,testBinaryTreeIsNotBST/0,false,57,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,7,1,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ValidBSTOrNotTest.java,com.thealgorithms.datastructures.trees.ValidBSTOrNotTest,testOneNode/0,false,18,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ValidBSTOrNotTest.java,com.thealgorithms.datastructures.trees.ValidBSTOrNotTest,testBinaryTreeWithDuplicatedNodesIsNotBST/0,false,44,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,7,1,0,0,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ValidBSTOrNotTest.java,com.thealgorithms.datastructures.trees.ValidBSTOrNotTest,testBinaryTreeIsBST/0,false,31,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,7,1,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag,isEmpty/0,false,33,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag,contains/1[Element],false,61,2,1,0,1,3,4,9,2,1,1,4,0,0,1,0,0,0,0,0,1,0,2,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag,iterator/0,false,75,2,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag,main/1[java.lang.String[]],false,113,1,4,0,4,2,5,13,0,1,1,5,0,0,1,0,0,0,6,0,1,1,1,0,0,0,8,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag,Bag/0,true,25,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag,size/0,false,40,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag,add/1[Element],false,47,2,1,0,1,1,0,7,0,1,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\ConnectedComponent.java,com.thealgorithms.datastructures.graphs.ConnectedComponent,main/1[java.lang.String[]],false,112,1,6,0,6,1,5,22,0,2,1,5,0,0,0,0,0,0,2,14,2,2,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\PolybiusTest.java,com.thealgorithms.ciphers.PolybiusTest,testEncrypt/0,false,10,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\PolybiusTest.java,com.thealgorithms.ciphers.PolybiusTest,testIsTextTheSameAfterEncryptionAndDecryption/0,false,34,1,0,0,0,1,3,6,0,3,0,3,0,0,0,0,0,0,1,0,3,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\PolybiusTest.java,com.thealgorithms.ciphers.PolybiusTest,testDecrypt/0,false,22,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\nearestRightKey.java,com.thealgorithms.datastructures.trees.NRKTree,"NRKTree/3[com.thealgorithms.datastructures.trees.NRKTree,com.thealgorithms.datastructures.trees.NRKTree,int]",true,61,1,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\nearestRightKey.java,com.thealgorithms.datastructures.trees.NRKTree,"insertKey/2[com.thealgorithms.datastructures.trees.NRKTree,int]",false,67,1,4,2,2,4,1,12,2,0,2,1,1,0,0,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\nearestRightKey.java,com.thealgorithms.datastructures.trees.NRKTree,NRKTree/1[int],true,55,0,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\ValidBSTOrNot.java,com.thealgorithms.datastructures.trees.ValidBSTOrNot,isBST/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,12,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\ValidBSTOrNot.java,com.thealgorithms.datastructures.trees.ValidBSTOrNot,"isBSTUtil/3[com.thealgorithms.datastructures.trees.BinaryTree.Node,int,int]",false,16,2,3,2,1,4,1,9,3,0,3,1,1,0,0,1,0,1,0,2,0,2,1,0,0,0,11,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,getParent/0,false,66,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,setParent/1[com.thealgorithms.devutils.nodes.TreeNode<E>],false,70,2,1,0,1,1,1,4,0,0,1,1,0,0,0,0,0,0,0,1,2,1,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,isLeafNode/0,false,54,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1025,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,isRootNode/0,false,62,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,getDepth/0,false,75,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,"TreeNode/2[E,com.thealgorithms.devutils.nodes.TreeNode<E>]",true,48,2,1,0,1,1,1,5,0,0,2,1,0,0,0,0,0,0,0,1,2,1,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,TreeNode/1[E],true,37,1,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\TreeNode.java,com.thealgorithms.devutils.nodes.TreeNode,TreeNode/0,true,26,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,4,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\CalculateMaxOfMin.java,com.thealgorithms.datastructures.stacks.CalculateMaxOfMin,calculateMaxOfMin/1[int[]],false,12,1,0,0,0,3,3,22,1,9,1,3,0,0,2,1,0,0,0,9,13,5,2,0,0,0,16,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\MazeRecursionTest.java,com.thealgorithms.backtracking.MazeRecursionTest,testMaze/0,false,14,2,0,0,0,5,3,25,0,8,0,3,0,0,4,0,0,0,0,140,15,0,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TreeSort.java,com.thealgorithms.sorts.TreeSort,doTreeSortList/1[java.util.List<T>],false,56,2,1,1,0,2,2,7,1,1,1,2,0,0,1,0,0,0,0,0,1,0,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TreeSort.java,com.thealgorithms.sorts.TreeSort,doTreeSortArray/1[T[]],false,32,2,1,1,0,3,2,12,1,3,1,2,0,0,2,0,0,0,0,1,4,0,1,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TreeSort.java,com.thealgorithms.sorts.TreeSort,main/1[java.lang.String[]],false,69,2,7,0,7,1,12,34,0,5,1,12,0,0,0,0,0,0,36,16,9,0,0,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TreeSort.java,com.thealgorithms.sorts.TreeSort,sort/1[java.util.List<T>],false,28,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TreeSort.java,com.thealgorithms.sorts.TreeSort,sort/1[T[]],false,23,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree$Node,Node/1[int],true,50,0,4,4,0,1,0,6,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\QuickSelect.java,com.thealgorithms.searches.QuickSelect,"selectIndex/4[java.util.List<T>,int,int,int]",false,60,2,4,2,2,5,2,16,2,1,4,2,2,2,1,2,0,0,0,2,4,2,2,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\QuickSelect.java,com.thealgorithms.searches.QuickSelect,"pivot/3[java.util.List<T>,int,int]",false,111,2,3,1,2,4,3,17,2,6,3,3,2,2,1,0,0,3,0,7,8,12,2,0,0,0,11,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\QuickSelect.java,com.thealgorithms.searches.QuickSelect,"partition5/3[java.util.List<T>,int,int]",false,135,1,1,1,0,1,3,5,1,1,3,3,0,0,0,0,0,1,0,1,1,2,0,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\QuickSelect.java,com.thealgorithms.searches.QuickSelect,"select/2[java.util.List<T>,int]",false,26,2,1,0,1,4,4,17,1,4,2,4,1,4,0,1,0,0,4,2,4,0,1,0,0,0,46,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\QuickSelect.java,com.thealgorithms.searches.QuickSelect,"selectIndex/2[java.util.List<T>,int]",false,51,2,2,1,1,1,2,3,1,0,2,2,1,3,0,0,0,0,0,2,0,1,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\QuickSelect.java,com.thealgorithms.searches.QuickSelect,"partition/5[java.util.List<T>,int,int,int,int]",false,81,1,1,1,0,6,4,20,1,5,5,4,0,0,2,1,0,1,0,2,5,0,2,0,0,0,11,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\HillCipher.java,com.thealgorithms.ciphers.HillCipher,decrypt/1[java.lang.String],false,66,2,2,1,1,9,7,41,0,11,1,7,1,2,7,0,0,2,4,23,20,5,3,0,0,0,16,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\HillCipher.java,com.thealgorithms.ciphers.HillCipher,"determinant/2[int[][],int]",false,114,2,3,2,1,7,1,27,1,8,2,1,1,0,3,3,0,1,0,19,15,7,6,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\HillCipher.java,com.thealgorithms.ciphers.HillCipher,hillCipher/1[java.lang.String],false,143,1,3,1,2,3,5,16,0,1,1,5,2,3,0,2,0,0,4,2,1,0,1,0,0,0,14,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\HillCipher.java,com.thealgorithms.ciphers.HillCipher,"validateDeterminant/2[int[][],int]",false,158,2,3,2,1,2,2,6,1,0,2,2,1,1,0,1,0,0,1,2,0,1,1,0,0,0,6,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\HillCipher.java,com.thealgorithms.ciphers.HillCipher,main/1[java.lang.String[]],false,168,1,1,0,1,1,3,5,0,1,1,3,1,4,0,0,0,0,1,0,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\HillCipher.java,com.thealgorithms.ciphers.HillCipher,encrypt/1[java.lang.String],false,19,2,2,1,1,9,7,42,0,11,1,7,1,2,7,0,0,2,4,24,20,5,3,0,0,0,15,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\zigZagPattern\zigZagPattern.java,com.thealgorithms.strings.zigZagPattern.zigZagPattern,"encode/2[java.lang.String,int]",false,5,1,1,1,0,8,2,26,2,9,2,2,0,0,2,3,0,4,0,13,16,6,5,0,0,0,16,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\heaps\FibonacciHeapTest.java,com.thealgorithms.datastructures.heaps.FibonacciHeapTest,testHeap/0,false,9,2,0,0,0,1,5,11,0,1,0,5,0,0,0,0,0,0,0,7,1,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareFreeIntegerTest.java,com.thealgorithms.maths.SquareFreeIntegerTest,testIsSquareFreeInteger/0,false,13,1,0,0,0,2,4,8,0,4,0,4,0,0,1,0,0,0,0,1525,4,0,1,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareFreeIntegerTest.java,com.thealgorithms.maths.SquareFreeIntegerTest,testIsSquareFreeIntegerThrowExceptionIfNumberIsZero/0,false,29,1,0,0,0,1,4,10,0,4,0,4,0,0,0,0,0,0,1,1,4,0,1,0,0,1,22,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareFreeIntegerTest.java,com.thealgorithms.maths.SquareFreeIntegerTest,testIsSquareFreeIntegerMustThrowExceptionIfNumberIsNegative/0,false,48,1,0,0,0,1,4,10,0,4,0,4,0,0,0,0,0,0,1,1,4,0,1,0,0,1,23,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\NQueens.java,com.thealgorithms.backtracking.NQueens,"getSolution/4[int,java.util.List<java.util.List<java.lang.String>>,int[],int]",false,80,2,4,2,2,7,6,20,1,5,4,6,2,1,3,2,0,0,2,4,6,1,3,0,0,0,39,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\NQueens.java,com.thealgorithms.backtracking.NQueens,"isPlacedCorrectly/3[int[],int,int]",false,118,1,1,1,0,4,1,9,2,2,3,1,0,0,1,2,0,0,0,2,2,2,2,0,0,0,28,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\NQueens.java,com.thealgorithms.backtracking.NQueens,main/1[java.lang.String[]],false,37,1,1,0,1,1,1,8,0,0,1,1,1,3,0,0,0,0,0,6,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\NQueens.java,com.thealgorithms.backtracking.NQueens,placeQueens/1[int],false,46,2,2,1,1,2,6,15,0,3,1,6,1,2,0,0,0,0,5,1,1,2,1,0,0,2,17,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\a5\LFSRTest.java,com.thealgorithms.ciphers.a5.LFSRTest,initialize/0,false,29,3,0,0,0,1,6,22,0,4,0,6,0,0,0,0,0,0,0,21,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\a5\LFSRTest.java,com.thealgorithms.ciphers.a5.LFSRTest,getClockBit/0,false,84,3,0,0,0,1,4,8,0,3,0,4,0,0,0,0,0,0,0,6,3,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\a5\LFSRTest.java,com.thealgorithms.ciphers.a5.LFSRTest,clock/0,false,55,3,0,0,0,1,7,24,0,4,0,7,0,0,0,0,0,0,0,22,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\ParseInteger.java,com.thealgorithms.maths.ParseInteger,main/1[java.lang.String[]],false,5,1,1,0,1,5,2,6,0,0,1,2,1,1,0,4,0,0,8,0,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\ParseInteger.java,com.thealgorithms.maths.ParseInteger,parseInt/1[java.lang.String],false,20,0,1,1,0,10,3,15,1,5,1,3,0,0,1,4,0,0,2,8,6,4,2,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord,main/1[java.lang.String[]],false,47,1,2,0,2,1,1,4,0,1,1,1,1,2,0,0,0,0,0,2,1,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord,go/0,false,52,3,3,1,2,13,6,50,0,12,0,6,1,1,7,3,0,0,7,15,24,5,3,0,0,0,18,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord,"show/3[int,int,com.thealgorithms.datastructures.graphs.BellmanFord.Edge[]]",false,116,4,1,0,1,10,4,32,0,7,3,4,1,1,4,3,0,0,4,10,15,6,3,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord,"printPath/2[int[],int]",false,39,2,4,3,1,2,2,7,1,0,2,2,1,0,0,1,0,0,1,1,0,1,1,0,0,0,14,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord,getEdgeArray/0,false,166,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord,"BellmanFord/2[int,int]",true,12,1,1,1,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BellmanFord.java,com.thealgorithms.datastructures.graphs.BellmanFord,"addEdge/3[int,int,int]",false,162,1,1,0,1,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindKthNumber.java,com.thealgorithms.maths.FindKthNumber,main/1[java.lang.String[]],false,13,2,2,0,2,3,3,11,0,6,1,3,2,3,0,2,0,0,0,3,6,2,0,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindKthNumber.java,com.thealgorithms.maths.FindKthNumber,"findKthMax/2[int[],int]",false,41,2,2,1,1,4,1,16,2,3,2,1,1,2,1,1,0,0,0,3,5,1,2,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindKthNumber.java,com.thealgorithms.maths.FindKthNumber,"swap/3[int[],int,int]",false,69,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindKthNumber.java,com.thealgorithms.maths.FindKthNumber,"partition/3[int[],int,int]",false,56,2,2,1,1,3,1,12,1,3,3,1,1,1,1,0,0,0,0,1,3,1,2,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindKthNumber.java,com.thealgorithms.maths.FindKthNumber,generateArray/1[int],false,31,1,1,1,0,2,2,8,1,3,1,2,0,0,1,0,0,0,0,3,4,2,1,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\FordFulkerson.java,com.thealgorithms.dynamicprogramming.FordFulkerson,main/1[java.lang.String[]],false,14,2,1,0,1,1,2,15,0,0,1,2,1,1,0,0,0,0,2,30,11,1,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\FordFulkerson.java,com.thealgorithms.dynamicprogramming.FordFulkerson,"networkFlow/2[int,int]",false,34,1,1,1,0,11,12,42,1,11,2,12,0,0,6,5,0,0,3,8,19,4,4,0,0,0,23,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\HeapSort.java,com.thealgorithms.sorts.HeapSort,"siftDown/3[T[],int,int]",false,33,2,4,2,2,5,2,13,0,1,3,2,2,1,1,0,0,0,0,3,2,3,2,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\HeapSort.java,com.thealgorithms.sorts.HeapSort,"heapify/2[T[],int]",false,27,2,2,1,1,2,1,5,0,1,2,1,1,2,1,0,0,0,0,2,1,1,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\HeapSort.java,com.thealgorithms.sorts.HeapSort,sort/1[T[]],false,17,2,3,0,3,2,3,9,1,1,1,3,3,3,1,0,0,0,0,3,1,0,1,0,0,0,29,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\HeapSort.java,com.thealgorithms.sorts.HeapSort,"swap/3[T[],int,int]",false,47,1,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,4,3,4,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\HeapSort.java,com.thealgorithms.sorts.HeapSort,"less/3[T[],int,int]",false,53,1,1,1,0,2,1,3,1,0,3,1,0,0,0,0,0,0,0,3,0,2,0,0,0,0,2,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\InfixToPostfix.java,com.thealgorithms.datastructures.stacks.InfixToPostfix,main/1[java.lang.String[]],false,7,1,1,0,1,1,2,5,0,0,1,2,1,2,0,0,0,0,6,0,0,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\InfixToPostfix.java,com.thealgorithms.datastructures.stacks.InfixToPostfix,precedence/1[char],false,46,0,1,1,0,6,0,14,4,0,1,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,2,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\InfixToPostfix.java,com.thealgorithms.datastructures.stacks.InfixToPostfix,infix2PostFix/1[java.lang.String],false,14,2,3,1,2,11,11,31,1,2,1,11,1,1,4,3,0,0,1,0,2,0,3,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\PasswordGenTest.java,com.thealgorithms.others.PasswordGenTest,generateOneCharacterPassword/0,false,21,1,0,0,0,2,3,4,0,1,0,3,0,0,0,1,0,0,0,3,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\PasswordGenTest.java,com.thealgorithms.others.PasswordGenTest,generatePasswordNonEmptyTest/0,false,39,1,0,0,0,2,3,4,0,1,0,3,0,0,0,1,0,0,0,3,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\PasswordGenTest.java,com.thealgorithms.others.PasswordGenTest,failGenerationWithMinLengthSmallerThanMaxLengthTest/0,false,27,1,0,0,0,1,2,8,0,2,0,2,0,0,0,0,0,0,0,2,2,0,1,0,0,1,13,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\PasswordGenTest.java,com.thealgorithms.others.PasswordGenTest,failGenerationWithSameMinMaxLengthTest/0,false,10,1,0,0,0,1,2,7,0,1,0,2,0,0,0,0,0,0,0,1,1,0,1,0,0,1,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\TestPrintMatrixInSpiralOrder.java,com.thealgorithms.others.TestPrintMatrixInSpiralOrder,testTwo/0,false,26,3,0,0,0,1,3,7,0,4,0,3,0,0,0,0,0,0,0,5,4,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\TestPrintMatrixInSpiralOrder.java,com.thealgorithms.others.TestPrintMatrixInSpiralOrder,testOne/0,false,10,3,0,0,0,1,3,7,0,4,0,3,0,0,0,0,0,0,0,51,4,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FibonacciJavaStreams.java,com.thealgorithms.maths.FibonacciJavaStreams,"assertThat/2[java.lang.Object,java.lang.Object]",false,48,0,1,1,0,2,2,5,0,0,2,2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FibonacciJavaStreams.java,com.thealgorithms.maths.FibonacciJavaStreams,calculate/1[java.math.BigDecimal],false,15,0,1,1,0,9,12,13,4,7,1,12,0,0,0,1,0,0,0,10,1,1,1,0,0,4,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FibonacciJavaStreams.java,com.thealgorithms.maths.FibonacciJavaStreams,main/1[java.lang.String[]],false,56,1,2,0,2,1,5,61,0,23,1,5,2,1,0,0,0,0,2,16,12,0,1,0,0,11,11,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsTest.java,com.thealgorithms.sorts.SortUtilsTest,isSortedEmptyArray/0,false,12,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsTest.java,com.thealgorithms.sorts.SortUtilsTest,isSortedWithSingleElement/0,false,18,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,1,1,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsTest.java,com.thealgorithms.sorts.SortUtilsTest,isSortedArrayFalse/0,false,36,2,2,0,2,1,3,8,0,3,0,3,0,0,0,0,0,0,0,12,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsTest.java,com.thealgorithms.sorts.SortUtilsTest,isSortedListTrue/0,false,48,2,2,0,2,1,6,8,0,3,0,6,0,0,0,0,0,0,0,17,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsTest.java,com.thealgorithms.sorts.SortUtilsTest,isSortedListFalse/0,false,60,2,2,0,2,1,6,8,0,3,0,6,0,0,0,0,0,0,0,12,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsTest.java,com.thealgorithms.sorts.SortUtilsTest,isSortedArrayTrue/0,false,24,2,2,0,2,1,3,8,0,3,0,3,0,0,0,0,0,0,0,17,3,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Floor.java,com.thealgorithms.maths.Floor,floor/1[double],false,22,0,1,1,0,3,0,11,3,0,1,0,0,0,0,1,0,0,0,3,0,3,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Floor.java,com.thealgorithms.maths.Floor,main/1[java.lang.String[]],false,7,1,1,0,1,2,3,7,0,3,1,3,1,1,1,1,0,0,0,2,3,0,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\Sort012D.java,com.thealgorithms.misc.Sort012D,main/1[java.lang.String[]],false,16,2,1,0,1,2,2,9,0,4,1,2,1,1,1,0,0,0,0,1,5,0,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\Sort012D.java,com.thealgorithms.misc.Sort012D,sort012/1[int[]],false,26,1,1,1,0,6,2,34,0,5,1,2,0,0,2,0,0,0,2,7,10,2,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,scheduling/0,false,71,3,1,0,1,1,4,11,0,1,0,4,1,1,0,0,0,0,6,6,1,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,initialisation0/0,false,13,1,2,2,0,1,1,5,0,0,0,1,0,0,0,0,0,0,2,4,1,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,initialisation2/0,false,32,1,1,1,0,1,1,6,0,0,0,1,0,0,0,0,0,0,3,6,1,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,sort/0,false,57,3,1,0,1,1,5,11,0,1,0,5,1,1,0,0,0,0,6,6,1,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,schedulingOf_TwoProcesses/0,false,86,3,1,0,1,1,4,7,0,1,0,4,1,1,0,0,0,0,2,2,1,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,constructor/0,false,48,3,1,0,1,1,4,6,0,1,0,4,1,1,0,0,0,0,0,4,1,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,initialisation1/0,false,20,1,2,2,0,1,1,9,0,0,0,1,0,0,0,0,0,0,6,12,1,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,schedulingOf_nothing/0,false,113,2,0,0,0,1,3,6,0,1,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,initialisation3/0,false,40,1,1,1,0,1,1,6,0,0,0,1,0,0,0,0,0,0,3,6,1,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,schedulingOfA_ShortestJobArrivingLast/0,false,95,3,1,0,1,1,4,8,0,1,0,4,1,1,0,0,0,0,3,3,1,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\SJFSchedulingTest.java,com.thealgorithms.scheduling.SJFSchedulingTest,scheduling_WithProcessesNotComingBackToBack/0,false,104,3,1,0,1,1,4,8,0,1,0,4,1,1,0,0,0,0,3,3,1,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VampireNumber.java,com.thealgorithms.maths.VampireNumber,"splitIntoDigits/2[int,int]",false,74,0,1,1,0,4,4,17,1,2,2,4,0,0,3,0,0,0,0,6,4,2,1,0,0,0,10,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VampireNumber.java,com.thealgorithms.maths.VampireNumber,"isVampireNumber/3[int,int,boolean]",false,57,1,2,1,1,4,2,10,2,2,3,2,1,1,0,0,0,0,0,3,2,3,2,0,0,0,15,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VampireNumber.java,com.thealgorithms.maths.VampireNumber,main/1[java.lang.String[]],false,21,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,2,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\VampireNumber.java,com.thealgorithms.maths.VampireNumber,"test/2[int,int]",false,25,1,2,1,1,4,3,13,0,4,2,3,1,2,2,0,0,0,6,1,4,4,3,0,0,0,14,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LeastCommonMultiple.java,com.thealgorithms.maths.LeastCommonMultiple,main/1[java.lang.String[]],false,17,1,1,0,1,1,3,8,0,3,1,3,1,1,0,0,0,0,3,0,3,1,0,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LeastCommonMultiple.java,com.thealgorithms.maths.LeastCommonMultiple,"lcm/2[int,int]",false,31,0,1,1,0,5,0,18,1,3,2,0,0,0,1,3,0,0,0,4,7,2,2,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\buffers\CircularBuffer.java,com.thealgorithms.datastructures.buffers.CircularBuffer,isEmpty/0,false,18,0,0,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\buffers\CircularBuffer.java,com.thealgorithms.datastructures.buffers.CircularBuffer,get/0,false,26,3,2,0,2,2,3,6,2,1,0,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\buffers\CircularBuffer.java,com.thealgorithms.datastructures.buffers.CircularBuffer,isFull/0,false,22,0,0,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\buffers\CircularBuffer.java,com.thealgorithms.datastructures.buffers.CircularBuffer,CircularBuffer/1[int],true,11,2,1,0,1,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\buffers\CircularBuffer.java,com.thealgorithms.datastructures.buffers.CircularBuffer,put/1[Item],false,35,3,2,0,2,2,3,6,2,0,1,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,getElementKey/1[int],false,39,1,4,3,1,3,3,6,1,0,1,3,0,0,0,0,0,2,1,2,0,1,1,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,deleteElement/1[int],false,107,2,6,1,5,10,10,19,0,0,1,10,4,3,0,0,1,8,2,7,0,6,2,0,0,0,23,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,insertElement/1[com.thealgorithms.datastructures.heaps.HeapElement],false,101,2,2,1,1,1,3,4,0,0,1,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,"swap/2[int,int]",false,48,1,2,2,0,1,2,5,0,1,2,2,0,0,0,0,0,0,0,4,1,4,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,MinHeap/1[java.util.List<com.thealgorithms.datastructures.heaps.HeapElement>],true,16,2,1,0,1,4,3,14,0,0,1,3,1,3,1,2,0,0,2,1,1,0,2,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,toggleUp/1[int],false,55,2,5,2,3,2,5,7,0,1,1,5,2,1,1,0,0,0,0,5,2,5,1,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,extractMin/0,false,94,2,2,1,1,1,2,5,1,1,0,2,1,4,0,0,0,0,0,2,1,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,getElement/0,false,143,3,2,0,2,2,1,8,1,0,0,1,1,5,0,0,1,0,1,0,0,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,getElement/1[int],false,31,1,1,1,0,3,2,6,1,0,1,2,0,0,0,0,0,2,1,2,0,1,1,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinHeap.java,com.thealgorithms.datastructures.heaps.MinHeap,toggleDown/1[int],false,65,2,4,1,3,7,6,15,0,2,1,6,2,1,1,0,0,7,0,16,5,16,2,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleNode.java,com.thealgorithms.devutils.nodes.SimpleNode,setNextNode/1[com.thealgorithms.devutils.nodes.SimpleNode<E>],false,56,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleNode.java,com.thealgorithms.devutils.nodes.SimpleNode,hasNext/0,false,48,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleNode.java,com.thealgorithms.devutils.nodes.SimpleNode,getNextNode/0,false,52,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleNode.java,com.thealgorithms.devutils.nodes.SimpleNode,SimpleNode/1[E],true,30,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleNode.java,com.thealgorithms.devutils.nodes.SimpleNode,SimpleNode/0,true,20,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleNode.java,com.thealgorithms.devutils.nodes.SimpleNode,"SimpleNode/2[E,com.thealgorithms.devutils.nodes.SimpleNode<E>]",true,40,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\TwoPointers.java,com.thealgorithms.others.TwoPointers,main/1[java.lang.String[]],false,14,2,1,0,1,1,1,10,0,2,1,1,1,1,0,0,0,0,0,16,5,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\TwoPointers.java,com.thealgorithms.others.TwoPointers,"isPairedSum/2[int[],int]",false,38,1,1,1,0,4,1,17,2,2,2,1,0,0,1,1,0,0,0,2,2,3,2,0,0,0,33,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\OptimalJobScheduling.java,com.thealgorithms.dynamicprogramming.OptimalJobScheduling,"runningCost/2[int,int]",false,67,2,2,1,1,3,1,8,2,2,2,1,1,1,1,1,0,0,0,3,3,2,3,0,0,0,50,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\OptimalJobScheduling.java,com.thealgorithms.dynamicprogramming.OptimalJobScheduling,execute/0,false,38,1,2,0,2,1,2,4,0,0,0,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\OptimalJobScheduling.java,com.thealgorithms.dynamicprogramming.OptimalJobScheduling,findMin/1[int[]],false,87,1,1,1,0,3,0,7,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,24,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\OptimalJobScheduling.java,com.thealgorithms.dynamicprogramming.OptimalJobScheduling,showResults/0,false,102,0,1,1,0,3,3,10,0,2,0,3,0,0,2,0,0,0,1,2,2,0,2,0,0,0,15,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\OptimalJobScheduling.java,com.thealgorithms.dynamicprogramming.OptimalJobScheduling,"getCost/2[int,int]",false,119,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\OptimalJobScheduling.java,com.thealgorithms.dynamicprogramming.OptimalJobScheduling,"OptimalJobScheduling/4[int,int,int[][],int[][]]",true,27,1,0,0,0,1,0,7,0,0,4,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,32,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\OptimalJobScheduling.java,com.thealgorithms.dynamicprogramming.OptimalJobScheduling,calculateCost/0,false,46,1,2,1,1,3,1,7,0,2,0,1,1,2,2,0,0,0,0,2,3,0,2,0,0,0,20,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\InsertionSort.java,com.thealgorithms.sorts.InsertionSort,sentinelSort/1[T[]],false,40,2,2,0,2,6,2,17,2,6,1,2,0,0,3,0,0,0,0,7,9,2,2,0,0,0,60,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\InsertionSort.java,com.thealgorithms.sorts.InsertionSort,sort/1[T[]],false,17,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\InsertionSort.java,com.thealgorithms.sorts.InsertionSort,main/1[java.lang.String[]],false,70,2,3,0,3,1,4,12,0,6,1,4,1,1,0,0,0,0,3,3,6,1,0,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\InsertionSort.java,com.thealgorithms.sorts.InsertionSort,"sort/3[T[],int,int]",false,21,2,4,2,2,4,2,8,1,2,3,2,0,0,2,0,0,0,0,2,2,2,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\InsertionSort.java,com.thealgorithms.sorts.InsertionSort,"measureApproxExecTime/2[java.util.function.Function<java.lang.Double[],java.lang.Double[]>,java.lang.Double[]]",false,88,0,1,1,0,1,2,6,1,2,2,2,0,0,0,0,0,1,0,1,2,2,0,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor45/0,false,17,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor3/0,false,37,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testForRangeOfNumber/0,false,52,2,0,0,0,3,2,12,0,2,0,2,0,0,1,0,1,0,0,23,2,0,2,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor857143/0,false,32,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor297/0,false,22,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor2223/0,false,27,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor98/0,false,47,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor1/0,false,12,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\KaprekarNumbersTest.java,com.thealgorithms.maths.KaprekarNumbersTest,testFor26/0,false,42,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\KnightsTour.java,com.thealgorithms.backtracking.KnightsTour,"solve/3[int,int,int]",false,67,2,6,2,4,7,5,25,4,1,3,5,3,3,1,1,0,0,0,4,5,1,2,1,0,0,14,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\KnightsTour.java,com.thealgorithms.backtracking.KnightsTour,printResult/0,false,143,0,1,1,0,4,2,11,0,0,0,2,0,0,2,1,0,0,1,1,0,0,3,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\KnightsTour.java,com.thealgorithms.backtracking.KnightsTour,"orphanDetected/3[int,int,int]",false,130,2,3,1,2,4,2,11,2,1,3,2,2,2,1,1,0,0,0,4,1,1,3,0,0,0,11,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\KnightsTour.java,com.thealgorithms.backtracking.KnightsTour,"neighbors/2[int,int]",false,104,2,3,2,1,3,2,12,1,4,2,2,1,1,1,1,0,0,0,3,4,6,2,0,0,0,11,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\KnightsTour.java,com.thealgorithms.backtracking.KnightsTour,main/1[java.lang.String[]],false,42,2,2,0,2,8,4,20,0,4,1,4,2,4,2,0,0,6,1,15,8,11,3,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\KnightsTour.java,com.thealgorithms.backtracking.KnightsTour,"countNeighbors/2[int,int]",false,119,0,2,2,0,3,0,9,1,1,2,0,0,0,1,1,0,0,0,4,1,2,2,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SquareRootWithBabylonianMethod.java,com.thealgorithms.maths.SquareRootWithBabylonianMethod,square_Root/1[float],false,11,0,0,0,0,2,0,10,1,3,1,0,0,0,1,0,0,1,0,3,5,4,1,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\LongestPalindromicSubstring.java,com.thealgorithms.strings.LongestPalindromicSubstring,main/1[java.lang.String[]],false,8,1,2,0,2,1,4,8,0,3,1,4,0,0,0,0,0,0,3,0,4,1,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$Node,next/1[int],false,238,2,1,0,1,1,2,4,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$Node,"setPrevious/2[int,com.thealgorithms.datastructures.lists.SkipList.Node<E>]",false,247,2,0,0,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$Node,previous/1[int],false,251,2,1,0,1,1,2,4,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$Node,checkLayer/1[int],false,260,0,0,0,0,3,0,5,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$Node,getValue/0,false,256,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$Node,"setNext/2[int,com.thealgorithms.datastructures.lists.SkipList.Node<E>]",false,243,2,0,0,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$Node,"Node/2[E,int]",true,229,2,0,0,0,1,1,6,0,0,2,1,0,0,0,0,0,0,1,2,4,2,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumPathSum.java,com.thealgorithms.dynamicprogramming.MinimumPathSum,testLessRows/0,false,40,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,6,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumPathSum.java,com.thealgorithms.dynamicprogramming.MinimumPathSum,testLessColumns/0,false,35,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,6,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumPathSum.java,com.thealgorithms.dynamicprogramming.MinimumPathSum,minimumPathSum/1[int[][]],false,50,1,4,4,0,6,1,20,2,7,1,1,0,0,4,1,0,0,0,27,11,13,2,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumPathSum.java,com.thealgorithms.dynamicprogramming.MinimumPathSum,testRegular/0,false,30,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,9,1,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MinimumPathSum.java,com.thealgorithms.dynamicprogramming.MinimumPathSum,testOneRowOneColumn/0,false,45,2,1,0,1,1,2,4,0,1,0,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SlowSort.java,com.thealgorithms.sorts.SlowSort,sort/1[T[]],false,10,2,1,0,1,1,1,4,1,0,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SlowSort.java,com.thealgorithms.sorts.SlowSort,"sort/3[T[],int,int]",false,15,3,5,2,3,3,3,14,1,2,3,3,1,0,0,0,0,1,0,3,4,4,1,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LowestBasePalindrome.java,com.thealgorithms.others.LowestBasePalindrome,reverse/1[java.lang.String],false,100,0,1,1,0,2,2,7,1,2,1,2,0,0,1,0,0,0,1,2,3,1,1,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LowestBasePalindrome.java,com.thealgorithms.others.LowestBasePalindrome,main/1[java.lang.String[]],false,19,1,2,0,2,3,8,18,0,2,1,8,2,2,1,0,1,0,3,2,3,1,2,0,0,0,19,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LowestBasePalindrome.java,com.thealgorithms.others.LowestBasePalindrome,lowestBasePalindrome/1[int],false,49,1,2,1,1,6,4,30,2,8,1,4,1,1,3,0,0,2,3,3,14,2,4,0,0,0,34,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LowestBasePalindrome.java,com.thealgorithms.others.LowestBasePalindrome,"base2base/3[java.lang.String,int,int]",false,108,0,1,1,0,6,3,25,1,5,3,3,0,0,2,1,0,3,1,6,10,11,2,0,0,0,10,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SumWithoutArithmeticOperators.java,com.thealgorithms.maths.SumWithoutArithmeticOperators,"getSum/2[int,int]",false,14,1,2,1,1,2,1,6,2,2,2,1,1,0,0,1,0,1,0,2,2,1,1,0,0,0,39,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\graphs\TarjansAlgorithmTest.java,com.thealgorithms.datastructures.graphs.TarjansAlgorithmTest,findStronglyConnectedComps/0,false,16,1,0,0,0,2,8,18,0,5,0,8,0,0,1,0,0,0,0,17,5,0,1,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\graphs\TarjansAlgorithmTest.java,com.thealgorithms.datastructures.graphs.TarjansAlgorithmTest,findStronglyConnectedCompsShouldGetSingleNodes/0,false,44,1,0,0,0,2,8,19,0,5,0,8,0,0,1,0,0,0,0,26,5,0,1,0,0,0,18,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\LetterCombinationsOfPhoneNumberTest.java,com.thealgorithms.strings.LetterCombinationsOfPhoneNumberTest,letterCombinationsOfPhoneNumber/0,false,10,3,3,0,3,1,5,16,0,9,0,5,0,0,0,0,0,0,44,10,9,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CocktailShakerSort.java,com.thealgorithms.sorts.CocktailShakerSort,sort/1[T[]],false,15,2,2,0,2,6,2,25,1,7,1,2,0,0,3,0,0,0,0,8,11,6,3,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CocktailShakerSort.java,com.thealgorithms.sorts.CocktailShakerSort,main/1[java.lang.String[]],false,44,2,4,0,4,1,3,7,0,3,1,3,0,0,0,0,0,0,5,9,3,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CreateBSTFromSortedArray.java,com.thealgorithms.datastructures.trees.CreateBSTFromSortedArray,main/1[java.lang.String[]],false,14,2,1,0,1,1,1,6,0,0,1,1,1,2,0,0,0,0,0,15,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CreateBSTFromSortedArray.java,com.thealgorithms.datastructures.trees.CreateBSTFromSortedArray,"createBst/3[int[],int,int]",false,31,3,4,2,2,2,1,10,2,2,3,1,1,0,0,0,0,1,0,3,4,5,1,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CreateBSTFromSortedArray.java,com.thealgorithms.datastructures.trees.CreateBSTFromSortedArray,test/1[int[]],false,21,3,7,1,6,1,6,9,0,1,1,6,1,1,0,0,0,0,3,2,1,1,0,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,insertionSortClassicalForArrayWithDuplicateValuesShouldPass/0,false,75,2,1,0,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,setUp/0,false,14,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,insertionSortClassicalWithIntegerArrayShouldPass/0,false,47,2,1,0,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,"testIntegerArray/1[java.util.function.Function<java.lang.Integer[],java.lang.Integer[]>]",false,52,1,2,1,1,1,4,7,0,3,1,4,0,0,0,0,0,0,0,12,3,0,0,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,insertionSortClassicalWithStringArrayShouldPass/0,false,89,2,1,0,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,"testWithStringArray/1[java.util.function.Function<java.lang.String[],java.lang.String[]>]",false,94,1,2,1,1,1,4,7,0,3,1,4,0,0,0,0,0,0,10,0,3,0,0,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,"testWithRandomArray/1[java.util.function.Function<java.lang.Double[],java.lang.Double[]>]",false,108,2,4,1,3,1,5,6,0,3,1,5,0,0,0,0,0,0,0,1,3,0,0,0,0,0,14,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,"testEmptyArray/1[java.util.function.Function<java.lang.Integer[],java.lang.Integer[]>]",false,24,1,2,1,1,1,4,7,0,3,1,4,0,0,0,0,0,0,0,0,3,0,0,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,insertionSortSortEmptyArrayShouldPass/0,false,19,2,1,0,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,insertionSortClassicalForArrayWithNegativeValuesShouldPass/0,false,61,2,1,0,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,"testWithNegativeValues/1[java.util.function.Function<java.lang.Integer[],java.lang.Integer[]>]",false,66,1,2,1,1,1,4,7,0,3,1,4,0,0,0,0,0,0,0,12,3,0,0,0,0,0,13,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,"testWithDuplicates/1[java.util.function.Function<java.lang.Integer[],java.lang.Integer[]>]",false,80,1,2,1,1,1,4,7,0,3,1,4,0,0,0,0,0,0,0,12,3,0,0,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,insertionSortClassicalSortSingleValueArrayShouldPass/0,false,33,2,1,0,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,"testSingleValue/1[java.util.function.Function<java.lang.Integer[],java.lang.Integer[]>]",false,38,1,2,1,1,1,4,7,0,3,1,4,0,0,0,0,0,0,0,2,3,0,0,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\InsertionSortTest.java,com.thealgorithms.sorts.InsertionSortTest,insertionSortClassicalWithRandomArrayPass/0,false,103,2,1,0,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\MazeRecursion.java,com.thealgorithms.backtracking.MazeRecursion,"setWay2/3[int[][],int,int]",false,126,2,3,2,1,7,1,27,7,0,3,1,1,0,0,2,0,0,0,10,2,4,2,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\MazeRecursion.java,com.thealgorithms.backtracking.MazeRecursion,"setWay/3[int[][],int,int]",false,96,2,3,2,1,7,1,27,7,0,3,1,1,0,0,2,0,0,0,10,2,4,2,0,0,0,64,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\MazeRecursion.java,com.thealgorithms.backtracking.MazeRecursion,mazeRecursion/0,false,5,2,2,0,2,11,5,42,0,12,0,5,2,1,10,0,0,0,6,40,19,3,2,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,setY/1[int],false,83,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,getX/0,false,71,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,hashCode/0,false,100,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,"Solution/2[int,int]",true,66,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,setX/1[int],false,79,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,equals/1[java.lang.Object],false,88,1,0,0,0,6,1,10,3,1,1,1,0,0,0,5,0,0,0,0,1,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,getY/0,false,75,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver$Solution,toString/0,false,105,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,4,0,0,2,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\AnagramsTest.java,com.thealgorithms.strings.AnagramsTest,isAlphabetical/0,false,10,2,5,0,5,1,5,12,0,2,0,5,0,0,0,0,0,0,9,0,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\ConnectedComponent.java,com.thealgorithms.datastructures.graphs.Graph,countGraphs/0,false,77,1,1,0,1,3,4,12,1,2,0,4,0,0,1,0,0,0,0,1,2,0,2,0,0,0,45,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\ConnectedComponent.java,com.thealgorithms.datastructures.graphs.Graph,"addEdge/2[E,E]",false,48,2,2,0,2,6,3,20,0,2,2,3,0,0,1,4,0,0,0,2,6,0,2,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\ConnectedComponent.java,com.thealgorithms.datastructures.graphs.Graph,Graph/0,true,36,1,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\ConnectedComponent.java,com.thealgorithms.datastructures.graphs.Graph,"depthFirstSearch/2[com.thealgorithms.datastructures.graphs.Graph<E>.Node,java.util.ArrayList<com.thealgorithms.datastructures.graphs.Graph<E>.Node>]",false,99,1,1,0,1,4,4,9,1,0,2,4,0,0,1,0,0,0,0,0,0,0,2,0,0,0,26,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,height/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,185,1,3,3,0,2,0,6,2,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,search/1[int],false,217,2,1,0,1,2,1,7,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,delete/1[int],false,82,2,1,0,1,5,1,15,2,2,1,1,1,8,1,3,0,0,0,0,4,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,main/1[java.lang.String[]],false,241,1,3,0,3,2,4,9,0,2,1,4,2,9,1,0,0,0,2,2,2,0,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,rotateLeft/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,123,2,4,3,1,4,1,20,1,1,1,1,1,3,0,3,0,0,0,0,8,0,2,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,insert/1[int],false,20,2,3,1,2,7,1,28,2,3,1,1,1,7,1,3,0,0,0,0,7,0,4,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,rotateRight/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,149,2,4,3,1,4,1,20,1,1,1,1,1,3,0,3,0,0,0,0,8,0,2,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,rotateLeftThenRight/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,175,2,3,1,2,1,2,4,1,0,1,2,2,4,0,0,0,0,0,0,1,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,setBalance/1[com.thealgorithms.datastructures.trees.AVLTree.Node[]],false,192,2,5,3,2,2,2,6,0,0,1,2,2,2,1,0,0,0,0,0,1,1,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,delete/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,50,2,4,2,2,8,2,34,1,3,1,2,2,7,2,7,0,0,0,0,10,0,3,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,rebalance/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,99,2,10,3,7,6,7,25,0,0,1,7,7,6,0,3,0,0,0,2,5,0,2,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,printBalance/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,203,2,3,2,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,0,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,reheight/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,211,2,2,1,1,2,2,5,0,0,1,2,1,1,0,1,0,0,0,1,1,1,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,rotateRightThenLeft/1[com.thealgorithms.datastructures.trees.AVLTree.Node],false,180,2,3,1,2,1,2,4,1,0,1,2,2,4,0,0,0,0,0,0,1,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,printBalance/0,false,199,1,2,1,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree,"searchHelper/2[com.thealgorithms.datastructures.trees.AVLTree.Node,int]",false,226,2,3,2,1,4,1,9,3,0,2,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,getImaginary/0,false,60,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,add/1[com.thealgorithms.maths.FFT.Complex],false,70,1,2,1,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,multiply/1[double],false,109,1,1,0,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,conjugate/0,false,121,1,1,0,1,1,0,6,1,1,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,"Complex/2[double,double]",true,41,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,abs/0,false,133,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,subtract/1[com.thealgorithms.maths.FFT.Complex],false,83,1,2,1,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,divide/1[com.thealgorithms.maths.FFT.Complex],false,143,1,2,0,2,1,2,8,1,2,1,2,1,1,0,0,0,4,0,2,5,11,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,multiply/1[com.thealgorithms.maths.FFT.Complex],false,96,1,5,4,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,6,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,divide/1[double],false,158,1,3,2,1,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,2,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,getReal/0,false,51,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFT.java,com.thealgorithms.maths.FFT$Complex,Complex/0,true,30,0,11,11,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BreadthFirstSearchTest.java,com.thealgorithms.searches.BreadthFirstSearchTest,searchE/0,false,42,2,0,0,0,1,6,5,0,1,0,6,0,0,0,0,0,0,2,0,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BreadthFirstSearchTest.java,com.thealgorithms.searches.BreadthFirstSearchTest,searchG/0,false,35,2,0,0,0,1,6,5,0,1,0,6,0,0,0,0,0,0,2,0,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BreadthFirstSearchTest.java,com.thealgorithms.searches.BreadthFirstSearchTest,searchI/0,false,28,2,0,0,0,1,6,5,0,1,0,6,0,0,0,0,0,0,2,0,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.BestFitCPU,"findBestFit/2[int[],int]",false,65,2,2,1,1,4,1,11,1,3,2,1,1,1,1,0,0,0,0,2,5,3,2,0,0,0,41,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.BestFitCPU,"fitProcess/2[int[],int[]]",false,98,2,1,0,1,3,2,11,1,2,2,2,1,2,1,1,0,0,0,0,3,0,2,0,0,0,62,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.BestFitCPU,findMaxElement/1[int[]],false,46,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,1,2,0,2,0,0,0,17,10,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\JosephusProblemTest.java,com.thealgorithms.maths.JosephusProblemTest,testJosephusProblem/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareRootWithNewtonRaphsonTestMethod.java,com.thealgorithms.maths.SquareRootWithNewtonRaphsonTestMethod,testfor2/0,false,17,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareRootWithNewtonRaphsonTestMethod.java,com.thealgorithms.maths.SquareRootWithNewtonRaphsonTestMethod,testfor625/0,false,25,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareRootWithNewtonRaphsonTestMethod.java,com.thealgorithms.maths.SquareRootWithNewtonRaphsonTestMethod,testfor1/0,false,9,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LiouvilleLambdaFunction.java,com.thealgorithms.maths.LiouvilleLambdaFunction,liouvilleLambda/1[int],false,25,1,1,0,1,3,2,6,1,0,1,2,0,0,0,1,0,0,1,5,0,1,1,0,0,0,29,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PrintTopViewofTree.java,com.thealgorithms.datastructures.trees.Tree,Tree/1[com.thealgorithms.datastructures.trees.TreeNode],true,46,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PrintTopViewofTree.java,com.thealgorithms.datastructures.trees.Tree,Tree/0,true,42,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PrintTopViewofTree.java,com.thealgorithms.datastructures.trees.Tree,printTopView/0,false,51,2,2,1,1,6,6,23,1,5,0,6,0,0,1,3,0,0,1,3,5,3,2,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LinearSearchThread.java,com.thealgorithms.searches.LinearSearchThread,main/1[java.lang.String[]],false,7,2,2,0,2,4,8,31,0,9,1,8,0,0,2,0,1,1,3,11,10,3,1,0,0,0,20,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Sudoku.java,com.thealgorithms.others.Sudoku,"isSafe/4[int[][],int,int,int]",false,5,1,1,1,0,8,1,23,4,7,4,1,0,0,4,3,0,0,0,2,7,6,3,0,0,0,14,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Sudoku.java,com.thealgorithms.others.Sudoku,main/1[java.lang.String[]],false,103,2,2,0,2,2,3,10,0,2,1,3,2,2,0,0,0,0,1,81,2,0,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Sudoku.java,com.thealgorithms.others.Sudoku,"print/2[int[][],int]",false,87,1,1,1,0,4,3,12,0,2,2,3,0,0,2,1,0,1,3,4,2,2,2,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Sudoku.java,com.thealgorithms.others.Sudoku,"solveSudoku/2[int[][],int]",false,45,2,4,2,2,9,2,33,3,6,2,2,2,1,3,1,0,0,0,7,11,0,3,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\HamiltonianCycle.java,com.thealgorithms.datastructures.graphs.HamiltonianCycle,findHamiltonianCycle/1[int[][]],false,20,2,1,0,1,4,1,19,1,2,1,1,1,2,2,0,0,0,0,11,10,2,2,0,0,0,32,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\HamiltonianCycle.java,com.thealgorithms.datastructures.graphs.HamiltonianCycle,isPresent/1[int],false,89,0,1,1,0,3,0,8,2,1,1,0,0,0,1,1,0,0,0,2,1,1,2,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\HamiltonianCycle.java,com.thealgorithms.datastructures.graphs.HamiltonianCycle,isPathFound/1[int],false,49,1,4,2,2,7,2,22,4,1,1,2,2,1,1,4,0,0,0,9,7,0,3,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CircleSort.java,com.thealgorithms.sorts.CircleSort,sort/1[T[]],false,11,2,1,0,1,2,1,5,1,1,1,1,1,1,1,0,0,0,0,2,1,1,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CircleSort.java,com.thealgorithms.sorts.CircleSort,"doSort/3[T[],int,int]",false,26,3,4,2,2,6,3,24,2,6,3,3,1,0,1,2,0,1,0,6,8,6,2,0,0,0,13,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CircleSort.java,com.thealgorithms.sorts.CircleSort,main/1[java.lang.String[]],false,58,1,3,0,3,3,3,13,0,5,1,3,0,0,2,0,0,0,5,16,5,4,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMax.java,com.thealgorithms.maths.FindMax,findMax/1[int[]],false,32,1,1,1,0,3,0,9,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMax.java,com.thealgorithms.maths.FindMax,main/1[java.lang.String[]],false,11,2,1,0,1,3,6,9,0,4,1,6,1,1,1,1,0,0,0,4,5,2,1,0,0,0,12,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake,"GetKochSnowflake/2[int,int]",false,99,2,4,1,3,2,4,17,1,7,2,4,2,2,0,0,0,0,1,6,7,7,1,0,0,0,37,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake,IterationStep/1[java.util.ArrayList<com.thealgorithms.others.KochSnowflake.Vector2>],false,135,1,5,1,4,2,7,14,1,5,1,7,0,0,1,0,0,0,0,8,5,4,1,0,0,0,49,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake,"GetImage/3[java.util.ArrayList<com.thealgorithms.others.KochSnowflake.Vector2>,int,int]",false,169,1,1,1,0,2,8,17,1,8,3,8,0,0,1,0,0,0,0,7,8,3,1,0,0,0,34,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake,"Iterate/2[java.util.ArrayList<com.thealgorithms.others.KochSnowflake.Vector2>,int]",false,83,2,3,2,1,2,1,7,1,2,2,1,1,1,1,0,0,0,0,1,3,0,1,0,0,0,37,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KochSnowflake.java,com.thealgorithms.others.KochSnowflake,main/1[java.lang.String[]],false,27,2,3,0,3,14,9,28,0,6,1,9,2,3,0,12,1,0,2,41,6,7,1,0,0,0,23,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DudeneyNumber.java,com.thealgorithms.maths.DudeneyNumber,isDudeney/1[int],false,14,0,0,0,0,4,2,14,2,4,1,2,0,0,1,2,0,2,0,6,6,3,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\PostOrderTraversalTest.java,com.thealgorithms.datastructures.trees.PostOrderTraversalTest,testPostOrder/0,false,30,3,1,0,1,1,5,6,0,2,0,5,0,0,0,0,0,0,0,14,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\PostOrderTraversalTest.java,com.thealgorithms.datastructures.trees.PostOrderTraversalTest,testNullRoot/0,false,17,1,0,0,0,1,4,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\PostOrderTraversalTest.java,com.thealgorithms.datastructures.trees.PostOrderTraversalTest,testPostOrderNonBalanced/0,false,48,3,1,0,1,1,5,6,0,2,0,5,0,0,0,0,0,0,0,8,2,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FactorialRecursion.java,com.thealgorithms.maths.FactorialRecursion,factorial/1[int],false,20,1,3,2,1,4,1,6,1,0,1,1,1,0,0,2,0,0,1,5,0,2,1,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FactorialRecursion.java,com.thealgorithms.maths.FactorialRecursion,main/1[java.lang.String[]],false,6,1,1,0,1,6,1,7,0,0,1,1,1,1,0,5,0,0,0,10,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TopologicalSort.java,com.thealgorithms.sorts.TopologicalSort$BackEdgeException,BackEdgeException/1[java.lang.String],true,91,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\UpperTest.java,com.thealgorithms.strings.UpperTest,toUpperCase/0,false,10,2,1,0,1,1,2,8,0,3,0,2,0,0,0,0,0,0,6,0,3,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\RandomNode.java,com.thealgorithms.datastructures.lists.RandomNode,main/1[java.lang.String[]],false,66,2,3,0,3,1,2,11,0,3,1,2,1,1,0,0,0,0,1,6,8,1,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\RandomNode.java,com.thealgorithms.datastructures.lists.RandomNode,getRandom/0,false,60,0,1,1,0,1,2,4,1,1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\RandomNode.java,com.thealgorithms.datastructures.lists.RandomNode,RandomNode/1[com.thealgorithms.datastructures.lists.RandomNode.ListNode],true,47,1,1,1,0,2,1,9,0,1,1,1,0,0,1,1,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LinearCongruentialGenerator.java,com.thealgorithms.others.LinearCongruentialGenerator,"LinearCongruentialGenerator/3[double,double,double]",true,28,0,1,1,0,1,1,3,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LinearCongruentialGenerator.java,com.thealgorithms.others.LinearCongruentialGenerator,"LinearCongruentialGenerator/4[double,double,double,double]",true,47,0,0,0,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,27,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LinearCongruentialGenerator.java,com.thealgorithms.others.LinearCongruentialGenerator,main/1[java.lang.String[]],false,65,1,2,0,2,2,3,6,0,2,1,3,1,1,1,0,0,0,0,6,2,0,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\LinearCongruentialGenerator.java,com.thealgorithms.others.LinearCongruentialGenerator,nextNumber/0,false,60,0,1,1,0,1,0,4,1,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,HashMapCuckooHashing/1[int],true,27,0,2,2,0,1,1,7,0,0,1,1,0,0,0,0,0,1,0,3,5,2,0,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,reHashTableIncreasesTableSize/0,false,131,1,5,3,2,4,3,11,0,2,0,3,1,3,1,1,0,1,0,5,5,3,2,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,displayHashtable/0,false,175,0,1,1,0,4,4,11,0,1,0,4,0,0,1,1,0,1,4,1,1,2,2,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,isEmpty/0,false,269,0,2,2,0,3,0,10,1,2,0,0,0,0,1,1,0,0,0,1,3,0,2,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,hashFunction1/1[int],false,42,0,4,4,0,2,0,7,1,1,1,0,0,0,0,0,0,0,0,1,2,1,1,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,findKeyInTable/1[int],false,194,1,4,1,3,4,4,13,2,2,1,4,3,1,0,0,0,0,3,0,3,1,2,0,0,0,33,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,checkLoadFactor/0,false,237,1,3,2,1,2,2,8,1,1,0,2,1,4,0,0,0,0,1,1,1,1,1,0,0,0,26,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,deleteKeyFromHashTable/1[int],false,148,1,4,1,3,4,4,19,2,2,1,4,3,1,0,0,0,0,3,0,5,1,1,0,0,0,41,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,isFull/0,false,254,0,1,1,0,4,1,9,2,2,0,1,0,0,1,1,0,0,0,1,2,0,2,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,hashFunction2/1[int],false,50,0,4,4,0,2,0,8,1,1,1,0,0,0,0,0,0,0,0,1,3,1,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,checkTableContainsKey/1[int],false,220,1,3,1,2,4,3,3,1,0,1,3,2,1,0,3,0,3,0,0,0,0,0,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,insertKey2HashTable/1[int],false,68,1,10,3,7,8,9,43,3,4,1,9,7,3,1,2,0,1,3,1,13,0,2,0,0,0,64,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMapCuckooHashing.java,com.thealgorithms.datastructures.hashmap.hashing.HashMapCuckooHashing,getNumberOfKeysInTable/0,false,280,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\PancakeSort.java,com.thealgorithms.sorts.PancakeSort,main/1[java.lang.String[]],false,31,2,3,0,3,1,3,7,0,2,1,3,0,0,0,0,0,0,1,28,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\PancakeSort.java,com.thealgorithms.sorts.PancakeSort,sort/1[T[]],false,14,2,2,0,2,4,2,15,1,5,1,2,0,0,2,0,0,0,0,5,7,2,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\FloydWarshall.java,com.thealgorithms.datastructures.graphs.FloydWarshall,FloydWarshall/1[int],true,11,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\FloydWarshall.java,com.thealgorithms.datastructures.graphs.FloydWarshall,floydwarshall/1[int[][]],false,18,1,1,1,0,10,2,27,0,8,1,2,0,0,8,0,0,0,3,8,10,5,4,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\FloydWarshall.java,com.thealgorithms.datastructures.graphs.FloydWarshall,main/1[java.lang.String[]],false,69,2,2,0,2,5,4,23,0,6,1,4,1,1,2,2,0,0,3,6,9,2,3,0,0,0,24,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PrintTopViewofTree.java,com.thealgorithms.datastructures.trees.TreeNode,TreeNode/1[int],true,16,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem,main/1[java.lang.String[]],false,142,1,2,0,2,1,1,4,0,1,1,1,1,3,0,0,0,0,0,0,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem,"findSkyline/2[int,int]",false,48,2,5,2,3,2,3,12,2,4,2,3,2,1,0,1,0,1,0,3,4,3,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem,"add/3[int,int,int]",false,32,1,2,1,1,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem,run/0,false,12,2,4,1,3,2,8,12,0,5,0,8,3,2,1,0,0,0,1,6,6,1,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem,print/1[java.util.ArrayList<com.thealgorithms.others.SkylineProblem.Skyline>],false,36,1,1,1,0,3,4,10,0,2,1,4,0,0,1,0,0,0,2,0,2,1,2,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem,"mergeSkyline/2[java.util.ArrayList<com.thealgorithms.others.SkylineProblem.Skyline>,java.util.ArrayList<com.thealgorithms.others.SkylineProblem.Skyline>]",false,68,1,2,1,1,10,4,46,1,6,2,4,0,0,3,2,0,0,0,17,10,0,4,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,peek/1[int],false,92,1,3,1,2,3,3,7,1,1,1,3,2,4,0,0,0,0,2,0,1,0,1,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,close/0,false,184,0,0,0,0,2,1,10,0,0,0,1,0,0,0,1,1,0,0,0,1,0,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,BufferedReader/1[byte[]],true,36,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,read/0,false,56,1,2,0,2,3,2,7,2,0,0,2,2,3,0,0,0,0,0,2,0,0,2,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,available/0,false,71,1,2,1,1,2,2,5,2,1,0,2,1,1,0,0,0,0,0,0,1,2,1,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,pushRefreshData/0,false,112,1,3,2,1,2,1,6,0,2,0,1,1,2,1,0,0,0,0,2,5,0,1,0,0,0,38,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,peek/0,false,84,1,1,0,1,1,1,3,1,0,0,1,1,5,0,0,0,0,0,1,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,assertStreamOpen/0,false,179,0,1,1,0,2,0,3,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,readBlock/0,false,131,2,2,0,2,2,3,7,1,1,0,3,2,3,0,0,0,0,0,3,1,0,1,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,"BufferedReader/2[java.io.InputStream,int]",true,44,1,0,0,0,2,1,6,0,0,2,1,0,0,0,1,0,0,1,1,3,0,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,needsRefill/0,false,150,0,2,2,0,3,0,3,1,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,refill/0,false,154,1,3,2,1,1,1,5,0,0,0,1,1,2,0,0,0,0,0,2,2,0,0,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,justRefill/0,false,160,1,3,2,1,3,2,11,0,1,0,2,1,1,1,1,0,0,0,1,4,0,2,0,0,0,15,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\io\BufferedReader.java,com.thealgorithms.io.BufferedReader,BufferedReader/1[java.io.InputStream],true,40,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kruskal.java,com.thealgorithms.datastructures.graphs.Kruskal,"addEdge/4[java.util.HashSet<com.thealgorithms.datastructures.graphs.Kruskal.Edge>[],int,int,int]",false,38,1,3,2,1,1,1,3,0,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kruskal.java,com.thealgorithms.datastructures.graphs.Kruskal,kruskal/1[java.util.HashSet<com.thealgorithms.datastructures.graphs.Kruskal.Edge>[]],false,80,3,2,1,1,6,10,25,1,10,1,10,1,1,2,1,0,1,0,2,13,0,2,0,0,2,14,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kruskal.java,com.thealgorithms.datastructures.graphs.Kruskal,main/1[java.lang.String[]],false,42,2,3,0,3,6,3,30,0,6,1,3,2,2,5,0,0,0,6,34,7,2,2,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\KnightsTour.java,com.thealgorithms.backtracking.KnightsTour$Anonymous1,"compare/2[int[],int[]]",false,81,1,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Isomorphic.java,com.thealgorithms.strings.Isomorphic,"checkStrings/2[java.lang.String,java.lang.String]",false,7,0,1,1,0,6,7,22,4,3,2,7,0,0,1,2,0,0,0,1,3,0,3,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\AnyBaseToAnyBase.java,com.thealgorithms.conversions.AnyBaseToAnyBase,"validForBase/2[java.lang.String,int]",false,74,1,1,1,0,4,4,14,2,4,2,4,0,0,2,0,0,0,0,2,4,0,2,0,0,0,17,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\AnyBaseToAnyBase.java,com.thealgorithms.conversions.AnyBaseToAnyBase,"base2base/3[java.lang.String,int,int]",false,141,0,1,1,0,7,3,28,2,5,3,3,0,0,2,2,0,3,2,7,10,11,2,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\AnyBaseToAnyBase.java,com.thealgorithms.conversions.AnyBaseToAnyBase,main/1[java.lang.String[]],false,25,1,2,0,2,8,7,34,0,4,1,7,2,1,1,0,1,0,11,0,4,2,3,0,0,0,34,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\geometry\GrahamScanTest.java,com.thealgorithms.geometry.GrahamScanTest,testGrahamScan/0,false,9,2,0,0,0,1,3,6,0,3,0,3,0,0,0,0,0,0,1,16,3,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ColorContrastRatio.java,com.thealgorithms.misc.ColorContrastRatio,getRelativeLuminance/1[java.awt.Color],false,40,1,3,2,1,1,4,6,1,3,1,4,1,2,0,0,0,0,0,3,3,5,0,0,0,0,29,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ColorContrastRatio.java,com.thealgorithms.misc.ColorContrastRatio,getColor/1[int],false,55,1,2,1,1,2,2,4,1,1,1,2,1,1,0,0,0,2,0,5,1,3,0,0,0,0,27,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ColorContrastRatio.java,com.thealgorithms.misc.ColorContrastRatio,test/0,false,81,1,4,1,3,7,2,19,0,11,0,2,2,3,0,6,0,0,6,12,11,0,0,0,0,0,33,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ColorContrastRatio.java,com.thealgorithms.misc.ColorContrastRatio,main/1[java.lang.String[]],false,120,1,1,0,1,1,1,3,0,0,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ColorContrastRatio.java,com.thealgorithms.misc.ColorContrastRatio,getColorSRgb/1[double],false,68,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,26,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\ColorContrastRatio.java,com.thealgorithms.misc.ColorContrastRatio,"getContrastRatio/2[java.awt.Color,java.awt.Color]",false,22,1,2,1,1,2,1,8,2,2,2,1,1,3,0,0,0,4,0,4,2,6,1,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RabinKarpAlgorithmTest.java,com.thealgorithms.searches.RabinKarpAlgorithmTest,RabinKarpAlgorithmTestMiddle/0,false,32,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,2,1,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RabinKarpAlgorithmTest.java,com.thealgorithms.searches.RabinKarpAlgorithmTest,RabinKarpAlgorithmTestNotFound/0,false,50,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,2,1,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RabinKarpAlgorithmTest.java,com.thealgorithms.searches.RabinKarpAlgorithmTest,RabinKarpAlgorithmTestLast/0,false,41,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,2,1,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RabinKarpAlgorithmTest.java,com.thealgorithms.searches.RabinKarpAlgorithmTest,RabinKarpAlgorithmTestFront/0,false,23,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,2,1,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RabinKarpAlgorithmTest.java,com.thealgorithms.searches.RabinKarpAlgorithmTest,RabinKarpAlgorithmTestExample/0,false,14,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,2,1,3,0,0,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\ProductCipher.java,com.thealgorithms.ciphers.ProductCipher,main/1[java.lang.String[]],false,7,0,0,0,0,9,13,54,0,19,1,13,0,0,7,2,0,5,11,10,22,11,2,0,0,0,22,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\ValidParenthesesTest.java,com.thealgorithms.strings.ValidParenthesesTest,testThree/0,false,20,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\ValidParenthesesTest.java,com.thealgorithms.strings.ValidParenthesesTest,testOne/0,false,9,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\ValidParenthesesTest.java,com.thealgorithms.strings.ValidParenthesesTest,testTwo/0,false,14,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\graphs\KosarajuTest.java,com.thealgorithms.datastructures.graphs.KosarajuTest,findStronglyConnectedComps/0,false,16,1,0,0,0,2,8,24,0,5,0,8,0,0,1,0,0,0,0,30,5,0,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\graphs\KosarajuTest.java,com.thealgorithms.datastructures.graphs.KosarajuTest,findStronglyConnectedCompsShouldGetSingleNodes/0,false,53,1,0,0,0,2,8,19,0,5,0,8,0,0,1,0,0,0,0,26,5,0,1,0,0,0,18,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BubbleSortRecursion.java,com.thealgorithms.sorts.BubbleSortRecursion,"bubbleSort/2[T[],int]",false,47,3,5,2,3,4,3,12,0,2,2,3,1,0,1,0,0,0,0,5,3,4,2,0,0,0,18,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BubbleSortRecursion.java,com.thealgorithms.sorts.BubbleSortRecursion,sort/1[T[]],false,33,2,1,0,1,1,1,4,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BubbleSortRecursion.java,com.thealgorithms.sorts.BubbleSortRecursion,main/1[java.lang.String[]],false,10,1,2,0,2,3,3,12,0,5,1,3,0,0,2,0,0,1,0,8,6,3,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase2/0,false,15,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase6/0,false,37,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase5/0,false,32,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase1/0,false,10,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase7/0,false,43,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase4/0,false,26,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase3/0,false,21,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerimeterTest.java,com.thealgorithms.maths.PerimeterTest,testcase8/0,false,48,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,6,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,main/1[java.lang.String[]],false,13,1,5,0,5,1,5,17,0,3,1,5,0,0,0,0,0,0,5,5,3,2,0,0,0,0,9,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,setSize/1[int],false,166,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,setHead/1[com.thealgorithms.datastructures.stacks.NodeStack<?>],false,142,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,NodeStack/1[Item],true,55,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,isEmpty/0,false,110,1,1,0,1,2,1,3,1,0,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,getHead/0,false,138,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,getSize/0,false,162,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,size/0,false,119,1,1,0,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,pop/0,false,85,2,6,0,6,1,6,7,1,1,0,6,2,1,0,0,0,0,0,1,1,1,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,push/1[Item],false,64,2,9,0,9,2,8,14,0,1,1,8,3,1,0,0,0,0,0,1,1,1,1,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,getPrevious/0,false,154,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,getNext/0,false,146,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,print/0,false,129,1,1,0,1,2,3,5,0,1,0,3,0,0,1,1,0,0,0,0,2,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,setNext/1[com.thealgorithms.datastructures.stacks.NodeStack<?>],false,150,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,NodeStack/0,true,53,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,getData/0,false,170,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,setData/1[Item],false,174,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,peek/0,false,101,2,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NodeStack.java,com.thealgorithms.datastructures.stacks.NodeStack,setPrevious/1[com.thealgorithms.datastructures.stacks.NodeStack<?>],false,158,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan$PolarOrder,"compare/2[com.thealgorithms.geometry.Point,com.thealgorithms.geometry.Point]",false,128,2,1,0,1,11,1,14,6,4,2,1,0,0,0,2,0,0,0,15,4,4,5,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\MyAtoiTest.java,com.thealgorithms.strings.MyAtoiTest,testSix/0,false,35,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\MyAtoiTest.java,com.thealgorithms.strings.MyAtoiTest,testThree/0,false,20,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\MyAtoiTest.java,com.thealgorithms.strings.MyAtoiTest,testSeven/0,false,40,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\MyAtoiTest.java,com.thealgorithms.strings.MyAtoiTest,testFour/0,false,25,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\MyAtoiTest.java,com.thealgorithms.strings.MyAtoiTest,testFive/0,false,30,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\MyAtoiTest.java,com.thealgorithms.strings.MyAtoiTest,testOne/0,false,10,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\MyAtoiTest.java,com.thealgorithms.strings.MyAtoiTest,testTwo/0,false,15,2,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,1,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\CountFriendsPairing.java,com.thealgorithms.dynamicprogramming.CountFriendsPairing,"countFriendsPairing/2[int,int[]]",false,18,1,0,0,0,4,0,13,2,3,2,0,0,0,2,1,0,0,0,8,5,5,2,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,LRUCache/0,true,25,1,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,LRUCache/1[int],true,29,1,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,checkCapacity/1[int],false,53,0,0,0,0,2,0,5,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,get/1[K],false,59,4,2,0,2,2,4,8,2,1,1,4,0,0,0,0,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,"put/2[K,V]",false,89,4,7,0,7,3,11,20,1,2,2,11,0,0,0,1,0,0,0,0,3,0,1,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,evict/0,false,42,3,3,0,3,2,3,10,1,1,0,3,0,0,0,1,0,0,1,0,2,0,1,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,setCapacity/1[int],false,33,4,3,0,3,2,5,8,0,2,1,5,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,"moveNodeToLast/1[com.thealgorithms.datastructures.caches.LRUCache.Entry<K,V>]",false,68,3,4,0,4,5,4,20,1,2,1,4,0,0,0,4,0,0,0,0,4,0,1,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache,"addNewEntry/1[com.thealgorithms.datastructures.caches.LRUCache.Entry<K,V>]",false,110,3,2,0,2,2,3,11,1,0,1,3,0,0,0,0,0,0,0,0,3,0,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,MaxHeap/1[java.util.List<com.thealgorithms.datastructures.heaps.HeapElement>],true,16,2,1,0,1,4,3,14,0,0,1,3,1,3,1,2,0,0,2,1,1,0,2,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,getElement/1[int],false,37,1,1,1,0,3,2,6,1,0,1,2,0,0,0,0,0,2,1,2,0,1,1,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,extractMax/0,false,100,2,2,1,1,1,2,5,1,1,0,2,1,4,0,0,0,0,0,2,1,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,getElementKey/1[int],false,45,1,4,3,1,3,3,6,1,0,1,3,0,0,0,0,0,2,1,2,0,1,1,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,toggleDown/1[int],false,71,2,4,1,3,7,6,15,0,2,1,6,2,1,1,0,0,7,0,16,5,16,2,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,getElement/0,false,149,3,2,0,2,2,1,8,1,0,0,1,1,5,0,0,1,0,1,0,0,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,"swap/2[int,int]",false,54,1,2,2,0,1,2,5,0,1,2,2,0,0,0,0,0,0,0,4,1,4,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,deleteElement/1[int],false,113,2,6,1,5,10,10,19,0,0,1,10,4,3,0,0,1,8,2,7,0,6,2,0,0,0,23,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,toggleUp/1[int],false,61,2,5,2,3,2,5,7,0,1,1,5,2,1,1,0,0,0,0,4,2,4,1,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MaxHeap.java,com.thealgorithms.datastructures.heaps.MaxHeap,insertElement/1[com.thealgorithms.datastructures.heaps.HeapElement],false,107,2,2,1,1,1,3,4,0,0,1,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\WordBoggle.java,com.thealgorithms.misc.Trie,Trie/0,true,157,1,2,1,1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\WordBoggle.java,com.thealgorithms.misc.Trie,add/1[java.lang.String],false,162,1,2,1,1,3,5,13,0,4,1,5,0,0,1,0,0,0,0,1,6,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UpperBound.java,com.thealgorithms.searches.UpperBound,main/1[java.lang.String[]],false,31,1,2,0,2,3,10,12,0,8,1,10,0,0,0,0,0,0,2,5,8,3,0,0,0,1,27,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UpperBound.java,com.thealgorithms.searches.UpperBound,"find/2[T[],T]",false,78,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UpperBound.java,com.thealgorithms.searches.UpperBound,"search/4[T[],T,int,int]",false,96,2,3,2,1,3,2,13,3,2,4,2,1,0,0,0,0,1,0,3,2,3,1,0,0,0,26,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestPalindromicSubsequence.java,com.thealgorithms.dynamicprogramming.LongestPalindromicSubsequence,main/1[java.lang.String[]],false,9,1,1,0,1,1,2,8,0,4,1,2,1,2,0,0,0,0,4,0,4,2,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestPalindromicSubsequence.java,com.thealgorithms.dynamicprogramming.LongestPalindromicSubsequence,LPS/1[java.lang.String],false,20,1,2,1,1,1,3,5,1,1,1,3,1,1,0,0,0,0,0,0,2,0,0,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestPalindromicSubsequence.java,com.thealgorithms.dynamicprogramming.LongestPalindromicSubsequence,"recursiveLPS/2[java.lang.String,java.lang.String]",false,26,1,3,2,1,5,4,23,1,4,2,4,1,0,0,3,0,0,2,13,8,8,3,0,0,0,10,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BucketSortTest.java,com.thealgorithms.sorts.BucketSortTest,bucketSortSingleIntegerArray/0,false,10,3,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BucketSortTest.java,com.thealgorithms.sorts.BucketSortTest,bucketSortDuplicateIntegerArrayWithNegativeNum/0,false,42,3,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,16,3,0,0,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BucketSortTest.java,com.thealgorithms.sorts.BucketSortTest,bucketSortNonDuplicateIntegerArrayWithNegativeNum/0,false,34,3,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,14,3,0,0,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BucketSortTest.java,com.thealgorithms.sorts.BucketSortTest,bucketSortNonDuplicateIntegerArray/0,false,18,3,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,14,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BucketSortTest.java,com.thealgorithms.sorts.BucketSortTest,bucketSortDuplicateIntegerArray/0,false,26,3,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,16,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToBinary.java,com.thealgorithms.conversions.DecimalToBinary,main/1[java.lang.String[]],false,15,1,2,0,2,1,2,4,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToBinary.java,com.thealgorithms.conversions.DecimalToBinary,conventionalConversion/0,false,24,0,1,1,0,2,5,13,0,5,0,5,0,0,1,1,0,0,2,6,7,4,1,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToBinary.java,com.thealgorithms.conversions.DecimalToBinary,bitwiseConversion/0,false,44,0,1,1,0,2,5,13,0,5,0,5,0,0,1,1,0,1,2,6,7,2,1,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,Queue/1[int],true,50,1,1,1,0,1,0,7,0,0,1,0,0,0,0,0,0,0,0,3,5,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,peekRear/0,false,104,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,isEmpty/0,false,113,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,getSize/0,false,131,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,remove/0,false,80,1,2,1,1,2,1,9,2,1,0,1,1,1,0,0,0,1,0,2,2,2,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,isFull/0,false,122,0,2,2,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,Queue/0,true,41,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,insert/1[int],false,64,1,2,1,1,2,1,9,2,0,1,1,1,1,0,0,0,1,0,1,2,2,1,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,peekFront/0,false,95,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queue,toString/0,false,136,0,1,1,0,3,5,12,1,2,0,5,0,0,1,1,0,0,3,1,3,2,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeTraversal.java,com.thealgorithms.datastructures.trees.TreeTraversal,main/1[java.lang.String[]],false,11,1,6,0,6,1,7,21,0,1,1,7,0,0,0,0,0,0,4,7,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FFTBluestein.java,com.thealgorithms.maths.FFTBluestein,"fftBluestein/2[java.util.ArrayList<com.thealgorithms.maths.FFT.Complex>,boolean]",false,26,2,6,1,5,8,9,31,0,16,2,9,0,0,5,0,0,2,0,14,16,18,2,0,0,0,43,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SegmentTree.java,com.thealgorithms.datastructures.trees.SegmentTree,"SegmentTree/2[int,int[]]",true,10,2,1,0,1,1,4,9,0,2,2,4,1,1,0,0,0,1,0,7,6,4,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SegmentTree.java,com.thealgorithms.datastructures.trees.SegmentTree,"constructTree/4[int[],int,int,int]",false,22,2,3,2,1,2,1,9,2,1,4,1,1,0,0,1,0,1,0,6,3,9,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SegmentTree.java,com.thealgorithms.datastructures.trees.SegmentTree,"update/2[int,int]",false,57,1,1,0,1,3,1,8,1,1,2,1,1,1,0,0,0,0,0,4,2,2,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SegmentTree.java,com.thealgorithms.datastructures.trees.SegmentTree,"updateTree/5[int,int,int,int,int]",false,43,1,3,2,1,4,1,11,1,1,5,1,1,0,0,1,0,1,0,6,2,8,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SegmentTree.java,com.thealgorithms.datastructures.trees.SegmentTree,"getSum/2[int,int]",false,91,1,1,0,1,4,1,6,2,0,2,1,1,1,0,0,0,0,0,5,0,1,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SegmentTree.java,com.thealgorithms.datastructures.trees.SegmentTree,"getSumTree/5[int,int,int,int,int]",false,74,1,3,2,1,5,1,10,3,1,5,1,1,0,0,0,0,2,0,7,1,9,1,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMapTest.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMapTest,getMap/0,false,5,4,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Perimeter.java,com.thealgorithms.maths.Perimeter,perimeterCircle/1[float],false,53,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,12,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Perimeter.java,com.thealgorithms.maths.Perimeter,"perimeterRegularPolygon/2[int,float]",false,14,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Perimeter.java,com.thealgorithms.maths.Perimeter,"perimeterIrregularPolygon/4[float,float,float,float[]]",false,28,1,0,0,0,2,0,7,1,1,4,0,0,0,1,0,0,0,0,0,2,1,1,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Perimeter.java,com.thealgorithms.maths.Perimeter,"perimeterRectangle/2[float,float]",false,43,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestOddStringsMidGiven/0,false,105,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,11,0,3,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestEvenStringsMidGiven/0,false,92,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,13,0,3,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestEven/0,false,27,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,12,3,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestOdd/0,false,14,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,10,3,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestEvenMidGiven/0,false,79,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,13,3,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestOddStrings/0,false,53,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,10,0,3,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestOddMidGiven/0,false,66,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,11,3,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\DutchNationalFlagSortTest.java,com.thealgorithms.sorts.DutchNationalFlagSortTest,DNFSTestEvenStrings/0,false,40,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,12,0,3,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\cn\HammingDistance.java,com.thealgorithms.others.cn.HammingDistance,"getHammingDistanceBetweenBits/2[java.lang.String,java.lang.String]",false,11,1,0,0,0,4,5,21,1,5,2,5,0,0,1,2,0,0,3,5,6,1,1,0,0,0,27,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearchTest.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearchTest,rowColumnSorted2dArrayBinarySearchTestSide/0,false,25,2,0,0,0,1,2,8,0,4,0,2,0,0,0,0,0,0,0,23,4,0,0,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearchTest.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearchTest,rowColumnSorted2dArrayBinarySearchTestMiddle/0,false,10,2,0,0,0,1,2,8,0,4,0,2,0,0,0,0,0,0,0,23,4,0,0,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearchTest.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearchTest,rowColumnSorted2dArray_BinarySearchTestUpperSide/0,false,55,2,0,0,0,1,2,8,0,4,0,2,0,0,0,0,0,0,0,23,4,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearchTest.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearchTest,rowColumnSorted2dArray_BinarySearchTestLowerSide/0,false,85,2,0,0,0,1,2,8,0,4,0,2,0,0,0,0,0,0,0,23,4,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearchTest.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearchTest,rowColumnSorted2dArray_BinarySearchTestUpper/0,false,40,2,0,0,0,1,2,8,0,4,0,2,0,0,0,0,0,0,0,23,4,0,0,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearchTest.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearchTest,rowColumnSorted2dArray_BinarySearchTestNotFound/0,false,100,2,0,0,0,1,2,8,0,4,0,2,0,0,0,0,0,0,0,23,4,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearchTest.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearchTest,rowColumnSorted2dArray_BinarySearchTestLower/0,false,70,2,0,0,0,1,2,8,0,4,0,2,0,0,0,0,0,0,0,23,4,0,0,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Knapsack.java,com.thealgorithms.dynamicprogramming.Knapsack,"knapSack/4[int,int[],int[],int]",false,9,1,1,1,0,8,1,21,1,3,4,1,0,0,2,4,0,0,0,13,6,10,3,0,0,0,12,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Knapsack.java,com.thealgorithms.dynamicprogramming.Knapsack,main/1[java.lang.String[]],false,37,2,1,0,1,1,2,6,0,3,1,2,1,1,0,0,0,0,0,7,3,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountCharTest.java,com.thealgorithms.others.CountCharTest,testCountCharacters/0,false,10,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,1,1,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestCommonSubsequence.java,com.thealgorithms.dynamicprogramming.LongestCommonSubsequence,main/1[java.lang.String[]],false,64,1,1,0,1,2,3,11,0,3,1,3,1,2,0,1,0,0,6,0,3,4,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestCommonSubsequence.java,com.thealgorithms.dynamicprogramming.LongestCommonSubsequence,"lcsString/3[java.lang.String,java.lang.String,int[][]]",false,47,1,1,1,0,5,5,18,1,3,3,5,0,0,1,1,0,0,0,7,3,5,2,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestCommonSubsequence.java,com.thealgorithms.dynamicprogramming.LongestCommonSubsequence,"getLCS/2[java.lang.String,java.lang.String]",false,5,2,2,1,1,11,4,28,3,7,2,4,1,1,4,4,0,0,3,25,11,15,3,0,0,0,14,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$BernoulliHeightStrategy,BernoulliHeightStrategy/0,true,295,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$BernoulliHeightStrategy,BernoulliHeightStrategy/1[double],true,299,0,0,0,0,3,0,6,0,0,1,0,0,0,0,0,0,0,1,2,1,1,1,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$BernoulliHeightStrategy,height/1[int],false,309,0,0,0,0,2,2,7,1,1,1,2,0,0,0,0,0,0,0,1,1,2,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList$BernoulliHeightStrategy,nodeHeight/1[int],false,320,0,0,0,0,3,1,11,2,2,1,1,0,0,1,0,0,3,0,6,2,5,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PerlinNoise.java,com.thealgorithms.others.PerlinNoise,"interpolate/3[float,float,float]",false,133,0,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,1,0,1,0,4,0,0,0,0,15,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PerlinNoise.java,com.thealgorithms.others.PerlinNoise,"generatePerlinNoiseLayer/4[float[][],int,int,int]",false,84,2,2,1,1,3,1,19,1,13,4,1,1,1,2,0,0,6,0,4,14,14,2,0,0,0,33,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PerlinNoise.java,com.thealgorithms.others.PerlinNoise,"generatePerlinNoise/5[int,int,int,float,long]",false,26,2,2,1,1,9,2,31,1,14,5,2,1,2,8,0,0,0,0,11,20,2,3,0,0,0,38,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PerlinNoise.java,com.thealgorithms.others.PerlinNoise,main/1[java.lang.String[]],false,137,3,1,0,1,5,10,41,0,15,1,10,1,3,3,0,0,0,6,3,16,1,4,0,0,0,26,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\FloodFill.java,com.thealgorithms.backtracking.FloodFill,"floodFill/5[int[][],int,int,int,int]",false,47,2,4,1,3,6,3,14,3,0,5,3,3,1,0,1,0,0,0,14,0,12,1,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\FloodFill.java,com.thealgorithms.backtracking.FloodFill,"putPixel/4[int[][],int,int,int]",false,28,1,1,1,0,1,0,3,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\FloodFill.java,com.thealgorithms.backtracking.FloodFill,"getPixel/3[int[][],int,int]",false,17,1,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\longestNonRepeativeSubstring.java,com.thealgorithms.strings.longestNonRepeativeSubstring,lengthOfLongestSubstring/1[java.lang.String],false,7,0,1,1,0,9,6,26,1,5,1,6,0,0,2,3,0,0,0,5,10,1,5,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DNFSort.java,com.thealgorithms.sorts.DNFSort,main/1[java.lang.String[]],false,46,1,2,0,2,1,3,7,0,2,1,3,2,1,0,0,0,0,1,12,2,0,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DNFSort.java,com.thealgorithms.sorts.DNFSort,"sort012/2[int[],int]",false,7,1,1,1,0,5,0,29,0,4,2,0,0,0,1,0,0,0,0,7,10,1,2,0,0,0,7,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DNFSort.java,com.thealgorithms.sorts.DNFSort,"printArray/2[int[],int]",false,38,1,1,1,0,2,2,6,0,1,2,2,0,0,1,0,0,0,2,1,1,1,1,0,0,0,5,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestValidParentheses.java,com.thealgorithms.dynamicprogramming.LongestValidParentheses,getLongestValidParentheses/1[java.lang.String],false,14,2,0,0,0,11,3,26,2,6,1,3,0,0,1,6,0,1,0,23,11,9,4,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\ReverseStringRecursive.java,com.thealgorithms.strings.ReverseStringRecursive,reverse/1[java.lang.String],false,13,1,5,4,1,2,4,8,2,0,1,4,1,0,0,0,0,0,0,2,0,1,1,0,0,0,6,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LinearSearchThread.java,com.thealgorithms.searches.Searcher,run/0,false,54,0,0,0,0,4,0,9,0,1,0,0,0,0,1,1,0,0,0,0,3,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LinearSearchThread.java,com.thealgorithms.searches.Searcher,getResult/0,false,64,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LinearSearchThread.java,com.thealgorithms.searches.Searcher,"Searcher/4[int[],int,int,int]",true,46,1,1,1,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LucasSeries.java,com.thealgorithms.maths.LucasSeries,lucasSeriesIteration/1[int],false,38,0,1,1,0,2,0,10,1,4,1,0,0,0,1,0,0,0,0,3,6,1,1,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LucasSeries.java,com.thealgorithms.maths.LucasSeries,main/1[java.lang.String[]],false,8,1,2,0,2,15,2,9,0,0,1,2,2,1,0,14,0,0,0,28,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LucasSeries.java,com.thealgorithms.maths.LucasSeries,lucasSeries/1[int],false,25,1,3,2,1,3,1,3,1,0,1,1,1,0,0,2,0,0,0,6,0,3,0,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\BinaryToDecimal.java,com.thealgorithms.conversions.BinaryToDecimal,binaryToDecimal/1[int],false,10,0,1,1,0,2,1,10,1,4,1,1,0,0,1,1,0,0,0,6,6,2,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\BinaryToDecimal.java,com.thealgorithms.conversions.BinaryToDecimal,main/1[java.lang.String[]],false,26,1,1,0,1,1,5,6,0,1,1,5,1,1,0,0,0,0,2,0,1,1,0,0,0,0,12,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,"multiply/2[java.math.BigDecimal[][],java.math.BigDecimal[][]]",false,93,1,2,1,1,2,8,16,3,9,2,8,1,2,0,0,0,0,0,5,7,0,1,0,0,3,18,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,"assertThat/2[java.math.BigDecimal[][],java.math.BigDecimal[][]]",false,132,0,1,1,0,2,3,5,0,0,2,3,0,0,0,0,0,0,1,0,0,0,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,main/1[java.lang.String[]],false,144,1,4,0,4,1,5,23,0,12,1,5,4,6,0,0,0,0,3,45,12,0,1,0,0,3,18,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,"add/2[java.math.BigDecimal[][],java.math.BigDecimal[][]]",false,79,1,2,1,1,1,1,3,1,0,2,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,"subtract/2[java.math.BigDecimal[][],java.math.BigDecimal[][]]",false,86,1,2,1,1,1,1,3,1,0,2,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,"hasEqualSizes/2[java.math.BigDecimal[][],java.math.BigDecimal[][]]",false,23,1,2,1,1,3,1,3,1,0,2,1,1,1,0,2,0,1,0,2,0,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,"canMultiply/2[java.math.BigDecimal[][],java.math.BigDecimal[][]]",false,35,1,2,1,1,2,1,3,1,0,2,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,"operate/3[java.math.BigDecimal[][],java.math.BigDecimal[][],java.util.function.BiFunction<java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal>]",false,47,1,3,2,1,2,6,15,2,7,3,6,1,2,0,0,0,0,0,3,6,0,1,0,0,2,14,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MatrixUtil.java,com.thealgorithms.maths.MatrixUtil,isValid/1[java.math.BigDecimal[][]],false,16,0,2,2,0,4,0,3,1,0,1,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\CheckAnagrams.java,com.thealgorithms.strings.CheckAnagrams,"isAnagrams/2[java.lang.String,java.lang.String]",false,25,0,5,5,0,6,8,25,3,8,2,8,0,0,3,1,0,0,0,6,10,2,2,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\CheckAnagrams.java,com.thealgorithms.strings.CheckAnagrams,main/1[java.lang.String[]],false,12,1,1,0,1,1,1,5,0,0,1,1,1,1,0,0,0,0,6,0,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\StrandSort.java,com.thealgorithms.sorts.StrandSort,"merge/2[java.util.LinkedList<E>,java.util.LinkedList<E>]",false,33,1,1,1,0,4,6,10,1,1,2,6,0,0,1,0,0,0,0,1,1,0,2,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\StrandSort.java,com.thealgorithms.sorts.StrandSort,strandSort/1[java.util.LinkedList<E>],false,11,2,1,0,1,5,11,17,2,4,1,11,1,1,2,0,0,0,0,3,5,0,3,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,peek/0,false,48,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,print/0,false,69,0,1,1,0,2,2,6,0,1,0,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,isFull/0,false,61,0,1,1,0,2,0,6,2,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,MinPriorityQueue/1[int],true,22,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,1,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,main/1[java.lang.String[]],false,132,1,4,0,4,1,3,14,0,1,1,3,3,4,0,0,0,0,0,9,1,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,heapSort/0,false,79,1,2,1,1,2,1,5,0,1,0,1,1,2,1,0,0,0,0,1,1,0,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,sink/0,false,86,0,1,1,0,12,0,29,0,3,0,0,0,0,1,0,0,0,0,24,8,23,3,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,isEmpty/0,false,53,0,0,0,0,2,0,6,2,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,delete/0,false,123,1,2,1,1,1,1,8,1,1,0,1,1,1,0,0,0,0,0,2,3,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\MinPriorityQueue.java,com.thealgorithms.datastructures.heaps.MinPriorityQueue,insert/1[int],false,30,1,2,1,1,4,1,16,1,2,1,1,1,1,1,0,0,0,0,7,6,6,2,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NextSmallerElement.java,com.thealgorithms.datastructures.stacks.NextSmallerElement,main/1[java.lang.String[]],false,63,2,1,0,1,1,3,5,0,2,1,3,1,1,0,0,0,0,0,7,2,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NextSmallerElement.java,com.thealgorithms.datastructures.stacks.NextSmallerElement,findNextSmallerElements/1[int[]],false,42,1,1,1,0,6,5,19,2,3,1,5,0,0,2,1,0,0,0,3,5,0,2,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\HappyNumbersSeq.java,com.thealgorithms.others.HappyNumbersSeq,main/1[java.lang.String[]],false,14,1,2,0,2,4,5,11,0,3,1,5,2,1,1,2,0,0,4,2,4,1,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\HappyNumbersSeq.java,com.thealgorithms.others.HappyNumbersSeq,sumSquares/1[int],false,26,0,1,1,0,2,0,8,1,2,1,0,0,0,1,0,0,0,0,4,4,2,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\HappyNumbersSeq.java,com.thealgorithms.others.HappyNumbersSeq,isSad/1[int],false,35,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\ReverseStack.java,com.thealgorithms.datastructures.stacks.ReverseStack,main/1[java.lang.String[]],false,13,1,1,0,1,3,9,18,0,4,1,9,1,2,2,0,0,0,4,1,4,1,1,0,0,0,18,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\ReverseStack.java,com.thealgorithms.datastructures.stacks.ReverseStack,"insertAtBottom/2[java.util.Stack<java.lang.Integer>,int]",false,51,1,3,2,1,2,5,10,1,1,2,5,1,0,0,0,0,0,0,0,1,0,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\ReverseStack.java,com.thealgorithms.datastructures.stacks.ReverseStack,reverseStack/1[java.util.Stack<java.lang.Integer>],false,34,1,4,2,2,2,5,9,1,1,1,5,2,1,0,0,0,0,0,0,1,0,1,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\VolumeTest.java,com.thealgorithms.maths.VolumeTest,volume/0,false,9,1,0,0,0,9,9,10,0,0,0,9,0,0,0,8,0,0,0,22,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BeadSort.java,com.thealgorithms.sorts.BeadSort,sort/1[int[]],false,8,2,0,0,0,10,1,32,1,14,1,1,0,0,8,1,0,0,0,14,19,2,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GCDTest.java,com.thealgorithms.maths.GCDTest,test6/0,false,43,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GCDTest.java,com.thealgorithms.maths.GCDTest,test2/0,false,17,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,1,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GCDTest.java,com.thealgorithms.maths.GCDTest,test5/0,false,38,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GCDTest.java,com.thealgorithms.maths.GCDTest,test4/0,false,33,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GCDTest.java,com.thealgorithms.maths.GCDTest,test7/0,false,48,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GCDTest.java,com.thealgorithms.maths.GCDTest,test3/0,false,25,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,1,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\GCDTest.java,com.thealgorithms.maths.GCDTest,test1/0,false,9,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,1,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,BinaryTree/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],true,73,1,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,BinaryTree/0,true,66,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,getRoot/0,false,256,1,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,find/1[int],false,83,1,2,2,0,6,0,21,4,1,1,0,0,0,1,3,0,0,0,0,3,0,3,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,findSuccessor/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,238,1,1,1,0,3,0,12,2,2,1,0,0,0,1,2,0,0,0,0,4,0,1,0,0,0,29,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,put/1[int],false,108,2,2,0,2,3,1,19,2,2,1,1,1,1,0,1,0,0,0,0,7,0,2,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,remove/1[int],false,135,2,2,0,2,17,2,81,8,2,1,2,2,1,0,12,0,0,0,0,27,0,3,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,postOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,292,2,4,3,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,inOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,266,2,4,3,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,preOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,279,2,4,3,1,2,2,7,0,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BinaryTree.java,com.thealgorithms.datastructures.trees.BinaryTree,bfs/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,307,1,0,0,0,5,4,16,0,1,1,4,0,0,1,3,0,0,1,0,2,1,2,0,0,0,33,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\RodCutting.java,com.thealgorithms.dynamicprogramming.RodCutting,"cutRod/2[int[],int]",false,10,1,1,1,0,3,1,12,1,4,2,1,0,0,2,0,0,0,0,6,7,3,2,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\RodCutting.java,com.thealgorithms.dynamicprogramming.RodCutting,main/1[java.lang.String[]],false,27,2,1,0,1,1,2,5,0,2,1,2,1,1,0,0,0,0,1,5,2,1,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\DecimalToAnyUsingStack.java,com.thealgorithms.datastructures.stacks.DecimalToAnyUsingStack,"convert/2[int,int]",false,24,1,1,1,0,5,6,17,1,3,2,6,0,0,2,1,0,0,1,3,4,2,1,0,0,0,21,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\DecimalToAnyUsingStack.java,com.thealgorithms.datastructures.stacks.DecimalToAnyUsingStack,main/1[java.lang.String[]],false,7,1,1,0,1,1,2,7,0,0,1,2,1,1,0,0,0,0,5,10,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CountWords.java,com.thealgorithms.others.CountWords,main/1[java.lang.String[]],false,13,1,2,0,2,1,5,8,0,2,1,5,2,1,0,0,0,0,5,0,2,2,0,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CountWords.java,com.thealgorithms.others.CountWords,wordCount/1[java.lang.String],false,25,0,1,1,0,3,3,6,2,0,1,3,0,0,0,1,0,0,1,1,0,0,1,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CountWords.java,com.thealgorithms.others.CountWords,secondaryWordCount/1[java.lang.String],false,40,0,1,1,0,6,8,13,2,1,1,8,0,0,1,1,0,0,1,1,2,0,2,0,0,0,35,10,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerfectNumberTest.java,com.thealgorithms.maths.PerfectNumberTest,perfectNumber/0,false,9,1,0,0,0,3,4,12,0,2,0,4,0,0,2,0,0,0,0,10,2,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForSevenElements/0,false,47,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,8,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForOneElement/0,false,11,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,2,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForSixElements/0,false,41,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,7,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForThreeElements/0,false,23,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForFourElements/0,false,29,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,5,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForEightElements/0,false,53,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,9,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForTwoElements/0,false,17,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,3,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\LinkListSortTest.java,com.thealgorithms.others.LinkListSortTest,testForFiveElements/0,false,35,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\buffers\CircularBuffer.java,com.thealgorithms.datastructures.buffers.CircularBuffer$CircularPointer,"CircularPointer/2[int,int]",true,48,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\buffers\CircularBuffer.java,com.thealgorithms.datastructures.buffers.CircularBuffer$CircularPointer,getAndIncrement/0,false,53,0,2,2,0,2,0,6,1,1,0,0,0,0,0,1,0,0,0,1,2,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SelectionSort.java,com.thealgorithms.sorts.SelectionSort,sort/1[T[]],false,13,1,0,0,0,5,1,17,1,5,1,1,0,0,2,1,0,0,0,4,8,2,3,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SelectionSort.java,com.thealgorithms.sorts.SelectionSort,main/1[java.lang.String[]],false,34,1,3,0,3,3,3,13,0,7,1,3,0,0,2,0,0,0,5,16,7,4,1,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\LFUCacheTest.java,com.thealgorithms.datastructures.caches.LFUCacheTest,testLFUCacheWithStringValueShouldPass/0,false,38,2,0,0,0,1,3,15,0,1,0,3,0,0,0,0,0,0,10,13,1,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\LFUCacheTest.java,com.thealgorithms.datastructures.caches.LFUCacheTest,testLFUCacheWithIntegerValueShouldPass/0,false,10,2,0,0,0,1,3,15,0,1,0,3,0,0,0,0,0,0,0,23,1,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\LFUCacheTest.java,com.thealgorithms.datastructures.caches.LFUCacheTest,testAddNodeWithUpdatedFrequency/0,false,70,2,0,0,0,1,3,9,0,1,0,3,0,0,0,0,0,0,6,7,1,0,0,0,0,0,13,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AmicableNumber.java,com.thealgorithms.maths.AmicableNumber,"recursiveCalcOfDividerSum/2[int,int]",false,87,1,3,2,1,3,1,11,3,0,2,1,1,0,0,2,0,0,0,3,0,2,1,0,0,0,26,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AmicableNumber.java,com.thealgorithms.maths.AmicableNumber,"findAllInRange/2[int,int]",false,34,1,2,1,1,4,5,14,0,4,2,5,1,2,2,0,0,0,9,3,4,3,3,0,0,0,21,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AmicableNumber.java,com.thealgorithms.maths.AmicableNumber,main/1[java.lang.String[]],false,22,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,2,0,0,0,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AmicableNumber.java,com.thealgorithms.maths.AmicableNumber,"isAmicableNumber/2[int,int]",false,71,1,2,1,1,3,1,3,1,0,2,1,1,1,0,2,0,2,0,0,0,0,0,0,0,0,20,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.MemoryManagementAlgorithms,"fitProcess/2[int[],int[]]",false,11,1,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,1025,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\OptimalJobSchedulingTest.java,com.thealgorithms.dynamicprogramming.OptimalJobSchedulingTest,testOptimalJobScheduling1/0,false,13,3,0,0,0,3,3,14,0,8,0,3,0,0,2,0,0,0,0,60,8,0,2,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\OptimalJobSchedulingTest.java,com.thealgorithms.dynamicprogramming.OptimalJobSchedulingTest,testOptimalJobScheduling2/0,false,53,3,0,0,0,3,3,14,0,8,0,3,0,0,2,0,0,0,0,31,8,0,2,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\OptimalJobSchedulingTest.java,com.thealgorithms.dynamicprogramming.OptimalJobSchedulingTest,testOptimalJobScheduling3/0,false,87,3,0,0,0,3,3,14,0,8,0,3,0,0,2,0,0,0,0,68,8,0,2,0,0,0,16,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardDeviationTest.java,com.thealgorithms.maths.StandardDeviationTest,test3/0,false,24,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardDeviationTest.java,com.thealgorithms.maths.StandardDeviationTest,test4/0,false,33,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardDeviationTest.java,com.thealgorithms.maths.StandardDeviationTest,test2/0,false,15,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,11,1,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\StandardDeviationTest.java,com.thealgorithms.maths.StandardDeviationTest,test1/0,false,9,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\MergeSortTest.java,com.thealgorithms.sorts.MergeSortTest,getSortAlgorithm/0,false,5,2,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\FCFSSchedulingTest.java,com.thealgorithms.scheduling.FCFSSchedulingTest,addProcessesForFCFS/0,false,37,1,1,1,0,1,1,10,1,4,0,1,0,0,0,0,0,0,3,6,4,0,0,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\scheduling\FCFSSchedulingTest.java,com.thealgorithms.scheduling.FCFSSchedulingTest,testingProcesses/0,false,15,4,1,0,1,1,8,15,0,2,0,8,1,1,0,0,0,0,3,16,2,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenArrayWithDuplicateValueIsPassed/0,false,116,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,0,12,3,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenEmptyArrayIsPassed/0,false,16,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,0,0,3,0,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenRandomListIsPassed/0,false,164,5,5,0,5,1,7,7,0,4,0,7,1,1,0,0,0,0,0,1,4,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenListWithAllPositiveValuesIsPassed/0,false,56,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,0,12,3,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenStringValueArrayIsPassed/0,false,136,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,10,0,3,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenEmptyListIsPassed/0,false,26,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,0,0,3,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenSingleValuedListIsPassed/0,false,46,3,2,0,2,1,4,6,0,3,0,4,1,1,0,0,0,0,0,2,3,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenArrayWithAllPositiveValuesIsPassed/0,false,66,3,2,0,2,1,4,6,0,3,0,4,1,1,0,0,0,0,0,12,3,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenListWithRealNumberValuesIsPassed/0,false,106,3,2,0,2,1,4,6,0,3,0,4,1,1,0,0,0,0,0,12,3,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,getSortAlgorithm/0,false,13,1,16,16,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1024,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenStringValueListIsPassed/0,false,146,3,2,0,2,1,4,6,0,3,0,4,1,1,0,0,0,0,10,0,3,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenArrayWithAllNegativeValuesIsPassed/0,false,76,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,0,12,3,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenSingleValuedArrayIsPassed/0,false,36,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,0,2,3,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenListWithAllNegativeValuesIsPassed/0,false,86,3,2,0,2,1,4,6,0,3,0,4,1,1,0,0,0,0,0,12,3,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenArrayWithRealNumberValuesIsPassed/0,false,96,3,2,0,2,1,3,6,0,3,0,3,1,1,0,0,0,0,0,12,3,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenListWithDuplicateValueIsPassed/0,false,126,3,2,0,2,1,4,6,0,3,0,4,1,1,0,0,0,0,0,12,3,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortingAlgorithmTest.java,com.thealgorithms.sorts.SortingAlgorithmTest,shouldAcceptWhenRandomArrayIsPassed/0,false,156,5,5,0,5,1,6,6,0,3,0,6,1,1,0,0,0,0,0,1,3,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoundaryFill.java,com.thealgorithms.dynamicprogramming.BoundaryFill,"getPixel/3[int[][],int,int]",false,20,1,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoundaryFill.java,com.thealgorithms.dynamicprogramming.BoundaryFill,printImageArray/1[int[][]],false,127,1,1,1,0,3,2,8,0,2,1,2,0,0,2,0,0,0,1,3,2,1,2,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoundaryFill.java,com.thealgorithms.dynamicprogramming.BoundaryFill,"putPixel/4[int[][],int,int,int]",false,36,1,1,1,0,1,0,3,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoundaryFill.java,com.thealgorithms.dynamicprogramming.BoundaryFill,main/1[java.lang.String[]],false,138,2,2,0,2,1,2,5,0,1,1,2,2,2,0,0,0,0,0,53,1,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoundaryFill.java,com.thealgorithms.dynamicprogramming.BoundaryFill,"boundaryFill/5[int[][],int,int,int,int]",false,55,2,5,2,3,5,3,13,0,0,5,3,3,1,0,2,0,0,0,14,0,12,1,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Krishnamurthy.java,com.thealgorithms.others.Krishnamurthy,main/1[java.lang.String[]],false,15,1,1,0,1,3,4,19,0,5,1,4,1,1,1,1,0,0,3,4,7,5,1,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Krishnamurthy.java,com.thealgorithms.others.Krishnamurthy,fact/1[int],false,7,0,1,1,0,2,0,7,1,2,1,0,0,0,1,0,0,0,0,2,3,1,1,0,0,0,4,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\MedianOfRunningArray.java,com.thealgorithms.misc.MedianOfRunningArray,insert/1[java.lang.Integer],false,24,0,1,1,0,2,3,6,0,0,1,3,0,0,0,0,0,0,0,1,0,1,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\MedianOfRunningArray.java,com.thealgorithms.misc.MedianOfRunningArray,median/0,false,34,0,1,1,0,3,2,6,2,0,0,2,0,0,0,1,0,1,0,1,0,2,1,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\MedianOfRunningArray.java,com.thealgorithms.misc.MedianOfRunningArray,MedianOfRunningArray/0,true,15,0,1,1,0,1,1,4,0,0,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\MedianOfRunningArray.java,com.thealgorithms.misc.MedianOfRunningArray,main/1[java.lang.String[]],false,41,1,3,0,3,2,3,8,0,3,1,3,2,1,1,0,0,0,1,11,3,1,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UnionFind.java,com.thealgorithms.searches.UnionFind,main/1[java.lang.String[]],false,62,1,4,0,4,1,6,16,0,1,1,6,3,3,0,0,0,0,5,6,1,0,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UnionFind.java,com.thealgorithms.searches.UnionFind,count/0,false,47,1,2,1,1,3,4,9,1,2,0,4,1,1,1,0,0,0,0,1,2,0,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UnionFind.java,com.thealgorithms.searches.UnionFind,"union/2[int,int]",false,29,1,2,1,1,4,1,17,1,2,2,1,1,1,0,1,0,0,0,0,5,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UnionFind.java,com.thealgorithms.searches.UnionFind,find/1[int],false,19,1,5,4,1,2,1,7,2,1,1,1,1,0,0,1,0,0,0,0,2,0,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UnionFind.java,com.thealgorithms.searches.UnionFind,UnionFind/1[int],true,10,1,1,1,0,2,0,7,0,1,1,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\UnionFind.java,com.thealgorithms.searches.UnionFind,toString/0,false,57,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,3,0,0,1,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerfectSquareTest.java,com.thealgorithms.maths.PerfectSquareTest,TestPerfectSquareifiscorrect/0,false,10,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerfectSquareTest.java,com.thealgorithms.maths.PerfectSquareTest,TestPerfectSquareifisNegativeNumber/0,false,30,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerfectSquareTest.java,com.thealgorithms.maths.PerfectSquareTest,TestPerfectSquareifisnotcorrect/0,false,20,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NthUglyNumber.java,com.thealgorithms.maths.NthUglyNumber,main/1[java.lang.String[]],false,49,1,2,0,2,1,3,8,0,4,1,3,1,1,0,0,0,0,2,0,4,1,0,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NthUglyNumber.java,com.thealgorithms.maths.NthUglyNumber,getNthUglyNo/1[int],false,21,1,1,1,0,5,1,24,1,9,1,1,0,0,1,3,0,0,0,16,18,6,2,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\KMPSearch.java,com.thealgorithms.searches.KMPSearch,"computeLPSArray/3[java.lang.String,int,int[]]",false,41,1,1,1,0,4,1,21,0,2,3,1,0,0,1,2,0,0,0,6,6,1,3,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\KMPSearch.java,com.thealgorithms.searches.KMPSearch,"KMPSearch/2[java.lang.String,java.lang.String]",false,5,2,1,0,1,7,4,26,2,6,2,4,1,1,1,4,0,4,3,7,9,8,3,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToAnyBase.java,com.thealgorithms.conversions.DecimalToAnyBase,main/1[java.lang.String[]],false,13,1,1,0,1,1,6,12,0,3,1,6,1,2,0,0,0,0,7,0,3,2,0,0,0,0,19,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToAnyBase.java,com.thealgorithms.conversions.DecimalToAnyBase,"convertToAnyBase/2[int,int]",false,45,1,2,1,1,3,6,12,1,2,2,6,1,1,2,0,0,0,0,1,3,1,1,0,0,0,34,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\DecimalToAnyBase.java,com.thealgorithms.conversions.DecimalToAnyBase,reVal/1[int],false,68,0,1,1,0,3,0,8,2,0,1,0,0,0,0,0,0,2,0,3,0,3,1,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp,delete/1[java.lang.String],false,55,1,1,1,0,4,2,16,3,4,1,2,0,0,1,2,0,0,0,1,6,1,2,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp,isValid/1[java.lang.String],false,79,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp,sop/1[java.lang.String],false,72,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp,main/1[java.lang.String[]],false,83,1,6,0,6,12,8,66,0,7,1,8,5,1,1,0,1,0,13,5,11,1,4,0,0,0,33,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp,search/1[java.lang.String],false,42,1,1,1,0,3,2,12,2,4,1,2,0,0,1,1,0,0,0,1,5,1,2,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp,insert/1[java.lang.String],false,29,1,2,1,1,3,2,12,0,3,1,2,0,0,1,1,0,0,0,1,7,2,2,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TrieImp.java,com.thealgorithms.datastructures.trees.TrieImp,TrieImp/0,true,25,1,2,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.WorstFitCPU,"findWorstFit/2[int[],int]",false,131,1,1,1,0,4,0,14,2,3,2,0,0,0,1,0,0,0,0,3,5,0,2,0,0,0,37,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.WorstFitCPU,"fitProcess/2[int[],int[]]",false,162,2,1,0,1,3,2,11,1,2,2,2,1,1,1,1,0,0,0,0,3,0,2,0,0,0,62,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortIntegerArray/0,false,41,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,20,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortSingleIntegerElementArray/0,false,25,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortDuplicateIntegerArray/0,false,49,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,18,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortDuplicateStringArray/0,false,65,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,18,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortEmptyArray/0,false,17,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortSingleStringElementArray/0,false,33,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortStringSymbolArray/0,false,73,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,26,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SlowSortTest.java,com.thealgorithms.sorts.SlowSortTest,slowSortStringArray/0,false,57,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,14,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,BSTIterative/0,true,28,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,postorder/0,false,213,1,0,0,0,8,7,30,1,3,0,7,0,0,2,5,0,0,4,0,6,2,4,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,main/1[java.lang.String[]],false,35,1,5,0,5,1,4,16,0,1,1,4,4,1,0,0,0,0,5,12,1,0,0,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,remove/1[int],false,112,1,1,1,0,13,0,63,0,6,1,0,0,0,2,11,0,0,0,4,27,0,4,0,0,0,29,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,find/1[int],false,273,1,1,1,0,4,1,17,2,1,1,1,0,0,1,1,0,0,2,0,3,2,2,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,preorder/0,false,245,1,0,0,0,5,6,21,1,2,0,6,0,0,1,3,0,0,3,0,2,1,2,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,add/1[int],false,64,1,2,1,1,6,1,33,1,4,1,1,0,0,1,3,0,0,1,4,13,1,2,0,0,0,29,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTIterative.java,com.thealgorithms.datastructures.trees.BSTIterative,inorder/0,false,190,1,1,1,0,5,6,19,1,2,0,6,0,0,2,3,0,0,3,0,5,1,2,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Combinations.java,com.thealgorithms.maths.Combinations,"combinations/2[int,int]",false,28,1,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,1,0,0,0,3,0,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Combinations.java,com.thealgorithms.maths.Combinations,factorial/1[int],false,14,1,3,2,1,4,1,6,1,0,1,1,1,0,0,2,0,0,1,5,0,2,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Combinations.java,com.thealgorithms.maths.Combinations,"combinationsOptimized/2[int,int]",false,45,0,0,0,0,5,0,14,1,3,2,0,0,0,1,0,0,2,2,5,4,4,1,0,0,0,55,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PostOrderTraversal.java,com.thealgorithms.datastructures.trees.PostOrderTraversal,"recursivePostOrder/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,java.util.List<java.lang.Integer>]",false,54,2,3,2,1,2,2,8,1,0,2,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PostOrderTraversal.java,com.thealgorithms.datastructures.trees.PostOrderTraversal,iterativePostOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,32,1,0,0,0,5,4,19,2,3,1,4,0,0,1,3,0,0,0,0,3,0,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PostOrderTraversal.java,com.thealgorithms.datastructures.trees.PostOrderTraversal,recursivePostOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,26,2,1,0,1,1,1,5,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,stream/0,false,111,1,0,0,0,1,2,3,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,"put/2[int,E]",false,61,1,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,toString/0,false,146,0,0,0,0,1,4,3,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,isEmpty/0,false,107,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,main/1[java.lang.String[]],false,211,1,5,0,5,3,8,15,0,1,1,8,0,0,2,0,0,0,2,1,1,0,1,0,0,0,17,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,getSize/0,false,98,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,iterator/0,false,158,1,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,"fastRemove/2[java.lang.Object[],int]",false,115,0,0,0,0,2,1,7,0,1,2,1,0,0,0,0,0,0,0,2,3,3,1,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,DynamicArray/1[int],true,26,0,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,DynamicArray/0,true,35,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,getElement/1[int],false,131,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,get/1[int],false,72,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,remove/1[int],false,82,2,3,0,3,3,4,8,1,1,1,4,0,0,0,0,0,0,0,2,2,2,1,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,add/1[E],false,45,2,1,0,1,2,2,7,0,0,1,2,0,0,0,1,0,0,0,1,2,1,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray,newCapacity/1[int],false,135,0,0,0,0,1,0,4,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Armstrong.java,com.thealgorithms.maths.Armstrong,isArmstrong/1[int],false,19,0,0,0,0,3,1,10,1,3,1,1,0,0,1,1,0,0,0,5,5,1,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Damm.java,com.thealgorithms.others.Damm,dammCheck/1[java.lang.String],false,48,2,3,1,2,3,2,9,1,2,1,2,2,1,1,1,0,0,0,2,3,0,1,0,0,0,29,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Damm.java,com.thealgorithms.others.Damm,checkInput/1[java.lang.String],false,110,0,2,2,0,2,2,6,0,0,1,2,0,0,0,0,0,0,3,0,0,1,1,0,0,0,9,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Damm.java,com.thealgorithms.others.Damm,addDammChecksum/1[java.lang.String],false,70,2,3,1,2,2,2,9,1,2,1,2,2,1,1,0,0,0,0,1,3,1,1,0,0,0,37,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Damm.java,com.thealgorithms.others.Damm,main/1[java.lang.String[]],false,82,1,2,0,2,1,3,10,0,3,1,3,2,5,0,0,0,0,5,0,3,0,0,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Damm.java,com.thealgorithms.others.Damm,generateAndPrint/1[java.lang.String],false,99,1,2,1,1,1,2,4,0,1,1,2,1,2,0,0,0,0,3,0,1,1,0,0,0,0,13,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Damm.java,com.thealgorithms.others.Damm,checkAndPrint/1[java.lang.String],false,94,1,2,1,1,2,2,4,0,1,1,2,1,2,0,0,0,0,4,0,1,1,0,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Damm.java,com.thealgorithms.others.Damm,toIntArray/1[java.lang.String],false,119,1,2,2,0,1,4,3,1,1,1,4,0,0,0,0,0,0,0,1,0,0,0,0,0,1,5,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SelectionSortTest.java,com.thealgorithms.sorts.SelectionSortTest,StringArrTest/0,false,23,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,10,0,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SelectionSortTest.java,com.thealgorithms.sorts.SelectionSortTest,emptyArrTest/0,false,35,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SelectionSortTest.java,com.thealgorithms.sorts.SelectionSortTest,IntegerArrTest/0,false,11,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,18,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMin.java,com.thealgorithms.maths.FindMin,findMin/1[int[]],false,32,1,1,1,0,3,0,9,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FindMin.java,com.thealgorithms.maths.FindMin,main/1[java.lang.String[]],false,11,2,1,0,1,3,6,9,0,4,1,6,1,1,1,1,0,0,0,4,5,2,1,0,0,0,12,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\MyAtoi.java,com.thealgorithms.strings.MyAtoi,myAtoi/1[java.lang.String],false,6,1,7,7,0,37,7,94,8,8,1,7,0,0,1,7,0,1,8,16,18,1,3,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\heaps\LeftistHeapTest.java,com.thealgorithms.datastructures.heaps.LeftistHeapTest,testLeftistHeap/0,false,9,2,0,0,0,2,8,19,0,1,0,8,0,0,0,1,0,0,3,8,1,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckIfBinaryTreeBalanced.java,com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced$BTNode,BTNode/1[int],true,53,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\WineProblem.java,com.thealgorithms.dynamicprogramming.WineProblem,"WPRecursion/3[int[],int,int]",false,17,2,3,2,1,2,2,11,2,5,3,2,1,0,0,1,0,2,0,4,5,11,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\WineProblem.java,com.thealgorithms.dynamicprogramming.WineProblem,main/1[java.lang.String[]],false,77,2,3,0,3,1,4,6,0,1,1,4,3,1,0,0,0,0,3,9,1,5,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\WineProblem.java,com.thealgorithms.dynamicprogramming.WineProblem,"WPTD/4[int[],int,int,int[][]]",false,34,2,3,2,1,3,2,15,3,5,4,2,1,0,0,2,0,2,0,5,6,11,1,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\WineProblem.java,com.thealgorithms.dynamicprogramming.WineProblem,WPBU/1[int[]],false,56,1,1,1,0,4,1,19,1,8,1,1,0,0,2,1,0,2,0,10,10,15,3,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\HeapSortTest.java,com.thealgorithms.sorts.HeapSortTest,getSortAlgorithm/0,false,5,2,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DudeneyNumberTest.java,com.thealgorithms.maths.DudeneyNumberTest,isDudeney/0,false,10,1,0,0,0,1,3,6,0,2,0,3,0,0,0,0,0,0,0,2,2,0,0,0,0,2,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\StackPostfixNotation.java,com.thealgorithms.others.StackPostfixNotation,postfixEvaluate/1[java.lang.String],false,15,0,1,1,0,6,8,28,1,5,1,8,0,0,1,0,0,0,3,0,5,4,3,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\StackPostfixNotation.java,com.thealgorithms.others.StackPostfixNotation,main/1[java.lang.String[]],false,7,1,1,0,1,1,4,6,0,2,1,4,1,1,0,0,0,0,0,0,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree,"updateRange/4[int,int,int,com.thealgorithms.datastructures.trees.LazySegmentTree.Node]",false,111,2,6,2,4,5,4,12,2,1,4,4,1,0,0,0,0,0,0,0,2,0,1,0,0,0,25,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree,getRoot/0,false,149,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree,"getRange/3[int,int,com.thealgorithms.datastructures.trees.LazySegmentTree.Node]",false,130,2,5,2,3,5,3,6,3,0,3,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,21,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree,"buildTree/3[int[],int,int]",false,96,3,5,2,3,2,2,7,2,3,3,2,1,0,0,0,0,1,0,2,3,3,1,0,0,0,25,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree,"updateRange/3[int,int,int]",false,145,1,1,0,1,1,1,3,0,0,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree,"getRange/2[int,int]",false,140,2,2,0,2,2,2,4,1,1,2,2,1,1,0,1,0,0,0,1,1,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree,LazySegmentTree/1[int[]],true,85,2,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\KaprekarNumbers.java,com.thealgorithms.maths.KaprekarNumbers,"kaprekarNumberInRange/2[long,long]",false,14,1,1,0,1,4,2,9,1,3,2,2,1,1,1,0,0,0,1,1,3,1,2,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\KaprekarNumbers.java,com.thealgorithms.maths.KaprekarNumbers,isKaprekarNumber/1[long],false,27,0,1,1,0,3,11,20,2,8,1,11,0,0,0,1,0,3,2,2,9,2,2,0,0,0,16,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ConwayTest.java,com.thealgorithms.others.ConwayTest,testGenerateWith123456/0,false,14,1,0,0,0,1,3,3,0,0,0,3,0,0,0,0,0,0,2,2,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ConwayTest.java,com.thealgorithms.others.ConwayTest,testGenerateWith1/0,false,9,1,0,0,0,1,3,3,0,0,0,3,0,0,0,0,0,0,2,2,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ConwayTest.java,com.thealgorithms.others.ConwayTest,testGenerateWith1A1Z3E1R1T3G1F1D2E1S1C/0,false,19,1,0,0,0,1,3,3,0,0,0,3,0,0,0,0,0,0,2,2,0,0,0,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ConwayTest.java,com.thealgorithms.others.ConwayTest,testGenerateNextElementWith1/0,false,24,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ConwayTest.java,com.thealgorithms.others.ConwayTest,testGenerateNextElementWith1A1Z3E1R1T3G1F1D2E1S1C/0,false,34,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ConwayTest.java,com.thealgorithms.others.ConwayTest,testGenerateNextElementWith123456/0,false,29,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\ReverseStringTest.java,com.thealgorithms.strings.ReverseStringTest,ReverseStringTest/0,false,10,2,2,0,2,1,3,18,0,8,0,3,0,0,0,0,0,0,8,0,8,0,0,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoardPath.java,com.thealgorithms.dynamicprogramming.BoardPath,endAlgo/0,false,37,0,0,0,0,1,1,4,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoardPath.java,com.thealgorithms.dynamicprogramming.BoardPath,"bpR/2[int,int]",false,42,1,2,1,1,4,1,13,3,2,2,1,1,0,1,1,0,0,0,5,3,1,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoardPath.java,com.thealgorithms.dynamicprogramming.BoardPath,"bpRS/3[int,int,int[]]",false,55,2,2,1,1,5,1,17,4,2,3,1,1,0,1,2,0,0,0,6,4,1,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoardPath.java,com.thealgorithms.dynamicprogramming.BoardPath,"bpIS/3[int,int,int[]]",false,72,1,0,0,0,4,0,11,1,3,3,0,0,0,2,0,0,0,0,7,6,3,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BoardPath.java,com.thealgorithms.dynamicprogramming.BoardPath,startAlgo/0,false,33,0,0,0,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SquareRootWithNewtonRaphsonMethod.java,com.thealgorithms.maths.SquareRootWithNewtonRaphsonMethod,squareRoot/1[int],false,21,0,0,0,0,2,1,9,1,2,1,1,0,0,1,0,0,2,0,3,4,7,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,getLeftNode/0,false,80,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,setRightNode/1[com.thealgorithms.devutils.nodes.SimpleTreeNode<E>],false,92,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,SimpleTreeNode/0,true,25,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,"SimpleTreeNode/2[E,com.thealgorithms.devutils.nodes.SimpleTreeNode<E>]",true,46,2,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,isLeafNode/0,false,76,0,0,0,0,3,0,3,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,setLeftNode/1[com.thealgorithms.devutils.nodes.SimpleTreeNode<E>],false,84,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,getRightNode/0,false,88,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,SimpleTreeNode/1[E],true,35,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\SimpleTreeNode.java,com.thealgorithms.devutils.nodes.SimpleTreeNode,"SimpleTreeNode/4[E,com.thealgorithms.devutils.nodes.SimpleTreeNode<E>,com.thealgorithms.devutils.nodes.SimpleTreeNode<E>,com.thealgorithms.devutils.nodes.SimpleTreeNode<E>]",true,65,2,0,0,0,1,0,5,0,0,4,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TimSort.java,com.thealgorithms.sorts.TimSort,"merge/4[T[],int,int,int]",false,35,2,2,1,1,5,2,18,0,3,4,2,0,0,1,0,0,0,1,2,7,3,2,0,0,0,9,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TimSort.java,com.thealgorithms.sorts.TimSort,sort/1[T[]],false,16,3,3,0,3,4,3,14,1,5,1,3,1,1,3,0,0,0,0,5,9,9,2,0,0,0,21,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AbsoluteMax.java,com.thealgorithms.maths.AbsoluteMax,getMaxValue/1[int[]],false,13,2,1,0,1,3,5,11,1,3,1,5,0,0,0,1,0,0,1,2,2,0,1,1,0,2,26,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CeilTest.java,com.thealgorithms.maths.CeilTest,testCeil/0,false,10,1,0,0,0,1,2,7,0,0,0,2,0,0,0,0,0,0,0,10,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task,sortByMergeSort/1[com.thealgorithms.sorts.Node],false,142,3,3,1,2,5,2,15,2,4,1,2,2,2,2,4,0,0,0,4,10,1,1,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task,count/1[com.thealgorithms.sorts.Node],false,163,1,1,1,0,2,0,8,1,2,1,0,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task,"task/3[int[],int,int]",false,174,2,4,2,2,2,2,8,0,1,3,2,2,1,0,0,0,1,0,2,1,3,1,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task,"task1/4[int[],int,int,int]",false,184,1,1,1,0,7,0,17,0,5,4,0,0,0,4,0,0,0,0,3,10,4,2,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\AllPathsFromSourceToTarget.java,com.thealgorithms.backtracking.AllPathsFromSourceToTarget,AllPathsFromSourceToTarget/1[int],true,24,1,2,1,1,1,1,4,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\AllPathsFromSourceToTarget.java,com.thealgorithms.backtracking.AllPathsFromSourceToTarget,"allPathsFromSourceToTarget/4[int,int[][],int,int]",false,95,2,3,0,3,2,2,8,1,2,4,2,2,2,1,0,0,0,0,3,2,0,1,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\AllPathsFromSourceToTarget.java,com.thealgorithms.backtracking.AllPathsFromSourceToTarget,"storeAllPathsUtil/4[java.lang.Integer,java.lang.Integer,boolean[],java.util.List<java.lang.Integer>]",false,66,2,3,2,1,4,5,15,1,0,4,5,1,0,1,0,0,0,0,0,2,0,2,0,0,0,12,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\AllPathsFromSourceToTarget.java,com.thealgorithms.backtracking.AllPathsFromSourceToTarget,"storeAllPaths/2[int,int]",false,52,2,2,1,1,1,2,6,0,2,2,2,1,1,0,0,0,0,0,0,2,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\AllPathsFromSourceToTarget.java,com.thealgorithms.backtracking.AllPathsFromSourceToTarget,"addEdge/2[int,int]",false,45,0,1,1,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\AllPathsFromSourceToTarget.java,com.thealgorithms.backtracking.AllPathsFromSourceToTarget,initAdjList/0,false,35,0,1,1,0,2,0,6,0,1,0,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bloomfilter\BloomFilter.java,com.thealgorithms.datastructures.bloomfilter.BloomFilter$Hash,Hash/1[int],true,45,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bloomfilter\BloomFilter.java,com.thealgorithms.datastructures.bloomfilter.BloomFilter$Hash,asciiString/1[java.lang.String],false,53,0,0,0,0,2,2,7,1,2,1,2,0,0,1,0,0,0,0,2,3,0,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bloomfilter\BloomFilter.java,com.thealgorithms.datastructures.bloomfilter.BloomFilter$Hash,compute/1[T],false,49,2,1,0,1,1,2,3,1,0,1,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\ShortestCommonSupersequenceLength.java,com.thealgorithms.dynamicprogramming.ShortestSuperSequence,main/1[java.lang.String[]],false,48,1,1,0,1,1,2,5,0,2,1,2,1,2,0,0,0,0,4,0,2,1,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\ShortestCommonSupersequenceLength.java,com.thealgorithms.dynamicprogramming.ShortestSuperSequence,"lcs/4[java.lang.String,java.lang.String,int,int]",false,22,1,1,1,0,6,2,18,1,3,4,2,0,0,2,3,0,0,0,14,6,9,3,0,0,0,6,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\ShortestCommonSupersequenceLength.java,com.thealgorithms.dynamicprogramming.ShortestSuperSequence,"shortestSuperSequence/2[java.lang.String,java.lang.String]",false,8,1,2,1,1,1,2,6,1,3,2,2,1,1,0,0,0,1,0,0,3,2,0,0,0,0,8,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,findKey/1[int],false,68,2,3,0,3,5,3,10,3,1,1,3,1,1,1,3,0,1,0,0,2,0,3,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,delete/1[int],false,80,2,4,1,3,3,3,12,0,1,1,3,2,1,0,1,0,0,0,0,3,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,display/1[com.thealgorithms.datastructures.hashmap.hashing.HashMap.Node],false,108,2,5,2,3,2,3,8,2,0,1,3,1,0,0,1,0,0,2,0,0,1,1,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,LinkedList/0,true,47,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,findEnd/1[com.thealgorithms.datastructures.hashmap.hashing.HashMap.Node],false,61,1,2,1,1,2,1,6,1,0,1,1,0,0,1,1,0,0,0,0,1,0,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,insert/1[int],false,51,2,5,1,4,2,3,8,1,1,1,3,2,1,0,0,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,"delete/2[com.thealgorithms.datastructures.hashmap.hashing.HashMap.Node,int]",false,92,2,6,2,4,3,4,13,0,0,2,4,1,0,0,2,0,0,0,0,0,0,2,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,display/0,false,104,1,2,1,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$LinkedList,isEmpty/0,false,116,0,3,3,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckIfBinaryTreeBalanced.java,com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced,"isBalancedRecursive/3[com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced.BTNode,int,boolean[]]",false,87,3,3,2,1,4,3,11,2,2,3,3,1,0,0,1,0,0,0,7,3,4,1,0,0,0,50,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckIfBinaryTreeBalanced.java,com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced,buildUnbalancedTree/0,false,204,2,3,1,2,1,0,18,1,4,0,0,0,0,0,0,0,0,0,10,15,0,0,0,0,0,17,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckIfBinaryTreeBalanced.java,com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced,buildBalancedTree/0,false,232,2,3,1,2,1,0,16,1,4,0,0,0,0,0,0,0,0,0,9,13,0,0,0,0,0,17,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckIfBinaryTreeBalanced.java,com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced,main/1[java.lang.String[]],false,258,2,5,0,5,1,5,13,0,7,1,5,4,2,0,0,0,0,4,0,7,4,0,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckIfBinaryTreeBalanced.java,com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced,isBalancedIterative/1[com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced.BinaryTree],false,117,2,1,1,0,10,8,37,1,7,1,8,0,0,1,6,0,1,0,4,15,2,4,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckIfBinaryTreeBalanced.java,com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced,isBalancedRecursive/1[com.thealgorithms.datastructures.trees.CheckIfBinaryTreeBalanced.BinaryTree],false,63,3,2,1,1,1,1,6,1,1,1,1,1,1,0,0,0,0,0,4,2,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SimpleSortTest.java,com.thealgorithms.sorts.SimpleSortTest,simpleSortEmptyArray/0,false,12,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SimpleSortTest.java,com.thealgorithms.sorts.SimpleSortTest,simpleSortNonDuplicateStringArray/0,false,52,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,14,0,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SimpleSortTest.java,com.thealgorithms.sorts.SimpleSortTest,simpleSortNonDuplicateIntegerArray/0,false,36,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,14,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SimpleSortTest.java,com.thealgorithms.sorts.SimpleSortTest,simpleSortSingleStringArray/0,false,28,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SimpleSortTest.java,com.thealgorithms.sorts.SimpleSortTest,simpleSortDuplicateStringArray/0,false,60,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,16,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SimpleSortTest.java,com.thealgorithms.sorts.SimpleSortTest,simpleSortSingleIntegerArray/0,false,20,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SimpleSortTest.java,com.thealgorithms.sorts.SimpleSortTest,simpleSortDuplicateIntegerArray/0,false,44,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,16,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SquareFreeInteger.java,com.thealgorithms.maths.SquareFreeInteger,isSquareFreeInteger/1[int],false,26,1,1,0,1,3,3,7,1,1,1,3,0,0,0,1,0,0,1,1,1,0,1,0,0,0,37,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\FloodFillTest.java,com.thealgorithms.backtracking.FloodFillTest,testForEmptyImage/0,false,10,1,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,0,4,2,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\FloodFillTest.java,com.thealgorithms.backtracking.FloodFillTest,testForImageThree/0,false,80,1,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,0,46,2,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\FloodFillTest.java,com.thealgorithms.backtracking.FloodFillTest,testForImageOne/0,false,28,1,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,0,102,2,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\FloodFillTest.java,com.thealgorithms.backtracking.FloodFillTest,testForImageTwo/0,false,54,1,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,0,102,2,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\FloodFillTest.java,com.thealgorithms.backtracking.FloodFillTest,testForSingleElementImage/0,false,19,1,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,0,6,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\WiggleSortTest.java,com.thealgorithms.sorts.WiggleSortTest,WiggleTestNumbersOdd/0,false,20,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,10,3,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\WiggleSortTest.java,com.thealgorithms.sorts.WiggleSortTest,WiggleTestNumbersOddDuplicates/0,false,29,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,10,3,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\WiggleSortTest.java,com.thealgorithms.sorts.WiggleSortTest,WiggleTestStrings/0,false,66,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,8,0,3,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\WiggleSortTest.java,com.thealgorithms.sorts.WiggleSortTest,WiggleTestNumbersOddMultipleDuplicates/0,false,38,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,10,3,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\WiggleSortTest.java,com.thealgorithms.sorts.WiggleSortTest,WiggleTestNumbersEvenMultipleDuplicates/0,false,47,2,2,0,2,1,4,8,0,3,0,4,0,0,0,0,0,0,0,12,3,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\WiggleSortTest.java,com.thealgorithms.sorts.WiggleSortTest,WiggleTestNumbersEven/0,false,11,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,8,3,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\WiggleSortTest.java,com.thealgorithms.sorts.WiggleSortTest,WiggleTestNumbersEvenDuplicates/0,false,57,2,2,0,2,1,2,7,0,3,0,2,0,0,0,0,0,0,0,8,3,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AutomorphicNumberTest.java,com.thealgorithms.maths.AutomorphicNumberTest,testAutomorphicNumber/0,false,9,1,0,0,0,3,6,16,0,2,0,6,0,0,2,0,0,0,2,9,2,0,1,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\RabinKarpAlgorithm.java,com.thealgorithms.searches.RabinKarpAlgorithm,"search/3[java.lang.String,java.lang.String,int]",false,15,0,0,0,0,10,3,31,2,8,3,3,0,0,4,3,0,6,1,10,16,20,4,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTree.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTree,"getCeil/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,int]",false,47,2,2,1,1,5,1,13,4,1,2,1,1,0,0,3,0,0,0,0,1,0,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CycleSort.java,com.thealgorithms.sorts.CycleSort,sort/1[T[]],false,12,3,2,0,2,12,3,36,1,6,1,3,1,1,6,6,0,0,0,9,12,3,4,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CycleSort.java,com.thealgorithms.sorts.CycleSort,"replace/3[T[],int,T]",false,69,1,1,1,0,1,0,6,1,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\CycleSort.java,com.thealgorithms.sorts.CycleSort,main/1[java.lang.String[]],false,76,2,3,0,3,1,3,7,0,2,1,3,0,0,0,0,0,0,1,15,2,0,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PronicNumberTest.java,com.thealgorithms.maths.PronicNumberTest,testForNonPronicNumber/0,false,22,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PronicNumberTest.java,com.thealgorithms.maths.PronicNumberTest,testForPronicNumber/0,false,10,1,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\PreOrderTraversalTest.java,com.thealgorithms.datastructures.trees.PreOrderTraversalTest,testRecursivePreOrder/0,false,28,3,1,0,1,1,5,6,0,2,0,5,0,0,0,0,0,0,0,14,2,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\PreOrderTraversalTest.java,com.thealgorithms.datastructures.trees.PreOrderTraversalTest,testRecursivePreOrderNonBalanced/0,false,46,3,1,0,1,1,5,6,0,2,0,5,0,0,0,0,0,0,0,8,2,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\PreOrderTraversalTest.java,com.thealgorithms.datastructures.trees.PreOrderTraversalTest,testNullRoot/0,false,15,1,0,0,0,1,4,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\MobiusFunctionTest.java,com.thealgorithms.maths.MobiusFunctionTest,testMobiusFunction/0,false,48,2,0,0,0,2,2,8,0,4,0,2,0,0,1,0,0,0,0,103,4,1,1,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\MobiusFunctionTest.java,com.thealgorithms.maths.MobiusFunctionTest,testMobiusForNegativeNumber/0,false,29,1,0,0,0,1,4,10,0,4,0,4,0,0,0,0,0,0,1,1,4,0,1,0,0,1,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\MobiusFunctionTest.java,com.thealgorithms.maths.MobiusFunctionTest,testMobiusForZero/0,false,10,1,0,0,0,1,4,10,0,4,0,4,0,0,0,0,0,0,1,1,4,0,1,0,0,1,17,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\FenwickTree.java,com.thealgorithms.datastructures.trees.FenwickTree,"update/2[int,int]",false,15,0,0,0,0,2,0,7,0,0,2,0,0,0,1,0,0,1,0,1,3,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\FenwickTree.java,com.thealgorithms.datastructures.trees.FenwickTree,query/1[int],false,25,0,0,0,0,2,0,9,1,1,1,0,0,0,1,0,0,1,0,3,4,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\FenwickTree.java,com.thealgorithms.datastructures.trees.FenwickTree,FenwickTree/1[int],true,9,1,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Sum_Of_Subset.java,com.thealgorithms.dynamicprogramming.Sum_Of_Subset,main/1[java.lang.String[]],false,5,2,1,0,1,2,2,10,0,2,1,2,1,1,0,0,0,0,2,7,2,1,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Sum_Of_Subset.java,com.thealgorithms.dynamicprogramming.Sum_Of_Subset,"subsetSum/3[int[],int,int]",false,16,2,3,2,1,4,1,11,3,2,3,1,1,0,0,1,0,0,0,5,2,3,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST$Node,Node/1[int],true,18,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\DepthFirstSearch.java,com.thealgorithms.searches.DepthFirstSearch$Node,Node/1[java.lang.String],true,19,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\DepthFirstSearch.java,com.thealgorithms.searches.DepthFirstSearch$Node,getName/0,false,29,0,3,3,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\DepthFirstSearch.java,com.thealgorithms.searches.DepthFirstSearch$Node,getSubNodes/0,false,33,1,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\DepthFirstSearch.java,com.thealgorithms.searches.DepthFirstSearch$Node,"Node/2[java.lang.String,java.util.List<com.thealgorithms.searches.DepthFirstSearch.Node>]",true,24,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LiouvilleLambdaFunctionTest.java,com.thealgorithms.maths.LiouvilleLambdaFunctionTest,testLiouvilleLambdaMustReturnNegativeOne/0,false,48,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LiouvilleLambdaFunctionTest.java,com.thealgorithms.maths.LiouvilleLambdaFunctionTest,testLiouvilleLambdaMustThrowExceptionIfNumberIsZero/0,false,10,1,0,0,0,1,4,10,0,4,0,4,0,0,0,0,0,0,1,1,4,0,1,0,0,1,22,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LiouvilleLambdaFunctionTest.java,com.thealgorithms.maths.LiouvilleLambdaFunctionTest,testLiouvilleLambdaMustThrowExceptionIfNumberIsNegative/0,false,29,1,0,0,0,1,4,10,0,4,0,4,0,0,0,0,0,0,1,1,4,0,1,0,0,1,22,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LiouvilleLambdaFunctionTest.java,com.thealgorithms.maths.LiouvilleLambdaFunctionTest,testLiouvilleLambdaMustReturnPositiveOne/0,false,61,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DeterminantOfMatrix.java,com.thealgorithms.maths.DeterminantOfMatrix,"determinant/2[int[][],int]",false,13,2,3,2,1,7,1,27,1,8,2,1,1,0,3,3,0,1,0,19,15,7,6,0,0,0,9,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DeterminantOfMatrix.java,com.thealgorithms.maths.DeterminantOfMatrix,main/1[java.lang.String[]],false,41,2,1,0,1,3,4,13,0,5,1,4,1,1,2,0,0,0,2,2,6,0,2,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\PalindromePrime.java,com.thealgorithms.misc.PalindromePrime,reverse/1[int],false,26,0,1,1,0,2,0,9,1,1,1,0,0,0,1,1,0,0,0,5,4,1,1,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\PalindromePrime.java,com.thealgorithms.misc.PalindromePrime,prime/1[int],false,17,0,1,1,0,3,1,8,2,1,1,1,0,0,1,1,0,0,0,3,2,1,2,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\PalindromePrime.java,com.thealgorithms.misc.PalindromePrime,functioning/1[int],false,36,1,3,1,2,5,3,15,1,2,1,3,2,1,1,2,0,0,2,5,3,2,2,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\PalindromePrime.java,com.thealgorithms.misc.PalindromePrime,main/1[java.lang.String[]],false,7,1,1,0,1,1,4,7,0,2,1,4,1,2,0,0,0,0,1,0,2,0,0,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FrizzyNumberTest.java,com.thealgorithms.maths.FrizzyNumberTest,testFrizziesForBase2/0,false,8,1,0,0,0,1,2,5,0,0,0,2,0,0,0,0,0,0,0,9,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FrizzyNumberTest.java,com.thealgorithms.maths.FrizzyNumberTest,testFrizziesForBase69/0,false,34,1,0,0,0,1,2,6,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FrizzyNumberTest.java,com.thealgorithms.maths.FrizzyNumberTest,testFrizziesForBase3/0,false,21,1,0,0,0,1,2,5,0,0,0,2,0,0,0,0,0,0,0,9,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\RSA.java,com.thealgorithms.ciphers.RSA,generateKeys/1[int],false,54,0,1,1,0,2,7,12,0,4,1,7,0,0,1,0,0,1,0,6,8,2,1,0,0,0,21,33,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\RSA.java,com.thealgorithms.ciphers.RSA,decrypt/1[java.math.BigInteger],false,47,0,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,33,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\RSA.java,com.thealgorithms.ciphers.RSA,RSA/1[int],true,15,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\RSA.java,com.thealgorithms.ciphers.RSA,decrypt/1[java.lang.String],false,37,0,0,0,0,1,2,3,1,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,7,33,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\RSA.java,com.thealgorithms.ciphers.RSA,encrypt/1[java.math.BigInteger],false,30,0,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,33,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\RSA.java,com.thealgorithms.ciphers.RSA,encrypt/1[java.lang.String],false,22,0,0,0,0,1,3,3,1,0,1,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,5,33,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\TopKWords.java,com.thealgorithms.others.TopKWords,main/1[java.lang.String[]],false,64,1,2,0,2,3,11,17,0,7,1,11,0,0,2,0,0,0,2,2,8,1,1,0,0,1,20,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\BreadthFirstSearch.java,com.thealgorithms.searches.BreadthFirstSearch,"search/2[com.thealgorithms.searches.DepthFirstSearch.Node,java.lang.String]",false,13,1,2,0,2,4,8,14,3,2,2,8,0,0,1,0,0,0,0,0,2,0,2,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.Link,displayLink/0,false,127,0,2,2,0,1,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.Link,main/1[java.lang.String[]],false,136,2,12,0,12,1,10,33,0,2,1,10,0,0,0,0,0,0,0,11,2,0,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.Link,Link/1[int],true,120,0,4,4,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive$Node,Node/1[int],true,262,0,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TopologicalSort.java,com.thealgorithms.sorts.TopologicalSort$Vertex,Vertex/1[java.lang.String],true,62,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,display/0,false,81,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,display/1[com.thealgorithms.datastructures.trees.AVLSimple.Node],false,86,2,3,2,1,5,2,11,0,1,1,2,1,0,0,4,0,0,6,0,6,3,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,rightRotate/1[com.thealgorithms.datastructures.trees.AVLSimple.Node],false,110,2,2,1,1,1,2,9,1,2,1,2,1,1,0,0,0,0,0,2,6,2,0,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,leftRotate/1[com.thealgorithms.datastructures.trees.AVLSimple.Node],false,121,2,2,1,1,1,2,9,1,2,1,2,1,1,0,0,0,0,0,2,6,2,0,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,height/1[com.thealgorithms.datastructures.trees.AVLSimple.Node],false,98,1,4,4,0,2,0,6,2,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,"insert/2[com.thealgorithms.datastructures.trees.AVLSimple.Node,int]",false,50,2,8,2,6,12,6,25,6,2,2,6,5,4,0,1,0,0,0,5,7,1,1,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,insert/1[int],false,46,1,1,0,1,1,1,3,0,0,1,1,1,5,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLSimple.java,com.thealgorithms.datastructures.trees.AVLSimple,bf/1[com.thealgorithms.datastructures.trees.AVLSimple.Node],false,105,2,2,1,1,2,1,4,2,0,1,1,1,1,0,1,0,0,0,1,0,1,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\StoogeSort.java,com.thealgorithms.sorts.StoogeSort,sort/1[T[]],false,10,2,1,0,1,1,1,4,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\StoogeSort.java,com.thealgorithms.sorts.StoogeSort,main/1[java.lang.String[]],false,36,2,4,0,4,1,3,11,0,3,1,3,0,0,0,0,0,0,7,7,3,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\StoogeSort.java,com.thealgorithms.sorts.StoogeSort,"sort/3[T[],int,int]",false,19,3,4,2,2,3,2,15,1,3,3,2,1,0,0,0,0,0,0,5,5,8,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BinaryInsertionSort.java,com.thealgorithms.sorts.BinaryInsertionSort,binaryInsertSort/1[int[]],false,6,1,2,2,0,5,0,21,1,6,1,0,0,0,3,0,0,1,0,8,10,7,3,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\EggDroppingTest.java,com.thealgorithms.dynamicprogramming.EggDroppingTest,hasMultipleEggMultipleFloor/0,false,25,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\EggDroppingTest.java,com.thealgorithms.dynamicprogramming.EggDroppingTest,hasMultipleEggSingleFloor/0,false,10,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\EggDroppingTest.java,com.thealgorithms.dynamicprogramming.EggDroppingTest,hasSingleEggSingleFloor/0,false,15,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\EggDroppingTest.java,com.thealgorithms.dynamicprogramming.EggDroppingTest,hasSingleEggMultipleFloor/0,false,20,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph,dijkstra/1[java.lang.String],false,189,2,2,1,1,5,6,14,1,2,1,6,1,1,1,2,0,0,1,1,4,0,1,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph,dijkstra/1[java.util.NavigableSet<com.thealgorithms.others.Graph.Vertex>],false,213,1,1,1,0,5,7,19,0,3,1,7,0,0,2,1,0,0,0,0,5,1,3,0,0,0,13,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph,printAllPaths/0,false,256,1,1,0,1,2,3,6,0,0,0,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph,Graph/1[com.thealgorithms.others.Graph.Edge[]],true,165,2,2,1,1,5,4,14,0,0,1,4,0,0,2,0,0,0,0,0,1,0,2,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph,printPath/1[java.lang.String],false,239,1,2,1,1,2,5,8,1,0,1,5,0,0,0,0,0,0,1,0,0,0,1,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$Node,setNext/1[com.thealgorithms.datastructures.hashmap.hashing.HashMap.Node],false,139,1,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$Node,getKey/0,false,135,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$Node,Node/1[int],true,126,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\HashMap.java,com.thealgorithms.datastructures.hashmap.hashing.HashMap$Node,getNext/0,false,131,1,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayTest.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayTest,testGenericHashmapWhichUsesArrayAndKeyIsStringValueIsInteger/0,false,23,2,0,0,0,1,8,13,0,1,0,8,0,0,0,0,0,0,8,7,1,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayTest.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayTest,testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings/0,false,10,2,0,0,0,1,5,11,0,1,0,5,0,0,0,0,0,0,12,1,1,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayTest.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayTest,testGenericHashmapWhichUsesArrayAndKeyIsIntegerValueIsString/0,false,38,2,0,0,0,1,7,12,0,1,0,7,0,0,0,0,0,0,6,8,1,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Convolution.java,com.thealgorithms.maths.Convolution,"convolution/2[double[],double[]]",false,20,1,0,0,0,4,1,12,1,3,2,1,0,0,2,0,0,0,0,6,5,7,2,0,0,0,34,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\OddEvenSortTest.java,com.thealgorithms.sorts.OddEvenSortTest,oddEvenSortNaturalNumberArray/0,false,24,3,1,0,1,1,2,6,0,2,0,2,0,0,0,0,0,0,0,20,2,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\OddEvenSortTest.java,com.thealgorithms.sorts.OddEvenSortTest,oddEvenSortIntegerArray/0,false,32,3,1,0,1,1,2,6,0,2,0,2,0,0,0,0,0,0,0,20,2,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\OddEvenSortTest.java,com.thealgorithms.sorts.OddEvenSortTest,oddEvenSortEmptyArray/0,false,16,3,1,0,1,1,2,6,0,2,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AbsoluteMaxTest.java,com.thealgorithms.maths.AbsoluteMaxTest,testGetMaxValue/0,false,11,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,8,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AbsoluteMaxTest.java,com.thealgorithms.maths.AbsoluteMaxTest,testGetMaxValueWithNoArguments/0,false,17,1,0,0,0,1,4,4,0,1,0,4,0,0,0,0,0,0,1,0,1,0,0,0,0,1,15,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Luhn.java,com.thealgorithms.others.Luhn,main/1[java.lang.String[]],false,68,2,2,0,2,1,3,14,0,5,1,3,2,2,0,0,0,0,5,32,5,0,0,0,0,0,19,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Luhn.java,com.thealgorithms.others.Luhn,luhnCheck/1[int[]],false,50,1,1,1,0,5,1,15,1,4,1,1,0,0,1,2,0,0,0,10,7,5,3,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Luhn.java,com.thealgorithms.others.Luhn,businessExample/1[java.lang.String],false,161,1,1,1,0,2,4,10,0,1,1,4,0,0,0,0,1,0,5,0,1,3,1,0,0,0,21,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Luhn.java,com.thealgorithms.others.Luhn,checkAndPrint/1[int[]],false,84,2,2,1,1,2,3,4,0,1,1,3,1,1,0,0,0,0,4,0,1,1,0,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Luhn.java,com.thealgorithms.others.Luhn,CreditCard/1[int[]],false,99,2,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Verhoeff.java,com.thealgorithms.others.Verhoeff,verhoeffCheck/1[java.lang.String],false,93,2,3,1,2,3,2,11,1,5,1,2,2,1,1,1,0,0,0,5,6,2,1,0,0,0,31,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Verhoeff.java,com.thealgorithms.others.Verhoeff,checkAndPrint/1[java.lang.String],false,149,1,2,1,1,2,2,4,0,1,1,2,1,2,0,0,0,0,4,0,1,1,0,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Verhoeff.java,com.thealgorithms.others.Verhoeff,toIntArray/1[java.lang.String],false,176,1,2,2,0,1,4,3,1,1,1,4,0,0,0,0,0,0,0,1,0,0,0,0,0,1,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Verhoeff.java,com.thealgorithms.others.Verhoeff,addVerhoeffChecksum/1[java.lang.String],false,118,2,3,1,2,2,2,13,1,6,1,2,2,1,1,0,0,0,1,4,8,4,1,0,0,0,41,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Verhoeff.java,com.thealgorithms.others.Verhoeff,checkInput/1[java.lang.String],false,167,0,2,2,0,2,2,6,0,0,1,2,0,0,0,0,0,0,3,0,0,1,1,0,0,0,9,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Verhoeff.java,com.thealgorithms.others.Verhoeff,main/1[java.lang.String[]],false,137,1,2,0,2,1,3,10,0,3,1,3,2,5,0,0,0,0,5,0,3,0,0,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Verhoeff.java,com.thealgorithms.others.Verhoeff,generateAndPrint/1[java.lang.String],false,156,1,2,1,1,1,2,4,0,1,1,2,1,2,0,0,0,0,3,0,1,1,0,0,0,0,13,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\SubsetCount.java,com.thealgorithms.dynamicprogramming.SubsetCount,"getCount/2[int[],int]",false,19,1,0,0,0,6,0,17,1,7,2,0,0,0,3,0,0,0,0,14,11,6,3,0,0,0,45,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\SubsetCount.java,com.thealgorithms.dynamicprogramming.SubsetCount,"getCountSO/2[int[],int]",false,50,1,0,0,0,5,0,18,1,7,2,0,0,0,2,0,0,0,0,12,13,4,3,0,0,0,49,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PasswordGen.java,com.thealgorithms.others.PasswordGen,main/1[java.lang.String[]],false,16,1,1,0,1,1,2,4,0,1,1,2,1,1,0,0,0,0,1,2,1,1,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PasswordGen.java,com.thealgorithms.others.PasswordGen,"generatePassword/2[int,int]",false,21,0,1,1,0,3,8,18,1,9,2,8,0,0,2,0,0,0,4,1,9,3,1,0,0,0,19,8,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PerfectCubeTest.java,com.thealgorithms.maths.PerfectCubeTest,perfectCube/0,false,9,1,0,0,0,1,4,22,0,0,0,4,0,0,0,0,0,0,0,20,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PascalTriangleTest.java,com.thealgorithms.maths.PascalTriangleTest,testForTwo/0,false,17,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PascalTriangleTest.java,com.thealgorithms.maths.PascalTriangleTest,testForOne/0,false,10,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,2,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PascalTriangleTest.java,com.thealgorithms.maths.PascalTriangleTest,testForFive/0,false,24,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,26,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PascalTriangleTest.java,com.thealgorithms.maths.PascalTriangleTest,testForEight/0,false,37,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,65,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\KnapsackMemoization.java,com.thealgorithms.dynamicprogramming.KnapsackMemoization,"knapSack/4[int,int[],int[],int]",false,12,2,1,0,1,3,1,9,1,3,4,1,1,1,2,0,0,0,0,7,4,4,2,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\KnapsackMemoization.java,com.thealgorithms.dynamicprogramming.KnapsackMemoization,"knapSackRec/5[int,int[],int[],int,int[][]]",false,31,2,3,2,1,5,2,15,4,0,5,2,1,0,0,3,0,1,0,10,2,8,1,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.MatrixGraphs,main/1[java.lang.String[]],false,17,1,4,0,4,1,5,22,0,1,1,5,0,0,0,0,0,0,3,29,1,0,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\WordLadder.java,com.thealgorithms.strings.WordLadder,"ladderLength/3[java.lang.String,java.lang.String,java.util.List<java.lang.String>]",false,50,1,1,1,0,10,10,39,3,11,3,10,0,0,5,1,0,0,0,6,13,1,5,0,0,0,41,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\ShellSort.java,com.thealgorithms.sorts.ShellSort,sort/1[T[]],false,15,2,1,0,1,6,1,18,1,5,1,1,0,0,4,0,0,0,0,6,10,5,3,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\ShellSort.java,com.thealgorithms.sorts.ShellSort,main/1[java.lang.String[]],false,38,2,3,0,3,2,2,9,0,3,1,2,0,0,1,0,0,0,0,12,3,2,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeTraversal.java,com.thealgorithms.datastructures.trees.Node,printInOrder/0,false,71,1,3,2,1,3,2,9,0,0,0,2,1,0,0,2,0,0,1,0,0,1,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeTraversal.java,com.thealgorithms.datastructures.trees.Node,printPostOrder/0,false,91,1,3,2,1,3,2,9,0,0,0,2,1,0,0,2,0,0,1,0,0,1,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeTraversal.java,com.thealgorithms.datastructures.trees.Node,insert/1[int],false,55,1,4,2,2,4,1,18,0,0,1,1,1,0,0,2,0,0,0,0,2,0,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeTraversal.java,com.thealgorithms.datastructures.trees.Node,printPreOrder/0,false,81,1,3,2,1,3,2,9,0,0,0,2,1,0,0,2,0,0,1,0,0,1,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeTraversal.java,com.thealgorithms.datastructures.trees.Node,Node/1[int],true,51,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeTraversal.java,com.thealgorithms.datastructures.trees.Node,printLevelOrder/0,false,105,1,1,1,0,4,4,14,0,2,0,4,0,0,1,2,0,0,1,1,2,1,2,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FastInverseSqrt.java,com.thealgorithms.maths.FastInverseSqrt,inverseSqrt/1[float],false,13,0,0,0,0,2,3,9,1,3,1,3,0,0,0,1,0,3,0,5,6,7,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FastInverseSqrt.java,com.thealgorithms.maths.FastInverseSqrt,inverseSqrt/1[double],false,28,0,0,0,0,3,3,12,1,4,1,3,0,0,1,1,0,2,0,7,8,7,1,0,0,0,26,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PerfectSquare.java,com.thealgorithms.maths.PerfectSquare,isPerfectSquare/1[int],false,23,0,1,1,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PerfectSquare.java,com.thealgorithms.maths.PerfectSquare,main/1[java.lang.String[]],false,8,1,1,0,1,1,1,7,0,0,1,1,1,1,0,0,0,0,0,5,0,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5Cipher.java,com.thealgorithms.ciphers.a5.A5Cipher,"A5Cipher/2[java.util.BitSet,java.util.BitSet]",true,11,1,2,0,2,1,1,4,0,0,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5Cipher.java,com.thealgorithms.ciphers.a5.A5Cipher,resetCounter/0,false,27,1,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5Cipher.java,com.thealgorithms.ciphers.a5.A5Cipher,encrypt/1[java.util.BitSet],false,16,1,1,0,1,1,2,7,1,2,1,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,22,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FactorialTest.java,com.thealgorithms.maths.FactorialTest,test/0,false,10,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,2,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch,"addChildNodes/2[com.thealgorithms.searches.MonteCarloTreeSearch.Node,int]",false,88,1,2,1,1,2,1,5,0,1,2,1,0,0,1,0,0,0,0,1,1,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch,monteCarloTreeSearch/1[com.thealgorithms.searches.MonteCarloTreeSearch.Node],false,54,2,6,1,5,3,9,18,1,3,1,9,5,1,1,1,0,0,1,4,3,2,2,0,0,0,45,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch,simulateRandomPlay/1[com.thealgorithms.searches.MonteCarloTreeSearch.Node],false,149,1,1,1,0,7,1,14,0,3,1,1,0,0,1,2,0,3,0,2,6,0,2,0,0,0,35,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch,getPromisingNode/1[com.thealgorithms.searches.MonteCarloTreeSearch.Node],false,102,1,1,1,0,5,4,22,1,6,1,4,0,0,2,2,0,1,0,5,10,4,3,0,0,0,29,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch,printScores/1[com.thealgorithms.searches.MonteCarloTreeSearch.Node],false,186,1,1,1,0,2,4,6,0,1,1,4,0,0,1,0,0,0,2,2,1,1,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch,main/1[java.lang.String[]],false,41,2,3,0,3,1,1,4,0,1,1,1,1,2,0,0,0,0,0,0,1,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch,getWinnerNode/1[com.thealgorithms.searches.MonteCarloTreeSearch.Node],false,179,1,1,1,0,1,2,3,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\DIJSKSTRAS_ALGORITHM.java,com.thealgorithms.datastructures.graphs.dijkstras,main/1[java.lang.String[]],false,62,2,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,82,2,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\DIJSKSTRAS_ALGORITHM.java,com.thealgorithms.datastructures.graphs.dijkstras,"minDist/2[int[],java.lang.Boolean[]]",false,11,1,1,1,0,4,0,10,1,3,2,0,0,0,1,1,0,0,0,2,5,0,2,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\DIJSKSTRAS_ALGORITHM.java,com.thealgorithms.datastructures.graphs.dijkstras,print/1[int[]],false,24,1,1,1,0,2,1,6,0,1,1,1,0,0,1,0,0,0,2,1,1,1,1,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\DIJSKSTRAS_ALGORITHM.java,com.thealgorithms.datastructures.graphs.dijkstras,"dijkstra/2[int[][],int]",false,31,2,3,1,2,8,2,19,0,6,2,2,2,1,3,2,0,0,0,6,11,3,3,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BubbleSort.java,com.thealgorithms.sorts.BubbleSort,sort/1[T[]],false,20,2,2,0,2,5,2,15,1,4,1,2,0,0,2,0,0,0,0,4,5,3,3,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Conway.java,com.thealgorithms.others.Conway,"generateList/2[java.lang.String,int]",false,20,1,1,0,1,2,2,8,1,2,2,2,1,1,1,0,0,0,0,1,3,0,1,0,0,0,10,12,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Conway.java,com.thealgorithms.others.Conway,generateNextElement/1[java.lang.String],false,30,0,1,1,0,1,9,6,1,2,1,9,0,0,0,0,0,0,1,2,1,0,0,0,0,1,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.MatrixChainMultiplication,main/1[java.lang.String[]],false,16,3,8,0,8,10,16,46,0,10,1,16,4,1,7,2,0,0,8,21,15,9,2,0,0,0,26,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.MatrixChainMultiplication,matrixChainOrder/0,false,96,0,1,1,0,6,0,18,0,6,0,0,0,0,4,0,0,0,0,10,10,10,4,0,0,0,9,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.MatrixChainMultiplication,"printOptimalParens/2[int,int]",false,76,1,3,2,1,2,2,11,0,0,2,2,1,0,0,1,0,0,3,1,0,2,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.MatrixChainMultiplication,printArray/1[int[][]],false,87,1,1,1,0,3,3,8,0,2,1,3,0,0,2,0,0,0,1,4,2,2,2,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.MatrixChainMultiplication,input/1[java.lang.String],false,117,0,1,1,0,1,3,4,1,0,1,3,0,0,0,0,0,1,1,0,0,0,0,0,0,0,2,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexToOct.java,com.thealgorithms.conversions.HexToOct,hex2decimal/1[java.lang.String],false,18,0,1,1,0,2,4,11,1,5,1,4,0,0,1,0,0,0,1,3,7,2,1,0,0,0,17,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexToOct.java,com.thealgorithms.conversions.HexToOct,decimal2octal/1[int],false,36,0,1,1,0,2,1,13,1,3,1,1,0,0,1,0,0,2,0,7,6,3,1,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexToOct.java,com.thealgorithms.conversions.HexToOct,main/1[java.lang.String[]],false,55,1,2,0,2,1,6,11,0,4,1,6,2,1,0,0,0,0,2,0,4,1,0,0,0,0,26,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\nearestRightKey.java,com.thealgorithms.datastructures.trees.Main,BuildTree/0,false,17,1,3,1,2,2,3,9,1,3,0,3,0,0,1,0,0,0,0,8,5,2,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\nearestRightKey.java,com.thealgorithms.datastructures.trees.Main,main/1[java.lang.String[]],false,8,2,2,0,2,1,5,8,0,4,1,5,2,1,0,0,0,0,2,0,4,1,0,0,0,0,18,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\nearestRightKey.java,com.thealgorithms.datastructures.trees.Main,"nearestRightKey/2[com.thealgorithms.datastructures.trees.NRKTree,int]",false,29,2,3,2,1,4,1,17,4,1,2,1,1,0,0,2,0,0,0,3,1,1,3,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\ArrayCombination.java,com.thealgorithms.backtracking.ArrayCombination,"combination/2[int,int]",false,18,1,1,0,1,3,1,11,2,2,2,1,0,0,1,0,0,0,0,3,4,1,1,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeRandomNode.java,com.thealgorithms.datastructures.trees.TreeRandomNode$Node,Node/1[int],true,33,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,manhattantest2/0,false,48,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,manhattantest1/0,false,43,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,minkowskiTest3/0,false,102,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,10,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,hammingTest1/0,false,64,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,9,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,euclideanTest1/0,false,11,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,euclideanTest2/0,false,19,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,minkowskiTest1/0,false,85,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,10,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,hammingTest3/0,false,78,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,19,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,minkowskiTest2/0,false,92,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,10,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,euclideanTest3/0,false,27,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,manhattanTest3/0,false,56,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,euclideanTest4/0,false,35,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,2,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DistanceFormulaTest.java,com.thealgorithms.maths.DistanceFormulaTest,hammingTest2/0,false,71,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,9,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\TestArmstrong.java,com.thealgorithms.maths.TestArmstrong,testArmstrong/0,false,10,2,0,0,0,1,4,5,0,1,0,4,0,0,0,0,0,0,0,2,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,"insert/2[com.thealgorithms.datastructures.trees.BSTRecursive.Node,int]",false,106,2,4,2,2,4,1,12,1,0,2,1,1,0,0,1,0,0,0,0,3,0,1,0,0,0,23,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,remove/1[int],false,205,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,postOrder/1[com.thealgorithms.datastructures.trees.BSTRecursive.Node],false,140,2,3,2,1,4,2,12,1,0,1,2,1,0,0,3,0,0,1,0,0,1,1,0,0,0,12,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,"search/2[com.thealgorithms.datastructures.trees.BSTRecursive.Node,int]",false,178,2,3,2,1,4,1,14,4,0,2,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,25,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,main/1[java.lang.String[]],false,37,1,5,0,5,1,4,16,0,1,1,4,4,5,0,0,0,0,5,12,1,0,0,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,preorder/0,false,230,1,1,0,1,1,3,5,0,0,0,3,1,1,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,find/1[int],false,241,1,2,1,1,2,2,8,2,0,1,2,1,1,0,0,0,0,2,0,0,2,1,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,preOrder/1[com.thealgorithms.datastructures.trees.BSTRecursive.Node],false,122,2,3,2,1,4,2,12,1,0,1,2,1,0,0,3,0,0,1,0,0,1,1,0,0,0,15,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,inorder/0,false,212,1,2,1,1,1,3,5,0,0,0,3,1,1,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,inOrder/1[com.thealgorithms.datastructures.trees.BSTRecursive.Node],false,158,2,3,2,1,4,2,12,1,0,1,2,1,0,0,3,0,0,1,0,0,1,1,0,0,0,12,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,BSTRecursive/0,true,30,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,postorder/0,false,221,1,1,0,1,1,3,5,0,0,0,3,1,1,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,"delete/2[com.thealgorithms.datastructures.trees.BSTRecursive.Node,int]",false,67,2,3,2,1,9,2,35,1,3,2,2,1,0,1,6,0,0,1,0,13,0,3,0,0,0,25,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\BSTRecursive.java,com.thealgorithms.datastructures.trees.BSTRecursive,add/1[int],false,196,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\minimizinglateness\MinimizingLateness.java,com.thealgorithms.minimizinglateness.MinimizingLateness$Schedule,"Schedule/2[int,int]",true,17,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PrintAMatrixInSpiralOrder.java,com.thealgorithms.others.PrintAMatrixInSpiralOrder,"print/3[int[][],int,int]",false,16,1,0,0,0,9,1,29,1,4,3,1,0,0,5,0,0,0,0,6,7,4,3,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CreateBinaryTreeFromInorderPreorder.java,com.thealgorithms.datastructures.trees.CreateBinaryTreeFromInorderPreorder,"createTree/5[java.lang.Integer[],java.lang.Integer[],int,int,int]",false,74,2,4,2,2,3,1,15,2,4,5,1,1,0,1,2,0,0,0,5,6,5,1,0,0,0,13,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CreateBinaryTreeFromInorderPreorder.java,com.thealgorithms.datastructures.trees.CreateBinaryTreeFromInorderPreorder,"createTreeOptimized/6[java.lang.Integer[],java.lang.Integer[],int,int,int,java.util.Map<java.lang.Integer,java.lang.Integer>]",false,112,2,4,2,2,2,2,12,2,4,6,2,1,0,0,1,0,0,0,5,6,5,1,0,0,0,16,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CreateBinaryTreeFromInorderPreorder.java,com.thealgorithms.datastructures.trees.CreateBinaryTreeFromInorderPreorder,main/1[java.lang.String[]],false,23,1,1,0,1,1,1,7,0,0,1,1,1,2,0,0,0,0,0,28,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CreateBinaryTreeFromInorderPreorder.java,com.thealgorithms.datastructures.trees.CreateBinaryTreeFromInorderPreorder,"test/2[java.lang.Integer[],java.lang.Integer[]]",false,37,2,8,1,7,2,8,23,0,4,2,8,2,1,1,0,0,0,9,5,4,0,1,0,0,0,11,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RotateMatriceBy90Degree.java,com.thealgorithms.others.Rotate_by_90_degree,printMatrix/1[int[][]],false,32,1,1,1,0,3,2,8,0,2,1,2,0,0,2,0,0,0,2,3,2,1,2,0,0,0,4,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RotateMatriceBy90Degree.java,com.thealgorithms.others.Rotate_by_90_degree,main/1[java.lang.String[]],false,11,3,3,0,3,4,4,17,0,7,1,4,1,1,3,0,0,0,0,3,8,0,3,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ArmstrongTest.java,com.thealgorithms.maths.ArmstrongTest,testIsArmstrong/0,false,14,2,0,0,0,1,4,9,0,1,0,4,0,0,0,0,0,0,0,6,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\SubsetSum.java,com.thealgorithms.dynamicprogramming.SubsetSum,"subsetSum/2[int[],int]",false,25,2,1,1,0,6,0,20,1,6,2,0,0,0,4,0,0,1,0,17,11,12,3,0,0,0,23,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\SubsetSum.java,com.thealgorithms.dynamicprogramming.SubsetSum,main/1[java.lang.String[]],false,8,2,1,0,1,1,1,7,0,1,1,1,1,1,0,0,0,0,0,9,1,0,0,0,0,0,8,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CocktailShakerSortTest.java,com.thealgorithms.sorts.CocktailShakerSortTest,cocktailShakerSortEmptyArray/0,false,16,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CocktailShakerSortTest.java,com.thealgorithms.sorts.CocktailShakerSortTest,cocktailShakerSortIntegerArray/0,false,32,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,22,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CocktailShakerSortTest.java,com.thealgorithms.sorts.CocktailShakerSortTest,cocktailShakerSortStringArray/0,false,40,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,20,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\CocktailShakerSortTest.java,com.thealgorithms.sorts.CocktailShakerSortTest,cocktailShakerSortSingleStringElementArray/0,false,24,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Cycles.java,com.thealgorithms.datastructures.graphs.Cycles,main/1[java.lang.String[]],false,85,1,3,0,3,1,2,5,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SieveOfEratosthenes.java,com.thealgorithms.others.SieveOfEratosthenes,findPrimesTill/1[int],false,35,2,1,1,0,7,5,22,1,9,1,5,0,0,3,3,0,0,0,8,12,4,3,0,0,1,31,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SieveOfEratosthenes.java,com.thealgorithms.others.SieveOfEratosthenes,main/1[java.lang.String[]],false,76,2,1,0,1,1,3,6,0,2,1,3,1,1,0,0,0,0,2,1,2,2,0,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\PowerSum.java,com.thealgorithms.backtracking.PowerSum,"powSum/2[int,int]",false,14,1,1,0,1,1,1,4,1,0,2,1,1,2,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\PowerSum.java,com.thealgorithms.backtracking.PowerSum,"Sum/3[int,int,int]",false,20,1,4,2,2,4,2,14,1,0,3,2,2,1,0,1,0,0,0,2,2,3,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\PowerSum.java,com.thealgorithms.backtracking.PowerSum,"power/2[int,int]",false,39,0,1,1,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree$Node,getLeft/0,false,70,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree$Node,getRight/0,false,74,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree$Node,"Node/3[int,int,int]",true,18,0,2,2,0,1,0,8,0,0,3,0,0,0,0,0,0,0,0,1,6,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree$Node,applyUpdate/1[int],false,31,0,2,2,0,1,0,4,0,0,1,0,0,0,0,0,0,1,0,0,2,2,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree$Node,shift/0,false,38,1,3,2,1,6,1,8,2,0,0,1,1,1,0,5,0,0,0,2,2,0,1,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree$Node,"merge/2[com.thealgorithms.datastructures.trees.LazySegmentTree.Node,com.thealgorithms.datastructures.trees.LazySegmentTree.Node]",false,53,1,4,3,1,3,0,8,3,1,2,0,0,0,0,2,0,0,0,0,3,1,1,0,0,0,18,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LazySegmentTree.java,com.thealgorithms.datastructures.trees.LazySegmentTree$Node,getValue/0,false,66,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\VerticalOrderTraversal.java,com.thealgorithms.datastructures.trees.VerticalOrderTraversal,verticalTraversal/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,27,1,0,0,0,7,14,35,2,8,1,14,0,0,2,3,0,0,0,5,10,2,2,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PreOrderTraversal.java,com.thealgorithms.datastructures.trees.PreOrderTraversal,recursivePreOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,29,2,1,0,1,1,1,5,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PreOrderTraversal.java,com.thealgorithms.datastructures.trees.PreOrderTraversal,iterativePreOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,35,1,0,0,0,5,4,13,2,3,1,4,0,0,1,3,0,0,0,0,3,0,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PreOrderTraversal.java,com.thealgorithms.datastructures.trees.PreOrderTraversal,"recursivePreOrder/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,java.util.List<java.lang.Integer>]",false,51,2,3,2,1,2,2,8,1,0,2,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\Merge_K_SortedLinkedlist.java,com.thealgorithms.datastructures.lists.Merge_K_SortedLinkedlist,"mergeKList/2[com.thealgorithms.datastructures.lists.Merge_K_SortedLinkedlist.Node[],int]",false,19,1,0,0,0,3,7,16,1,5,2,7,0,0,1,1,0,0,0,1,6,0,2,0,0,1,20,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestPalindromicSubstring.java,com.thealgorithms.dynamicprogramming.LongestPalindromicSubstring,main/1[java.lang.String[]],false,8,1,1,0,1,1,2,8,0,4,1,2,1,1,0,0,0,0,4,0,4,2,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestPalindromicSubstring.java,com.thealgorithms.dynamicprogramming.LongestPalindromicSubstring,LPS/1[java.lang.String],false,19,1,1,1,0,11,3,35,2,6,1,3,0,0,2,6,0,0,0,10,13,3,4,0,0,0,12,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\InorderTraversalTest.java,com.thealgorithms.datastructures.trees.InorderTraversalTest,testRecursiveInorderNonBalanced/0,false,46,3,1,0,1,1,5,6,0,2,0,5,0,0,0,0,0,0,0,8,2,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\InorderTraversalTest.java,com.thealgorithms.datastructures.trees.InorderTraversalTest,testNullRoot/0,false,15,1,0,0,0,1,4,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\InorderTraversalTest.java,com.thealgorithms.datastructures.trees.InorderTraversalTest,testRecursiveInorder/0,false,28,3,1,0,1,1,5,6,0,2,0,5,0,0,0,0,0,0,0,14,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\MRUCacheTest.java,com.thealgorithms.datastructures.caches.MRUCacheTest,putAndGetStringValues/0,false,26,2,0,0,0,3,3,9,0,3,0,3,0,0,2,0,0,0,4,2,3,4,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\MRUCacheTest.java,com.thealgorithms.datastructures.caches.MRUCacheTest,putAndGetIntegerValues/0,false,13,2,0,0,0,3,3,9,0,3,0,3,0,0,2,0,0,0,0,2,3,0,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\MRUCacheTest.java,com.thealgorithms.datastructures.caches.MRUCacheTest,nullKeysAndValues/0,false,39,2,0,0,0,1,4,7,0,1,0,4,0,0,0,0,0,0,0,4,1,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\MRUCacheTest.java,com.thealgorithms.datastructures.caches.MRUCacheTest,overCapacity/0,false,49,2,0,0,0,2,3,7,0,2,0,3,0,0,1,0,0,0,0,4,2,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,increment/1[int],false,125,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,delete/1[Key],false,69,4,5,0,5,7,6,26,2,3,1,6,0,0,2,2,0,0,0,3,10,2,1,0,0,0,18,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,contains/1[Key],false,103,2,1,0,1,2,1,3,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,resize/1[int],false,129,3,2,0,2,3,1,11,0,2,1,1,0,0,1,1,0,0,0,1,5,0,2,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,"put/2[Key,Value]",false,30,4,3,0,3,5,4,19,3,1,2,4,0,0,1,2,0,0,0,2,5,2,2,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,get/1[Key],false,54,4,2,0,2,4,3,11,3,1,1,3,0,0,1,2,0,0,0,0,2,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,size/0,false,108,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,LinearProbingHashMap/0,true,18,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,LinearProbingHashMap/1[int],true,23,2,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,1,0,3,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\LinearProbingHashMap.java,com.thealgorithms.datastructures.hashmap.hashing.LinearProbingHashMap,keys/0,false,113,1,0,0,0,3,2,10,1,2,0,2,0,0,1,1,0,0,0,1,2,0,2,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Point,Point/1[int[]],true,84,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Point,"comparableDistanceExceptAxis/3[com.thealgorithms.datastructures.trees.KDTree.Point,com.thealgorithms.datastructures.trees.KDTree.Point,int]",false,132,1,3,1,2,3,2,9,1,3,3,2,2,1,1,1,0,0,0,2,4,2,2,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Point,getDimension/0,false,80,0,7,7,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Point,toString/0,false,98,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Point,getCoordinate/1[int],false,76,0,10,10,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Point,"comparableDistance/2[com.thealgorithms.datastructures.trees.KDTree.Point,com.thealgorithms.datastructures.trees.KDTree.Point]",false,110,1,3,1,2,2,2,8,1,3,2,2,2,1,1,0,0,0,0,2,4,2,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree$Point,equals/1[java.lang.Object],false,89,1,3,2,1,3,2,7,3,0,1,2,1,1,0,1,0,0,0,0,0,0,2,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CalculateMaxOfMinTest.java,com.thealgorithms.others.CalculateMaxOfMinTest,testForOneElement/0,false,11,1,0,0,0,2,2,5,0,2,0,2,0,0,0,1,0,0,0,8,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CalculateMaxOfMinTest.java,com.thealgorithms.others.CalculateMaxOfMinTest,testForThreeElements/0,false,25,1,0,0,0,2,2,5,0,2,0,2,0,0,0,1,0,0,0,8,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CalculateMaxOfMinTest.java,com.thealgorithms.others.CalculateMaxOfMinTest,testForFiveElements/0,false,39,1,0,0,0,2,2,5,0,2,0,2,0,0,0,1,0,0,0,2,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CalculateMaxOfMinTest.java,com.thealgorithms.others.CalculateMaxOfMinTest,testForSevenElements/0,false,53,1,0,0,0,2,2,5,0,2,0,2,0,0,0,1,0,0,0,7,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CalculateMaxOfMinTest.java,com.thealgorithms.others.CalculateMaxOfMinTest,testForTwoElements/0,false,18,1,0,0,0,2,2,5,0,2,0,2,0,0,0,1,0,0,0,8,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CalculateMaxOfMinTest.java,com.thealgorithms.others.CalculateMaxOfMinTest,testForFourElements/0,false,32,1,0,0,0,2,2,5,0,2,0,2,0,0,0,1,0,0,0,7,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CalculateMaxOfMinTest.java,com.thealgorithms.others.CalculateMaxOfMinTest,testForSixElements/0,false,46,1,0,0,0,2,2,5,0,2,0,2,0,0,0,1,0,0,0,8,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\SkylineProblem.java,com.thealgorithms.others.SkylineProblem$Building,"Building/3[int,int,int]",true,135,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.Graphs,main/1[java.lang.String[]],false,125,1,2,0,2,1,2,12,0,1,1,2,0,0,0,0,0,0,0,16,1,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\QuickSort.java,com.thealgorithms.sorts.QuickSort,"randomPartition/3[T[],int,int]",false,54,3,3,1,2,1,3,5,1,1,3,3,1,1,0,0,0,2,0,1,1,4,0,0,0,0,23,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\QuickSort.java,com.thealgorithms.sorts.QuickSort,"partition/3[T[],int,int]",false,72,2,3,1,2,5,2,18,1,2,3,2,0,0,3,0,0,1,0,1,2,2,2,0,0,0,24,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\QuickSort.java,com.thealgorithms.sorts.QuickSort,sort/1[T[]],false,18,2,1,0,1,1,1,4,1,0,1,1,1,3,0,0,0,0,0,2,0,1,0,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\QuickSort.java,com.thealgorithms.sorts.QuickSort,"doSort/3[T[],int,int]",false,34,2,4,2,2,2,2,7,0,1,3,2,2,2,0,0,0,0,0,1,1,1,1,0,0,0,19,10,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,getKeyIndex/0,false,22,2,0,0,0,1,3,6,0,1,0,3,0,0,0,0,0,0,0,5,1,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,createHashMapCuckooHashing/0,false,94,2,0,0,0,1,2,6,1,2,0,2,0,0,0,0,0,0,0,12,2,0,0,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,removeKey/0,false,40,2,0,0,0,1,4,7,0,2,0,4,0,0,0,0,0,0,0,4,2,1,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,hashFunctionsAreDifferent/0,false,75,2,0,0,0,1,4,5,0,1,0,4,0,0,0,0,0,0,0,4,1,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,avoidInfiniteLoops/0,false,83,2,0,0,0,1,3,9,0,1,0,3,0,0,0,0,0,0,0,7,1,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,insertKey/0,false,12,2,0,0,0,1,3,6,0,1,0,3,0,0,0,0,0,0,0,4,1,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,removeNone/0,false,52,2,0,0,0,2,4,12,1,2,0,4,0,0,0,0,1,0,0,2,2,0,1,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,containsKey/0,false,31,2,0,0,0,1,3,6,0,2,0,3,0,0,0,0,0,0,0,3,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\HashMapCuckooHashingTest.java,com.thealgorithms.datastructures.hashmap.HashMapCuckooHashingTest,reHashTableIncreasesTableSize/0,false,65,2,0,0,0,1,3,6,0,2,0,3,0,0,0,0,0,0,0,2,2,1,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NumberOfDigits.java,com.thealgorithms.maths.NumberOfDigits,numberOfDigitsFast/1[int],false,49,0,1,1,0,2,3,3,1,0,1,3,0,0,0,1,0,0,0,3,0,1,0,0,0,0,14,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NumberOfDigits.java,com.thealgorithms.maths.NumberOfDigits,numberOfDigits/1[int],false,34,0,1,1,0,2,0,9,1,1,1,0,0,0,1,1,0,0,0,3,2,0,1,0,0,0,12,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NumberOfDigits.java,com.thealgorithms.maths.NumberOfDigits,numberOfDigitsRecursion/1[int],false,71,1,3,2,1,2,1,3,1,0,1,1,1,0,0,1,0,0,0,5,0,3,0,0,0,0,14,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NumberOfDigits.java,com.thealgorithms.maths.NumberOfDigits,numberOfDigitsFaster/1[int],false,61,0,1,1,0,2,1,3,1,0,1,1,0,0,0,0,0,2,2,1,0,2,0,0,0,0,14,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NumberOfDigits.java,com.thealgorithms.maths.NumberOfDigits,main/1[java.lang.String[]],false,8,2,4,0,4,2,4,9,0,2,1,4,4,1,1,4,0,0,0,14,2,4,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\InterpolationSearch.java,com.thealgorithms.searches.InterpolationSearch,"find/2[int[],int]",false,26,1,1,1,0,6,0,16,2,3,2,0,0,0,1,1,0,6,0,5,5,9,2,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\InterpolationSearch.java,com.thealgorithms.searches.InterpolationSearch,main/1[java.lang.String[]],false,59,2,2,0,2,2,9,12,0,8,1,9,1,1,0,1,0,0,2,3,8,1,0,0,0,1,30,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AliquotSumTest.java,com.thealgorithms.maths.AliquotSumTest,testGetMaxValue/0,false,10,1,0,0,0,1,3,10,0,0,0,3,0,0,0,0,0,0,0,16,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\CharacterSameTest.java,com.thealgorithms.strings.CharacterSameTest,isAllCharactersSame/0,false,10,2,1,0,1,1,3,16,0,7,0,3,0,0,0,0,0,0,7,0,7,0,0,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelect30thPercentileOf10Elements/0,false,128,2,2,0,2,1,5,6,0,3,0,5,1,1,0,0,0,0,0,3,3,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMinimumOfThreeElements/0,false,31,1,0,0,0,1,3,11,0,6,0,3,0,0,0,0,0,0,0,15,6,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMaximumOfTwoElements/0,false,61,1,0,0,0,1,3,8,0,4,0,3,0,0,0,0,0,0,0,8,4,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectEmptyList/0,false,192,1,0,0,0,1,5,6,0,3,0,5,0,0,0,0,0,0,1,1,3,0,0,0,0,1,20,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelect70thPercentileOfManyElements/0,false,156,2,2,0,2,1,5,7,0,4,0,5,1,1,0,0,0,0,0,2,4,2,0,0,0,0,28,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectIndexOutOfLeftBound/0,false,203,1,0,0,0,1,5,5,0,2,0,5,0,0,0,0,0,0,1,2,2,0,0,0,0,1,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMinimumOfManyElements/0,false,46,2,1,0,1,1,7,6,0,3,0,7,1,1,0,0,0,0,0,1,3,0,0,0,0,0,24,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMedianOfManyElements/0,false,118,2,2,0,2,1,5,7,0,4,0,5,1,1,0,0,0,0,0,1,4,1,0,0,0,0,29,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMaximumOfThreeElements/0,false,73,1,0,0,0,1,3,11,0,6,0,3,0,0,0,0,0,0,0,15,6,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMinimumOfOneElement/0,false,12,1,0,0,0,1,3,5,0,2,0,3,0,0,0,0,0,0,0,3,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,generateRandomIntegers/1[int],false,228,0,7,7,0,1,4,3,1,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,getSortedCopyOfList/1[java.util.List<T>],false,241,1,0,0,0,1,4,3,1,0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMaximumOfOneElement/0,false,54,1,0,0,0,1,3,5,0,2,0,3,0,0,0,0,0,0,0,3,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelect70thPercentileOf10Elements/0,false,147,2,2,0,2,1,5,6,0,3,0,5,1,1,0,0,0,0,0,3,3,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMedianOfManyCharacters/0,false,173,2,2,0,2,1,5,6,0,3,0,5,1,1,0,0,0,0,0,2,3,2,0,0,0,0,26,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectIndexOutOfRightBound/0,false,213,1,0,0,0,1,5,5,0,2,0,5,0,0,0,0,0,0,1,2,2,0,0,0,0,1,23,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMinimumOfTwoElements/0,false,19,1,0,0,0,1,3,8,0,4,0,3,0,0,0,0,0,0,0,8,4,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMaximumOfManyElements/0,false,88,2,1,0,1,1,7,6,0,3,0,7,1,1,0,0,0,0,0,1,3,1,0,0,0,0,24,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMedianOfOneElement/0,false,96,1,0,0,0,1,3,5,0,2,0,3,0,0,0,0,0,0,0,3,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMedianOfThreeCharacters/0,false,166,1,0,0,0,1,3,5,0,2,0,3,0,0,0,0,0,0,0,1,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,generateRandomCharacters/1[int],false,232,0,1,1,0,1,4,3,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectMedianOfThreeElements/0,false,103,1,0,0,0,1,3,11,0,6,0,3,0,0,0,0,0,0,0,15,6,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelect30thPercentileOfManyElements/0,false,137,2,2,0,2,1,5,7,0,4,0,5,1,1,0,0,0,0,0,2,4,2,0,0,0,0,28,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\QuickSelectTest.java,com.thealgorithms.searches.QuickSelectTest,quickSelectNullList/0,false,182,1,0,0,0,1,4,5,0,2,0,4,0,0,0,0,0,0,1,1,2,0,0,0,0,1,18,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\InorderTraversal.java,com.thealgorithms.datastructures.trees.InorderTraversal,"recursiveInorder/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,java.util.List<java.lang.Integer>]",false,52,2,3,2,1,2,2,8,1,0,2,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\InorderTraversal.java,com.thealgorithms.datastructures.trees.InorderTraversal,iterativeInorder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,35,1,0,0,0,5,4,15,2,2,1,4,0,0,2,3,0,0,0,0,5,0,2,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\InorderTraversal.java,com.thealgorithms.datastructures.trees.InorderTraversal,recursiveInorder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,29,2,1,0,1,1,1,5,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\Merge_K_SortedLinkedlist.java,com.thealgorithms.datastructures.lists.Merge_K_SortedLinkedlist$Node,Node/1[int],true,53,0,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,numberOfVertices/0,false,98,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,setNumberOfEdges/1[int],false,108,0,3,3,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,"addEdge/2[int,int]",false,187,1,6,1,5,4,5,11,2,0,2,5,5,3,0,0,0,0,0,1,2,1,2,0,0,0,26,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,toString/0,false,343,1,1,0,1,4,2,15,1,4,0,2,1,1,3,0,0,0,6,3,9,5,2,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,AdjacencyMatrixGraph/1[int],true,71,2,5,1,4,3,4,10,0,2,1,4,4,1,2,0,0,0,0,3,3,0,2,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,breadthFirstOrder/1[int],false,289,2,1,1,0,7,4,24,2,6,1,4,0,0,2,1,0,0,0,2,7,0,3,0,0,0,34,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,depthFirstOrder/1[int],false,227,2,2,1,1,3,1,9,2,2,1,1,1,1,0,0,0,0,0,1,2,0,1,0,0,0,29,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,setNumberOfVertices/1[int],false,89,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,setAdjacency/1[int[][]],false,126,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,numberOfEdges/0,false,117,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,"removeEdge/2[int,int]",false,208,1,5,0,5,4,5,11,2,0,2,5,5,3,0,0,0,0,0,1,2,1,2,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,"depthFirstOrder/3[int,boolean[],java.util.List<java.lang.Integer>]",false,258,3,3,2,1,4,2,13,1,2,3,2,1,0,1,1,0,0,0,1,3,0,2,0,0,0,42,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,adjacency/0,false,135,1,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,"adjacencyOfEdgeDoesExist/2[int,int]",false,146,1,4,3,1,2,1,3,1,0,2,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,24,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,"edgeDoesExist/2[int,int]",false,171,1,2,0,2,3,2,6,2,0,2,2,2,3,0,0,0,1,0,0,0,0,1,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\MatrixGraphs.java,com.thealgorithms.datastructures.graphs.AdjacencyMatrixGraph,vertexDoesExist/1[int],false,156,1,4,3,1,3,1,8,2,0,1,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PrintTopViewofTree.java,com.thealgorithms.datastructures.trees.PrintTopViewofTree,main/1[java.lang.String[]],false,92,2,3,0,3,1,2,11,0,2,1,2,0,0,0,0,0,0,1,6,7,0,0,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue$Anonymous1,next/0,false,152,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue$Anonymous1,hasNext/0,false,147,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Fibonacci.java,com.thealgorithms.dynamicprogramming.Fibonacci,fibBotUp/1[int],false,54,0,1,1,0,3,2,14,1,3,1,2,0,0,1,0,0,0,0,4,4,3,2,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Fibonacci.java,com.thealgorithms.dynamicprogramming.Fibonacci,main/1[java.lang.String[]],false,14,1,4,0,4,1,7,9,0,2,1,7,4,1,0,0,0,0,0,0,2,0,0,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Fibonacci.java,com.thealgorithms.dynamicprogramming.Fibonacci,fibMemo/1[int],false,32,1,3,2,1,3,4,14,2,1,1,4,1,0,0,0,0,0,0,3,2,3,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Fibonacci.java,com.thealgorithms.dynamicprogramming.Fibonacci,fibOptimized/1[int],false,83,0,1,1,0,3,0,12,2,4,1,0,0,0,1,1,0,0,0,5,6,1,1,0,0,0,50,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\Fibonacci.java,com.thealgorithms.dynamicprogramming.Fibonacci,fibBinet/1[int],false,105,0,1,1,0,1,2,6,1,3,1,2,0,0,0,0,0,3,0,3,3,4,0,0,0,0,55,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques$DequeNode,DequeNode/1[S],true,37,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LongDivision.java,com.thealgorithms.maths.LongDivision,"divide/2[int,int]",false,10,0,0,0,0,20,7,67,6,11,2,7,0,0,3,5,2,4,4,24,17,8,3,0,0,0,20,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\IntegerToRoman.java,com.thealgorithms.conversions.IntegerToRoman,main/1[java.lang.String[]],false,63,1,1,0,1,1,2,3,0,0,1,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\IntegerToRoman.java,com.thealgorithms.conversions.IntegerToRoman,integerToRoman/1[int],false,44,0,1,1,0,4,2,14,2,4,1,2,0,0,2,0,0,0,1,3,5,2,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\GCDRecursion.java,com.thealgorithms.maths.GCDRecursion,main/1[java.lang.String[]],false,8,1,1,0,1,1,2,5,0,0,1,2,1,1,0,0,0,0,0,8,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\GCDRecursion.java,com.thealgorithms.maths.GCDRecursion,"gcd/2[int,int]",false,24,1,3,2,1,6,2,14,3,0,2,2,1,0,0,3,0,0,0,5,0,3,1,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\IsomorphicTest.java,com.thealgorithms.strings.IsomorphicTest,main/1[java.lang.String[]],false,11,2,2,0,2,1,3,15,0,9,1,3,0,0,0,0,0,0,8,0,9,0,0,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\MaximumMinimumWindow.java,com.thealgorithms.datastructures.stacks.MaximumMinimumWindow,"calculateMaxOfMin/2[int[],int]",false,40,1,1,1,0,15,6,45,1,12,2,6,0,0,10,0,0,0,1,16,19,8,2,0,0,0,31,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\MaximumMinimumWindow.java,com.thealgorithms.datastructures.stacks.MaximumMinimumWindow,main/1[java.lang.String[]],false,99,2,1,0,1,1,2,6,0,3,1,2,1,1,0,0,0,0,0,14,3,0,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\ReverseStringRecursiveTest.java,com.thealgorithms.strings.ReverseStringRecursiveTest,shouldAcceptWhenEmptyStringIsPassed/0,false,11,2,1,0,1,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\ReverseStringRecursiveTest.java,com.thealgorithms.strings.ReverseStringRecursiveTest,shouldAcceptWhenStringIsPassed/0,false,27,2,1,0,1,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\ReverseStringRecursiveTest.java,com.thealgorithms.strings.ReverseStringRecursiveTest,shouldAcceptNotWhenWhenSingleCharacterIsPassed/0,false,19,2,1,0,1,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SumOfArithmeticSeries.java,com.thealgorithms.maths.SumOfArithmeticSeries,"sumOfSeries/3[double,double,int]",false,43,0,1,1,0,1,0,3,1,0,3,0,0,0,0,0,0,3,0,3,0,6,0,0,0,0,21,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SumOfArithmeticSeries.java,com.thealgorithms.maths.SumOfArithmeticSeries,main/1[java.lang.String[]],false,15,1,1,0,1,6,2,7,0,0,1,2,1,1,0,5,0,0,0,25,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PageRank.java,com.thealgorithms.others.PageRank,calc/1[double],false,30,1,1,1,0,13,1,52,0,8,1,1,0,0,10,2,0,2,16,25,24,14,6,0,0,0,34,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\PageRank.java,com.thealgorithms.others.PageRank,main/1[java.lang.String[]],false,7,1,2,0,2,4,4,17,0,5,1,4,1,1,2,1,0,0,2,3,7,0,3,0,0,0,23,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Vigenere.java,com.thealgorithms.ciphers.Vigenere,"decrypt/2[java.lang.String,java.lang.String]",false,43,0,0,0,0,4,8,20,1,4,2,8,0,0,1,0,0,6,0,6,5,9,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Vigenere.java,com.thealgorithms.ciphers.Vigenere,"encrypt/2[java.lang.String,java.lang.String]",false,11,0,0,0,0,4,8,20,1,4,2,8,0,0,1,0,0,4,0,6,5,11,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PowerOfTwoOrNot.java,com.thealgorithms.maths.PowerOfTwoOrNot,checkIfPowerOfTwoOrNot/1[int],false,24,0,1,1,0,3,0,3,1,0,1,0,0,0,0,2,0,3,0,3,0,1,0,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PowerOfTwoOrNot.java,com.thealgorithms.maths.PowerOfTwoOrNot,main/1[java.lang.String[]],false,9,1,1,0,1,1,1,7,0,0,1,1,1,1,0,0,0,0,0,5,0,0,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\countSetBitsTest.java,com.thealgorithms.others.countSetBitsTest,testSetBits/0,false,10,2,0,0,0,1,2,7,0,1,0,2,0,0,0,0,0,0,0,8,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,subBytes/1[java.math.BigInteger],false,2561,2,3,1,2,2,2,7,1,2,1,2,2,1,1,0,0,0,0,2,3,0,1,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,mixColumnsDec/1[java.math.BigInteger],false,2688,2,3,1,2,2,2,12,1,4,1,2,2,1,1,0,0,0,0,33,8,14,1,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,shiftRowsDec/1[java.math.BigInteger],false,2626,2,3,1,2,1,2,21,1,2,1,2,2,1,0,0,0,0,0,33,18,0,0,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,keyExpansion/1[java.math.BigInteger],false,2438,1,3,2,1,2,6,19,1,9,1,6,1,1,1,0,0,0,10,23,15,5,1,0,0,0,30,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,"scheduleCore/2[java.math.BigInteger,int]",false,2382,0,1,1,0,5,9,23,1,6,2,9,0,0,3,1,0,2,1,20,11,8,2,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,shiftRows/1[java.math.BigInteger],false,2591,2,3,1,2,1,2,21,1,2,1,2,2,1,0,0,0,0,0,33,18,0,0,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,splitBlockIntoCells/1[java.math.BigInteger],false,2502,1,6,6,0,3,5,12,1,4,1,5,0,0,2,0,0,1,0,9,5,3,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,main/1[java.lang.String[]],false,2781,1,2,0,2,3,6,31,0,7,1,6,2,10,0,0,1,0,7,7,10,2,2,0,0,0,28,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,mergeCellsIntoBlock/1[int[]],false,2527,1,6,6,0,3,5,11,1,3,1,5,0,0,2,0,0,0,0,5,3,0,2,0,0,0,26,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,"decrypt/2[java.math.BigInteger,java.math.BigInteger]",false,2759,1,6,1,5,2,5,14,1,2,2,5,5,5,1,0,0,0,0,4,10,0,1,0,0,0,35,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,mixColumns/1[java.math.BigInteger],false,2660,2,3,1,2,2,2,12,1,4,1,2,2,1,1,0,0,0,0,33,8,14,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,"encrypt/2[java.math.BigInteger,java.math.BigInteger]",false,2731,1,6,1,5,2,5,14,1,2,2,5,5,5,1,0,0,0,0,4,10,0,1,0,0,0,31,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,subBytesDec/1[java.math.BigInteger],false,2577,2,3,1,2,2,2,7,1,2,1,2,2,1,1,0,0,0,0,2,3,0,1,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\AES.java,com.thealgorithms.ciphers.AES,"addRoundKey/2[java.math.BigInteger,java.math.BigInteger]",false,2551,0,2,2,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForSevenElements/0,false,47,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,10,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForOneElement/0,false,11,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForSixElements/0,false,41,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,9,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForThreeElements/0,false,23,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForFourElements/0,false,29,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,7,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForEightElements/0,false,53,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,11,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForTwoElements/0,false,17,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,5,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\CountFriendsPairingTest.java,com.thealgorithms.others.CountFriendsPairingTest,testForFiveElements/0,false,35,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,8,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\SimpleSubstitutionCipherTest.java,com.thealgorithms.ciphers.SimpleSubstitutionCipherTest,testIsTextTheSameAfterEncodeAndDecode/0,false,36,1,0,0,0,1,3,7,0,4,0,3,0,0,0,0,0,0,2,0,4,0,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\SimpleSubstitutionCipherTest.java,com.thealgorithms.ciphers.SimpleSubstitutionCipherTest,testDecode/0,false,23,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,3,0,3,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\SimpleSubstitutionCipherTest.java,com.thealgorithms.ciphers.SimpleSubstitutionCipherTest,testEncode/0,false,10,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,3,0,3,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Huffman.java,com.thealgorithms.others.Huffman,main/1[java.lang.String[]],false,58,5,3,0,3,3,5,30,0,11,1,5,1,1,2,0,0,0,1,9,20,1,1,0,0,0,22,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Huffman.java,com.thealgorithms.others.Huffman,"printCode/2[com.thealgorithms.others.HuffmanNode,java.lang.String]",false,34,2,3,2,1,4,3,8,1,0,2,3,1,0,0,2,0,0,3,0,0,3,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\VerticalOrderTraversalTest.java,com.thealgorithms.datastructures.trees.VerticalOrderTraversalTest,testRootNull/0,false,15,1,0,0,0,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\VerticalOrderTraversalTest.java,com.thealgorithms.datastructures.trees.VerticalOrderTraversalTest,testVerticalTraversalDifferentHeight/0,false,48,3,1,0,1,1,4,4,0,1,0,4,0,0,0,0,0,0,0,18,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\VerticalOrderTraversalTest.java,com.thealgorithms.datastructures.trees.VerticalOrderTraversalTest,testSingleNodeTree/0,false,20,3,1,0,1,1,4,4,0,1,0,4,0,0,0,0,0,0,0,2,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\VerticalOrderTraversalTest.java,com.thealgorithms.datastructures.trees.VerticalOrderTraversalTest,testVerticalTraversalCompleteTree/0,false,33,3,1,0,1,1,4,4,0,1,0,4,0,0,0,0,0,0,0,14,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BipartiteGrapfDFS.java,com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS,"bipartite/4[int,java.util.ArrayList<java.util.ArrayList<java.lang.Integer>>,int[],int]",false,24,2,3,2,1,6,2,17,3,0,4,2,1,0,1,4,0,0,0,4,2,1,3,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BipartiteGrapfDFS.java,com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS,"isBipartite/2[int,java.util.ArrayList<java.util.ArrayList<java.lang.Integer>>]",false,44,2,2,1,1,4,2,12,2,2,2,2,1,1,1,1,0,0,0,4,2,1,3,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\BipartiteGrapfDFS.java,com.thealgorithms.datastructures.graphs.BipartiteGrapfDFS,main/1[java.lang.String[]],false,59,1,1,0,1,5,9,27,0,12,1,9,1,2,3,0,0,0,4,7,12,0,2,0,0,0,22,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\OddEvenSort.java,com.thealgorithms.sorts.OddEvenSort,oddEvenSort/1[int[]],false,34,2,5,4,1,6,1,18,0,3,1,1,1,1,3,0,0,0,0,10,8,6,3,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\OddEvenSort.java,com.thealgorithms.sorts.OddEvenSort,main/1[java.lang.String[]],false,8,2,1,0,1,3,4,14,0,4,1,4,1,2,2,0,0,0,1,7,5,3,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\OddEvenSort.java,com.thealgorithms.sorts.OddEvenSort,"swap/3[int[],int,int]",false,62,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,18,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray$Node,"Node/2[K,V]",true,123,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\GnomeSort.java,com.thealgorithms.sorts.GnomeSort,main/1[java.lang.String[]],false,31,2,4,0,4,1,4,10,0,3,1,4,0,0,0,0,0,0,14,15,3,0,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\GnomeSort.java,com.thealgorithms.sorts.GnomeSort,sort/1[T[]],false,14,2,2,0,2,4,2,16,1,2,1,2,0,0,1,1,0,0,0,5,4,2,3,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AbsoluteValueTest.java,com.thealgorithms.maths.AbsoluteValueTest,testGetAbsValue/0,false,12,1,0,0,0,1,8,3,0,1,0,8,0,0,0,0,0,0,0,1,0,0,0,0,0,2,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\RomanNumeralUtil.java,com.thealgorithms.maths.RomanNumeralUtil,generate/1[int],false,64,0,0,0,0,3,1,6,1,0,1,1,0,0,0,0,0,1,1,6,0,7,1,0,0,0,20,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Cycles.java,com.thealgorithms.datastructures.graphs.Cycle,printAll/0,false,72,0,1,1,0,3,7,9,0,2,0,7,0,0,2,0,0,0,1,3,2,1,2,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Cycles.java,com.thealgorithms.datastructures.graphs.Cycle,Cycle/0,true,13,2,1,1,0,3,4,20,0,5,0,4,0,0,2,0,0,0,3,3,11,0,1,0,0,0,17,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Cycles.java,com.thealgorithms.datastructures.graphs.Cycle,"dfs/3[java.lang.Integer,java.lang.Integer,java.util.ArrayList<java.lang.Integer>]",false,51,1,3,2,1,6,5,20,0,1,3,5,1,0,1,2,0,0,0,4,3,1,4,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Cycles.java,com.thealgorithms.datastructures.graphs.Cycle,start/0,false,40,1,2,1,1,3,1,10,0,3,0,1,1,1,2,0,0,0,0,4,5,0,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForOneElement/0,false,11,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForFiveElements/0,false,31,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForSixElements/0,false,36,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForEightElements/0,false,46,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForThreeElements/0,false,21,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForFourElements/0,false,26,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForTwoElements/0,false,16,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\UniquePathsTests.java,com.thealgorithms.others.UniquePathsTests,testForSevenElements/0,false,41,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\GuassLegendre.java,com.thealgorithms.others.GuassLegendre,"update/4[double,double,double,double]",false,34,1,1,1,0,1,2,8,1,1,4,2,0,0,0,0,0,1,0,9,5,7,0,0,0,0,6,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\GuassLegendre.java,com.thealgorithms.others.GuassLegendre,pi/1[int],false,17,1,2,1,1,2,2,11,1,6,1,2,1,1,1,0,0,1,0,12,10,3,1,0,0,0,8,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\GuassLegendre.java,com.thealgorithms.others.GuassLegendre,main/1[java.lang.String[]],false,11,1,1,0,1,2,2,5,0,1,1,2,1,2,1,0,0,0,0,2,1,0,1,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\LetterCombinationsOfPhoneNumber.java,com.thealgorithms.strings.LetterCombinationsOfPhoneNumber,main/1[java.lang.String[]],false,46,1,1,0,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,3,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\LetterCombinationsOfPhoneNumber.java,com.thealgorithms.strings.LetterCombinationsOfPhoneNumber,"printWords/4[int[],int,int,java.lang.String]",false,9,2,4,3,1,3,7,12,2,3,4,7,1,0,1,1,0,0,0,2,4,1,1,0,0,0,10,12,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\LetterCombinationsOfPhoneNumber.java,com.thealgorithms.strings.LetterCombinationsOfPhoneNumber,generateNumberToCharMap/0,false,31,0,2,2,0,1,0,13,0,0,0,0,0,0,0,0,0,0,0,12,11,0,0,0,0,0,6,12,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\LetterCombinationsOfPhoneNumber.java,com.thealgorithms.strings.LetterCombinationsOfPhoneNumber,printWords/1[int[]],false,25,2,3,1,2,1,4,5,0,1,1,4,2,1,0,0,0,0,1,1,1,0,0,0,0,0,10,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexaDecimalToDecimal.java,com.thealgorithms.conversions.HexaDecimalToDecimal,main/1[java.lang.String[]],false,20,1,1,0,1,1,5,10,0,3,1,5,1,1,0,0,0,0,2,0,3,1,0,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexaDecimalToDecimal.java,com.thealgorithms.conversions.HexaDecimalToDecimal,getHexaToDec/1[java.lang.String],false,8,0,1,1,0,2,4,10,1,4,1,4,0,0,1,0,0,0,1,3,6,2,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\StandardDeviation.java,com.thealgorithms.maths.StandardDeviation,stdDev/1[double[]],false,5,1,0,0,0,3,2,13,1,4,1,2,0,0,2,0,0,1,0,5,8,1,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Average.java,com.thealgorithms.maths.Average,average/1[double[]],false,14,1,0,0,0,2,0,7,1,1,1,0,0,0,1,0,0,0,0,1,2,1,1,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Average.java,com.thealgorithms.maths.Average,average/1[int[]],false,29,1,0,0,0,2,0,7,1,1,1,0,0,0,1,0,0,1,0,1,2,1,1,0,0,0,17,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LazySegmentTreeTest.java,com.thealgorithms.datastructures.trees.LazySegmentTreeTest,build/0,false,10,3,0,0,0,1,5,7,0,2,0,5,0,0,0,0,0,0,0,13,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LazySegmentTreeTest.java,com.thealgorithms.datastructures.trees.LazySegmentTreeTest,get/0,false,38,3,0,0,0,1,2,8,0,2,0,2,0,0,0,0,0,0,0,22,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LazySegmentTreeTest.java,com.thealgorithms.datastructures.trees.LazySegmentTreeTest,update/0,false,19,3,0,0,0,1,4,13,0,2,0,4,0,0,0,0,0,0,0,27,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LazySegmentTreeTest.java,com.thealgorithms.datastructures.trees.LazySegmentTreeTest,updateAndGet/0,false,48,3,0,0,0,3,3,10,0,4,0,3,0,0,2,0,0,0,0,17,4,2,2,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\BalancedBrackets.java,com.thealgorithms.datastructures.stacks.BalancedBrackets,"isPaired/2[char,char]",false,29,1,1,1,0,4,0,9,2,1,2,0,0,0,1,2,0,0,0,2,1,0,2,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\BalancedBrackets.java,com.thealgorithms.datastructures.stacks.BalancedBrackets,isBalanced/1[java.lang.String],false,54,1,3,2,1,11,5,25,3,1,1,5,1,1,1,1,0,0,1,0,1,0,3,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\BalancedBrackets.java,com.thealgorithms.datastructures.stacks.BalancedBrackets,main/1[java.lang.String[]],false,84,1,1,0,1,1,1,4,0,0,1,1,1,2,0,0,0,0,2,0,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RemoveDuplicateFromString.java,com.thealgorithms.others.RemoveDuplicateFromString,removeDuplicate/1[java.lang.String],false,33,0,1,1,0,5,7,13,2,3,1,7,0,0,1,2,0,0,0,2,3,0,2,0,0,0,35,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RemoveDuplicateFromString.java,com.thealgorithms.others.RemoveDuplicateFromString,main/1[java.lang.String[]],false,11,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,2,0,2,2,0,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\HexaDecimalToBinaryTest.java,com.thealgorithms.conversions.HexaDecimalToBinaryTest,testHexaDecimalToBinary/0,false,9,2,0,0,0,1,2,5,0,1,0,2,0,0,0,0,0,0,4,0,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\RandomNode.java,com.thealgorithms.datastructures.lists.RandomNode$ListNode,ListNode/1[int],true,42,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\io\BufferedReaderTest.java,com.thealgorithms.io.BufferedReaderTest,testPeeks/0,false,14,3,0,0,0,1,6,13,0,5,0,6,0,0,0,0,0,0,1,3,5,0,0,0,0,0,18,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\io\BufferedReaderTest.java,com.thealgorithms.io.BufferedReaderTest,testMixes/0,false,35,3,0,0,0,3,8,25,0,6,0,8,0,0,1,0,1,0,2,8,6,0,1,0,0,0,21,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\io\BufferedReaderTest.java,com.thealgorithms.io.BufferedReaderTest,randomTest/0,false,104,3,0,0,0,5,9,21,0,11,0,9,0,0,2,1,0,1,0,9,11,1,2,0,0,0,25,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\io\BufferedReaderTest.java,com.thealgorithms.io.BufferedReaderTest,testBlockPractical/0,false,71,3,0,0,0,2,6,21,0,5,0,6,0,0,0,1,0,0,4,1,6,0,1,0,0,0,20,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AbsoluteMin.java,com.thealgorithms.maths.AbsoluteMin,getMinValue/1[int[]],false,13,2,1,0,1,3,5,11,1,3,1,5,0,0,0,1,0,0,1,2,2,0,1,1,0,2,26,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BoyerMoore.java,com.thealgorithms.others.BoyerMoore,main/1[java.lang.String[]],false,38,2,1,0,1,2,3,9,0,4,1,3,1,1,1,0,0,0,1,1,5,1,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BoyerMoore.java,com.thealgorithms.others.BoyerMoore,findmajor/1[int[]],false,12,1,1,1,0,7,0,27,2,4,1,0,0,0,2,3,0,1,0,8,6,1,3,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\PrimMST.java,com.thealgorithms.datastructures.graphs.PrimMST,"printMST/3[int[],int,int[][]]",false,31,1,1,1,0,2,1,6,0,1,3,1,0,0,1,0,0,0,3,1,1,1,1,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\PrimMST.java,com.thealgorithms.datastructures.graphs.PrimMST,"minKey/2[int[],java.lang.Boolean[]]",false,15,1,1,1,0,4,0,10,1,3,2,0,0,0,1,1,0,0,0,2,5,0,2,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\PrimMST.java,com.thealgorithms.datastructures.graphs.PrimMST,main/1[java.lang.String[]],false,96,2,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,25,2,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\PrimMST.java,com.thealgorithms.datastructures.graphs.PrimMST,primMST/1[int[][]],false,42,2,3,1,2,7,2,22,0,7,1,2,2,1,3,2,0,0,0,9,14,1,3,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star,main/1[java.lang.String[]],false,142,4,4,0,4,1,4,8,0,4,1,4,2,1,0,0,0,0,0,95,4,0,0,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star,"aStar/4[int,int,com.thealgorithms.datastructures.graphs.A_Star.Graph,int[]]",false,278,4,8,1,7,7,15,23,1,6,4,15,0,0,2,1,0,2,0,7,7,3,4,0,0,1,19,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star,"initializeGraph/2[com.thealgorithms.datastructures.graphs.A_Star.Graph,java.util.ArrayList<java.lang.Integer>]",false,107,2,3,1,2,2,3,5,0,1,2,3,0,0,1,0,0,0,0,4,2,2,1,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\EulerMethod.java,com.thealgorithms.maths.EulerMethod,main/1[java.lang.String[]],false,24,2,1,0,1,4,6,17,0,15,1,6,1,2,0,3,0,0,6,27,6,5,0,0,0,6,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\EulerMethod.java,com.thealgorithms.maths.EulerMethod,"eulerStep/4[double,double,double,java.util.function.BiFunction<java.lang.Double,java.lang.Double,java.lang.Double>]",false,80,0,1,1,0,2,1,7,1,1,4,1,0,0,0,0,0,0,1,1,1,2,1,0,0,0,30,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\EulerMethod.java,com.thealgorithms.maths.EulerMethod,"eulerFull/5[double,double,double,double,java.util.function.BiFunction<java.lang.Double,java.lang.Double,java.lang.Double>]",false,111,2,2,1,1,4,2,20,1,5,5,2,1,1,1,0,0,0,2,1,7,0,1,0,0,0,46,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\OrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.OrderAgnosticBinarySearchTest,ElementInMiddle/0,false,15,2,0,0,0,1,3,7,0,3,0,3,0,0,0,0,0,0,0,9,3,1,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\OrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.OrderAgnosticBinarySearchTest,RightHalfAscOrder/0,false,45,2,0,0,0,1,3,7,0,3,0,3,0,0,0,0,0,0,0,9,3,1,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\OrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.OrderAgnosticBinarySearchTest,ElementNotFound/0,false,65,2,0,0,0,1,3,7,0,3,0,3,0,0,0,0,0,0,0,9,3,1,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\OrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.OrderAgnosticBinarySearchTest,LeftHalfDescOrder/0,false,35,2,0,0,0,1,3,7,0,3,0,3,0,0,0,0,0,0,0,9,3,1,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\OrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.OrderAgnosticBinarySearchTest,RightHalfDescOrder/0,false,25,2,0,0,0,1,3,7,0,3,0,3,0,0,0,0,0,0,0,9,3,1,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\OrderAgnosticBinarySearchTest.java,com.thealgorithms.searches.OrderAgnosticBinarySearchTest,LeftHalfAscOrder/0,false,55,2,0,0,0,1,3,7,0,3,0,3,0,0,0,0,0,0,0,9,3,1,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\ValidParentheses.java,com.thealgorithms.strings.ValidParentheses,isValid/1[java.lang.String],false,10,1,3,3,0,15,2,23,4,2,1,2,0,0,1,7,0,0,0,5,3,0,3,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\SimpleSubstitutionCipher.java,com.thealgorithms.ciphers.SimpleSubstitutionCipher,"encode/2[java.lang.String,java.lang.String]",false,22,0,0,0,0,4,10,21,1,7,2,10,0,0,2,0,0,0,0,2,8,0,2,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\SimpleSubstitutionCipher.java,com.thealgorithms.ciphers.SimpleSubstitutionCipher,"decode/2[java.lang.String,java.lang.String]",false,57,0,0,0,0,4,10,21,1,7,2,10,0,0,2,0,0,0,0,2,8,0,2,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\RadixSort.java,com.thealgorithms.sorts.RadixSort,"countSort/3[int[],int,int]",false,17,1,1,1,0,5,1,19,0,3,3,1,0,0,4,0,0,3,0,13,9,9,1,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\RadixSort.java,com.thealgorithms.sorts.RadixSort,"print/2[int[],int]",false,49,1,1,1,0,2,1,5,0,1,2,1,0,0,1,0,0,0,1,1,1,1,1,0,0,0,3,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\RadixSort.java,com.thealgorithms.sorts.RadixSort,"radixsort/2[int[],int]",false,41,2,3,1,2,2,2,6,0,2,2,2,2,1,1,0,0,0,0,3,3,1,1,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\RadixSort.java,com.thealgorithms.sorts.RadixSort,main/1[java.lang.String[]],false,55,2,2,0,2,1,2,6,0,2,1,2,2,2,0,0,0,0,0,8,2,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\RadixSort.java,com.thealgorithms.sorts.RadixSort,"getMax/2[int[],int]",false,7,1,1,1,0,3,0,9,1,2,2,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,5,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\FirstFitCPUTest.java,com.thealgorithms.others.FirstFitCPUTest,testFitForUseOfOneBlock/0,false,21,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\FirstFitCPUTest.java,com.thealgorithms.others.FirstFitCPUTest,testFitForNoEmptyBlockCell/0,false,41,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\FirstFitCPUTest.java,com.thealgorithms.others.FirstFitCPUTest,testFitForSameInputDifferentQuery/0,false,51,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\FirstFitCPUTest.java,com.thealgorithms.others.FirstFitCPUTest,testFitForMoreBlocksNoFit/0,false,61,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,9,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\FirstFitCPUTest.java,com.thealgorithms.others.FirstFitCPUTest,testFitForEqualProcecesses/0,false,31,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\audiofilters\IIRFilter.java,com.thealgorithms.audiofilters.IIRFilter,process/1[double],false,82,0,0,0,0,3,0,14,1,3,1,0,0,0,2,0,0,2,0,12,9,11,1,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\audiofilters\IIRFilter.java,com.thealgorithms.audiofilters.IIRFilter,"setCoeffs/2[double[],double[]]",false,51,1,0,0,0,5,0,15,0,1,2,0,0,0,1,3,0,0,5,3,3,2,1,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\audiofilters\IIRFilter.java,com.thealgorithms.audiofilters.IIRFilter,IIRFilter/1[int],true,23,1,0,0,0,2,0,12,0,0,1,0,0,0,0,0,0,0,1,7,7,2,1,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\CompositeLFSR.java,com.thealgorithms.ciphers.a5.CompositeLFSR,clock/0,false,17,2,5,1,4,3,4,9,1,2,0,4,1,1,1,1,0,0,0,0,3,0,2,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\CompositeLFSR.java,com.thealgorithms.ciphers.a5.CompositeLFSR,getMajorityBit/0,false,27,1,2,1,1,2,4,7,1,2,0,4,0,0,0,0,0,0,0,3,1,1,0,0,0,1,8,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TreeSortTest.java,com.thealgorithms.sorts.TreeSortTest,treeSortEmptyArray/0,false,16,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TreeSortTest.java,com.thealgorithms.sorts.TreeSortTest,treeSortDoubleArray/0,false,70,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,20,3,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TreeSortTest.java,com.thealgorithms.sorts.TreeSortTest,treeSortStringArray/0,false,32,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,20,0,3,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TreeSortTest.java,com.thealgorithms.sorts.TreeSortTest,treeSortSingleStringElement/0,false,24,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TreeSortTest.java,com.thealgorithms.sorts.TreeSortTest,treeSortIntegerArray/0,false,62,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,20,3,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\queues\PriorityQueuesTest.java,com.thealgorithms.datastructures.queues.PriorityQueuesTest,testPQExtra/0,false,38,2,0,0,0,1,7,19,0,1,0,7,0,0,0,0,0,0,0,9,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\queues\PriorityQueuesTest.java,com.thealgorithms.datastructures.queues.PriorityQueuesTest,testPQInsertion/0,false,9,2,0,0,0,1,3,10,0,1,0,3,0,0,0,0,0,0,0,8,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\queues\PriorityQueuesTest.java,com.thealgorithms.datastructures.queues.PriorityQueuesTest,testPQDeletion/0,false,23,2,0,0,0,1,4,12,0,1,0,4,0,0,0,0,0,0,0,7,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Huffman.java,com.thealgorithms.others.MyComparator,"compare/2[com.thealgorithms.others.HuffmanNode,com.thealgorithms.others.HuffmanNode]",false,24,1,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearch.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearch,"find/2[T[][],T]",false,25,3,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\RowColumnWiseSorted2dArrayBinarySearch.java,com.thealgorithms.searches.RowColumnWiseSorted2dArrayBinarySearch,"search/2[T[][],T]",false,29,2,1,1,0,5,1,17,2,3,2,1,0,0,1,1,0,0,0,7,3,1,2,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Dijkstra,main/1[java.lang.String[]],false,42,1,3,0,3,1,2,5,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,23,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph$Vertex,compareTo/1[com.thealgorithms.others.Graph.Vertex],false,97,1,0,0,0,2,2,6,2,0,1,2,0,0,0,1,0,0,0,0,0,0,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph$Vertex,toString/0,false,157,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph$Vertex,hashCode/0,false,146,1,2,1,1,4,4,8,1,1,0,4,1,0,0,3,0,3,0,7,5,8,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph$Vertex,Vertex/1[java.lang.String],true,82,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph$Vertex,printPath/0,false,86,1,4,3,1,3,2,12,0,0,0,2,1,0,0,2,0,0,3,0,0,0,1,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Dijkstra.java,com.thealgorithms.others.Graph$Vertex,equals/1[java.lang.Object],false,106,1,2,1,1,9,5,25,8,1,1,5,1,0,0,10,0,0,0,0,1,0,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\SimpleSubCipher.java,com.thealgorithms.ciphers.SimpleSubCipher,"decode/2[java.lang.String,java.lang.String]",false,59,0,0,0,0,4,10,21,1,7,2,10,0,0,2,0,0,0,0,2,8,0,2,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\SimpleSubCipher.java,com.thealgorithms.ciphers.SimpleSubCipher,"encode/2[java.lang.String,java.lang.String]",false,22,0,0,0,0,4,10,21,1,7,2,10,0,0,2,0,0,0,0,2,8,0,2,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\DecimalToHexaDecimalTest.java,com.thealgorithms.conversions.DecimalToHexaDecimalTest,testDecimalToHexaDecimal/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$Edge,getTo/0,false,53,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$Edge,"Edge/3[int,int,int]",true,43,0,2,2,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$Edge,getFrom/0,false,49,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$Edge,getWeight/0,false,57,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\HeronsFormula.java,com.thealgorithms.maths.HeronsFormula,"Herons/3[int,int,int]",false,9,0,0,0,0,1,1,9,1,5,3,1,0,0,0,0,0,5,0,2,6,6,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\BinaryToHexadecimalTest.java,com.thealgorithms.conversions.BinaryToHexadecimalTest,testBinaryToHexadecimal/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\CheckAnagramsTest.java,com.thealgorithms.strings.CheckAnagramsTest,CheckFalseAnagrams/0,false,17,2,1,0,1,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\CheckAnagramsTest.java,com.thealgorithms.strings.CheckAnagramsTest,CheckSameWordAnagrams/0,false,24,2,1,0,1,1,2,4,0,1,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\CheckAnagramsTest.java,com.thealgorithms.strings.CheckAnagramsTest,CheckAnagrams/0,false,10,2,1,0,1,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\CheckAnagramsTest.java,com.thealgorithms.strings.CheckAnagramsTest,CheckDifferentCasesAnagram/0,false,30,2,1,0,1,1,2,5,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayListTest.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayListTest,testGenericHashmapWhichUsesArrayAndKeyIsStringValueIsInteger/0,false,23,2,0,0,0,1,8,13,0,1,0,8,0,0,0,0,0,0,8,7,1,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayListTest.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayListTest,testGenericHashmapWhichUsesArrayAndBothKeyAndValueAreStrings/0,false,10,2,0,0,0,1,5,11,0,1,0,5,0,0,0,0,0,0,12,1,1,0,0,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayListTest.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayListTest,testGenericHashmapWhichUsesArrayAndKeyIsIntegerValueIsString/0,false,38,2,0,0,0,1,7,12,0,1,0,7,0,0,0,0,0,0,6,8,1,0,0,0,0,0,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeFactorizationTest.java,com.thealgorithms.maths.PrimeFactorizationTest,testpFactorsMustReturnEmptyList/0,false,11,1,0,0,0,1,3,4,0,1,0,3,0,0,0,0,0,0,0,1,1,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeFactorizationTest.java,com.thealgorithms.maths.PrimeFactorizationTest,testpFactorsMustReturnNonEmptyList/0,false,20,1,0,0,0,1,4,10,0,3,0,4,0,0,0,0,0,0,0,10,3,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\FloydTriangle.java,com.thealgorithms.others.FloydTriangle,main/1[java.lang.String[]],false,7,0,0,0,0,3,5,12,0,5,1,5,0,0,2,0,0,0,2,3,5,1,2,0,0,0,18,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BruteForceKnapsack.java,com.thealgorithms.dynamicprogramming.BruteForceKnapsack,"max/2[int,int]",false,9,0,1,1,0,2,0,3,1,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BruteForceKnapsack.java,com.thealgorithms.dynamicprogramming.BruteForceKnapsack,"knapSack/4[int,int[],int[],int]",false,16,2,4,2,2,4,2,11,3,0,4,2,2,1,0,2,0,0,0,9,0,8,1,0,0,0,5,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\BruteForceKnapsack.java,com.thealgorithms.dynamicprogramming.BruteForceKnapsack,main/1[java.lang.String[]],false,40,2,1,0,1,1,2,7,0,4,1,2,1,2,0,0,0,0,0,7,4,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KMP.java,com.thealgorithms.others.KMP,computePrefixFunction/1[java.lang.String],false,40,1,1,1,0,5,2,16,1,4,1,2,0,0,2,2,0,0,0,6,7,1,2,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KMP.java,com.thealgorithms.others.KMP,"KMPmatcher/2[java.lang.String,java.lang.String]",false,18,2,2,1,1,6,4,18,0,5,2,4,1,1,2,3,0,1,1,6,7,5,2,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\KMP.java,com.thealgorithms.others.KMP,main/1[java.lang.String[]],false,11,1,1,0,1,1,1,5,0,2,1,1,1,2,0,0,0,0,2,0,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TopologicalSort.java,com.thealgorithms.sorts.TopologicalSort,"sort/3[com.thealgorithms.sorts.TopologicalSort.Graph,com.thealgorithms.sorts.TopologicalSort.Vertex,java.util.LinkedList<java.lang.String>]",false,143,4,4,2,2,3,4,19,1,1,3,4,1,0,0,2,0,0,2,0,5,1,2,0,0,1,9,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\TopologicalSort.java,com.thealgorithms.sorts.TopologicalSort,sort/1[com.thealgorithms.sorts.TopologicalSort.Graph],false,118,2,2,1,1,2,3,10,1,3,1,3,1,1,0,1,0,0,0,0,1,0,2,0,0,1,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,copyArray/1[int[]],false,33,1,1,1,0,2,0,7,1,2,1,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"insertionSort/3[int[],int,int]",false,107,2,2,1,1,6,1,15,1,2,3,1,1,1,2,3,0,0,0,5,2,4,3,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"getMedian/3[int[],int,int]",false,100,2,2,1,1,1,1,6,1,2,3,1,1,2,0,0,0,1,0,2,2,4,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"getMinKNumsByBFPRT/2[int[],int]",false,10,2,2,1,1,6,1,17,2,4,2,1,1,7,2,1,0,0,0,3,6,0,2,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"bfprt/4[int[],int,int,int]",false,41,2,6,3,3,5,3,16,4,2,4,3,3,5,0,1,0,0,0,7,2,2,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"getMinKthByBFPRT/2[int[],int]",false,28,2,3,1,2,1,2,4,1,1,2,2,2,6,0,0,0,0,0,3,1,2,0,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"swap/3[int[],int,int]",false,75,1,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,main/1[java.lang.String[]],false,122,2,1,0,1,1,3,5,0,2,1,3,1,8,0,0,0,0,0,20,2,0,0,0,0,0,14,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"medianOfMedians/3[int[],int,int]",false,64,2,3,1,2,3,3,9,1,4,3,3,2,5,1,1,0,0,0,13,5,12,1,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BFPRT.java,com.thealgorithms.others.BFPRT,"partition/4[int[],int,int,int]",false,81,2,2,1,1,4,1,20,1,4,4,1,1,1,1,1,0,0,0,7,6,4,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,sink/1[int],false,88,0,1,1,0,5,0,11,0,2,1,0,0,0,1,0,0,0,0,3,5,3,2,0,0,0,29,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,PriorityQueue/1[int],true,56,1,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,1,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,remove/0,false,125,1,2,0,2,2,2,14,1,2,0,2,2,1,0,0,0,0,1,5,5,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,isEmpty/0,false,156,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,swim/1[int],false,69,0,1,1,0,3,0,8,0,1,1,0,0,0,1,0,0,1,0,5,4,4,1,0,0,0,28,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,isFull/0,false,165,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,getSize/0,false,174,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,PriorityQueue/0,true,36,1,0,0,0,1,0,6,0,1,0,0,0,0,0,0,0,0,0,3,4,1,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,peek/0,false,147,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\PriorityQueues.java,com.thealgorithms.datastructures.queues.PriorityQueue,insert/1[int],false,110,1,2,0,2,2,2,9,0,0,1,2,2,1,0,0,0,0,1,0,1,0,1,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTreeTest.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTreeTest,testKeyAbsentLeftMostNodeIsCeil/0,false,41,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,9,1,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTreeTest.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTreeTest,testKeyAbsentRootIsCeil/0,false,29,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,9,1,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTreeTest.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTreeTest,testRootNull/0,false,12,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTreeTest.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTreeTest,testKeyPresentRootIsCeil/0,false,17,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,5,1,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTreeTest.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTreeTest,testKeyPresentLeafIsCeil/0,false,23,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,5,1,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTreeTest.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTreeTest,testKeyAbsentLeafIsCeil/0,false,35,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,9,1,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\CeilInBinarySearchTreeTest.java,com.thealgorithms.datastructures.trees.CeilInBinarySearchTreeTest,testKeyAbsentCeilIsNull/0,false,47,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,8,1,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestUpperSide/0,false,54,2,0,0,0,1,4,9,0,4,0,4,0,0,0,0,0,0,0,19,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestTargetInMiddle/0,false,124,2,0,0,0,1,4,9,0,3,0,4,0,0,0,0,0,0,0,23,3,2,0,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestMiddleSide/0,false,28,2,0,0,0,1,4,9,0,4,0,4,0,0,0,0,0,0,0,19,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestLower/0,false,67,2,0,0,0,1,4,9,0,4,0,4,0,0,0,0,0,0,0,19,4,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestLowerSide/0,false,80,2,0,0,0,1,4,9,0,4,0,4,0,0,0,0,0,0,0,19,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestUpper/0,false,41,2,0,0,0,1,4,9,0,4,0,4,0,0,0,0,0,0,0,19,4,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestTargetAboveMiddleRowInMiddleColumn/0,false,140,2,0,0,0,1,4,10,0,3,0,4,0,0,0,0,0,0,0,24,3,4,0,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestNotFound/0,false,93,2,0,0,0,1,4,9,0,4,0,4,0,0,0,0,0,0,0,19,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestMiddle/0,false,15,2,0,0,0,1,4,9,0,4,0,4,0,0,0,0,0,0,0,19,4,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestEmptyArray/0,false,158,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,1,15,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\BinarySearch2dArrayTest.java,com.thealgorithms.searches.BinarySearch2dArrayTest,BinarySearch2dArrayTestOneRow/0,false,108,2,0,0,0,1,4,9,0,3,0,4,0,0,0,0,0,0,0,10,3,0,0,0,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\BinaryPowTest.java,com.thealgorithms.maths.BinaryPowTest,testBinPow/0,false,10,1,0,0,0,1,2,6,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\DepthFirstSearch.java,com.thealgorithms.searches.DepthFirstSearch,"search/2[com.thealgorithms.searches.DepthFirstSearch.Node,java.lang.String]",false,38,2,5,2,3,2,9,6,2,1,2,9,1,0,0,0,0,0,0,0,0,0,1,0,0,1,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\DepthFirstSearch.java,com.thealgorithms.searches.DepthFirstSearch,"assertThat/2[java.lang.Object,java.lang.Object]",false,51,0,1,1,0,2,2,5,0,0,2,2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\DepthFirstSearch.java,com.thealgorithms.searches.DepthFirstSearch,main/1[java.lang.String[]],false,59,2,5,0,5,1,7,18,0,7,1,7,2,1,0,0,0,0,15,0,7,0,1,0,0,3,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\BinaryPow.java,com.thealgorithms.maths.BinaryPow,"binPow/2[int,int]",false,13,0,0,0,0,4,0,11,1,1,2,0,0,0,1,1,0,1,0,5,4,2,2,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\JugglerSequence.java,com.thealgorithms.maths.JugglerSequence,main/1[java.lang.String[]],false,51,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\JugglerSequence.java,com.thealgorithms.maths.JugglerSequence,jugglerSequence/1[int],false,21,0,1,1,0,3,5,18,0,4,1,5,0,0,1,2,0,0,3,3,6,4,2,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.AdjacencyListGraph$Vertex,removeAdjacentVertex/1[E],false,32,1,0,0,0,3,4,9,2,1,1,4,0,0,1,1,0,0,0,2,1,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.AdjacencyListGraph$Vertex,Vertex/1[E],true,18,2,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.AdjacencyListGraph$Vertex,addAdjacentVertex/1[com.thealgorithms.datastructures.graphs.AdjacencyListGraph<E>.Vertex],false,23,1,0,0,0,3,2,8,2,0,1,2,0,0,1,1,0,0,0,1,0,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\DiceThrow.java,com.thealgorithms.dynamicprogramming.DP,"findWays/3[int,int,int]",false,19,1,1,1,0,7,0,14,1,5,3,0,0,0,4,0,0,0,0,9,7,4,3,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\DiceThrow.java,com.thealgorithms.dynamicprogramming.DP,main/1[java.lang.String[]],false,44,1,1,0,1,1,2,7,0,0,1,2,1,1,0,0,0,0,0,15,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Main.java,com.thealgorithms.datastructures.hashmap.hashing.Main,main/1[java.lang.String[]],false,7,1,4,0,4,6,6,40,1,4,1,6,0,0,1,0,0,0,8,5,5,0,2,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DigitalRoot.java,com.thealgorithms.maths.DigitalRoot,single/1[int],false,50,1,3,2,1,2,1,8,2,0,1,1,1,0,0,0,0,1,0,3,0,3,1,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\DigitalRoot.java,com.thealgorithms.maths.DigitalRoot,digitalRoot/1[int],false,41,1,3,1,2,2,2,8,2,0,1,2,2,1,0,0,0,0,0,1,0,0,1,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Mandelbrot.java,com.thealgorithms.others.Mandelbrot,colorCodedColorMap/1[double],false,164,0,1,1,0,7,1,30,7,9,1,1,0,0,0,0,0,6,0,20,9,13,2,0,0,0,28,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Mandelbrot.java,com.thealgorithms.others.Mandelbrot,"getDistance/3[double,double,int]",false,212,0,1,1,0,3,0,15,1,5,3,0,0,0,1,0,0,1,0,5,8,11,2,0,0,0,45,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Mandelbrot.java,com.thealgorithms.others.Mandelbrot,"getImage/7[int,int,double,double,double,int,boolean]",false,91,1,4,1,3,7,5,22,1,7,7,5,3,1,2,0,0,2,3,7,7,10,2,0,0,0,75,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Mandelbrot.java,com.thealgorithms.others.Mandelbrot,blackAndWhiteColorMap/1[double],false,153,0,1,1,0,2,0,3,1,0,1,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,26,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Mandelbrot.java,com.thealgorithms.others.Mandelbrot,main/1[java.lang.String[]],false,28,1,1,0,1,6,5,14,0,2,1,5,1,2,0,4,1,0,2,32,2,0,1,0,0,0,16,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,getWaitingTime/0,false,29,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,setTurnAroundTimeTime/1[int],false,53,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,getTurnAroundTimeTime/0,false,33,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,getArrivalTime/0,false,20,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,setArrivalTime/1[int],false,41,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,getProcessId/0,false,16,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,setBurstTime/1[int],false,45,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,getBurstTime/0,false,24,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,"ProcessDetails/3[java.lang.String,int,int]",true,10,0,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,setWaitingTime/1[int],false,49,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\entities\ProcessDetails.java,com.thealgorithms.devutils.entities.ProcessDetails,setProcessId/1[java.lang.String],false,37,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SimpleSort.java,com.thealgorithms.sorts.SimpleSort,main/1[java.lang.String[]],false,24,2,4,0,4,1,5,17,0,2,1,5,0,0,0,0,0,0,12,8,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SimpleSort.java,com.thealgorithms.sorts.SimpleSort,sort/1[T[]],false,8,2,1,0,1,4,1,13,1,4,1,1,0,0,2,0,0,0,0,2,6,1,3,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\disjointsets\DisjointSets.java,com.thealgorithms.datastructures.disjointsets.DisjointSets,FindSet/1[com.thealgorithms.datastructures.disjointsets.Node<T>],false,9,3,1,0,1,2,1,6,1,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\disjointsets\DisjointSets.java,com.thealgorithms.datastructures.disjointsets.DisjointSets,MakeSet/1[T],false,5,2,1,0,1,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\disjointsets\DisjointSets.java,com.thealgorithms.datastructures.disjointsets.DisjointSets,"UnionSet/2[com.thealgorithms.datastructures.disjointsets.Node<T>,com.thealgorithms.datastructures.disjointsets.Node<T>]",false,17,3,1,0,1,4,1,17,1,2,2,1,0,0,0,1,0,0,0,0,5,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.LinkListSort,"isSorted/2[int[],int]",false,13,6,17,8,9,13,6,65,4,28,2,6,1,1,6,6,1,0,1,9,49,0,3,0,0,0,39,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.LinkListSort,"compare/2[int[],int[]]",false,109,1,1,1,0,3,0,6,2,1,2,0,0,0,1,1,0,0,0,1,1,0,2,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\PangramTest.java,com.thealgorithms.strings.PangramTest,testPangram/0,false,9,2,2,0,2,1,4,10,0,0,0,4,0,0,0,0,0,0,8,0,0,0,0,0,0,0,21,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BitonicSort.java,com.thealgorithms.sorts.BitonicSort,"sort/3[int[],int,int]",false,58,2,2,1,1,1,1,3,0,0,3,1,1,3,0,0,0,0,0,1,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BitonicSort.java,com.thealgorithms.sorts.BitonicSort,printArray/1[int[]],false,63,1,1,1,0,2,2,7,0,2,1,2,0,0,1,0,0,0,1,1,2,1,1,0,0,0,4,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BitonicSort.java,com.thealgorithms.sorts.BitonicSort,"bitonicSort/4[int[],int,int,int]",false,40,2,4,2,2,2,2,8,0,1,4,2,2,2,0,0,0,0,0,4,1,2,1,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BitonicSort.java,com.thealgorithms.sorts.BitonicSort,"bitonicMerge/4[int[],int,int,int]",false,25,2,4,2,2,3,2,10,0,2,4,2,2,1,1,0,0,0,0,2,2,4,2,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BitonicSort.java,com.thealgorithms.sorts.BitonicSort,main/1[java.lang.String[]],false,71,1,3,0,3,1,3,8,0,3,1,3,2,4,0,0,0,0,1,9,3,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\BitonicSort.java,com.thealgorithms.sorts.BitonicSort,"compAndSwap/4[int[],int,int,int]",false,11,1,1,1,0,5,0,7,0,1,4,0,0,0,0,2,0,2,0,2,3,0,1,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,GrahamScan/1[com.thealgorithms.geometry.Point[]],true,22,1,0,0,0,8,8,19,1,4,1,8,0,0,4,2,0,0,0,10,5,2,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,x/0,false,77,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,"Point/2[int,int]",false,64,1,0,0,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,polarOrder/0,false,123,2,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,"orientation/3[com.thealgorithms.geometry.Point,com.thealgorithms.geometry.Point,com.thealgorithms.geometry.Point]",false,95,1,1,1,0,3,0,7,2,1,3,0,0,0,0,1,0,5,0,5,1,7,1,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,compareTo/1[com.thealgorithms.geometry.Point],false,109,1,0,0,0,5,0,7,5,0,1,0,0,0,0,0,0,0,0,5,0,0,1,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,toString/0,false,151,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,y/0,false,85,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\geometry\GrahamScan.java,com.thealgorithms.geometry.GrahamScan,hull/0,false,58,1,0,0,0,2,1,5,1,1,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Caesar.java,com.thealgorithms.ciphers.Caesar,isSmallLatinLetter/1[char],false,80,0,2,2,0,3,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Caesar.java,com.thealgorithms.ciphers.Caesar,isCapitalLatinLetter/1[char],false,73,0,2,2,0,3,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Caesar.java,com.thealgorithms.ciphers.Caesar,"encode/2[java.lang.String,int]",false,19,1,2,0,2,6,6,20,1,4,2,6,2,1,1,0,0,2,0,4,7,2,2,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Caesar.java,com.thealgorithms.ciphers.Caesar,"decode/2[java.lang.String,int]",false,49,1,3,1,2,6,6,20,1,4,2,6,2,1,1,0,0,2,0,4,7,2,2,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Caesar.java,com.thealgorithms.ciphers.Caesar,bruteforce/1[java.lang.String],false,87,1,1,0,1,2,1,7,1,2,1,1,1,2,1,0,0,0,0,3,3,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,"Entry/4[com.thealgorithms.datastructures.caches.MRUCache.Entry<I,J>,com.thealgorithms.datastructures.caches.MRUCache.Entry<I,J>,I,J]",true,134,3,0,0,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,getKey/0,false,157,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,"setNextEntry/1[com.thealgorithms.datastructures.caches.MRUCache.Entry<I,J>]",false,153,3,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,Entry/0,true,127,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,setValue/1[J],false,169,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,getValue/0,false,165,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,setKey/1[I],false,161,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,"setPreEntry/1[com.thealgorithms.datastructures.caches.MRUCache.Entry<I,J>]",false,145,3,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,getNextEntry/0,false,149,3,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\MRUCache.java,com.thealgorithms.datastructures.caches.MRUCache$Entry,getPreEntry/0,false,141,3,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BeadSortTest.java,com.thealgorithms.sorts.BeadSortTest,beadSortSingleIntegerArray/0,false,20,2,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BeadSortTest.java,com.thealgorithms.sorts.BeadSortTest,beadSortEmptyArray/0,false,12,2,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BeadSortTest.java,com.thealgorithms.sorts.BeadSortTest,bogoSortNonDuplicateIntegerArray/0,false,28,2,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,14,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\BeadSortTest.java,com.thealgorithms.sorts.BeadSortTest,bogoSortDuplicateIntegerArray/0,false,36,2,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,16,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Implementing_auto_completing_features_using_trie.java,com.thealgorithms.others.Trieac,"suggestionsRec/2[com.thealgorithms.others.Trieac.TrieNode,java.lang.String]",false,78,2,4,2,2,5,3,14,1,1,2,3,2,1,1,1,0,1,0,2,2,1,2,0,0,0,22,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Implementing_auto_completing_features_using_trie.java,com.thealgorithms.others.Trieac,"insert/2[com.thealgorithms.others.Trieac.TrieNode,java.lang.String]",false,34,2,2,1,1,3,3,11,0,3,2,3,1,1,1,1,0,1,0,1,6,1,2,0,0,0,12,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Implementing_auto_completing_features_using_trie.java,com.thealgorithms.others.Trieac,"printAutoSuggestions/2[com.thealgorithms.others.Trieac.TrieNode,java.lang.String]",false,102,2,3,1,2,7,5,24,4,7,2,5,2,2,1,2,0,2,0,5,8,1,2,0,0,0,20,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Implementing_auto_completing_features_using_trie.java,com.thealgorithms.others.Trieac,main/1[java.lang.String[]],false,149,2,3,0,3,3,4,19,0,2,1,4,3,4,0,2,0,0,14,2,2,2,1,0,0,0,15,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Implementing_auto_completing_features_using_trie.java,com.thealgorithms.others.Trieac,getNode/0,false,21,1,3,2,1,2,0,8,1,2,0,0,0,0,1,0,0,0,0,1,4,0,1,0,0,0,18,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Implementing_auto_completing_features_using_trie.java,com.thealgorithms.others.Trieac,"search/2[com.thealgorithms.others.Trieac.TrieNode,java.lang.String]",false,50,1,0,0,0,4,2,11,1,4,2,2,0,0,1,2,0,2,0,1,5,1,2,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\Implementing_auto_completing_features_using_trie.java,com.thealgorithms.others.Trieac,isLastNode/1[com.thealgorithms.others.Trieac.TrieNode],false,67,1,2,2,0,3,0,8,2,1,1,0,0,0,1,1,0,0,0,1,1,0,2,0,0,0,20,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AutomorphicNumber.java,com.thealgorithms.maths.AutomorphicNumber,isAutomorphic2/1[long],false,42,0,0,0,0,2,2,5,2,1,1,2,0,0,0,0,0,0,0,1,1,1,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AutomorphicNumber.java,com.thealgorithms.maths.AutomorphicNumber,isAutomorphic3/1[java.lang.String],false,56,0,0,0,0,2,4,6,2,2,1,4,0,0,0,1,0,0,0,1,2,0,1,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AutomorphicNumber.java,com.thealgorithms.maths.AutomorphicNumber,isAutomorphic/1[long],false,22,0,0,0,0,4,1,11,2,4,1,1,0,0,1,1,0,0,0,5,5,2,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Map.java,com.thealgorithms.datastructures.hashmap.hashing.Map,size/0,false,13,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1024,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Map.java,com.thealgorithms.datastructures.hashmap.hashing.Map,get/1[Key],false,7,2,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1024,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Map.java,com.thealgorithms.datastructures.hashmap.hashing.Map,keys/0,false,11,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1024,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Map.java,com.thealgorithms.datastructures.hashmap.hashing.Map,"hash/2[Key,int]",false,19,1,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,3,4,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Map.java,com.thealgorithms.datastructures.hashmap.hashing.Map,delete/1[Key],false,9,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1024,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Map.java,com.thealgorithms.datastructures.hashmap.hashing.Map,contains/1[Key],false,15,2,1,0,1,2,1,3,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\Map.java,com.thealgorithms.datastructures.hashmap.hashing.Map,"put/2[Key,Value]",false,5,2,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1024,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PrimeFactorization.java,com.thealgorithms.maths.PrimeFactorization,pfactors/1[int],false,14,0,2,2,0,6,2,20,2,2,1,2,0,0,3,3,0,0,0,9,5,2,2,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.TopologicalSort,calculateInDegree/0,false,84,2,2,0,2,5,5,16,0,0,0,5,0,0,2,0,1,0,0,3,1,1,3,0,0,0,15,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.TopologicalSort,topSortOrder/0,false,103,3,2,0,2,6,9,21,1,3,0,9,0,0,3,2,0,0,0,3,3,1,3,0,0,0,22,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.TopologicalSort,TopologicalSort/1[com.thealgorithms.datastructures.graphs.AdjacencyList<E>],true,77,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\searches\SearchAlgorithm.java,com.thealgorithms.devutils.searches.SearchAlgorithm,"find/2[T[],T]",false,9,1,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\InverseOfMatrix.java,com.thealgorithms.misc.InverseOfMatrix,invert/1[double[][]],false,39,3,2,1,1,8,1,28,1,11,1,1,1,1,7,0,0,0,0,14,17,11,3,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\InverseOfMatrix.java,com.thealgorithms.misc.InverseOfMatrix,main/1[java.lang.String[]],false,15,2,1,0,1,5,7,22,0,8,1,7,1,2,4,0,0,0,4,4,9,1,2,0,0,0,16,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\InverseOfMatrix.java,com.thealgorithms.misc.InverseOfMatrix,"gaussian/2[double[][],int[]]",false,76,2,1,1,0,10,1,39,0,16,2,1,0,0,7,0,0,0,0,10,26,5,3,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Factorial.java,com.thealgorithms.maths.Factorial,factorial/1[int],false,19,0,1,1,0,3,0,8,1,2,1,0,0,0,1,0,0,0,1,3,3,0,1,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Factorial.java,com.thealgorithms.maths.Factorial,main/1[java.lang.String[]],false,6,1,1,0,1,5,1,6,0,0,1,1,1,1,0,4,0,0,0,8,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\ConnectedComponent.java,com.thealgorithms.datastructures.graphs.Graph$Edge,"Edge/2[com.thealgorithms.datastructures.graphs.Graph<E>.Node,com.thealgorithms.datastructures.graphs.Graph<E>.Node]",true,27,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplicationTest.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplicationTest,StrassenMatrixMultiplicationTest4x4/0,false,24,2,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,48,4,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplicationTest.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplicationTest,StrassenMatrixMultiplicationTest2x2/0,false,15,2,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,12,4,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplicationTest.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplicationTest,StrassenMatrixMultiplicationTestNegetiveNumber4x4/0,false,33,2,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,48,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$PathAndDistance,getDistance/0,false,79,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$PathAndDistance,"PathAndDistance/3[int,java.util.ArrayList<java.lang.Integer>,int]",true,73,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$PathAndDistance,getPath/0,false,83,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$PathAndDistance,getEstimated/0,false,87,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$PathAndDistance,printSolution/0,false,91,0,1,1,0,2,1,8,0,0,0,1,0,0,0,1,0,0,3,0,0,1,1,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver,"gcd/3[int,int,com.thealgorithms.maths.LinearDiophantineEquationsSolver.GcdSolutionWrapper]",false,34,3,12,2,10,2,8,11,2,2,3,8,1,0,0,1,0,2,0,6,2,4,1,0,0,0,10,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver,findAnySolution/1[com.thealgorithms.maths.Equation],false,13,4,10,1,9,5,11,16,3,5,1,11,1,1,0,4,0,2,0,9,5,5,1,0,0,0,16,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver,main/1[java.lang.String[]],false,7,2,1,0,1,1,2,4,0,1,1,2,1,2,0,0,0,0,0,3,1,0,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\LinearDiophantineEquationsSolver.java,com.thealgorithms.maths.LinearDiophantineEquationsSolver,"Equation/3[int,int,int]",false,110,1,0,0,0,1,0,2,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\HowManyTimesRotated.java,com.thealgorithms.searches.HowManyTimesRotated,rotated/1[int[]],false,42,1,1,1,0,8,0,18,1,3,1,0,0,0,1,0,0,1,0,12,6,12,2,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\HowManyTimesRotated.java,com.thealgorithms.searches.HowManyTimesRotated,main/1[java.lang.String[]],false,28,2,1,0,1,2,4,10,0,4,1,4,1,1,1,0,0,0,2,1,5,1,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\TurkishToLatinConversion.java,com.thealgorithms.conversions.TurkishToLatinConversion,convertTurkishToLatin/1[java.lang.String],false,31,1,1,1,0,2,1,8,1,3,1,1,0,0,1,0,0,0,0,13,4,0,1,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\TurkishToLatinConversion.java,com.thealgorithms.conversions.TurkishToLatinConversion,main/1[java.lang.String[]],false,17,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,2,0,2,1,0,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\LongestPalindromicSubstring.java,com.thealgorithms.strings.Solution,longestPalindrome/1[java.lang.String],false,22,1,2,1,1,7,3,17,2,4,1,3,1,1,2,3,0,0,2,4,5,3,4,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\LongestPalindromicSubstring.java,com.thealgorithms.strings.Solution,"isValid/3[java.lang.String,int,int]",false,40,0,1,1,0,3,1,9,2,2,3,1,0,0,1,1,0,0,0,3,2,5,2,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Gaussian.java,com.thealgorithms.maths.Gaussian,"valueOfGaussian/3[int,double[][],double[][]]",false,53,1,1,1,0,6,1,24,1,4,3,1,0,0,4,1,0,2,0,8,11,6,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Gaussian.java,com.thealgorithms.maths.Gaussian,"gaussian/2[int,java.util.ArrayList<java.lang.Double>]",false,10,2,2,0,2,3,3,14,1,5,2,3,2,1,2,0,0,0,0,6,9,3,2,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Gaussian.java,com.thealgorithms.maths.Gaussian,"gaussianElimination/3[int,int,double[][]]",false,34,1,1,1,0,4,0,12,1,3,3,0,0,0,3,0,0,2,0,7,6,8,3,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRC32.java,com.thealgorithms.others.CRC32,crc32/1[byte[]],false,18,1,1,1,0,4,3,14,1,3,1,3,0,0,1,1,0,5,0,11,6,4,2,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRC32.java,com.thealgorithms.others.CRC32,crc32/1[java.lang.String],false,14,1,2,1,1,1,2,3,1,0,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRC32.java,com.thealgorithms.others.CRC32,main/1[java.lang.String[]],false,10,1,1,0,1,1,3,3,0,0,1,3,1,2,0,0,0,0,1,0,0,0,0,0,0,0,3,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\DuplicateBrackets.java,com.thealgorithms.datastructures.stacks.DuplicateBrackets,main/1[java.lang.String[]],false,36,1,1,0,1,1,4,6,0,2,1,4,1,1,0,0,0,0,0,0,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\DuplicateBrackets.java,com.thealgorithms.datastructures.stacks.DuplicateBrackets,check/1[java.lang.String],false,14,0,1,1,0,6,6,21,2,3,1,6,0,0,2,3,0,0,0,2,3,0,4,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\PigeonholeSort.java,com.thealgorithms.sorts.PigeonholeSort,main/1[java.lang.String[]],false,40,2,3,0,3,2,3,12,0,3,1,3,1,1,1,0,0,2,2,9,3,1,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\PigeonholeSort.java,com.thealgorithms.sorts.PigeonholeSort,sort/1[java.lang.Integer[]],false,14,0,1,1,0,7,1,21,0,5,1,1,0,0,5,0,0,0,0,5,9,2,2,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArrayList.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArrayList$Node,"Node/2[K,V]",true,108,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PythagoreanTripleTest.java,com.thealgorithms.maths.PythagoreanTripleTest,Testpythagoreantriple/0,false,10,1,0,0,0,1,2,11,0,0,0,2,0,0,0,0,0,0,0,27,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\InsertDeleteInArray.java,com.thealgorithms.others.InsertDeleteInArray,main/1[java.lang.String[]],false,7,1,0,0,0,7,4,38,0,9,1,4,0,0,5,0,0,0,5,9,18,5,2,0,0,0,21,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TimSortTest.java,com.thealgorithms.sorts.TimSortTest,getSortAlgorithm/0,false,10,2,1,0,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,LinkedQueue/0,true,46,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,peek/1[int],false,125,2,0,0,0,3,1,6,1,1,1,1,0,0,1,0,0,0,1,1,2,0,1,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,iterator/0,false,141,2,1,0,1,1,0,12,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,toString/0,false,176,2,0,0,0,2,3,6,1,2,0,3,0,0,1,1,0,1,1,0,3,1,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,clear/0,false,170,1,1,0,1,2,1,3,0,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,dequeue/0,false,78,3,1,0,1,3,1,13,1,2,0,1,0,0,0,0,0,0,1,0,4,0,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,peekRear/0,false,112,2,1,0,1,2,1,6,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,isEmpty/0,false,55,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,peekFront/0,false,100,2,1,0,1,2,1,6,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,main/1[java.lang.String[]],false,185,1,8,0,8,5,8,15,0,1,1,8,0,0,0,4,0,0,0,7,1,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,size/0,false,163,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\LinkedQueue.java,com.thealgorithms.datastructures.queues.LinkedQueue,enqueue/1[T],false,64,2,1,0,1,1,0,6,0,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Ceil.java,com.thealgorithms.maths.Ceil,ceil/1[double],false,12,0,0,0,0,3,0,11,3,0,1,0,0,0,0,1,0,1,0,3,0,3,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,getValue/0,false,167,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,Entry/0,true,129,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,setKey/1[I],false,163,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,getKey/0,false,159,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,"Entry/4[com.thealgorithms.datastructures.caches.LRUCache.Entry<I,J>,com.thealgorithms.datastructures.caches.LRUCache.Entry<I,J>,I,J]",true,136,3,0,0,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,"setNextEntry/1[com.thealgorithms.datastructures.caches.LRUCache.Entry<I,J>]",false,155,3,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,"setPreEntry/1[com.thealgorithms.datastructures.caches.LRUCache.Entry<I,J>]",false,147,3,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,setValue/1[J],false,171,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,getPreEntry/0,false,143,3,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LRUCache.java,com.thealgorithms.datastructures.caches.LRUCache$Entry,getNextEntry/0,false,151,3,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TopologicalSortTest.java,com.thealgorithms.sorts.TopologicalSortTest,failureTest/0,false,42,3,2,0,2,1,5,14,0,3,0,5,0,0,0,0,0,0,22,0,3,1,0,0,0,1,16,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\TopologicalSortTest.java,com.thealgorithms.sorts.TopologicalSortTest,successTest/0,false,13,3,3,0,3,1,4,23,0,2,0,4,0,0,0,0,0,0,30,0,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap$Node,Node/1[int],true,21,0,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,1,4,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ADTFractionTest.java,com.thealgorithms.maths.ADTFractionTest,testReciprocal/0,false,35,2,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ADTFractionTest.java,com.thealgorithms.maths.ADTFractionTest,testToString/0,false,52,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ADTFractionTest.java,com.thealgorithms.maths.ADTFractionTest,testTimes/0,false,29,2,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ADTFractionTest.java,com.thealgorithms.maths.ADTFractionTest,testEqualsAndHashCode/0,false,45,2,0,0,0,1,4,5,0,1,0,4,0,0,0,0,0,0,0,2,1,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ADTFractionTest.java,com.thealgorithms.maths.ADTFractionTest,testPlus/0,false,24,2,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ADTFractionTest.java,com.thealgorithms.maths.ADTFractionTest,testConstructorWithDenominatorEqualToZero/0,false,15,2,0,0,0,1,3,4,0,1,0,3,0,0,0,0,0,0,1,2,1,0,0,0,0,1,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\ADTFractionTest.java,com.thealgorithms.maths.ADTFractionTest,testValue/0,false,40,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\countSetBits.java,com.thealgorithms.others.countSetBits,countsetBits/1[long],false,39,0,0,0,0,2,0,8,1,1,1,0,0,0,1,0,0,1,0,3,2,1,1,0,0,0,72,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\TestSearchInARowAndColWiseSortedMatrix.java,com.thealgorithms.searches.TestSearchInARowAndColWiseSortedMatrix,notFound/0,false,24,3,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,28,4,0,0,0,0,0,20,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\searches\TestSearchInARowAndColWiseSortedMatrix.java,com.thealgorithms.searches.TestSearchInARowAndColWiseSortedMatrix,searchItem/0,false,8,3,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,28,4,0,0,0,0,0,20,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\CheckVowelsTest.java,com.thealgorithms.strings.CheckVowelsTest,isVowel/0,false,10,2,1,0,1,1,3,6,0,0,0,3,0,0,0,0,0,0,4,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SearchSinglyLinkedListRecursion.java,com.thealgorithms.datastructures.lists.SearchSinglyLinkedListRecursion,"searchRecursion/2[com.thealgorithms.datastructures.lists.Node,int]",false,25,2,3,2,1,3,1,3,1,0,2,1,1,0,0,2,0,2,0,0,0,0,0,0,0,0,20,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SearchSinglyLinkedListRecursion.java,com.thealgorithms.datastructures.lists.SearchSinglyLinkedListRecursion,main/1[java.lang.String[]],false,5,2,3,0,3,3,2,10,0,3,1,2,1,2,2,0,0,0,0,6,3,0,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SearchSinglyLinkedListRecursion.java,com.thealgorithms.datastructures.lists.SearchSinglyLinkedListRecursion,search/1[int],false,33,2,3,1,2,1,2,3,1,0,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task1,count/1[com.thealgorithms.sorts.Node],false,235,1,1,1,0,2,0,8,1,2,1,0,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task1,sortByInsertionSort/1[com.thealgorithms.sorts.Node],false,209,3,2,1,1,7,1,21,2,5,1,1,1,1,3,4,0,0,0,7,13,3,2,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task2,count/1[com.thealgorithms.sorts.Node],false,272,1,1,1,0,2,0,8,1,2,1,0,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task2,task/1[int[]],false,283,2,2,1,1,3,1,12,0,4,1,1,1,1,2,0,0,0,0,8,6,3,1,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task2,sortByHeapSort/1[com.thealgorithms.sorts.Node],false,252,3,3,1,2,5,2,15,2,4,1,2,2,2,2,4,0,0,0,2,10,0,1,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\LinkListSort.java,com.thealgorithms.sorts.Task2,"task1/3[int[],int,int]",false,297,2,3,2,1,6,1,13,0,4,3,1,1,0,0,1,0,0,0,4,8,4,1,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,printTree/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,26,2,4,3,1,3,2,8,1,0,1,2,1,0,0,2,0,2,5,0,0,1,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,"transplant/2[com.thealgorithms.datastructures.trees.RedBlackBST.Node,com.thealgorithms.datastructures.trees.RedBlackBST.Node]",false,199,1,1,1,0,3,0,12,0,0,2,0,0,0,0,2,0,0,0,0,4,0,1,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,insertDemo/0,false,310,2,4,0,4,3,6,19,0,3,0,6,3,3,2,1,0,0,2,1,4,0,2,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,rotateRight/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,173,1,2,2,0,4,0,26,0,1,1,0,0,0,0,3,0,0,0,0,14,0,2,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,rotateLeft/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,148,1,2,2,0,4,0,26,0,1,1,0,0,0,0,3,0,0,0,0,14,0,2,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,printTreepre/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,42,2,4,3,1,3,2,8,1,0,1,2,1,0,0,2,0,2,5,0,0,1,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,"findNode/2[com.thealgorithms.datastructures.trees.RedBlackBST.Node,com.thealgorithms.datastructures.trees.RedBlackBST.Node]",false,58,2,3,2,1,7,1,19,5,0,2,1,1,0,0,4,0,0,0,0,0,0,2,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,insert/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,76,2,2,1,1,7,1,34,0,1,1,1,1,2,1,3,0,0,0,0,11,0,4,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,treeMinimum/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,210,1,1,1,0,2,0,6,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,fixTree/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,107,2,3,1,2,9,2,40,0,1,1,2,2,1,1,8,0,0,0,0,18,0,3,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,deleteDemo/0,false,332,2,4,0,4,2,8,20,0,3,0,8,3,3,0,0,0,0,5,0,3,1,1,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,delete/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,217,2,5,1,4,6,4,37,2,3,1,4,4,2,0,5,0,1,0,0,14,0,2,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\RedBlackBST.java,com.thealgorithms.datastructures.trees.RedBlackBST,deleteFixup/1[com.thealgorithms.datastructures.trees.RedBlackBST.Node],false,253,2,3,1,2,14,2,59,0,2,1,2,2,1,1,13,0,0,0,0,27,0,3,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\BestFitCPUTest.java,com.thealgorithms.others.BestFitCPUTest,testFitForUseOfOneBlock/0,false,21,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\BestFitCPUTest.java,com.thealgorithms.others.BestFitCPUTest,testFitForNoEmptyBlockCell/0,false,41,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\BestFitCPUTest.java,com.thealgorithms.others.BestFitCPUTest,testFitForSameInputDifferentQuery/0,false,51,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,11,4,0,0,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\BestFitCPUTest.java,com.thealgorithms.others.BestFitCPUTest,testFitForMoreBlocksNoFit/0,false,61,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,9,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\BestFitCPUTest.java,com.thealgorithms.others.BestFitCPUTest,testFitForEqualProcecesses/0,false,31,2,0,0,0,1,3,7,0,0,0,3,0,0,0,0,0,0,0,12,4,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\cn\HammingDistanceTest.java,com.thealgorithms.others.cn.HammingDistanceTest,checkForLongDataBits/0,false,48,1,0,0,0,1,3,5,0,3,0,3,0,0,0,0,0,0,2,1,3,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\cn\HammingDistanceTest.java,com.thealgorithms.others.cn.HammingDistanceTest,checkForSameBits/0,false,41,1,0,0,0,1,3,5,0,3,0,3,0,0,0,0,0,0,2,1,3,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\cn\HammingDistanceTest.java,com.thealgorithms.others.cn.HammingDistanceTest,initialize/0,false,13,2,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\cn\HammingDistanceTest.java,com.thealgorithms.others.cn.HammingDistanceTest,mismatchDataBits/0,false,56,1,0,0,0,1,5,8,0,4,0,5,0,0,0,0,0,0,3,0,4,0,1,0,0,1,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\cn\HammingDistanceTest.java,com.thealgorithms.others.cn.HammingDistanceTest,checkForDifferentBits/0,false,18,1,0,0,0,1,3,5,0,3,0,3,0,0,0,0,0,0,2,1,3,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\cn\HammingDistanceTest.java,com.thealgorithms.others.cn.HammingDistanceTest,checkForDifferentBitsLength/0,false,34,1,0,0,0,1,3,5,0,3,0,3,0,0,0,0,0,0,2,1,3,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\cn\HammingDistanceTest.java,com.thealgorithms.others.cn.HammingDistanceTest,checkForLongDataBitsSame/0,false,73,1,0,0,0,1,3,5,0,3,0,3,0,0,0,0,0,0,2,1,3,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.Node,Node/0,true,469,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.Node,"Node/2[int,com.thealgorithms.datastructures.lists.Node]",true,486,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,12,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.Node,Node/1[int],true,476,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Palindrome.java,com.thealgorithms.strings.Palindrome,isPalindromeTwoPointer/1[java.lang.String],false,48,0,1,1,0,5,2,11,3,2,1,2,0,0,1,2,0,0,0,3,2,1,2,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Palindrome.java,com.thealgorithms.strings.Palindrome,isPalindrome/1[java.lang.String],false,15,0,1,1,0,3,4,3,1,0,1,4,0,0,0,1,0,2,0,1,0,0,0,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Palindrome.java,com.thealgorithms.strings.Palindrome,isPalindromeRecursion/1[java.lang.String],false,29,1,3,2,1,4,4,9,3,0,1,4,1,0,0,2,0,0,0,5,0,2,1,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray$DynamicArrayIterator,hasNext/0,false,167,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray$DynamicArrayIterator,remove/0,false,188,1,1,0,1,2,1,7,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray$DynamicArrayIterator,next/0,false,172,2,1,0,1,3,1,11,1,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\dynamicarray\DynamicArray.java,com.thealgorithms.datastructures.dynamicarray.DynamicArray$DynamicArrayIterator,forEachRemaining/1[java.util.function.Consumer<? super E>],false,198,1,1,0,1,2,3,6,0,1,1,3,0,0,1,0,0,0,0,1,1,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\SaddlebackSearch.java,com.thealgorithms.searches.SaddlebackSearch,"find/4[int[][],int,int,int]",false,31,2,3,2,1,5,1,15,4,1,4,1,1,0,0,1,0,0,0,7,3,2,1,0,0,0,31,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\SaddlebackSearch.java,com.thealgorithms.searches.SaddlebackSearch,main/1[java.lang.String[]],false,54,2,1,0,1,3,4,15,0,8,1,4,1,1,2,0,0,0,1,6,9,2,2,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PowRecursion.java,com.thealgorithms.maths.PowRecursion,"pow/2[int,int]",false,20,1,3,2,1,2,1,3,1,0,2,1,1,0,0,1,0,0,0,3,0,2,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PowRecursion.java,com.thealgorithms.maths.PowRecursion,main/1[java.lang.String[]],false,5,1,1,0,1,5,3,6,0,0,1,3,1,1,0,4,0,0,0,20,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\divideandconquer\BinaryExponentiationTest.java,com.thealgorithms.divideandconquer.BinaryExponentiationTest,testPower/0,false,25,2,0,0,0,1,2,13,0,0,0,2,0,0,0,0,0,0,0,33,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\divideandconquer\BinaryExponentiationTest.java,com.thealgorithms.divideandconquer.BinaryExponentiationTest,testCalculatePower/0,false,10,1,0,0,0,1,2,13,0,0,0,2,0,0,0,0,0,0,0,33,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,"swap/3[T[],int,int]",false,20,1,14,14,0,1,0,6,1,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,23,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,"flip/3[T[],int,int]",false,97,2,2,1,1,2,1,5,0,0,3,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,16,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,"greater/2[T,T]",false,45,1,2,2,0,2,1,3,1,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,15,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,isSorted/1[java.util.List<T>],false,116,2,1,0,1,3,3,4,2,1,1,3,1,1,1,0,0,0,0,2,1,1,2,0,0,0,7,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,print/1[java.util.List<?>],false,67,0,2,2,0,1,5,4,0,1,1,5,0,0,0,0,0,0,1,0,0,1,0,0,0,1,11,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,"less/2[T,T]",false,34,1,16,16,0,2,1,3,1,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,15,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,"greaterOrEqual/2[T,T]",false,58,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,20,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,print/1[java.lang.Object[]],false,82,0,12,12,0,1,2,3,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortUtils.java,com.thealgorithms.sorts.SortUtils,isSorted/1[T[]],false,109,2,1,0,1,3,1,4,2,1,1,1,1,1,1,0,0,0,0,2,1,1,2,0,0,0,22,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,main/1[java.lang.String[]],false,237,1,6,0,6,5,9,33,0,5,1,9,0,0,2,0,0,0,3,8,7,5,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,pollLast/0,false,145,2,0,0,0,3,0,18,2,2,0,0,0,0,0,2,0,0,0,0,7,0,1,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,pollFirst/0,false,110,2,0,0,0,3,0,18,2,2,0,0,0,0,0,2,0,0,0,0,7,0,1,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,peekLast/0,false,188,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,addFirst/1[T],false,62,2,1,0,1,2,0,13,0,1,1,0,0,0,0,1,0,0,0,0,6,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,isEmpty/0,false,206,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,peekFirst/0,false,179,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,addLast/1[T],false,86,2,1,0,1,2,0,13,0,1,1,0,0,0,0,1,0,0,0,0,6,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,size/0,false,197,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Deques.java,com.thealgorithms.datastructures.queues.Deques,toString/0,false,219,2,0,0,0,3,0,13,1,2,0,0,0,0,1,2,0,0,3,0,6,0,2,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\ConnectedComponent.java,com.thealgorithms.datastructures.graphs.Graph$Node,Node/1[E],true,18,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Anagrams.java,com.thealgorithms.strings.Anagrams,"approach3/2[java.lang.String,java.lang.String]",false,87,1,2,2,0,5,2,18,3,5,2,2,0,0,2,2,0,0,0,5,5,2,3,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Anagrams.java,com.thealgorithms.strings.Anagrams,main/1[java.lang.String[]],false,16,1,5,0,5,1,5,9,0,3,1,5,4,1,0,0,0,0,2,0,3,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Anagrams.java,com.thealgorithms.strings.Anagrams,"approach1/2[java.lang.String,java.lang.String]",false,49,0,2,2,0,2,4,12,2,2,2,4,0,0,0,1,0,0,0,0,2,0,1,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Anagrams.java,com.thealgorithms.strings.Anagrams,"approach2/2[java.lang.String,java.lang.String]",false,64,1,2,2,0,6,2,21,3,3,2,2,0,0,3,2,0,0,0,4,3,2,3,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Anagrams.java,com.thealgorithms.strings.Anagrams,"approach4/2[java.lang.String,java.lang.String]",false,107,0,2,2,0,4,5,16,2,2,2,5,0,0,2,1,0,0,0,4,2,2,2,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\KahnsAlgorithm.java,com.thealgorithms.datastructures.graphs.KahnsAlgorithm,main/1[java.lang.String[]],false,135,2,4,0,4,2,3,13,0,2,1,3,0,0,1,0,0,0,13,0,2,1,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainRecursiveTopDownMemoisation.java,com.thealgorithms.dynamicprogramming.MatrixChainRecursiveTopDownMemoisation,main/1[java.lang.String[]],false,45,1,1,0,1,1,2,4,0,1,1,2,1,2,0,0,0,0,1,5,1,1,0,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainRecursiveTopDownMemoisation.java,com.thealgorithms.dynamicprogramming.MatrixChainRecursiveTopDownMemoisation,"Lookup_Chain/4[int[][],int[],int,int]",false,22,2,3,2,1,5,1,18,3,2,4,1,1,0,1,1,0,1,0,3,4,4,3,0,0,0,7,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainRecursiveTopDownMemoisation.java,com.thealgorithms.dynamicprogramming.MatrixChainRecursiveTopDownMemoisation,Memoized_Matrix_Chain/1[int[]],false,11,2,2,1,1,3,1,10,1,4,1,1,1,1,2,0,0,0,0,4,5,1,2,0,0,0,8,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NextGraterElement.java,com.thealgorithms.datastructures.stacks.NextGraterElement,main/1[java.lang.String[]],false,63,2,1,0,1,1,3,5,0,2,1,3,1,1,0,0,0,0,0,7,2,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\NextGraterElement.java,com.thealgorithms.datastructures.stacks.NextGraterElement,findNextGreaterElements/1[int[]],false,45,1,1,1,0,5,4,14,2,3,1,4,0,0,2,1,0,0,0,1,4,0,2,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm$Point,"Point/2[int,int]",true,146,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm$Point,getY/0,false,161,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm$Point,dominates/1[com.thealgorithms.divideandconquer.SkylineAlgorithm.Point],false,173,1,1,1,0,5,0,3,1,0,1,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\SkylineAlgorithm.java,com.thealgorithms.divideandconquer.SkylineAlgorithm$Point,getX/0,false,154,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\Node.java,com.thealgorithms.devutils.nodes.Node,getData/0,false,34,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\Node.java,com.thealgorithms.devutils.nodes.Node,Node/1[E],true,30,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\Node.java,com.thealgorithms.devutils.nodes.Node,Node/0,true,23,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\Node.java,com.thealgorithms.devutils.nodes.Node,setData/1[E],false,38,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\BinaryToOctalTest.java,com.thealgorithms.conversions.BinaryToOctalTest,testBinaryToOctal/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SimpsonIntegration.java,com.thealgorithms.maths.SimpsonIntegration,f/1[double],false,86,0,1,1,0,1,2,3,1,0,1,2,0,0,0,0,0,1,0,2,0,2,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SimpsonIntegration.java,com.thealgorithms.maths.SimpsonIntegration,main/1[java.lang.String[]],false,18,1,2,0,2,2,3,13,0,6,1,3,1,2,0,1,0,1,2,6,6,4,1,0,0,0,18,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SimpsonIntegration.java,com.thealgorithms.maths.SimpsonIntegration,"simpsonsMethod/3[int,double,double]",false,50,1,2,1,1,6,5,27,1,6,3,5,1,1,2,3,0,0,6,10,11,9,2,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LinearSearch.java,com.thealgorithms.searches.LinearSearch,"find/2[T[],T]",false,31,1,0,0,0,3,1,8,2,1,2,1,0,0,1,1,0,0,0,3,1,0,2,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\LinearSearch.java,com.thealgorithms.searches.LinearSearch,main/1[java.lang.String[]],false,40,1,2,0,2,1,7,10,0,7,1,7,0,0,0,0,0,0,1,3,7,1,0,0,0,1,22,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\IterativeBinarySearch.java,com.thealgorithms.searches.IterativeBinarySearch,"find/2[T[],T]",false,36,1,0,0,0,4,1,19,2,4,2,1,0,0,1,1,0,1,0,6,6,3,2,0,0,0,25,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\IterativeBinarySearch.java,com.thealgorithms.searches.IterativeBinarySearch,main/1[java.lang.String[]],false,59,1,2,0,2,2,9,12,0,8,1,9,0,0,0,1,0,0,2,3,8,1,0,0,0,1,31,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag$ListIterator,hasNext/0,false,88,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag$ListIterator,remove/0,false,96,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag$ListIterator,ListIterator/1[com.thealgorithms.datastructures.bags.Bag.Node<Element>],true,84,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bags\Bag.java,com.thealgorithms.datastructures.bags.Bag$ListIterator,next/0,false,100,2,1,0,1,2,1,8,1,1,0,1,0,0,0,0,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\TwoSumProblem.java,com.thealgorithms.misc.TwoSumProblem,"BruteForce/2[int[],int]",false,35,1,1,1,0,4,0,13,1,3,2,0,0,0,2,1,0,0,0,5,5,2,3,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\TwoSumProblem.java,com.thealgorithms.misc.TwoSumProblem,"TwoPointer/2[int[],int]",false,52,1,1,1,0,6,12,25,1,11,2,12,0,0,2,1,0,0,0,8,11,2,2,0,0,2,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\TwoSumProblem.java,com.thealgorithms.misc.TwoSumProblem,main/1[java.lang.String[]],false,8,2,4,0,4,2,7,16,0,6,1,7,3,1,1,0,0,0,8,1,7,3,1,0,0,0,22,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\TwoSumProblem.java,com.thealgorithms.misc.TwoSumProblem,"HashMap/2[int[],int]",false,91,1,1,1,0,5,3,16,1,5,2,3,0,0,2,1,0,0,0,5,7,1,2,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Mode.java,com.thealgorithms.maths.Mode,main/1[java.lang.String[]],false,16,2,1,0,1,2,2,7,0,0,1,2,1,1,0,1,0,1,0,33,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Mode.java,com.thealgorithms.maths.Mode,mode/1[int[]],false,40,1,1,1,0,6,10,22,2,4,1,10,0,0,2,2,0,0,0,3,3,1,2,0,0,1,8,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PollardRhoTest.java,com.thealgorithms.maths.PollardRhoTest,testPollardRhoForNumber315MustReturn5/0,false,11,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PollardRhoTest.java,com.thealgorithms.maths.PollardRhoTest,testPollardRhoForNumber239MustThrowException/0,false,37,1,0,0,0,1,4,10,0,4,0,4,0,0,0,0,0,0,1,1,4,0,1,0,0,1,18,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PollardRhoTest.java,com.thealgorithms.maths.PollardRhoTest,testPollardRhoForNumber187MustReturn11/0,false,24,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,13,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestIncreasingSubsequence.java,com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence,LIS/1[int[]],false,37,2,2,1,1,5,1,21,2,4,1,1,1,1,1,1,0,0,0,11,8,2,2,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestIncreasingSubsequence.java,com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence,main/1[java.lang.String[]],false,10,2,2,0,2,2,5,11,0,4,1,5,2,3,1,0,0,0,0,1,5,0,1,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestIncreasingSubsequence.java,com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence,"upperBound/4[int[],int,int,int]",false,24,1,1,1,0,3,0,12,1,1,4,0,0,0,1,0,0,1,0,2,3,3,2,0,0,0,6,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestIncreasingSubsequence.java,com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence,findLISLen/1[int[]],false,73,2,2,1,1,3,1,14,1,5,1,1,1,1,1,0,0,0,0,4,7,0,2,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LongestIncreasingSubsequence.java,com.thealgorithms.dynamicprogramming.LongestIncreasingSubsequence,"binarySearchBetween/3[int[],int,int]",false,90,1,1,1,0,5,0,20,3,3,3,0,0,0,1,0,0,1,0,6,5,4,2,0,0,0,8,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.NextFit,"findNextFit/2[int[],int]",false,254,1,1,1,0,4,0,13,2,1,2,0,0,0,1,0,0,0,0,1,4,2,2,0,0,0,45,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MemoryManagementAlgorithms.java,com.thealgorithms.others.NextFit,"fitProcess/2[int[],int[]]",false,284,2,1,0,1,3,2,11,1,2,2,2,1,1,1,1,0,0,0,0,3,0,2,0,0,0,62,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\BinomialCoefficientTest.java,com.thealgorithms.maths.BinomialCoefficientTest,testBinomialCoefficient/0,false,10,1,0,0,0,1,2,6,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumWithoutArithmeticOperatorsTest.java,com.thealgorithms.maths.SumWithoutArithmeticOperatorsTest,addRandoms/0,false,33,1,0,0,0,1,2,6,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumWithoutArithmeticOperatorsTest.java,com.thealgorithms.maths.SumWithoutArithmeticOperatorsTest,addZerotoZero/0,false,10,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumWithoutArithmeticOperatorsTest.java,com.thealgorithms.maths.SumWithoutArithmeticOperatorsTest,addZerotoNumber/0,false,15,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumWithoutArithmeticOperatorsTest.java,com.thealgorithms.maths.SumWithoutArithmeticOperatorsTest,addEventoOdd/0,false,27,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumWithoutArithmeticOperatorsTest.java,com.thealgorithms.maths.SumWithoutArithmeticOperatorsTest,addOddtoEven/0,false,21,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\ReturnSubsequence.java,com.thealgorithms.others.ReturnSubsequence,returnSubsequence/1[java.lang.String],false,24,1,3,2,1,4,4,17,2,5,1,4,1,0,2,1,0,0,1,8,8,3,1,0,0,0,10,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\ReturnSubsequence.java,com.thealgorithms.others.ReturnSubsequence,main/1[java.lang.String[]],false,7,1,1,0,1,2,4,11,0,4,1,4,1,1,1,0,0,0,2,1,4,0,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.Matrix,"Matrix/3[int,int,int]",true,129,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.Matrix,col/0,false,139,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.Matrix,count/0,false,135,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\MatrixChainMultiplication.java,com.thealgorithms.dynamicprogramming.Matrix,row/0,false,143,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\OctalToHexadecimalTest.java,com.thealgorithms.conversions.OctalToHexadecimalTest,testOctalToHexadecimal/0,false,10,1,0,0,0,1,3,4,0,0,0,3,0,0,0,0,0,0,4,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\CheckVowels.java,com.thealgorithms.strings.CheckVowels,hasVowels/1[java.lang.String],false,24,0,1,1,0,4,4,12,3,1,1,4,0,0,1,1,0,0,0,1,2,0,2,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PascalTriangle.java,com.thealgorithms.maths.PascalTriangle,pascal/1[int],false,36,1,0,0,0,5,0,10,1,3,1,0,0,0,2,2,0,0,0,7,5,4,3,0,0,0,89,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SumOfDigits.java,com.thealgorithms.maths.SumOfDigits,sumOfDigits/1[int],false,25,0,1,1,0,3,0,9,1,1,1,0,0,0,1,1,0,0,0,5,4,1,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SumOfDigits.java,com.thealgorithms.maths.SumOfDigits,sumOfDigitsRecursion/1[int],false,42,1,3,2,1,3,1,4,1,0,1,1,1,0,0,0,0,0,0,4,1,3,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SumOfDigits.java,com.thealgorithms.maths.SumOfDigits,main/1[java.lang.String[]],false,5,1,3,0,3,10,3,5,0,0,1,3,3,1,0,9,0,0,0,18,0,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\SumOfDigits.java,com.thealgorithms.maths.SumOfDigits,sumOfDigitsFast/1[int],false,56,1,1,1,0,3,1,9,1,3,1,1,0,0,1,0,0,1,1,3,5,2,1,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LevelOrderTraversalTest.java,com.thealgorithms.datastructures.trees.LevelOrderTraversalTest,testLevelOrderTraversalCompleteTree/0,false,33,3,1,0,1,1,7,4,0,1,0,7,0,0,0,0,0,0,0,14,1,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LevelOrderTraversalTest.java,com.thealgorithms.datastructures.trees.LevelOrderTraversalTest,testRootNull/0,false,15,1,0,0,0,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LevelOrderTraversalTest.java,com.thealgorithms.datastructures.trees.LevelOrderTraversalTest,testSingleNodeTree/0,false,20,3,1,0,1,1,5,4,0,1,0,5,0,0,0,0,0,0,0,2,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\LevelOrderTraversalTest.java,com.thealgorithms.datastructures.trees.LevelOrderTraversalTest,testLevelOrderTraversalDifferentHeight/0,false,48,3,1,0,1,1,7,4,0,1,0,7,0,0,0,0,0,0,0,18,1,0,0,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\KadaneAlgorithm.java,com.thealgorithms.dynamicprogramming.KadaneAlgorithm,"max_Sum/2[int[],int]",false,10,1,0,0,0,4,1,9,1,2,2,1,0,0,1,1,0,0,0,4,5,1,2,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\NonRepeatingElement.java,com.thealgorithms.maths.NonRepeatingElement,main/1[java.lang.String[]],false,12,1,0,0,0,9,3,35,1,7,1,3,0,0,3,1,1,3,7,9,14,3,2,0,0,0,28,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MobiusFunction.java,com.thealgorithms.maths.MobiusFunction,mobius/1[int],false,26,1,1,0,1,8,1,18,3,2,1,1,0,0,1,4,0,2,1,12,2,4,3,0,0,0,36,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\Combination.java,com.thealgorithms.backtracking.Combination,"backtracking/4[T[],int,java.util.TreeSet<T>,java.util.List<java.util.TreeSet<T>>]",false,45,2,3,2,1,5,6,15,1,2,4,6,1,0,2,1,0,0,0,2,2,4,2,0,0,0,29,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\backtracking\Combination.java,com.thealgorithms.backtracking.Combination,"combination/2[T[],int]",false,20,2,1,0,1,2,3,11,2,2,2,3,1,1,0,1,0,0,0,2,3,0,1,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\TwinPrime.java,com.thealgorithms.maths.TwinPrime,getTwinPrime/1[int],false,20,1,1,0,1,3,1,6,2,0,1,1,0,0,0,0,0,0,0,3,0,2,1,0,0,0,27,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\KeithNumber.java,com.thealgorithms.maths.KeithNumber,isKeith/1[int],false,8,0,1,1,0,5,3,20,1,6,1,3,0,0,3,1,0,1,0,7,9,4,2,0,0,0,10,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\KeithNumber.java,com.thealgorithms.maths.KeithNumber,main/1[java.lang.String[]],false,43,1,1,0,1,2,3,10,0,2,1,3,1,1,0,0,0,0,2,0,2,0,1,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,isFull/0,false,32,2,1,0,1,2,5,7,0,1,0,5,1,1,1,0,0,0,0,1,1,0,1,0,0,0,17,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,getSortedListFrom/1[java.util.concurrent.atomic.AtomicIntegerArray],false,119,0,1,1,0,2,5,7,1,4,1,5,0,0,1,0,0,0,0,1,3,0,1,0,0,1,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,shutDownExecutorSafely/1[java.util.concurrent.ExecutorService],false,110,0,1,1,0,3,2,8,0,0,1,2,0,0,0,0,1,0,0,1,0,0,2,0,0,0,9,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,get/0,false,43,1,0,0,0,3,4,6,0,2,0,4,0,0,2,0,0,0,0,3,2,0,1,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,put/0,false,53,2,1,0,1,2,4,4,0,1,0,4,1,1,1,0,0,0,0,1,1,0,1,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,generateInt/0,false,106,0,3,3,0,1,2,3,1,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,setUp/0,false,20,2,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,isEmpty/0,false,25,2,1,0,1,1,5,5,0,0,0,5,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\buffers\CircularBufferTest.java,com.thealgorithms.datastructures.buffers.CircularBufferTest,concurrentTest/0,false,60,2,2,0,2,6,13,40,0,15,0,13,2,1,5,1,0,0,0,9,17,2,3,0,0,2,38,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplication.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplication,"sub/2[int[][],int[][]]",false,96,1,1,1,0,3,0,10,1,4,2,0,0,0,2,0,0,0,0,2,5,1,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplication.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplication,"multiply/2[int[][],int[][]]",false,21,2,6,1,5,2,5,41,1,21,2,5,5,1,0,1,0,0,0,47,22,29,1,0,0,0,27,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplication.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplication,"join/4[int[][],int[][],int,int]",false,135,1,1,1,0,3,0,7,0,4,4,0,0,0,2,0,0,0,0,2,5,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplication.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplication,"split/4[int[][],int[][],int,int]",false,126,1,1,1,0,3,0,7,0,4,4,0,0,0,2,0,0,0,0,2,5,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\divideandconquer\StrassenMatrixMultiplication.java,com.thealgorithms.divideandconquer.StrassenMatrixMultiplication,"add/2[int[][],int[][]]",false,111,1,1,1,0,3,0,10,1,4,2,0,0,0,2,0,0,0,0,2,5,1,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\ExponentalSearch.java,com.thealgorithms.searches.ExponentialSearch,main/1[java.lang.String[]],false,13,1,2,0,2,2,11,12,0,8,1,11,0,0,0,1,0,0,2,3,8,1,0,0,0,1,29,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\ExponentalSearch.java,com.thealgorithms.searches.ExponentialSearch,"find/2[T[],T]",false,53,1,0,0,0,5,3,13,3,1,2,3,0,0,1,2,0,0,0,7,2,3,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ZigzagTraversalTest.java,com.thealgorithms.datastructures.trees.ZigzagTraversalTest,testRootNull/0,false,15,1,0,0,0,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ZigzagTraversalTest.java,com.thealgorithms.datastructures.trees.ZigzagTraversalTest,testSingleNodeTree/0,false,20,3,1,0,1,1,5,4,0,1,0,5,0,0,0,0,0,0,0,2,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ZigzagTraversalTest.java,com.thealgorithms.datastructures.trees.ZigzagTraversalTest,testZigzagTraversalCompleteTree/0,false,33,3,1,0,1,1,7,4,0,1,0,7,0,0,0,0,0,0,0,14,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\ZigzagTraversalTest.java,com.thealgorithms.datastructures.trees.ZigzagTraversalTest,testZigzagTraversalDifferentHeight/0,false,48,3,1,0,1,1,7,4,0,1,0,7,0,0,0,0,0,0,0,18,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LongDivisionTest.java,com.thealgorithms.maths.LongDivisionTest,testDividendLessThanDivisor/0,false,38,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LongDivisionTest.java,com.thealgorithms.maths.LongDivisionTest,testDivisionByZero/0,false,52,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LongDivisionTest.java,com.thealgorithms.maths.LongDivisionTest,testThree/0,false,24,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LongDivisionTest.java,com.thealgorithms.maths.LongDivisionTest,testDividendIsZero/0,false,45,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LongDivisionTest.java,com.thealgorithms.maths.LongDivisionTest,testOne/0,false,11,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LongDivisionTest.java,com.thealgorithms.maths.LongDivisionTest,testTwo/0,false,17,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\LongDivisionTest.java,com.thealgorithms.maths.LongDivisionTest,testNegativeDividend/0,false,31,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForSevenElements/0,false,47,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,8,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForOneElement/0,false,11,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,2,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForSixElements/0,false,41,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,7,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForThreeElements/0,false,23,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForFourElements/0,false,29,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,5,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForEightElements/0,false,53,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,9,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForTwoElements/0,false,17,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,3,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\KadaneAlogrithmTest.java,com.thealgorithms.others.KadaneAlogrithmTest,testForFiveElements/0,false,35,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,6,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\Queues.java,com.thealgorithms.datastructures.queues.Queues,main/1[java.lang.String[]],false,162,1,7,0,7,1,9,13,0,1,1,9,0,0,0,0,0,0,0,6,1,0,0,0,0,0,9,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackOfLinkedList.java,com.thealgorithms.datastructures.stacks.StackOfLinkedList,main/1[java.lang.String[]],false,11,1,5,0,5,3,6,13,0,1,1,6,0,0,0,2,0,0,2,7,1,2,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\minimizinglateness\MinimizingLateness.java,com.thealgorithms.minimizinglateness.MinimizingLateness,main/1[java.lang.String[]],false,23,1,1,0,1,5,9,32,1,9,1,9,0,0,2,2,0,1,5,8,15,8,1,0,0,0,24,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,merge/1[com.thealgorithms.datastructures.heaps.LeftistHeap],false,48,1,1,0,1,1,1,4,0,0,1,1,1,1,0,0,0,0,0,0,2,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,insert/1[int],false,88,2,2,0,2,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,clear/0,false,41,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,extract_min/0,false,93,1,2,0,2,2,2,6,2,1,0,2,2,1,0,0,0,0,0,1,2,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,in_order/0,false,104,1,1,0,1,1,1,5,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,"in_order_aux/2[com.thealgorithms.datastructures.heaps.LeftistHeap.Node,java.util.ArrayList<java.lang.Integer>]",false,111,2,3,2,1,2,2,6,1,0,2,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,"merge/2[com.thealgorithms.datastructures.heaps.LeftistHeap.Node,com.thealgorithms.datastructures.heaps.LeftistHeap.Node]",false,55,2,5,4,1,6,1,23,3,2,2,1,1,0,0,3,0,0,0,1,10,1,2,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,LeftistHeap/0,true,31,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\LeftistHeap.java,com.thealgorithms.datastructures.heaps.LeftistHeap,isEmpty/0,false,36,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareRootwithBabylonianMethodTest.java,com.thealgorithms.maths.SquareRootwithBabylonianMethodTest,testfor1/0,false,17,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareRootwithBabylonianMethodTest.java,com.thealgorithms.maths.SquareRootwithBabylonianMethodTest,testfor4/0,false,9,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareRootwithBabylonianMethodTest.java,com.thealgorithms.maths.SquareRootwithBabylonianMethodTest,testfor2/0,false,25,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SquareRootwithBabylonianMethodTest.java,com.thealgorithms.maths.SquareRootwithBabylonianMethodTest,testfor625/0,false,33,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,"isLarger/2[T,T]",false,71,1,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,upHeapify/1[int],false,16,1,3,0,3,2,4,7,0,1,1,4,0,0,0,0,0,1,0,3,1,2,1,0,0,0,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,isEmpty/0,false,32,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,size/0,false,28,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,updatePriority/1[T],false,84,2,1,0,1,1,2,4,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,"swap/2[int,int]",false,75,1,0,0,0,1,3,8,0,2,2,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,downHeapify/1[int],false,44,1,4,0,4,6,5,15,0,3,1,5,0,0,0,1,0,0,0,6,5,4,1,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,add/1[T],false,10,2,1,0,1,1,4,5,0,0,1,4,0,0,0,0,0,0,0,2,0,2,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,display/0,false,24,0,0,0,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,get/0,false,66,1,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\GenericHeap.java,com.thealgorithms.datastructures.heaps.GenericHeap,remove/0,false,36,2,3,0,3,1,5,7,1,1,0,5,0,0,0,0,0,0,0,4,1,2,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\disjointsets\Node.java,com.thealgorithms.datastructures.disjointsets.Node,Node/1[T],true,9,1,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortNoExtraSpace.java,com.thealgorithms.sorts.MergeSortNoExtraSpace,"merge_sort/4[int[],int,int,int]",false,16,2,4,2,2,2,2,8,0,1,4,2,2,1,0,0,0,1,0,2,1,3,1,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortNoExtraSpace.java,com.thealgorithms.sorts.MergeSortNoExtraSpace,main/1[java.lang.String[]],false,61,2,1,0,1,3,4,14,0,5,1,4,1,3,2,0,0,0,3,2,6,1,1,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortNoExtraSpace.java,com.thealgorithms.sorts.MergeSortNoExtraSpace,"call_merge_sort/2[int[],int]",false,11,2,2,1,1,1,4,4,0,1,2,4,1,2,0,0,0,0,0,3,1,2,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortNoExtraSpace.java,com.thealgorithms.sorts.MergeSortNoExtraSpace,"implement_merge_sort/5[int[],int,int,int,int]",false,31,1,1,1,0,7,0,30,0,3,5,0,0,0,4,0,0,4,0,1,9,16,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\WordLadderTest.java,com.thealgorithms.strings.WordLadderTest,testWordLadder/0,false,10,2,1,0,1,1,3,6,0,2,0,3,0,0,0,0,0,0,15,2,2,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,"SkipList/2[int,com.thealgorithms.datastructures.lists.SkipList.HeightStrategy]",true,57,3,2,0,2,1,1,6,0,0,2,1,0,0,0,0,0,0,0,1,4,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,toString/0,false,174,3,1,0,1,6,13,33,2,11,0,13,0,0,4,1,0,0,7,7,11,3,3,0,0,2,33,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,get/1[int],false,93,2,1,0,1,2,1,9,1,2,1,1,0,0,1,1,0,0,0,2,3,0,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,add/1[E],false,64,3,6,0,6,6,7,27,0,7,1,7,0,0,2,2,0,0,0,4,9,1,2,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,remove/1[E],false,103,2,5,0,5,7,8,24,0,4,1,8,0,0,2,2,0,0,0,3,5,0,2,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,size/0,false,157,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,contains/1[E],false,139,2,2,0,2,5,5,18,2,3,1,5,0,0,1,1,0,0,0,2,4,0,2,0,0,0,54,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SkipList.java,com.thealgorithms.datastructures.lists.SkipList,SkipList/0,true,53,1,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Median.java,com.thealgorithms.maths.Median,median/1[int[]],false,24,1,1,1,0,2,1,5,1,1,1,1,0,0,0,1,0,1,0,7,1,7,0,0,0,0,9,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Median.java,com.thealgorithms.maths.Median,main/1[java.lang.String[]],false,10,2,1,0,1,6,1,7,0,0,1,1,1,1,0,5,0,0,0,27,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\BinarySearch2dArray.java,com.thealgorithms.searches.BinarySearch2dArray,"binarySearch/5[int[][],int,int,int,int]",false,74,1,1,1,0,4,0,9,2,1,5,0,0,0,1,1,0,1,0,5,3,5,3,0,0,0,8,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\BinarySearch2dArray.java,com.thealgorithms.searches.BinarySearch2dArray,"BinarySearch/2[int[][],int]",false,12,2,1,0,1,11,1,21,8,6,2,1,1,1,1,4,0,1,0,21,8,16,2,0,0,0,12,8,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumOfDigitsTest.java,com.thealgorithms.maths.SumOfDigitsTest,testNegative/0,false,26,1,0,0,0,1,4,5,0,0,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumOfDigitsTest.java,com.thealgorithms.maths.SumOfDigitsTest,testPositive/0,false,19,1,0,0,0,1,4,5,0,0,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\SumOfDigitsTest.java,com.thealgorithms.maths.SumOfDigitsTest,testZero/0,false,12,1,0,0,0,1,4,5,0,0,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\KnapsackMemoizationTest.java,com.thealgorithms.dynamicprogramming.KnapsackMemoizationTest,Test1/0,false,11,2,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,10,3,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\KnapsackMemoizationTest.java,com.thealgorithms.dynamicprogramming.KnapsackMemoizationTest,Test3/0,false,27,2,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,8,3,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\dynamicprogramming\KnapsackMemoizationTest.java,com.thealgorithms.dynamicprogramming.KnapsackMemoizationTest,Test2/0,false,19,2,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,22,3,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\RotationTest.java,com.thealgorithms.strings.RotationTest,testRotation/0,false,10,2,1,0,1,1,2,5,0,0,0,2,0,0,0,0,0,0,6,3,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Upper.java,com.thealgorithms.strings.Upper,toUpperCase/1[java.lang.String],false,21,1,2,2,0,6,5,12,2,2,1,5,0,0,1,1,0,0,1,1,3,0,2,0,0,0,17,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Upper.java,com.thealgorithms.strings.Upper,main/1[java.lang.String[]],false,8,1,1,0,1,2,3,6,0,1,1,3,1,1,1,0,0,0,4,0,1,0,1,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\IntrospectiveSortTest.java,com.thealgorithms.sorts.IntrospectiveSortTest,StrandSortNonDuplicateTest/0,false,11,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\IntrospectiveSortTest.java,com.thealgorithms.sorts.IntrospectiveSortTest,StrandSortNegativeTest/0,false,44,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\IntrospectiveSortTest.java,com.thealgorithms.sorts.IntrospectiveSortTest,allSameTest/0,false,60,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\IntrospectiveSortTest.java,com.thealgorithms.sorts.IntrospectiveSortTest,StrandSortDuplicateTest/0,false,19,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\IntrospectiveSortTest.java,com.thealgorithms.sorts.IntrospectiveSortTest,StrandSortEmptyTest/0,false,27,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\IntrospectiveSortTest.java,com.thealgorithms.sorts.IntrospectiveSortTest,StrandSortNegativeAndPositiveTest/0,false,52,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,0,5,2,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\IntrospectiveSortTest.java,com.thealgorithms.sorts.IntrospectiveSortTest,StrandSortNullTest/0,false,35,2,0,0,0,1,2,7,0,1,0,2,0,0,0,0,0,0,0,0,1,0,1,0,0,1,10,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,"addBin/2[java.lang.String,java.lang.String]",false,1133,0,1,1,0,1,4,9,1,3,2,4,0,0,0,0,0,1,2,3,6,4,0,0,0,0,30,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,hexToBin/1[java.lang.String],false,1080,0,2,2,0,2,5,14,1,5,1,5,0,0,1,0,0,0,3,3,8,3,1,0,0,0,27,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,binToHex/1[java.lang.String],false,1103,0,1,1,0,2,3,6,1,2,1,3,0,0,1,0,0,1,1,2,3,2,1,0,0,0,23,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,f/1[java.lang.String],false,1148,1,4,1,3,2,5,12,1,4,1,5,3,2,1,0,0,0,1,12,9,3,1,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,"round/2[int,java.lang.String]",false,1177,1,4,2,2,1,3,9,1,3,2,3,2,3,0,0,0,0,0,4,5,1,0,0,0,0,8,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,"decrypt/2[java.lang.String,java.lang.String]",false,1222,1,3,0,3,2,4,9,1,3,2,4,3,4,1,0,0,0,0,8,6,1,1,0,0,0,32,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,"encrypt/2[java.lang.String,java.lang.String]",false,1200,1,3,0,3,2,4,9,1,3,2,4,3,4,1,0,0,0,0,8,6,1,1,0,0,0,32,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,keyGenerate/1[java.lang.String],false,1166,1,3,2,1,2,3,7,0,2,1,3,1,2,1,0,0,1,0,4,4,3,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\Blowfish.java,com.thealgorithms.ciphers.Blowfish,"xor/2[java.lang.String,java.lang.String]",false,1117,1,7,5,2,2,4,8,1,2,2,4,2,1,1,0,0,4,1,1,6,3,1,0,0,0,38,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRC16.java,com.thealgorithms.others.CRC16,crc16/1[java.lang.String],false,12,1,1,1,0,4,3,15,1,6,1,3,0,0,2,2,0,5,0,12,9,3,3,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRC16.java,com.thealgorithms.others.CRC16,main/1[java.lang.String[]],false,8,1,1,0,1,1,2,3,0,0,1,2,1,1,0,0,0,0,1,0,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LevenshteinDistance.java,com.thealgorithms.dynamicprogramming.LevenshteinDistance,"minimum/3[int,int,int]",false,10,0,1,1,0,5,0,11,3,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LevenshteinDistance.java,com.thealgorithms.dynamicprogramming.LevenshteinDistance,main/1[java.lang.String[]],false,47,1,1,0,1,1,3,6,0,2,1,3,1,2,0,0,0,0,5,0,2,1,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\LevenshteinDistance.java,com.thealgorithms.dynamicprogramming.LevenshteinDistance,"calculateLevenshteinDistance/2[java.lang.String,java.lang.String]",false,20,2,2,1,1,6,3,22,1,7,2,3,1,1,4,1,0,0,0,19,11,13,3,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PerfectNumber.java,com.thealgorithms.maths.PerfectNumber,isPerfectNumber2/1[int],false,38,0,0,0,0,6,1,12,2,3,1,1,0,0,1,3,0,0,0,4,5,3,2,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PerfectNumber.java,com.thealgorithms.maths.PerfectNumber,isPerfectNumber/1[int],false,19,0,0,0,0,5,0,10,2,2,1,0,0,0,1,2,0,0,0,4,3,1,2,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\BaseLFSR.java,com.thealgorithms.ciphers.a5.BaseLFSR,"initialize/2[java.util.BitSet,java.util.BitSet]",false,6,0,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\BaseLFSR.java,com.thealgorithms.ciphers.a5.BaseLFSR,clock/0,false,7,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\TowerOfHanoi.java,com.thealgorithms.others.TowerOfHanoi,"shift/4[int,java.lang.String,java.lang.String,java.lang.String]",false,12,1,3,2,1,2,2,7,0,0,4,2,1,0,0,1,0,0,1,3,0,2,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\TowerOfHanoi.java,com.thealgorithms.others.TowerOfHanoi,main/1[java.lang.String[]],false,25,1,1,0,1,1,4,7,0,2,1,4,1,1,0,0,0,0,4,0,2,0,0,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FindMaxTest.java,com.thealgorithms.maths.FindMaxTest,testFindMaxValue/0,false,10,2,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,11,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$Graph,getNeighbours/1[int],false,24,1,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$Graph,Graph/1[int],true,17,1,1,1,0,2,1,6,0,1,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\A_Star.java,com.thealgorithms.datastructures.graphs.A_Star$Graph,addEdge/1[com.thealgorithms.datastructures.graphs.A_Star.Edge],false,29,1,5,1,4,1,5,4,0,0,1,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\Sparcity.java,com.thealgorithms.misc.Sparcity,sparcity/1[double[][]],false,20,1,1,1,0,4,0,11,1,3,1,0,0,0,2,1,0,2,0,5,3,2,3,0,0,0,5,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\Sparcity.java,com.thealgorithms.misc.Sparcity,main/1[java.lang.String[]],false,35,2,1,0,1,3,4,15,0,6,1,4,1,1,2,0,0,0,4,2,7,1,2,0,0,0,16,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5KeyStreamGenerator.java,com.thealgorithms.ciphers.a5.A5KeyStreamGenerator,incrementFrameCounter/0,false,55,1,2,1,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5KeyStreamGenerator.java,com.thealgorithms.ciphers.a5.A5KeyStreamGenerator,getNextKeyStream/0,false,33,2,3,1,2,3,3,10,1,4,0,3,1,2,2,0,0,0,0,3,4,1,1,0,0,0,28,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5KeyStreamGenerator.java,com.thealgorithms.ciphers.a5.A5KeyStreamGenerator,reInitializeRegisters/0,false,50,2,3,1,2,1,3,4,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,0,0,1,7,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5KeyStreamGenerator.java,com.thealgorithms.ciphers.a5.A5KeyStreamGenerator,reInitialize/0,false,29,1,2,1,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\ciphers\a5\A5KeyStreamGenerator.java,com.thealgorithms.ciphers.a5.A5KeyStreamGenerator,"initialize/2[java.util.BitSet,java.util.BitSet]",false,15,2,4,2,2,1,5,13,0,4,2,5,0,0,0,0,0,0,0,16,6,0,0,0,0,1,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\matrixexponentiation\Fibonacci.java,com.thealgorithms.matrixexponentiation.Fibonacci,"matrixMultiplication/2[int[][],int[][]]",false,28,1,2,2,0,5,0,18,1,9,2,0,0,0,3,1,0,0,0,6,11,1,3,0,0,0,22,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\matrixexponentiation\Fibonacci.java,com.thealgorithms.matrixexponentiation.Fibonacci,fib/1[int],false,63,2,4,2,2,3,2,15,3,2,1,2,2,1,0,2,0,0,0,4,2,2,2,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\matrixexponentiation\Fibonacci.java,com.thealgorithms.matrixexponentiation.Fibonacci,main/1[java.lang.String[]],false,83,2,2,0,2,1,5,7,0,3,1,5,2,2,0,0,0,0,2,2,3,1,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\SimpleSubCipherTest.java,com.thealgorithms.ciphers.SimpleSubCipherTest,simpleSubCipherEncryptTest/0,false,12,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,3,0,3,0,0,0,0,0,19,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\SimpleSubCipherTest.java,com.thealgorithms.ciphers.SimpleSubCipherTest,simpleSubCipherDecryptTest/0,false,25,1,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,3,0,3,0,0,0,0,0,20,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,getWrongMessNotCaught/0,false,85,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,getWrongMessCaught/0,false,75,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,refactor/0,false,103,0,0,0,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,getCorrectMess/0,false,94,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,generateRandomMess/0,false,113,0,0,0,0,2,3,6,0,2,0,3,0,0,1,0,0,0,0,3,2,0,1,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,getWrongMess/0,false,65,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,divideMessageWithP/1[boolean],false,133,0,0,0,0,18,8,45,0,5,1,8,0,0,6,3,0,0,0,13,6,1,4,0,0,0,54,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,"CRCAlgorithm/3[java.lang.String,int,double]",true,43,0,0,0,0,2,4,16,0,1,3,4,0,0,1,0,0,0,0,5,12,0,1,0,0,0,48,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\CRCAlgorithm.java,com.thealgorithms.others.CRCAlgorithm,changeMess/0,false,184,0,0,0,0,7,3,20,0,1,0,3,0,0,2,1,0,0,0,5,3,0,3,0,0,0,44,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\CoinChange.java,com.thealgorithms.dynamicprogramming.CoinChange,"change/2[int[],int]",false,35,1,1,1,0,3,0,10,1,2,2,0,0,0,2,0,0,0,0,4,4,3,2,0,0,0,25,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\CoinChange.java,com.thealgorithms.dynamicprogramming.CoinChange,printAmount/1[int[]],false,85,1,0,0,0,2,2,6,0,1,1,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\CoinChange.java,com.thealgorithms.dynamicprogramming.CoinChange,main/1[java.lang.String[]],false,9,2,2,0,2,1,3,6,0,2,1,3,2,1,0,0,0,0,4,4,2,2,0,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\CoinChange.java,com.thealgorithms.dynamicprogramming.CoinChange,"minimumCoins/2[int[],int]",false,57,1,1,1,0,7,0,18,1,4,2,0,0,0,3,1,0,0,0,7,7,4,4,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckTreeIsSymmetric.java,com.thealgorithms.datastructures.trees.CheckTreeIsSymmetric,isSymmetric/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,35,2,1,0,1,2,1,6,2,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\CheckTreeIsSymmetric.java,com.thealgorithms.datastructures.trees.CheckTreeIsSymmetric,"isSymmetric/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,com.thealgorithms.datastructures.trees.BinaryTree.Node]",false,42,2,3,2,1,6,1,9,3,0,2,1,1,0,0,5,0,0,0,0,0,0,1,0,0,0,11,10,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testSeven/0,false,41,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testThree/0,false,21,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testFive/0,false,31,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testFour/0,false,26,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testSix/0,false,36,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testEight/0,false,46,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testOne/0,false,11,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\NewManShanksPrimeTest.java,com.thealgorithms.others.NewManShanksPrimeTest,testTwo/0,false,16,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\RomanToIntegerTest.java,com.thealgorithms.conversions.RomanToIntegerTest,testRomanToInteger/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DutchNationalFlagSort.java,com.thealgorithms.sorts.DutchNationalFlagSort,"dutch_national_flag_sort/2[T[],T]",false,31,2,3,2,1,4,2,20,1,3,2,2,0,0,1,0,0,0,0,5,3,1,2,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DutchNationalFlagSort.java,com.thealgorithms.sorts.DutchNationalFlagSort,sort/1[T[]],false,17,2,1,0,1,1,2,3,1,0,1,2,1,1,0,0,0,1,0,2,0,2,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DutchNationalFlagSort.java,com.thealgorithms.sorts.DutchNationalFlagSort,"sort/2[T[],T]",false,24,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Pow.java,com.thealgorithms.maths.Pow,"pow/2[int,int]",false,21,0,1,1,0,2,0,7,1,2,2,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Pow.java,com.thealgorithms.maths.Pow,main/1[java.lang.String[]],false,6,1,1,0,1,5,2,6,0,0,1,2,1,1,0,4,0,0,0,16,0,0,0,0,0,0,4,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsRandomGeneratorTest.java,com.thealgorithms.sorts.SortUtilsRandomGeneratorTest,generateDouble/0,false,26,2,1,0,1,1,4,5,0,1,0,4,0,0,0,0,0,0,0,4,1,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsRandomGeneratorTest.java,com.thealgorithms.sorts.SortUtilsRandomGeneratorTest,generateArray/0,false,11,2,1,0,1,1,4,6,0,2,0,4,0,0,0,0,0,0,0,2,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\SortUtilsRandomGeneratorTest.java,com.thealgorithms.sorts.SortUtilsRandomGeneratorTest,generateArrayEmpty/0,false,19,2,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,1,2,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\OrderAgnosticBinarySearch.java,com.thealgorithms.searches.OrderAgnosticBinarySearch,"BinSearchAlgo/4[int[],int,int,int]",false,16,1,0,0,0,7,0,16,2,2,4,0,0,0,1,1,0,1,0,6,6,7,3,0,0,0,9,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\AnytoAny.java,com.thealgorithms.conversions.AnytoAny,main/1[java.lang.String[]],false,11,0,0,0,0,3,3,20,0,7,1,3,0,0,2,2,0,2,0,9,14,6,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SameTreesCheck.java,com.thealgorithms.datastructures.trees.SameTreesCheck,"equalNodes/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,com.thealgorithms.datastructures.trees.BinaryTree.Node]",false,73,1,1,1,0,6,0,9,3,0,2,0,0,0,0,5,0,0,0,0,0,0,1,0,0,0,7,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\SameTreesCheck.java,com.thealgorithms.datastructures.trees.SameTreesCheck,"check/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,com.thealgorithms.datastructures.trees.BinaryTree.Node]",false,37,2,1,0,1,13,4,30,6,4,2,4,1,1,1,7,0,0,0,0,4,0,3,0,0,0,12,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeRandomNode.java,com.thealgorithms.datastructures.trees.TreeRandomNode,TreeRandomNode/0,true,44,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeRandomNode.java,com.thealgorithms.datastructures.trees.TreeRandomNode,inOrder/1[com.thealgorithms.datastructures.trees.TreeRandomNode.Node],false,49,2,3,2,1,2,2,8,1,0,1,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,5,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\TreeRandomNode.java,com.thealgorithms.datastructures.trees.TreeRandomNode,getRandom/1[com.thealgorithms.datastructures.trees.TreeRandomNode.Node],false,62,2,1,0,1,1,5,9,0,5,1,5,1,1,0,0,0,2,1,3,5,6,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RabinKarp.java,com.thealgorithms.others.RabinKarp,main/1[java.lang.String[]],false,15,1,1,0,1,1,3,9,0,3,1,3,1,1,0,0,0,0,2,1,4,0,0,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RabinKarp.java,com.thealgorithms.others.RabinKarp,"searchPat/3[java.lang.String,java.lang.String,int]",false,26,0,1,1,0,9,4,32,0,7,3,4,0,0,3,3,0,5,1,10,15,19,4,0,0,0,14,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DualPivotQuickSort.java,com.thealgorithms.sorts.DualPivotQuickSort,"swap/3[T[],int,int]",false,87,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DualPivotQuickSort.java,com.thealgorithms.sorts.DualPivotQuickSort,main/1[java.lang.String[]],false,98,1,2,0,2,2,2,8,0,3,1,2,0,0,1,0,0,0,1,9,3,1,1,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DualPivotQuickSort.java,com.thealgorithms.sorts.DualPivotQuickSort,sort/1[T[]],false,17,2,1,0,1,1,1,4,1,0,1,1,1,3,0,0,0,0,0,2,0,1,0,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DualPivotQuickSort.java,com.thealgorithms.sorts.DualPivotQuickSort,"partition/3[T[],int,int]",false,46,3,2,1,1,8,2,24,1,5,3,2,1,1,2,0,0,0,0,8,5,3,3,0,0,0,26,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\DualPivotQuickSort.java,com.thealgorithms.sorts.DualPivotQuickSort,"dualPivotQuicksort/3[T[],int,int]",false,29,3,4,2,2,2,2,8,0,1,3,2,2,2,0,0,0,0,0,8,1,4,1,0,0,0,19,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.AdjacencyListGraph,"removeEdge/2[E,E]",false,55,2,1,0,1,4,2,13,2,1,2,2,0,0,1,2,0,0,0,1,2,0,2,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.AdjacencyListGraph,"addEdge/2[E,E]",false,77,2,2,0,2,8,3,23,1,2,2,3,0,0,1,6,0,0,0,2,6,0,2,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.AdjacencyListGraph,toString/0,false,106,0,0,0,0,3,3,15,1,1,0,3,0,0,2,0,0,0,5,0,1,0,2,0,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Graphs.java,com.thealgorithms.datastructures.graphs.AdjacencyListGraph,AdjacencyListGraph/0,true,9,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\ArrayCombinationTest.java,com.thealgorithms.backtracking.ArrayCombinationTest,testNoLengthElement/0,false,20,1,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,2,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\ArrayCombinationTest.java,com.thealgorithms.backtracking.ArrayCombinationTest,testNBeingZeroOrLess/0,false,12,1,0,0,0,1,2,6,0,2,0,2,0,0,0,0,0,0,0,4,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\ArrayCombinationTest.java,com.thealgorithms.backtracking.ArrayCombinationTest,testLengthOne/0,false,26,1,0,0,0,2,5,6,0,1,0,5,0,0,0,1,0,0,0,6,1,0,0,0,0,0,7,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\ArrayCombinationTest.java,com.thealgorithms.backtracking.ArrayCombinationTest,testLengthFive/0,false,43,1,0,0,0,2,4,7,0,2,0,4,0,0,0,1,0,0,0,8,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\ArrayCombinationTest.java,com.thealgorithms.backtracking.ArrayCombinationTest,testLengthTwo/0,false,34,1,0,0,0,2,4,7,0,2,0,4,0,0,0,1,0,0,0,8,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\ReverseString.java,com.thealgorithms.strings.ReverseString,reverse/1[java.lang.String],false,19,0,2,2,0,1,2,3,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\ReverseString.java,com.thealgorithms.strings.ReverseString,reverse2/1[java.lang.String],false,29,1,2,2,0,4,3,12,2,4,1,3,0,0,1,1,0,0,0,2,6,1,1,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\ReverseString.java,com.thealgorithms.strings.ReverseString,main/1[java.lang.String[]],false,8,1,2,0,2,1,3,4,0,0,1,3,2,1,0,0,0,0,4,0,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\LargeTreeNode.java,com.thealgorithms.devutils.nodes.LargeTreeNode,isLeafNode/0,false,70,0,0,0,0,3,1,3,1,0,0,1,0,0,0,2,0,1,0,1,0,0,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\LargeTreeNode.java,com.thealgorithms.devutils.nodes.LargeTreeNode,LargeTreeNode/0,true,23,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\LargeTreeNode.java,com.thealgorithms.devutils.nodes.LargeTreeNode,LargeTreeNode/1[E],true,33,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\LargeTreeNode.java,com.thealgorithms.devutils.nodes.LargeTreeNode,"LargeTreeNode/2[E,com.thealgorithms.devutils.nodes.LargeTreeNode<E>]",true,44,2,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\LargeTreeNode.java,com.thealgorithms.devutils.nodes.LargeTreeNode,"LargeTreeNode/3[E,com.thealgorithms.devutils.nodes.LargeTreeNode<E>,java.util.Collection<com.thealgorithms.devutils.nodes.LargeTreeNode<E>>]",true,60,2,0,0,0,1,0,4,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\LargeTreeNode.java,com.thealgorithms.devutils.nodes.LargeTreeNode,setChildNodes/1[java.util.Collection<com.thealgorithms.devutils.nodes.LargeTreeNode<E>>],false,78,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\nodes\LargeTreeNode.java,com.thealgorithms.devutils.nodes.LargeTreeNode,getChildNodes/0,false,74,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\FibonacciSearch.java,com.thealgorithms.searches.FibonacciSearch,main/1[java.lang.String[]],false,61,1,2,0,2,1,2,8,0,5,1,2,0,0,0,0,0,0,4,11,5,1,0,0,0,0,18,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\FibonacciSearch.java,com.thealgorithms.searches.FibonacciSearch,"find/2[T[],T]",false,22,1,0,0,0,7,2,33,3,6,2,2,0,0,2,2,0,0,0,11,16,9,2,0,0,0,30,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\HammingDistanceTest.java,com.thealgorithms.strings.HammingDistanceTest,testNotEqualStringLengths/0,false,32,1,0,0,0,1,4,4,0,1,0,4,0,0,0,0,0,0,3,0,1,0,0,0,0,1,13,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\HammingDistanceTest.java,com.thealgorithms.strings.HammingDistanceTest,testHammingDistance/0,false,11,2,1,0,1,1,2,7,0,0,0,2,0,0,0,0,0,0,10,5,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\OctalToDecimalTest.java,com.thealgorithms.conversions.OctalToDecimalTest,testOctalToDecimal/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeCheckTest.java,com.thealgorithms.maths.PrimeCheckTest,test4/0,false,24,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeCheckTest.java,com.thealgorithms.maths.PrimeCheckTest,test7/0,false,39,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeCheckTest.java,com.thealgorithms.maths.PrimeCheckTest,test3/0,false,19,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeCheckTest.java,com.thealgorithms.maths.PrimeCheckTest,test6/0,false,34,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeCheckTest.java,com.thealgorithms.maths.PrimeCheckTest,test2/0,false,14,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeCheckTest.java,com.thealgorithms.maths.PrimeCheckTest,test5/0,false,29,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\PrimeCheckTest.java,com.thealgorithms.maths.PrimeCheckTest,test1/0,false,9,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,findcall/1[int],false,138,1,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,heightcall/0,false,117,1,1,0,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,1,0,1,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,display/0,false,58,1,1,0,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,"depth/2[com.thealgorithms.datastructures.trees.GenericTree.Node,int]",false,163,2,3,2,1,3,4,10,2,1,2,4,1,0,1,1,0,0,0,3,1,1,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,"max/2[com.thealgorithms.datastructures.trees.GenericTree.Node,int]",false,101,2,3,2,1,3,3,9,1,1,2,3,1,0,1,0,0,0,0,1,3,0,1,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,size2/1[com.thealgorithms.datastructures.trees.GenericTree.Node],false,83,2,3,2,1,2,3,7,1,2,1,3,1,0,1,0,0,0,0,3,3,1,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,size2call/0,false,79,1,1,0,1,1,1,3,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,depthcaller/1[int],false,159,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,removeleaves/1[com.thealgorithms.datastructures.trees.GenericTree.Node],false,229,2,3,2,1,4,7,14,0,3,1,7,1,0,2,1,0,0,0,5,3,2,2,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,postorder/1[com.thealgorithms.datastructures.trees.GenericTree.Node],false,197,2,3,2,1,2,4,6,0,1,1,4,1,0,1,0,0,0,1,1,1,1,1,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,maxcall/0,false,96,1,1,0,1,1,1,4,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,12,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,postordercall/0,false,192,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,1,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,"create_treeG/3[com.thealgorithms.datastructures.trees.GenericTree.Node,int,java.util.Scanner]",false,33,2,4,2,2,3,4,18,1,3,3,4,1,0,1,1,0,0,4,1,5,1,1,0,0,0,16,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,preorder/1[com.thealgorithms.datastructures.trees.GenericTree.Node],false,182,2,3,2,1,2,4,6,0,1,1,4,1,0,1,0,0,0,1,1,1,1,1,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,preordercall/0,false,177,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,1,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,levelorder/0,false,207,1,0,0,0,3,8,13,0,3,0,8,0,0,2,0,0,0,2,1,3,1,2,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,GenericTree/0,true,28,1,1,0,1,1,1,4,0,1,0,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,"find/2[com.thealgorithms.datastructures.trees.GenericTree.Node,int]",false,142,2,3,2,1,4,3,11,3,1,2,3,1,0,1,1,0,0,0,1,1,0,2,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,display_1/1[com.thealgorithms.datastructures.trees.GenericTree.Node],false,62,2,3,2,1,3,5,10,0,2,1,5,1,0,2,0,0,0,3,2,2,2,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,height/1[com.thealgorithms.datastructures.trees.GenericTree.Node],false,121,2,3,2,1,3,3,10,1,3,1,3,1,0,1,0,0,0,0,3,4,1,2,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\GenericTree.java,com.thealgorithms.datastructures.trees.GenericTree,removeleavescall/0,false,225,1,1,0,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\PermuteString.java,com.thealgorithms.strings.PermuteString,"generatePermutation/3[java.lang.String,int,int]",false,34,1,4,2,2,3,3,12,0,1,3,3,2,1,1,1,0,0,0,2,3,2,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\PermuteString.java,com.thealgorithms.strings.PermuteString,"swapString/3[java.lang.String,int,int]",false,17,1,1,1,0,1,2,8,1,2,3,2,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\PermuteString.java,com.thealgorithms.strings.PermuteString,main/1[java.lang.String[]],false,26,1,1,0,1,1,3,6,0,2,1,3,1,2,0,0,0,0,2,1,2,0,0,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\BinaryToHexadecimal.java,com.thealgorithms.conversions.BinaryToHexadecimal,main/1[java.lang.String[]],false,49,1,1,0,1,1,4,8,0,3,1,4,1,1,0,0,0,0,2,0,3,1,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\BinaryToHexadecimal.java,com.thealgorithms.conversions.BinaryToHexadecimal,binToHex/1[int],false,18,0,1,1,0,5,5,22,1,5,1,5,0,0,4,1,0,1,1,12,10,6,2,0,0,0,17,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PrimeCheck.java,com.thealgorithms.maths.PrimeCheck,"fermatPrimeChecking/2[int,int]",false,59,1,2,1,1,3,3,11,2,4,2,3,1,1,1,1,0,1,0,6,4,6,2,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PrimeCheck.java,com.thealgorithms.maths.PrimeCheck,"modPow/3[long,long,long]",false,78,0,1,1,0,2,0,8,1,2,3,0,0,0,1,0,0,0,0,2,4,1,1,0,0,0,10,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PrimeCheck.java,com.thealgorithms.maths.PrimeCheck,isPrime/1[int],false,37,0,3,3,0,6,1,14,4,2,1,1,0,0,1,3,0,0,0,7,3,2,2,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PrimeCheck.java,com.thealgorithms.maths.PrimeCheck,main/1[java.lang.String[]],false,7,1,2,0,2,3,6,18,0,2,1,6,2,2,0,0,0,0,9,1,2,4,1,0,0,0,14,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RomanToInteger.java,com.thealgorithms.conversions.RomanToInteger,main/1[java.lang.String[]],false,62,1,1,0,1,1,2,4,0,1,1,2,1,1,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\RomanToInteger.java,com.thealgorithms.conversions.RomanToInteger,romanToInt/1[java.lang.String],false,31,0,1,1,0,5,4,21,1,6,1,4,0,0,1,1,0,0,0,4,11,1,2,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,QueueWithStack/0,true,28,0,1,1,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,remove/0,false,48,0,1,1,0,3,3,8,1,0,0,3,0,0,1,0,0,0,0,0,0,0,2,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,isOutStackEmpty/0,false,105,0,0,0,0,2,1,3,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,peekBack/0,false,78,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,isInStackEmpty/0,false,96,0,1,1,0,2,1,3,1,0,0,1,0,0,0,1,0,1,0,1,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,isEmpty/0,false,87,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,insert/1[java.lang.Object],false,38,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueWithStack,peekFront/0,false,63,0,1,1,0,3,4,8,1,0,0,4,0,0,1,0,0,0,0,0,0,0,2,0,0,0,11,1,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\strings\longestNonRepeativeSubstringTest.java,com.thealgorithms.strings.longestNonRepeativeSubstringTest,palindrome/0,false,9,2,1,0,1,1,2,6,0,2,0,2,0,0,0,0,0,0,2,2,2,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\RangeInSortedArray.java,com.thealgorithms.misc.RangeInSortedArray,"sortedRange/2[int[],int]",false,25,2,2,1,1,1,1,6,1,1,2,1,1,1,0,0,0,0,0,6,1,2,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\RangeInSortedArray.java,com.thealgorithms.misc.RangeInSortedArray,"getCountLessThan/2[int[],int]",false,103,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\RangeInSortedArray.java,com.thealgorithms.misc.RangeInSortedArray,"alteredBinSearchIter/6[int[],int,int,int,int[],boolean]",false,76,1,1,1,0,9,0,31,2,1,6,0,0,0,1,4,0,1,0,11,7,9,4,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\RangeInSortedArray.java,com.thealgorithms.misc.RangeInSortedArray,"getLessThan/4[int[],int,int,int]",false,107,1,1,1,0,4,0,14,1,2,4,0,0,0,1,0,0,1,0,5,5,5,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\RangeInSortedArray.java,com.thealgorithms.misc.RangeInSortedArray,"alteredBinSearch/6[int[],int,int,int,int[],boolean]",false,41,2,2,1,1,9,1,30,1,1,6,1,1,0,0,4,0,1,0,11,3,9,3,0,0,0,9,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\misc\RangeInSortedArray.java,com.thealgorithms.misc.RangeInSortedArray,main/1[java.lang.String[]],false,7,2,1,0,1,1,2,5,0,0,1,2,1,2,0,0,0,0,0,26,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LevelOrderTraversal.java,com.thealgorithms.datastructures.trees.LevelOrderTraversal,traverse/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,10,1,0,0,0,6,7,24,2,6,1,7,0,0,2,3,0,0,0,1,6,0,3,0,0,0,12,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Rotation.java,com.thealgorithms.strings.Rotation,"rotation/2[char[],int]",false,38,2,2,1,1,1,1,5,0,0,2,1,1,1,0,0,0,0,0,5,0,3,0,0,0,0,22,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Rotation.java,com.thealgorithms.strings.Rotation,"rotation/2[java.lang.String,int]",false,27,0,2,2,0,1,2,3,1,0,2,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,20,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Rotation.java,com.thealgorithms.strings.Rotation,main/1[java.lang.String[]],false,11,2,2,0,2,1,4,6,0,1,1,4,2,2,0,0,0,0,4,2,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Rotation.java,com.thealgorithms.strings.Rotation,"reverse/3[char[],int,int]",false,51,1,1,1,0,2,0,9,0,1,3,0,0,0,1,0,0,0,0,0,3,0,1,0,0,0,13,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AbsoluteMinTest.java,com.thealgorithms.maths.AbsoluteMinTest,testGetMinValueWithNoArguments/0,false,17,1,0,0,0,1,4,4,0,1,0,4,0,0,0,0,0,0,1,0,1,0,0,0,0,1,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AbsoluteMinTest.java,com.thealgorithms.maths.AbsoluteMinTest,testGetMinValue/0,false,11,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,8,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch$Node,"Node/2[com.thealgorithms.searches.MonteCarloTreeSearch.Node,boolean]",true,28,1,2,2,0,1,0,8,0,0,2,0,0,0,0,0,0,0,0,2,6,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\MonteCarloTreeSearch.java,com.thealgorithms.searches.MonteCarloTreeSearch$Node,Node/0,true,26,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,get/1[K],false,86,3,1,0,1,3,2,10,2,2,1,2,0,0,1,0,0,0,0,0,2,0,2,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,"put/2[K,V]",false,29,3,3,0,3,4,4,15,1,2,2,4,0,0,1,0,0,0,0,0,3,1,2,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,toString/0,false,98,1,0,0,0,3,3,14,1,1,0,3,0,0,2,0,0,0,4,0,1,0,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,GenericHashMapUsingArray/0,true,13,1,1,0,1,1,1,4,0,0,0,1,0,0,0,0,0,0,0,2,1,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,initBuckets/1[int],false,22,1,0,0,0,2,0,6,0,1,1,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,remove/1[K],false,67,2,1,0,1,3,3,13,0,3,1,3,0,0,1,0,0,0,0,0,4,0,2,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,containsKey/1[K],false,114,2,1,0,1,2,1,3,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,hashFunction/1[K],false,49,1,0,0,0,1,2,4,1,1,1,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,reHash/0,false,54,1,2,0,2,3,3,11,0,1,0,3,0,0,2,0,0,0,1,2,2,1,2,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\hashmap\hashing\GenericHashMapUsingArray.java,com.thealgorithms.datastructures.hashmap.hashing.GenericHashMapUsingArray,size/0,false,82,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\RotateMatriceBy90Degree.java,com.thealgorithms.others.Rotate,rotate/1[int[][]],false,47,1,1,1,0,6,0,22,0,8,1,0,0,0,4,0,0,0,0,5,12,1,3,0,0,0,6,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\StandardScore.java,com.thealgorithms.maths.StandardScore,"zScore/3[double,double,double]",false,5,0,0,0,0,1,0,4,1,1,3,0,0,0,0,0,0,1,0,0,1,2,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\ciphers\RSATest.java,com.thealgorithms.ciphers.RSATest,testRSA/0,false,12,1,0,0,0,1,3,6,0,3,0,3,0,0,0,0,0,0,2,0,3,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bloomfilter\BloomFilter.java,com.thealgorithms.datastructures.bloomfilter.BloomFilter,contains/1[T],false,31,2,1,0,1,3,3,9,2,1,1,3,0,0,1,0,0,0,0,0,1,1,2,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bloomfilter\BloomFilter.java,com.thealgorithms.datastructures.bloomfilter.BloomFilter,"BloomFilter/2[int,int]",true,11,2,1,0,1,1,1,6,0,0,2,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bloomfilter\BloomFilter.java,com.thealgorithms.datastructures.bloomfilter.BloomFilter,insert/1[T],false,24,2,1,0,1,2,3,6,0,1,1,3,0,0,1,0,0,0,0,0,1,1,1,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\bloomfilter\BloomFilter.java,com.thealgorithms.datastructures.bloomfilter.BloomFilter,insertHash/0,false,18,1,1,0,1,2,0,5,0,1,0,0,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\PrintTopViewofTree.java,com.thealgorithms.datastructures.trees.QItem,"QItem/2[com.thealgorithms.datastructures.trees.TreeNode,int]",true,30,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,"SinglyLinkedList/2[com.thealgorithms.datastructures.lists.Node,int]",true,34,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,count/0,false,195,1,1,1,0,2,0,9,1,2,0,0,0,0,1,1,0,0,0,1,3,0,1,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,search/1[int],false,212,1,1,1,0,3,0,10,2,1,1,0,0,0,1,2,0,0,0,0,2,0,2,0,0,0,17,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,print/0,false,260,1,1,1,0,4,3,11,0,1,0,3,0,0,1,3,0,0,1,0,2,1,1,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,deleteHead/0,false,330,1,2,1,1,1,1,3,0,0,0,1,1,2,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,reverseList/1[com.thealgorithms.datastructures.lists.Node],false,125,1,0,0,0,3,0,15,1,4,1,0,0,0,2,2,0,0,0,0,9,0,1,0,0,0,19,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,setHead/1[com.thealgorithms.datastructures.lists.Node],false,186,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,insertHead/1[int],false,277,1,3,2,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,1,0,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,toString/0,false,224,1,2,2,0,2,2,9,1,2,0,2,0,0,1,1,0,0,2,0,3,1,1,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,detectLoop/0,false,44,1,0,0,0,4,0,12,2,2,0,0,0,0,1,3,0,0,0,0,4,0,2,0,0,0,24,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,deleteDuplicates/0,false,234,1,1,1,0,6,0,15,0,2,0,0,0,0,2,5,0,0,0,0,7,0,3,0,0,0,8,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,delete/0,false,337,1,2,1,1,1,1,3,0,0,0,1,1,2,0,0,0,0,0,1,0,1,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,insert/1[int],false,286,1,6,5,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,main/1[java.lang.String[]],false,397,2,19,0,19,9,18,35,0,3,1,18,16,5,0,7,1,0,3,25,3,0,1,0,0,0,16,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,SinglyLinkedList/0,true,23,0,4,4,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,"insertNth/2[int,int]",false,296,2,6,4,2,4,1,22,2,3,2,1,1,1,1,2,0,0,0,4,9,1,1,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,getNth/1[int],false,372,2,3,2,1,2,1,8,1,2,1,1,1,1,1,0,0,0,0,3,3,1,1,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,"checkBounds/3[int,int,int]",false,388,0,3,3,0,3,0,5,0,0,3,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,getHead/0,false,178,1,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,isEmpty/0,false,160,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,"swapNodes/2[int,int]",false,79,1,0,0,0,10,0,33,2,5,2,0,0,0,2,9,0,0,0,0,15,0,1,0,0,0,21,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,deleteNth/1[int],false,344,2,4,3,1,3,1,18,1,4,1,1,1,1,1,1,0,0,0,5,9,2,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,size/0,false,169,0,3,3,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,clear/0,false,144,1,1,1,0,2,0,10,0,2,0,0,0,0,1,1,0,0,0,1,6,0,1,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\SinglyLinkedList.java,com.thealgorithms.datastructures.lists.SinglyLinkedList,middle/0,false,62,1,0,0,0,4,0,12,2,2,0,0,0,0,1,3,0,0,0,0,4,0,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\UniquePaths.java,com.thealgorithms.dynamicprogramming.UniquePaths,"uniquePaths2/3[int,int,int]",false,33,1,0,0,0,6,0,15,1,5,3,0,0,0,4,1,0,0,0,12,8,5,2,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\UniquePaths.java,com.thealgorithms.dynamicprogramming.UniquePaths,"uniquePaths/3[int,int,int]",false,20,1,0,0,0,4,1,10,1,3,3,1,0,0,2,1,0,0,0,5,4,2,2,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\TernarySearch.java,com.thealgorithms.searches.TernarySearch,"ternarySearch/4[T[],T,int,int]",false,49,2,3,2,1,6,2,22,6,2,4,2,1,0,0,2,0,2,0,8,2,7,1,0,0,0,31,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\TernarySearch.java,com.thealgorithms.searches.TernarySearch,"find/2[T[],T]",false,33,2,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,22,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\TernarySearch.java,com.thealgorithms.searches.TernarySearch,main/1[java.lang.String[]],false,75,1,2,0,2,2,9,12,0,8,1,9,0,0,0,1,0,0,2,3,8,1,0,0,0,1,30,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,removeFromHead/0,false,44,3,2,0,2,1,6,9,0,3,0,6,2,1,0,0,0,0,0,2,3,1,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,checkSortedOnLowestLayer/0,false,70,3,1,0,1,1,7,8,0,3,0,7,1,1,0,0,0,0,8,1,3,0,0,0,0,0,14,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,get/0,false,23,3,1,0,1,1,4,7,0,2,0,4,1,1,0,0,0,0,2,1,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,contains/0,false,34,3,2,0,2,1,4,6,0,2,0,4,2,1,0,0,0,0,1,0,2,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,createSkipList/0,false,84,1,3,3,0,1,2,6,1,2,0,2,0,0,0,0,0,0,11,0,2,0,0,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,removeFromTail/0,false,57,3,2,0,2,1,6,9,0,3,0,6,2,1,0,0,0,0,0,2,3,2,0,0,0,0,15,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,add/0,false,12,3,1,0,1,1,4,7,0,1,0,4,1,1,0,0,0,0,1,2,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\lists\SkipListTest.java,com.thealgorithms.datastructures.lists.SkipListTest,print/1[com.thealgorithms.datastructures.lists.SkipList<?>],false,108,1,6,6,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,2,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AverageTest.java,com.thealgorithms.maths.AverageTest,testAverage_double_12/0,false,11,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,8,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AverageTest.java,com.thealgorithms.maths.AverageTest,testAverage_double_20/0,false,17,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,8,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AverageTest.java,com.thealgorithms.maths.AverageTest,testAverage_int_5/0,false,29,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,4,1,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AverageTest.java,com.thealgorithms.maths.AverageTest,testAverage_double_4_5/0,false,23,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,0,9,1,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForOneElement/0,false,10,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForFourth/0,false,27,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForFifth/0,false,32,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForThird/0,false,22,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForsecond/0,false,16,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForEighth/0,false,47,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForSeventh/0,false,42,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FastInverseSqrtTests.java,com.thealgorithms.maths.FastInverseSqrtTests,testForSixth/0,false,37,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\IntegerToRomanTest.java,com.thealgorithms.conversions.IntegerToRomanTest,testIntegerToRoman/0,false,10,1,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\devutils\searches\MatrixSearchAlgorithm.java,com.thealgorithms.devutils.searches.MatrixSearchAlgorithm,"find/2[T[][],T]",false,9,2,0,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,KDTree/1[com.thealgorithms.datastructures.trees.KDTree.Point[]],true,36,2,2,0,2,4,2,6,0,0,1,2,1,1,1,2,0,0,2,3,2,0,2,0,0,0,24,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,delete/1[com.thealgorithms.datastructures.trees.KDTree.Point],false,376,3,2,0,2,1,3,4,0,1,1,3,2,3,0,0,0,0,1,0,2,0,0,0,0,1,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,insert/1[com.thealgorithms.datastructures.trees.KDTree.Point],false,245,2,2,0,2,2,2,4,0,0,1,2,1,1,0,1,0,0,1,1,1,0,1,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,search/1[com.thealgorithms.datastructures.trees.KDTree.Point],false,278,3,3,1,2,2,2,4,1,0,1,2,1,1,0,1,0,0,1,0,0,0,1,0,0,0,20,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,findNearest/1[com.thealgorithms.datastructures.trees.KDTree.Point],false,415,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,13,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,"findMax/2[com.thealgorithms.datastructures.trees.KDTree.Node,int]",false,354,3,5,2,3,4,8,13,4,4,2,8,1,0,0,3,0,0,0,0,3,0,2,0,0,1,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,"build/2[com.thealgorithms.datastructures.trees.KDTree.Point[],int]",false,220,3,6,3,3,3,5,11,3,4,2,5,1,0,0,2,0,0,0,8,5,5,1,0,0,1,24,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,findMax/1[int],false,342,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,"insert/3[com.thealgorithms.datastructures.trees.KDTree.Node,com.thealgorithms.datastructures.trees.KDTree.Point,int]",false,261,3,6,2,4,3,3,7,2,1,3,3,1,0,0,1,0,0,0,2,3,3,1,0,0,0,21,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,"findNearest/3[com.thealgorithms.datastructures.trees.KDTree.Node,com.thealgorithms.datastructures.trees.KDTree.Point,com.thealgorithms.datastructures.trees.KDTree.Node]",false,426,3,9,2,7,5,7,10,3,2,3,7,1,0,0,1,0,0,0,0,5,0,1,0,0,0,23,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,findMin/1[int],false,306,2,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,18,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,getRoot/0,false,208,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,"search/2[com.thealgorithms.datastructures.trees.KDTree.Node,com.thealgorithms.datastructures.trees.KDTree.Point]",false,293,3,5,2,3,3,5,5,3,0,2,5,1,0,0,1,0,0,0,0,0,0,1,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,"delete/2[com.thealgorithms.datastructures.trees.KDTree.Node,com.thealgorithms.datastructures.trees.KDTree.Node]",false,390,3,7,2,5,6,6,19,3,2,2,6,2,1,0,3,0,0,0,0,8,0,2,0,0,0,17,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,KDTree/1[int[][]],true,55,3,2,0,2,4,5,7,0,1,1,5,1,1,1,2,0,0,2,3,3,0,2,0,0,0,26,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,"findMin/2[com.thealgorithms.datastructures.trees.KDTree.Node,int]",false,318,3,6,3,3,4,8,13,4,4,2,8,1,0,0,3,0,0,0,0,3,0,2,0,0,1,23,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\KDTree.java,com.thealgorithms.datastructures.trees.KDTree,KDTree/1[int],true,27,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\FrizzyNumber.java,com.thealgorithms.maths.FrizzyNumber,"getNthFrizzy/2[int,int]",false,24,0,0,0,0,2,1,9,1,2,2,1,0,0,1,0,0,2,0,5,4,2,1,0,0,0,29,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LCA.java,com.thealgorithms.datastructures.trees.LCA,main/1[java.lang.String[]],false,10,2,2,0,2,3,7,19,0,11,1,7,2,1,2,0,0,0,0,5,11,1,1,0,0,0,17,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LCA.java,com.thealgorithms.datastructures.trees.LCA,"getLCA/4[int,int,int[],int[]]",false,81,1,1,1,0,5,0,18,2,1,4,0,0,0,2,3,0,0,0,0,6,0,1,0,0,0,32,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LCA.java,com.thealgorithms.datastructures.trees.LCA,"dfs/5[java.util.ArrayList<java.util.ArrayList<java.lang.Integer>>,int,int,int[],int[]]",false,62,2,3,2,1,3,2,9,0,0,5,2,1,0,1,1,0,0,0,1,2,1,2,0,0,0,30,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortRecursive.java,com.thealgorithms.sorts.MergeSortRecursive$Anonymous2,(initializer 2),false,63,0,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\MergeSortRecursive.java,com.thealgorithms.sorts.MergeSortRecursive$Anonymous1,(initializer 1),false,53,0,1,0,1,1,2,3,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ArrayLeftRotationTest.java,com.thealgorithms.others.ArrayLeftRotationTest,testForOneElement/0,false,10,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,2,2,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ArrayLeftRotationTest.java,com.thealgorithms.others.ArrayLeftRotationTest,testForLowerSizeStep/0,false,31,2,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,11,4,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ArrayLeftRotationTest.java,com.thealgorithms.others.ArrayLeftRotationTest,testForEqualSizeStep/0,false,24,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,6,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ArrayLeftRotationTest.java,com.thealgorithms.others.ArrayLeftRotationTest,testForHigherSizeStep/0,false,40,2,0,0,0,1,2,7,0,4,0,2,0,0,0,0,0,0,0,11,4,0,0,0,0,0,12,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\others\ArrayLeftRotationTest.java,com.thealgorithms.others.ArrayLeftRotationTest,testForZeroStep/0,false,17,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,6,2,0,0,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\BinaryTreeTest.java,com.thealgorithms.datastructures.trees.BinaryTreeTest,test3/0,false,46,2,0,0,0,1,3,10,0,1,0,3,0,0,0,0,0,0,0,7,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\BinaryTreeTest.java,com.thealgorithms.datastructures.trees.BinaryTreeTest,test1/0,false,12,2,0,0,0,1,3,10,0,1,0,3,0,0,0,0,0,0,0,9,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\BinaryTreeTest.java,com.thealgorithms.datastructures.trees.BinaryTreeTest,test2/0,false,28,2,0,0,0,1,4,12,0,1,0,4,0,0,0,0,0,0,0,9,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\trees\BinaryTreeTest.java,com.thealgorithms.datastructures.trees.BinaryTreeTest,test4/0,false,62,2,0,0,0,1,9,14,0,1,0,9,0,0,0,0,0,0,0,8,1,0,0,0,0,0,6,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\DigitalRootTest.java,com.thealgorithms.maths.DigitalRootTest,testDigitalroot/0,false,10,1,0,0,0,1,2,8,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MaxValue.java,com.thealgorithms.maths.MaxValue,"max/2[int,int]",false,31,0,1,1,0,2,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\MaxValue.java,com.thealgorithms.maths.MaxValue,main/1[java.lang.String[]],false,10,1,1,0,1,2,3,8,0,4,1,3,1,1,1,1,0,0,0,6,4,2,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\LargestRectangle.java,com.thealgorithms.datastructures.stacks.LargestRectangle,main/1[java.lang.String[]],false,31,2,1,0,1,1,2,4,0,0,1,2,1,1,0,0,0,0,2,8,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\LargestRectangle.java,com.thealgorithms.datastructures.stacks.LargestRectangle,largestRectanglehistogram/1[int[]],false,12,1,1,1,0,5,6,18,1,7,1,6,0,0,3,0,0,2,0,8,10,4,2,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\AmicableNumberTest.java,com.thealgorithms.maths.AmicableNumberTest,testAmicableNumber/0,false,10,1,0,0,0,1,3,5,0,0,0,3,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AliquotSum.java,com.thealgorithms.maths.AliquotSum,getAliquotSum/1[int],false,40,0,0,0,0,5,1,12,2,3,1,1,0,0,1,2,0,0,0,5,5,3,2,0,0,0,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\AliquotSum.java,com.thealgorithms.maths.AliquotSum,getAliquotValue/1[int],false,20,1,1,0,1,2,4,8,1,4,1,4,0,0,0,1,0,0,0,3,2,2,0,1,0,3,19,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LevelOrderTraversalHelper.java,com.thealgorithms.datastructures.trees.LevelOrderTraversalHelper,"printGivenLevel/2[com.thealgorithms.datastructures.trees.BinaryTree.Node,int]",false,31,2,3,2,1,4,3,13,1,0,2,3,1,0,0,2,0,0,2,4,0,3,1,0,0,0,10,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LevelOrderTraversalHelper.java,com.thealgorithms.datastructures.trees.LevelOrderTraversalHelper,printLevelOrder/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,5,2,2,0,2,3,3,11,1,2,1,3,2,1,1,1,0,0,1,1,2,0,1,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\LevelOrderTraversalHelper.java,com.thealgorithms.datastructures.trees.LevelOrderTraversalHelper,height/1[com.thealgorithms.datastructures.trees.BinaryTree.Node],false,21,2,3,2,1,2,2,8,2,0,1,2,1,0,0,1,0,0,0,2,0,1,1,0,0,0,3,10,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,"surfaceAreaTriangleRectangle/2[double,double]",false,103,0,0,0,0,3,0,9,1,0,2,0,0,0,0,0,0,0,0,3,0,2,1,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,"surfaceAreaParallelogram/2[double,double]",false,120,0,0,0,0,3,0,9,1,0,2,0,0,0,0,0,0,0,0,2,0,1,1,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,surfaceAreaSphere/1[double],false,42,0,0,0,0,2,0,6,1,0,1,0,0,0,0,0,0,0,0,2,0,1,1,0,0,0,26,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,"surfaceAreaRectangle/2[double,double]",false,56,0,0,0,0,3,0,9,1,0,2,0,0,0,0,0,0,0,2,2,0,1,1,0,0,0,17,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,surfaceAreaSquare/1[double],false,89,0,0,0,0,2,0,6,1,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,"surfaceAreaCylinder/2[double,double]",false,73,0,0,0,0,3,0,9,1,0,2,0,0,0,0,0,0,1,0,3,0,4,1,0,0,0,29,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,surfaceAreaHemisphere/1[double],false,170,0,0,0,0,2,0,6,1,0,1,0,0,0,0,0,0,0,0,2,0,1,1,0,0,0,26,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,surfaceAreaCube/1[double],false,29,0,0,0,0,2,0,6,1,0,1,0,0,0,0,0,0,0,1,2,0,1,1,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,"surfaceAreaTrapezium/3[double,double,double]",false,138,0,0,0,0,4,0,12,1,0,3,0,0,0,0,0,0,1,0,6,0,5,1,0,0,0,31,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,"surfaceAreaCone/2[double,double]",false,184,0,0,0,0,3,1,9,1,0,2,1,0,0,0,0,0,1,0,3,0,5,1,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\Area.java,com.thealgorithms.maths.Area,surfaceAreaCircle/1[double],false,157,0,0,0,0,2,0,6,1,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,26,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\GenericArrayListQueue.java,com.thealgorithms.datastructures.queues.GenericArrayListQueue,pull/0,false,58,2,1,0,1,2,2,7,1,1,0,2,0,0,0,0,0,0,0,1,2,0,1,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\GenericArrayListQueue.java,com.thealgorithms.datastructures.queues.GenericArrayListQueue,add/1[T],false,49,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\GenericArrayListQueue.java,com.thealgorithms.datastructures.queues.GenericArrayListQueue,hasElements/0,false,25,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\GenericArrayListQueue.java,com.thealgorithms.datastructures.queues.GenericArrayListQueue,main/1[java.lang.String[]],false,71,1,4,0,4,10,4,16,0,1,1,4,0,0,0,9,0,0,2,7,1,0,0,0,0,0,10,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\GenericArrayListQueue.java,com.thealgorithms.datastructures.queues.GenericArrayListQueue,peek/0,false,35,2,1,0,1,2,2,7,1,1,0,2,0,0,0,0,0,0,0,1,2,0,1,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortAlgorithm.java,com.thealgorithms.sorts.SortAlgorithm,sort/1[T[]],false,12,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\sorts\SortAlgorithm.java,com.thealgorithms.sorts.SortAlgorithm,sort/1[java.util.List<T>],false,27,2,1,0,1,1,4,3,1,0,1,4,1,1,0,0,0,0,1,0,0,0,0,0,0,0,20,65536,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\HeronsFormulaTest.java,com.thealgorithms.maths.HeronsFormulaTest,test3/0,false,19,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\HeronsFormulaTest.java,com.thealgorithms.maths.HeronsFormulaTest,test2/0,false,14,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\HeronsFormulaTest.java,com.thealgorithms.maths.HeronsFormulaTest,test1/0,false,9,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\HeronsFormulaTest.java,com.thealgorithms.maths.HeronsFormulaTest,test4/0,false,27,1,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,4,0,0,0,0,0,0,1,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\MergeSortedArrayList.java,com.thealgorithms.datastructures.lists.MergeSortedArrayList,main/1[java.lang.String[]],false,11,1,1,0,1,2,3,13,0,4,1,3,1,1,1,0,0,0,3,4,5,4,1,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\MergeSortedArrayList.java,com.thealgorithms.datastructures.lists.MergeSortedArrayList,"merge/3[java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>]",false,43,0,1,1,0,6,3,18,0,2,3,3,0,0,3,0,0,0,0,2,2,0,2,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\SquareRootBinarySearch.java,com.thealgorithms.searches.SquareRootBinarySearch,squareRoot/1[long],false,42,0,1,1,0,6,0,22,3,4,1,0,0,0,1,3,0,1,0,7,7,7,2,0,0,0,27,10,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\SquareRootBinarySearch.java,com.thealgorithms.searches.SquareRootBinarySearch,main/1[java.lang.String[]],false,24,1,1,0,1,1,4,7,0,3,1,4,1,1,0,0,0,0,2,0,3,1,0,0,0,0,23,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\HexToOctTest.java,com.thealgorithms.conversions.HexToOctTest,testHexToOct/0,false,10,1,0,0,0,1,3,4,0,0,0,3,0,0,0,0,0,0,2,2,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\OctalToHexadecimal.java,com.thealgorithms.conversions.OctalToHexadecimal,decimalToHex/1[int],false,35,0,1,1,0,3,1,13,2,3,1,1,0,0,1,0,0,0,3,4,5,3,1,0,0,0,17,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\OctalToHexadecimal.java,com.thealgorithms.conversions.OctalToHexadecimal,main/1[java.lang.String[]],false,49,1,2,0,2,1,6,9,0,4,1,6,2,1,0,0,0,0,2,0,4,1,0,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\OctalToHexadecimal.java,com.thealgorithms.conversions.OctalToHexadecimal,octToDec/1[java.lang.String],false,18,0,1,1,0,2,2,10,1,3,1,2,0,0,1,0,0,0,0,3,6,0,1,0,0,0,18,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kosaraju.java,com.thealgorithms.datastructures.graphs.Kosaraju,"kosaraju/2[int,java.util.List<java.util.List<java.lang.Integer>>]",false,74,1,3,0,3,1,3,6,1,1,2,3,3,3,0,0,0,0,0,0,1,0,0,0,0,0,28,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kosaraju.java,com.thealgorithms.datastructures.graphs.Kosaraju,"createTransposeMatrix/2[int,java.util.List<java.util.List<java.lang.Integer>>]",false,94,0,1,1,0,4,4,12,1,3,2,4,0,0,3,0,0,0,0,2,3,0,2,0,0,0,11,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kosaraju.java,com.thealgorithms.datastructures.graphs.Kosaraju,"sortEdgesByLowestFinishTime/2[int,java.util.List<java.util.List<java.lang.Integer>>]",false,85,2,2,1,1,3,1,8,0,2,2,1,1,1,1,1,0,0,0,2,2,0,2,0,0,0,10,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kosaraju.java,com.thealgorithms.datastructures.graphs.Kosaraju,"dfs/3[int,int[],java.util.List<java.util.List<java.lang.Integer>>]",false,125,2,3,2,1,3,3,7,0,0,3,3,1,0,1,1,0,0,0,2,1,0,2,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kosaraju.java,com.thealgorithms.datastructures.graphs.Kosaraju,"dfs2/3[int,int[],java.util.List<java.util.List<java.lang.Integer>>]",false,135,2,3,2,1,3,3,7,0,0,3,3,1,0,1,1,0,0,0,2,1,0,2,0,0,0,5,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\Kosaraju.java,com.thealgorithms.datastructures.graphs.Kosaraju,"findStronglyConnectedComponents/2[int,java.util.List<java.util.List<java.lang.Integer>>]",false,112,2,2,1,1,3,4,11,0,2,2,4,1,1,1,1,0,0,0,1,3,0,2,0,0,0,19,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexaDecimalToBinary.java,com.thealgorithms.conversions.HexaDecimalToBinary,convert/1[java.lang.String],false,8,1,2,1,1,1,3,5,1,2,1,3,1,1,0,0,0,0,0,1,2,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexaDecimalToBinary.java,com.thealgorithms.conversions.HexaDecimalToBinary,completeDigits/1[java.lang.String],false,17,0,1,1,0,2,1,6,1,1,1,1,0,0,1,0,0,0,1,0,2,1,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\conversions\HexaDecimalToBinary.java,com.thealgorithms.conversions.HexaDecimalToBinary,main/1[java.lang.String[]],false,24,1,2,0,2,2,2,7,0,2,1,2,1,2,1,0,0,0,12,0,2,1,1,0,0,0,11,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\ShellSortTest.java,com.thealgorithms.sorts.ShellSortTest,ShellSortSingleStringArray/0,false,28,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,2,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\ShellSortTest.java,com.thealgorithms.sorts.ShellSortTest,ShellSortDuplicateStringArray/0,false,60,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,16,0,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\ShellSortTest.java,com.thealgorithms.sorts.ShellSortTest,ShellSortNonDuplicateIntegerArray/0,false,36,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,14,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\ShellSortTest.java,com.thealgorithms.sorts.ShellSortTest,ShellSortNonDuplicateStringArray/0,false,52,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,14,0,3,0,0,0,0,0,12,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\ShellSortTest.java,com.thealgorithms.sorts.ShellSortTest,ShellSortEmptyArray/0,false,12,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,0,3,0,0,0,0,0,10,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\ShellSortTest.java,com.thealgorithms.sorts.ShellSortTest,ShellSortSingleIntegerArray/0,false,20,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,2,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\sorts\ShellSortTest.java,com.thealgorithms.sorts.ShellSortTest,ShellSortDuplicateIntegerArray/0,false,44,2,1,0,1,1,2,6,0,3,0,2,0,0,0,0,0,0,0,16,3,0,0,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\PerfectBinarySearch.java,com.thealgorithms.searches.PerfectBinarySearch,"binarySearch/2[int[],int]",false,5,1,1,1,0,4,0,17,2,3,2,0,0,0,1,1,0,1,0,6,5,5,2,0,0,0,6,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\PerfectBinarySearch.java,com.thealgorithms.searches.PerfectBinarySearch,main/1[java.lang.String[]],false,23,2,2,0,2,3,1,6,0,2,1,1,1,1,0,2,0,0,0,15,2,0,0,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CombinationsTest.java,com.thealgorithms.maths.CombinationsTest,testCombinationOptimised/0,false,18,1,0,0,0,1,2,8,0,0,0,2,0,0,0,0,0,0,0,18,0,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\CombinationsTest.java,com.thealgorithms.maths.CombinationsTest,testCombination/0,false,10,1,0,0,0,1,2,6,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,4,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\ReverseNumber.java,com.thealgorithms.maths.ReverseNumber,main/1[java.lang.String[]],false,9,0,0,0,0,3,2,18,1,4,1,2,0,0,1,1,1,0,3,5,6,5,1,0,0,0,19,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,getHeight/0,false,141,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,MiniMaxAlgorithm/0,true,27,1,3,1,2,1,2,4,0,0,0,2,2,1,0,0,0,0,0,2,2,0,0,0,0,0,15,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,getScores/0,false,137,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,main/1[java.lang.String[]],false,32,1,3,0,3,3,6,12,0,4,1,6,2,1,0,0,0,1,4,2,4,1,1,0,0,0,14,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,setScores/1[int[]],false,128,2,1,0,1,2,2,9,0,0,1,2,1,1,0,1,0,0,1,2,2,1,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,"getRandomScores/2[int,int]",false,112,1,1,1,0,2,2,8,1,3,2,2,0,0,1,0,0,0,0,3,4,1,1,0,0,0,27,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,log2/1[int],false,124,1,4,3,1,2,1,3,1,0,1,1,1,0,0,1,0,1,0,4,0,2,0,0,0,0,2,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\MiniMaxAlgorithm.java,com.thealgorithms.others.MiniMaxAlgorithm,"miniMax/4[int,boolean,int,boolean]",false,67,1,3,2,1,5,5,18,2,3,4,5,1,0,0,1,0,2,3,5,4,5,1,0,0,0,48,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.DoublyLinkedList,isEmpty/0,false,66,0,2,2,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,8,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.DoublyLinkedList,DoublyLinkedList/1[int[]],true,51,2,1,0,1,3,1,9,0,0,1,1,0,0,1,1,0,0,0,0,1,0,1,0,0,0,26,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.DoublyLinkedList,DoublyLinkedList/0,true,39,0,1,1,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,9,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.DoublyLinkedList,display/0,false,73,1,2,1,1,2,2,8,0,1,0,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,10,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\DoublyLinkedList.java,com.thealgorithms.datastructures.lists.DoublyLinkedList,displayBackwards/0,false,85,1,2,1,1,2,2,8,0,1,0,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\GCD.java,com.thealgorithms.maths.GCD,main/1[java.lang.String[]],false,50,2,2,0,2,1,4,5,0,1,1,4,2,2,0,0,0,0,1,7,1,0,0,0,0,0,6,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\GCD.java,com.thealgorithms.maths.GCD,gcd/1[int[]],false,41,2,2,1,1,2,1,7,1,2,1,1,1,1,1,0,0,0,0,2,3,0,1,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\GCD.java,com.thealgorithms.maths.GCD,"gcd/2[int,int]",false,18,0,3,3,0,6,1,14,2,1,2,1,0,0,1,3,0,0,0,5,3,3,1,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\conversions\BinaryToDecimalTest.java,com.thealgorithms.conversions.BinaryToDecimalTest,testBinaryToDecimal/0,false,10,1,0,0,0,1,2,7,0,0,0,2,0,0,0,0,0,0,0,10,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,hashTest/0,false,115,3,1,0,1,2,4,14,0,7,0,4,1,1,1,0,0,0,0,5,7,0,1,0,0,0,16,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,getTest/0,false,26,3,1,0,1,4,6,13,0,4,0,6,1,1,3,0,0,0,0,6,4,0,1,0,0,0,9,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,keysTest/0,false,98,3,1,0,1,3,8,13,0,4,0,8,1,1,2,0,0,0,0,3,5,0,1,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,putTest/0,false,13,3,1,0,1,1,4,10,0,1,0,4,1,1,0,0,0,0,5,5,1,0,0,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,sizeTest/0,false,80,3,1,0,1,3,6,12,0,3,0,6,1,1,2,0,0,0,0,7,3,0,1,0,0,0,8,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,getMap/0,false,10,3,7,7,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1024,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,containsTest/0,false,62,3,1,0,1,4,6,13,0,4,0,6,1,1,3,0,0,0,0,6,4,0,1,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\hashmap\hashing\MapTest.java,com.thealgorithms.datastructures.hashmap.hashing.MapTest,deleteTest/0,false,44,3,1,0,1,4,6,13,0,4,0,6,1,1,3,0,0,0,0,6,4,0,1,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\RegexMatching.java,com.thealgorithms.dynamicprogramming.RegexMatching,"regexRecursion/2[java.lang.String,java.lang.String]",false,19,1,3,2,1,12,4,33,5,8,2,4,1,0,1,10,0,0,0,11,10,0,3,0,0,0,13,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\RegexMatching.java,com.thealgorithms.dynamicprogramming.RegexMatching,"regexRecursion/5[java.lang.String,java.lang.String,int,int,int[][]]",false,99,2,3,2,1,15,3,35,6,6,5,3,1,0,1,13,0,0,0,8,9,4,3,0,0,0,13,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\RegexMatching.java,com.thealgorithms.dynamicprogramming.RegexMatching,"regexBU/2[java.lang.String,java.lang.String]",false,136,1,1,1,0,8,2,34,1,8,2,2,0,0,2,5,0,0,0,12,14,8,4,0,0,0,13,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\RegexMatching.java,com.thealgorithms.dynamicprogramming.RegexMatching,main/1[java.lang.String[]],false,168,2,4,0,4,1,6,8,0,2,1,6,4,1,0,0,0,0,6,4,2,4,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\dynamicprogramming\RegexMatching.java,com.thealgorithms.dynamicprogramming.RegexMatching,"regexRecursion/4[java.lang.String,java.lang.String,int,int]",false,60,1,3,2,1,12,3,31,5,6,4,3,1,0,1,10,0,0,0,4,8,4,3,0,0,0,12,8,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArrayList.java,com.thealgorithms.datastructures.stacks.StackArrayList,StackArrayList/0,true,58,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArrayList.java,com.thealgorithms.datastructures.stacks.StackArrayList,push/1[int],false,67,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArrayList.java,com.thealgorithms.datastructures.stacks.StackArrayList,pop/0,false,77,1,2,1,1,2,3,6,1,0,0,3,1,1,0,0,0,0,0,1,0,1,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArrayList.java,com.thealgorithms.datastructures.stacks.StackArrayList,isEmpty/0,false,91,0,3,3,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArrayList.java,com.thealgorithms.datastructures.stacks.StackArrayList,main/1[java.lang.String[]],false,22,1,6,0,6,8,5,21,0,2,1,5,5,3,2,5,1,0,0,6,2,0,1,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArrayList.java,com.thealgorithms.datastructures.stacks.StackArrayList,peek/0,false,101,1,2,1,1,2,3,6,1,0,0,3,1,1,0,0,0,0,0,1,0,1,1,0,0,0,16,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\stacks\StackArrayList.java,com.thealgorithms.datastructures.stacks.StackArrayList,size/0,false,113,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\caches\LFUCache.java,com.thealgorithms.datastructures.caches.LFUCache$Node,"Node/3[K,V,int]",true,20,2,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\PowerSumTest.java,com.thealgorithms.backtracking.PowerSumTest,testNumberHundredAndPowerThree/0,false,22,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,3,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\PowerSumTest.java,com.thealgorithms.backtracking.PowerSumTest,testNumberZeroAndPowerZero/0,false,8,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,3,2,0,0,0,0,0,10,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\backtracking\PowerSumTest.java,com.thealgorithms.backtracking.PowerSumTest,testNumberHundredAndPowerTwo/0,false,15,2,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,3,2,0,0,0,0,0,11,0,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\LRUCacheTest.java,com.thealgorithms.datastructures.caches.LRUCacheTest,putAndGetStringValues/0,false,26,2,0,0,0,3,3,9,0,3,0,3,0,0,2,0,0,0,4,2,3,4,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\LRUCacheTest.java,com.thealgorithms.datastructures.caches.LRUCacheTest,putAndGetIntegerValues/0,false,13,2,0,0,0,3,3,9,0,3,0,3,0,0,2,0,0,0,0,2,3,0,1,0,0,0,14,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\LRUCacheTest.java,com.thealgorithms.datastructures.caches.LRUCacheTest,nullKeysAndValues/0,false,39,2,0,0,0,1,4,7,0,1,0,4,0,0,0,0,0,0,0,4,1,0,0,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\datastructures\caches\LRUCacheTest.java,com.thealgorithms.datastructures.caches.LRUCacheTest,overCapacity/0,false,49,2,0,0,0,2,3,7,0,2,0,3,0,0,1,0,0,0,0,4,2,0,1,0,0,0,11,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\StringMatchFiniteAutomata.java,com.thealgorithms.others.StringMatchFiniteAutomata,main/1[java.lang.String[]],false,15,1,1,0,1,1,4,9,0,2,1,4,1,3,0,0,0,0,2,0,3,0,0,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\StringMatchFiniteAutomata.java,com.thealgorithms.others.StringMatchFiniteAutomata,"searchPat/2[java.lang.String,java.lang.String]",false,27,2,2,1,1,3,4,13,0,4,2,4,1,2,1,1,0,1,1,4,6,4,2,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\StringMatchFiniteAutomata.java,com.thealgorithms.others.StringMatchFiniteAutomata,"computeFA/3[java.lang.String,int,int[][]]",false,46,2,2,1,1,3,1,7,0,2,3,1,1,1,2,0,0,0,0,2,3,0,2,0,0,0,13,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\StringMatchFiniteAutomata.java,com.thealgorithms.others.StringMatchFiniteAutomata,"getNextState/4[java.lang.String,int,int,int]",false,54,0,1,1,0,8,1,18,3,2,4,1,0,0,2,4,0,0,0,8,2,7,4,0,0,0,8,9,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FindMinTest.java,com.thealgorithms.maths.FindMinTest,test2/0,false,23,2,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,5,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FindMinTest.java,com.thealgorithms.maths.FindMinTest,test1/0,false,18,2,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,6,0,0,0,0,0,0,3,1,0,false
C:\medicao-lab2\repos\Java\src\test\java\com\thealgorithms\maths\FindMinTest.java,com.thealgorithms.maths.FindMinTest,testFindMinValue/0,false,10,2,0,0,0,1,2,3,0,0,0,2,0,0,0,0,0,0,0,11,0,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,isFull/0,false,27,0,2,2,0,4,0,11,3,0,0,0,0,0,0,3,0,0,0,3,0,2,1,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,deleteQueue/0,false,83,0,1,1,0,1,1,4,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,6,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,deQueue/0,false,56,1,2,1,1,4,2,20,2,1,0,2,1,1,0,2,0,0,1,4,5,1,2,0,0,0,9,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,CircularQueue/1[int],true,12,1,1,1,0,1,0,6,0,0,1,0,0,0,0,0,0,0,0,2,4,0,0,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,peek/0,false,74,1,2,1,1,2,2,9,2,0,0,2,1,1,0,0,0,0,1,1,0,0,1,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,main/1[java.lang.String[]],false,88,1,7,0,7,1,8,23,0,1,1,8,6,4,0,0,0,0,0,9,1,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,enQueue/1[int],false,37,1,3,1,2,4,3,21,0,0,1,3,2,1,0,1,0,0,3,3,4,3,2,0,0,0,15,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\queues\CircularQueue.java,com.thealgorithms.datastructures.queues.CircularQueue,isEmpty/0,false,19,0,4,4,0,2,0,8,2,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,7,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BankersAlgorithm.java,com.thealgorithms.others.BankersAlgorithm,"calculateNeed/5[int[][],int[][],int[][],int,int]",false,34,1,1,1,0,3,0,7,0,2,5,0,0,0,2,0,0,0,0,2,3,1,2,0,0,0,15,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BankersAlgorithm.java,com.thealgorithms.others.BankersAlgorithm,"checkSafeSystem/6[int[],int[],int[][],int[][],int,int]",false,64,3,2,1,1,11,2,41,2,11,6,2,1,1,6,3,0,0,4,6,16,1,5,0,0,0,57,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BankersAlgorithm.java,com.thealgorithms.others.BankersAlgorithm,main/1[java.lang.String[]],false,136,2,1,0,1,7,4,38,0,13,1,4,1,2,6,0,0,0,13,6,17,5,2,0,0,0,28,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\searches\sortOrderAgnosticBinarySearch.java,com.thealgorithms.searches.sortOrderAgnosticBinarySearch,"find/2[int[],int]",false,4,1,0,0,0,7,0,28,2,4,2,0,0,0,1,1,0,0,0,8,8,7,3,0,0,0,7,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\TarjansAlgorithm.java,com.thealgorithms.datastructures.graphs.TarjansAlgorithm,"stronglyConnectedComponents/2[int,java.util.List<java.util.List<java.lang.Integer>>]",false,63,3,1,0,1,4,1,14,1,6,2,1,1,1,2,1,0,0,0,5,8,0,2,0,0,0,13,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\graphs\TarjansAlgorithm.java,com.thealgorithms.datastructures.graphs.TarjansAlgorithm,"stronglyConnCompsUtil/6[int,int[],int[],boolean[],java.util.Stack<java.lang.Integer>,java.util.List<java.util.List<java.lang.Integer>>]",false,93,3,3,2,1,6,10,29,0,4,6,10,1,0,2,4,0,0,0,3,12,0,2,0,0,0,14,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PerfectCube.java,com.thealgorithms.maths.PerfectCube,isPerfectCube/1[int],false,15,0,0,0,0,2,2,5,1,1,1,2,0,0,0,1,0,0,0,2,2,2,0,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PerfectCube.java,com.thealgorithms.maths.PerfectCube,isPerfectCubeMathCbrt/1[int],false,28,0,0,0,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,21,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\maths\PronicNumber.java,com.thealgorithms.maths.PronicNumber,isPronic/1[int],false,21,0,0,0,0,4,0,8,2,1,1,0,0,0,1,2,0,1,0,2,1,2,2,0,0,0,24,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Alphabetical.java,com.thealgorithms.strings.Alphabetical,main/1[java.lang.String[]],false,10,1,1,0,1,1,1,7,0,0,1,1,1,1,0,0,0,0,5,0,0,0,0,0,0,0,5,9,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\strings\Alphabetical.java,com.thealgorithms.strings.Alphabetical,isAlphabetical/1[java.lang.String],false,25,0,2,2,0,4,4,9,2,1,1,4,0,0,1,0,0,1,0,3,2,2,2,0,0,0,15,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap$HeapNode,getKey/0,false,383,0,5,5,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap$HeapNode,isRoot/0,false,429,0,3,3,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,3,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap$HeapNode,HeapNode/1[int],true,373,0,2,2,0,1,0,6,0,0,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,4,1,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap$HeapNode,mark/0,false,399,1,2,1,1,2,1,6,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,2,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap$HeapNode,getNext/0,false,421,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap$HeapNode,setNext/1[com.thealgorithms.datastructures.heaps.FibonacciHeap.HeapNode],false,410,1,6,6,0,1,0,7,0,1,1,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,6,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\heaps\FibonacciHeap.java,com.thealgorithms.datastructures.heaps.FibonacciHeap$HeapNode,isMarked/0,false,391,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\trees\AVLTree.java,com.thealgorithms.datastructures.trees.AVLTree$Node,"Node/2[int,com.thealgorithms.datastructures.trees.AVLTree.Node]",true,14,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,false
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BrianKernighanAlgorithm.java,com.thealgorithms.others.BrianKernighanAlgorithm,countSetBits/1[int],false,29,0,1,1,0,2,0,8,1,1,1,0,0,0,1,1,0,1,0,3,2,1,1,0,0,0,14,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\BrianKernighanAlgorithm.java,com.thealgorithms.others.BrianKernighanAlgorithm,main/1[java.lang.String[]],false,41,1,1,0,1,1,4,7,0,3,1,4,1,1,0,0,0,0,0,0,3,0,0,0,0,0,14,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\others\QueueUsingTwoStacks.java,com.thealgorithms.others.QueueUsingTwoStacks,main/1[java.lang.String[]],false,122,1,7,0,7,2,8,24,0,1,1,8,0,0,0,0,0,1,1,5,1,0,0,0,0,0,11,9,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CreateAndDetectLoop.java,com.thealgorithms.datastructures.lists.CreateAndDetectLoop,printList/1[com.thealgorithms.datastructures.lists.Node],false,12,1,1,1,0,2,1,7,0,1,1,1,0,0,1,1,0,0,1,0,2,1,1,0,0,0,12,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CreateAndDetectLoop.java,com.thealgorithms.datastructures.lists.CreateAndDetectLoop,detectLoop/1[com.thealgorithms.datastructures.lists.Node],false,61,1,1,1,0,4,0,12,2,2,1,0,0,0,1,3,0,0,0,0,4,0,2,0,0,0,24,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CreateAndDetectLoop.java,com.thealgorithms.datastructures.lists.CreateAndDetectLoop,"createLoop/2[com.thealgorithms.datastructures.lists.Node,int]",false,30,1,1,1,0,4,0,16,1,3,2,0,0,0,2,2,0,0,0,1,6,0,1,0,0,0,31,8,0,true
C:\medicao-lab2\repos\Java\src\main\java\com\thealgorithms\datastructures\lists\CreateAndDetectLoop.java,com.thealgorithms.datastructures.lists.CreateAndDetectLoop,main/1[java.lang.String[]],false,76,2,6,0,6,3,11,23,0,4,1,11,3,1,1,0,0,0,6,1,4,0,1,0,0,0,23,9,0,false
