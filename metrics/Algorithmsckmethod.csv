file,class,method,constructor,line,cbo,cboModified,fanin,fanout,wmc,rfc,loc,returnsQty,variablesQty,parametersQty,methodsInvokedQty,methodsInvokedLocalQty,methodsInvokedIndirectLocalQty,loopQty,comparisonsQty,tryCatchQty,parenthesizedExpsQty,stringLiteralsQty,numbersQty,assignmentsQty,mathOperationsQty,maxNestedBlocksQty,anonymousClassesQty,innerClassesQty,lambdasQty,uniqueWordsQty,modifiers,logStatementsQty,hasJavaDoc
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$Edge,"Edge/3[int,int,double]",true,20,0,2,2,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$Edge,toString/0,false,27,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListRecursive.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListRecursive,main/1[java.lang.String[]],false,45,3,2,0,2,3,3,16,0,3,1,3,2,1,0,2,0,0,4,23,4,2,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListRecursive.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListRecursive,"addDirectedEdge/4[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListRecursive.Edge>>,int,int,int]",false,78,1,2,1,1,2,3,8,0,1,4,3,0,0,0,1,0,0,0,0,2,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListRecursive.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListRecursive,"dfs/3[int,boolean[],java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListRecursive.Edge>>]",false,24,3,3,2,1,4,2,12,2,2,3,2,1,0,1,1,0,0,0,2,4,0,2,0,0,0,11,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,createEmptyGraph/1[int],false,107,1,5,5,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,"addDirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList.Edge>>,int,int,int]",false,113,1,3,2,1,1,2,3,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,squareGraphFromSlides/0,false,209,2,5,0,5,3,6,27,0,4,0,6,4,4,1,1,0,0,3,37,4,1,2,0,0,0,25,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,LazyPrimsAdjacencyList/1[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList.Edge>>],true,44,1,5,5,0,3,2,5,0,0,1,2,0,0,0,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,lazyPrimsDemoFromSlides/0,false,239,2,6,1,5,3,6,43,0,4,0,6,4,3,1,1,0,0,3,85,4,1,2,0,0,0,26,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,"addUndirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList.Edge>>,int,int,int]",false,117,2,5,4,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,firstGraphFromSlides/0,false,179,2,5,0,5,3,6,27,0,4,0,6,4,4,1,1,0,0,3,37,4,1,2,0,0,0,25,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,getMstCost/0,false,57,1,6,5,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,addEdges/1[int],false,62,1,1,1,0,3,2,7,0,1,1,2,0,0,1,0,0,0,0,0,2,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,getMst/0,false,52,2,5,4,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,example1/0,false,131,2,5,0,5,3,6,33,0,4,0,6,4,4,1,1,0,0,3,55,4,1,2,0,0,0,23,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,solve/0,false,75,3,3,2,1,6,3,18,1,4,0,3,1,1,1,2,0,1,0,3,11,1,2,0,0,0,19,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList,main/1[java.lang.String[]],false,124,1,1,0,1,1,1,3,0,0,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList,"topologicalSort/2[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList.Edge>>,int]",false,55,4,3,2,1,3,1,7,1,4,2,1,1,1,1,0,0,0,0,2,5,1,2,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList,main/1[java.lang.String[]],false,101,3,3,0,3,2,8,19,0,5,1,8,2,2,1,0,0,0,0,41,5,0,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList,"dagShortestPath/3[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList.Edge>>,int,int]",false,75,3,2,1,1,6,3,19,1,6,3,3,1,2,2,3,0,0,0,2,9,1,5,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList,"dfs/5[int,int,boolean[],int[],java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList.Edge>>]",false,34,4,3,2,1,4,2,7,1,1,5,2,1,0,1,1,0,0,0,1,4,1,3,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ClosestPairOfPoints.java,com.williamfiset.algorithms.geometry.ClosestPairOfPoints,closestPair/1[com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT[]],false,54,3,3,0,3,13,7,46,2,15,1,7,0,0,4,4,0,0,0,5,27,3,3,0,0,0,29,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,getText/0,false,61,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,getData/0,false,65,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,BinaryTree/1[T],true,32,1,0,0,0,3,1,11,0,0,1,1,0,0,0,1,1,0,1,0,1,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,getLeft/0,false,43,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,toString/0,false,80,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,setData/1[T],false,69,1,0,0,0,3,1,11,0,0,1,1,0,0,0,1,1,0,1,0,1,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,setLeft/1[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>],false,47,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,setRight/1[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>],false,56,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree$BinaryTree,getRight/0,false,52,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"printDebugInfo/3[int,int,int]",false,170,1,3,2,1,2,2,9,1,1,3,2,1,0,0,1,0,1,1,6,1,7,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,MaxQuerySumUpdateSegmentTree/1[long[]],true,43,2,4,3,1,2,1,10,0,1,1,1,1,2,0,1,0,0,1,4,4,2,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"propagate1/3[int,int,int]",false,130,1,4,2,2,2,2,7,0,0,3,2,2,2,0,1,0,0,0,2,2,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"maxFunction/2[java.lang.Long,java.lang.Long]",false,26,0,3,3,0,5,1,6,4,0,2,1,0,0,0,4,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,70,2,4,2,2,2,2,10,1,1,4,2,2,1,0,1,0,1,0,10,3,11,1,0,0,0,32,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,printDebugInfo/0,false,165,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"sumFunction/2[java.lang.Long,java.lang.Long]",false,33,0,1,1,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"rangeQuery1/5[int,int,int,int,int]",false,101,1,5,2,3,4,5,11,3,1,5,5,3,3,0,2,0,1,0,7,1,8,1,0,0,0,28,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"rangeUpdate1/3[int,int,long]",false,118,1,3,2,1,1,1,3,0,0,3,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"minSegmentUpdateFn/4[long,int,int,long]",false,39,0,2,2,0,1,0,3,1,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,main/1[java.lang.String[]],false,184,2,1,0,1,1,0,4,0,2,1,0,0,0,0,0,0,0,0,5,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"rangeQuery1/2[int,int]",false,88,1,3,2,1,1,1,3,1,0,2,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"propagateLazy/4[int,int,int,long]",false,122,1,3,2,1,2,1,5,1,0,4,1,1,1,0,1,0,0,0,8,2,8,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTree,"rangeUpdate1/6[int,int,int,int,int,long]",false,142,1,7,2,5,4,7,17,1,1,6,7,5,3,0,2,0,1,0,13,4,12,1,0,0,0,19,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SlidingWindowMaximum.java,com.williamfiset.algorithms.other.SlidingWindowMaximum,getMax/0,false,53,0,2,2,0,2,1,4,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SlidingWindowMaximum.java,com.williamfiset.algorithms.other.SlidingWindowMaximum,advance/0,false,28,0,2,2,0,3,4,5,0,0,0,4,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SlidingWindowMaximum.java,com.williamfiset.algorithms.other.SlidingWindowMaximum,SlidingWindowMaximum/1[int[]],true,21,1,2,2,0,2,0,5,0,0,1,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SlidingWindowMaximum.java,com.williamfiset.algorithms.other.SlidingWindowMaximum,shrink/0,false,42,0,2,2,0,3,3,4,0,0,0,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\search\InterpolationSearchTest.java,com.williamfiset.algorithms.search.InterpolationSearchTest,testCoverage2/0,false,17,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,8,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\search\InterpolationSearchTest.java,com.williamfiset.algorithms.search.InterpolationSearchTest,testCoverage1/0,false,10,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,8,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\search\InterpolationSearchTest.java,com.williamfiset.algorithms.search.InterpolationSearchTest,testCoverage3/0,false,24,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,8,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\search\InterpolationSearchTest.java,com.williamfiset.algorithms.search.InterpolationSearchTest,testCoverage4/0,false,31,3,1,0,1,1,3,5,0,2,0,3,0,0,0,0,0,0,0,8,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\QuickSelectTest.java,com.williamfiset.algorithms.sorting.QuickSelectTest,testQuickSelect/0,false,12,4,3,0,3,3,6,12,0,6,0,6,0,0,2,0,0,0,0,6,6,1,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFind.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFind,"unify/2[int,int]",false,84,1,6,4,2,3,2,16,1,2,2,2,2,2,0,0,0,0,0,2,8,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFind.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFind,find/1[int],false,38,0,4,4,0,3,0,10,1,2,1,0,0,0,2,2,0,0,0,0,5,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFind.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFind,size/0,false,74,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFind.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFind,UnionFind/1[int],true,23,1,7,7,0,3,0,10,0,1,1,0,0,0,1,0,0,0,1,3,7,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFind.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFind,componentSize/1[int],false,69,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFind.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFind,components/0,false,79,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFind.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFind,"connected/2[int,int]",false,64,1,3,2,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CollinearPoints.java,com.williamfiset.algorithms.geometry.CollinearPoints,main/1[java.lang.String[]],false,66,1,2,0,2,1,3,11,0,3,1,3,2,1,0,0,0,0,0,10,5,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CollinearPoints.java,com.williamfiset.algorithms.geometry.CollinearPoints,"collinear2/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,57,0,1,1,0,2,4,5,2,1,3,4,0,0,0,0,0,4,0,1,1,7,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CollinearPoints.java,com.williamfiset.algorithms.geometry.CollinearPoints,"collinear/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,25,0,1,1,0,4,4,10,2,5,3,4,0,0,0,0,0,3,1,4,5,7,1,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestPalindromeSubsequence.java,com.williamfiset.algorithms.dp.LongestPalindromeSubsequence,lps/1[java.lang.String],false,16,1,2,1,1,3,2,5,2,1,1,2,1,1,0,2,0,0,0,4,1,1,1,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestPalindromeSubsequence.java,com.williamfiset.algorithms.dp.LongestPalindromeSubsequence,main/1[java.lang.String[]],false,10,1,1,0,1,1,2,4,0,0,1,2,1,2,0,0,0,0,2,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestPalindromeSubsequence.java,com.williamfiset.algorithms.dp.LongestPalindromeSubsequence,"lps/4[java.lang.String,java.lang.Integer[][],int,int]",false,24,1,3,2,1,5,3,8,5,2,4,3,1,0,0,3,0,0,0,7,4,5,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,createEmptyGraph/1[int],false,155,0,10,10,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,simpleIsomorphismTest/0,false,175,1,4,1,3,2,4,15,0,2,0,4,3,3,0,0,0,0,1,18,2,0,1,0,0,0,19,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,"treesAreIsomorphic/2[java.util.List<java.util.List<java.lang.Integer>>,java.util.List<java.util.List<java.lang.Integer>>]",false,56,2,12,9,3,5,6,17,2,6,2,6,3,2,1,0,0,0,1,1,6,0,2,0,0,0,24,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,"rootTree/2[java.util.List<java.util.List<java.lang.Integer>>,int]",false,114,2,4,2,2,1,1,4,1,1,2,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,testEncodingTreeFromSlides/0,false,193,2,5,1,4,2,6,16,0,2,0,6,4,2,0,0,0,0,2,20,2,1,1,0,0,0,18,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,"buildTree/2[java.util.List<java.util.List<java.lang.Integer>>,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism.TreeNode]",false,120,2,7,2,5,4,5,11,1,1,2,5,1,0,1,2,0,0,0,0,1,0,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,findTreeCenters/1[java.util.List<java.util.List<java.lang.Integer>>],false,78,1,1,1,0,7,4,28,1,7,1,4,0,0,4,1,0,0,0,5,12,0,4,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,main/1[java.lang.String[]],false,168,1,2,0,2,1,2,4,0,0,1,2,2,5,0,0,0,0,0,0,0,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,encode/1[com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism.TreeNode],false,136,2,5,3,2,4,6,15,2,2,1,6,1,0,2,1,0,0,3,0,2,1,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,161,0,8,8,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring,"addSentinels/2[java.lang.String[],java.util.List<java.lang.Integer>]",false,37,0,1,1,0,3,2,11,1,2,2,2,0,0,1,1,0,0,1,1,4,0,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring,main/1[java.lang.String[]],false,21,4,5,0,5,1,4,10,0,6,1,4,1,1,0,0,0,0,4,1,6,1,0,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight,treeHeight2/1[com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight.TreeNode],false,40,2,4,2,2,3,3,5,3,0,1,3,2,1,0,1,0,0,0,3,0,1,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight,treeHeight1/1[com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight.TreeNode],false,33,2,3,2,1,2,2,4,2,0,1,2,1,0,0,1,0,0,0,2,0,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight,isLeafNode/1[com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight.TreeNode],false,47,1,1,1,0,3,0,3,1,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight,testTreeHeight2/0,false,70,2,4,1,3,1,3,6,0,1,0,3,2,2,0,0,0,0,3,1,1,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight,main/1[java.lang.String[]],false,53,1,2,0,2,1,2,4,0,0,1,2,2,4,0,0,0,0,0,0,0,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight,testTreeHeight1/0,false,58,2,4,1,3,1,3,6,0,1,0,3,2,1,0,0,0,0,3,1,1,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight,makeTree/0,false,89,1,3,2,1,1,0,20,1,9,0,0,0,0,0,0,0,0,0,9,17,0,0,0,0,0,12,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas,check/0,false,129,1,3,0,3,12,3,36,5,9,0,3,0,0,5,1,0,0,4,0,10,1,4,0,0,0,22,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas,main/1[java.lang.String[]],false,177,2,4,0,4,3,4,33,0,6,1,4,2,3,1,1,0,0,2,57,24,1,2,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas,"Boruvkas/3[int,int,com.williamfiset.algorithms.graphtheory.Boruvkas.Edge[]]",true,45,1,1,1,0,2,0,6,0,0,3,0,0,0,0,1,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas,getMstCost/0,false,59,1,2,1,1,2,1,4,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas,solve/0,false,67,3,5,2,3,15,5,36,1,9,0,5,0,0,3,7,0,1,0,9,17,2,3,0,0,0,20,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas,getMst/0,false,54,2,2,1,1,2,1,4,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,getComponents/0,false,29,2,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,dfs/1[int],false,54,1,3,2,1,3,2,5,0,0,1,2,1,0,1,0,0,0,0,0,2,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,68,0,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,ConnectedComponentsDfsSolverAdjacencyList/1[java.util.List<java.util.List<java.lang.Integer>>],true,23,0,1,1,0,2,1,5,0,0,1,1,0,0,0,1,0,0,0,0,2,0,1,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,countComponents/0,false,34,1,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,solve/0,false,39,3,3,2,1,4,1,12,1,1,0,1,1,1,1,0,0,0,0,1,4,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,createGraph/1[int],false,62,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsDfsSolverAdjacencyList,main/1[java.lang.String[]],false,73,2,5,0,5,2,5,17,0,6,1,5,4,3,1,0,0,0,2,16,6,0,1,0,0,0,23,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList$UnionFind,UnionFind/1[int],true,15,1,1,1,0,2,0,8,0,1,1,0,0,0,1,0,0,0,0,2,5,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList$UnionFind,"connected/2[int,int]",false,35,1,2,1,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList$UnionFind,size/1[int],false,39,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList$UnionFind,find/1[int],false,24,0,3,3,0,3,0,10,1,2,1,0,0,0,2,2,0,0,0,0,5,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList$UnionFind,"union/2[int,int]",false,43,1,2,1,1,3,1,13,1,2,2,1,1,1,0,1,0,0,0,0,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KahnsTest.java,com.williamfiset.algorithms.graphtheory.KahnsTest,cycleInGraph/0,false,44,3,4,0,4,1,3,9,0,2,0,3,0,0,0,0,0,0,0,9,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KahnsTest.java,com.williamfiset.algorithms.graphtheory.KahnsTest,randomTest/0,false,64,5,5,0,5,1,5,7,0,4,0,5,1,2,0,0,0,0,0,5,4,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KahnsTest.java,com.williamfiset.algorithms.graphtheory.KahnsTest,"isTopsortOrdering/2[java.util.List<java.util.List<java.lang.Integer>>,int[]]",false,30,3,4,3,1,4,2,11,2,3,2,2,1,1,2,0,0,0,0,2,3,1,3,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KahnsTest.java,com.williamfiset.algorithms.graphtheory.KahnsTest,randomTests/0,false,73,5,5,0,5,2,5,9,0,5,0,5,1,2,1,0,0,0,0,7,6,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KahnsTest.java,com.williamfiset.algorithms.graphtheory.KahnsTest,"find/4[java.util.List<java.util.List<java.lang.Integer>>,boolean[],int,int]",false,12,2,3,2,1,6,3,16,4,1,4,3,1,0,1,2,0,0,0,1,2,0,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KahnsTest.java,com.williamfiset.algorithms.graphtheory.KahnsTest,verifyIsTopsortOrdering/0,false,55,4,3,0,3,1,5,7,0,2,0,5,1,2,0,0,0,0,0,8,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue,"addDirectedEdge/4[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue.Edge>>,int,int,int]",false,157,1,2,1,1,2,3,8,0,1,4,3,0,0,0,1,0,0,0,0,2,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue,"bfs/3[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue.Edge>>,int,int]",false,66,3,5,1,4,7,4,29,1,6,3,4,0,0,2,2,0,0,0,3,8,1,5,0,0,0,24,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue,main/1[java.lang.String[]],false,122,2,2,0,2,4,4,25,0,5,1,4,2,1,2,1,0,0,4,42,8,3,2,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowWithBellmanFord.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord,testSmallNetwork/0,false,88,2,5,1,4,1,4,13,0,4,0,4,0,0,0,0,0,0,1,19,4,2,0,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowWithBellmanFord.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord,solve/0,false,32,2,3,0,3,4,5,12,0,2,0,5,1,1,3,1,0,1,0,1,5,1,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowWithBellmanFord.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord,"MinCostMaxFlowWithBellmanFord/3[int,int,int]",true,27,0,2,2,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowWithBellmanFord.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord,main/1[java.lang.String[]],false,84,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowWithBellmanFord.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowWithBellmanFord,getAugmentingPath/0,false,57,2,2,1,1,7,3,19,1,6,0,3,0,0,4,1,0,0,0,5,10,3,4,0,0,0,28,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingRecursive.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive,TspDynamicProgrammingRecursive/1[double[][]],true,30,1,7,7,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingRecursive.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive,getTour/0,false,57,1,4,3,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingRecursive.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive,getTourCost/0,false,63,1,6,5,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingRecursive.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive,"tsp/4[int,int,java.lang.Double[][],java.lang.Integer[][]]",false,90,1,3,2,1,7,1,17,3,5,4,1,1,0,1,3,0,3,0,5,9,3,2,0,0,0,20,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingRecursive.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive,solve/0,false,68,1,4,3,1,3,2,17,0,6,0,2,1,1,1,1,0,1,0,4,10,4,2,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingRecursive.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive,main/1[java.lang.String[]],false,118,2,3,0,3,2,4,14,0,3,1,4,2,3,1,0,0,0,2,32,15,2,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingRecursive.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingRecursive,"TspDynamicProgrammingRecursive/2[int,double[][]]",true,34,1,2,2,0,6,0,10,0,0,2,0,0,0,0,1,0,1,5,6,4,3,1,0,0,0,53,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,minQueryAssignUpdateExample/0,false,472,2,4,1,3,3,4,15,0,5,0,4,2,6,0,2,0,0,4,14,8,0,1,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"safeMax/2[java.lang.Long,java.lang.Long]",false,126,0,0,0,0,3,1,5,3,0,2,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,main/1[java.lang.String[]],false,434,1,3,0,3,1,3,5,0,0,1,3,3,9,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"rangeQuery1/5[int,int,int,int,int]",false,308,1,4,2,2,4,5,11,3,1,5,5,2,2,0,2,0,1,0,7,1,8,1,0,0,0,26,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,printDebugInfo/0,false,416,1,2,1,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"rangeUpdate1/3[int,int,long]",false,348,1,12,11,1,1,1,3,0,0,3,1,1,3,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"rangeQuery1/2[int,int]",false,295,1,14,13,1,1,1,3,1,0,2,1,1,3,0,0,0,0,0,3,0,1,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,printDebugInfo/1[int],false,421,1,3,2,1,2,2,8,1,0,1,2,1,0,0,1,0,0,0,4,0,4,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"rangeUpdate1/6[int,int,int,int,int,long]",false,352,2,6,2,4,4,9,20,1,1,6,9,3,2,0,2,0,1,0,19,7,22,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,sumQuerySumUpdateExample/0,false,455,2,4,1,3,3,4,13,0,5,0,4,2,6,0,2,0,0,4,12,6,0,1,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"safeMul/2[java.lang.Long,java.lang.Long]",false,114,0,0,0,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"propagate1/3[int,int,int]",false,327,2,4,2,2,2,2,9,0,0,3,2,1,1,0,1,0,0,0,0,4,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"GenericSegmentTree2/3[long[],com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2.SegmentCombinationFn,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2.RangeUpdateFn]",true,198,5,14,13,1,16,1,63,0,1,3,1,1,1,0,15,0,0,4,4,24,3,2,0,0,0,43,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,minQuerySumUpdate/0,false,440,2,4,1,3,2,4,10,0,5,0,4,2,5,0,1,0,0,2,8,5,0,1,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"safeSum/2[java.lang.Long,java.lang.Long]",false,108,0,0,0,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"buildSegmentTree/4[int,int,int,long[]]",false,272,3,4,2,2,2,4,14,1,5,4,4,1,0,0,1,0,1,0,18,7,19,1,0,0,0,34,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"safeMin/2[java.lang.Long,java.lang.Long]",false,120,0,0,0,0,3,1,5,3,0,2,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2,"propagateLazy1/4[int,int,int,long]",false,341,1,3,2,1,2,1,5,1,0,4,1,0,0,0,1,0,0,0,8,2,8,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$Edge,"Edge/3[int,int,int]",true,20,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList.Edge],false,27,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,"TspDynamicProgrammingIterative/2[int,double[][]]",true,27,1,3,3,0,6,0,9,0,0,2,0,0,0,0,1,0,0,5,4,3,1,1,0,0,0,43,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,getTour/0,false,43,1,4,3,1,2,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,TspDynamicProgrammingIterative/1[double[][]],true,23,1,6,6,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,main/1[java.lang.String[]],false,162,2,3,0,3,2,4,15,0,4,1,4,2,4,1,0,0,0,2,21,10,2,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,getTourCost/0,false,49,1,6,5,1,2,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,"combinations/5[int,int,int,int,java.util.List<java.lang.Integer>]",false,140,1,3,2,1,4,2,14,1,2,5,2,1,0,1,1,0,2,0,5,4,5,2,0,0,0,11,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,solve/0,false,55,1,5,3,2,23,4,55,1,18,0,4,2,2,8,6,0,5,0,15,27,10,5,0,0,0,35,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,"combinations/2[int,int]",false,131,1,2,1,1,1,1,5,1,1,2,1,1,1,0,0,0,0,0,2,1,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspDynamicProgrammingIterative.java,com.williamfiset.algorithms.graphtheory.TspDynamicProgrammingIterative,"notIn/2[int,int]",false,125,0,1,1,0,2,0,3,1,0,2,0,0,0,0,1,0,2,0,2,0,1,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeap,MinIndexedBinaryHeap/1[int],true,16,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,Node/1[int[]],true,21,2,5,3,2,3,2,7,0,1,1,2,2,2,1,1,0,0,1,3,1,1,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,"min/2[int,int]",false,106,1,3,1,2,7,3,6,3,0,2,3,2,1,0,2,0,2,0,0,0,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,"sum/2[int,int]",false,90,1,5,3,2,7,2,6,3,0,2,2,2,1,0,2,0,2,0,3,0,1,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,"Node/2[int,int]",true,33,1,2,1,1,1,1,3,0,0,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,propagate/0,false,125,0,3,3,0,4,0,9,0,0,0,0,0,0,0,3,0,1,0,2,5,2,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,"buildTree/2[int,int]",false,38,1,4,3,1,5,0,13,0,1,2,0,0,0,0,1,0,1,3,4,7,4,1,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,"update/3[int,int,int]",false,59,1,4,2,2,13,3,17,0,0,3,3,2,1,0,8,0,5,0,2,6,3,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\Node.java,com.williamfiset.algorithms.datastructures.segmenttree.Node,Node/1[int],true,29,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\RadixSort.java,com.williamfiset.algorithms.sorting.RadixSort,main/1[java.lang.String[]],false,78,3,2,0,2,1,3,6,0,2,1,3,0,0,0,0,0,0,0,12,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\RadixSort.java,com.williamfiset.algorithms.sorting.RadixSort,radixSort/1[int[]],false,41,2,6,3,3,4,3,12,1,3,1,3,3,1,1,1,0,0,0,4,4,0,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\RadixSort.java,com.williamfiset.algorithms.sorting.RadixSort,"countSort/2[int[],int]",false,54,1,1,1,0,4,1,18,0,8,2,1,0,0,3,0,0,2,0,9,10,7,1,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\RadixSort.java,com.williamfiset.algorithms.sorting.RadixSort,getMax/1[int[]],false,26,1,2,2,0,3,0,9,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\RadixSort.java,com.williamfiset.algorithms.sorting.RadixSort,calculateNumberOfDigits/1[int],false,36,0,2,2,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\RadixSort.java,com.williamfiset.algorithms.sorting.RadixSort,sort/1[int[]],false,22,2,1,0,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullGrahamScan.java,com.williamfiset.algorithms.geometry.ConvexHullGrahamScan,createConvexHull/1[java.awt.geom.Point2D[]],false,16,3,4,1,3,8,7,28,2,6,1,7,1,1,4,2,0,0,0,10,7,2,2,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullGrahamScan.java,com.williamfiset.algorithms.geometry.ConvexHullGrahamScan,"collinear/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,83,0,2,2,0,1,3,4,1,1,3,3,0,0,0,0,0,4,0,0,1,7,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullGrahamScan.java,com.williamfiset.algorithms.geometry.ConvexHullGrahamScan,main/1[java.lang.String[]],false,90,1,1,0,1,2,4,18,0,2,1,4,1,2,1,0,0,0,0,40,15,0,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests,setUp/0,false,13,2,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests,"createAllSolvers/3[int,int,int]",false,17,1,2,1,1,1,1,3,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests,"addEdge/4[int,int,int,int]",false,23,1,2,1,1,2,1,5,0,0,4,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests,"assertFlowAndCost/2[long,long]",false,29,1,3,1,2,2,4,6,0,0,2,4,0,0,1,0,0,0,0,0,0,0,1,0,0,0,12,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowTests,testNegativeCycle1/0,false,37,2,3,0,3,1,3,10,0,3,0,3,3,1,0,0,0,0,0,23,3,2,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\MergeSort.java,com.williamfiset.algorithms.sorting.MergeSort,main/1[java.lang.String[]],false,61,2,1,0,1,1,3,5,0,1,1,3,1,2,0,0,0,0,0,8,2,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\MergeSort.java,com.williamfiset.algorithms.sorting.MergeSort,mergesort/1[int[]],false,26,2,5,3,2,2,3,7,2,3,1,3,2,1,0,0,0,0,0,4,3,2,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\MergeSort.java,com.williamfiset.algorithms.sorting.MergeSort,sort/1[int[]],false,19,2,1,0,1,2,1,6,0,2,1,1,1,2,1,0,0,0,0,1,3,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\MergeSort.java,com.williamfiset.algorithms.sorting.MergeSort,"merge/2[int[],int[]]",false,40,1,1,1,0,5,0,22,1,7,2,0,0,0,1,2,0,0,0,3,11,1,3,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,testDisjointTreeFromHackerrank/0,false,116,3,6,0,6,1,10,23,0,4,0,10,3,1,0,0,0,0,0,47,4,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,nullGraphConstructor/0,false,29,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,singletonCase/0,false,34,4,4,0,4,1,5,9,0,5,0,5,1,1,0,0,0,0,0,2,5,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,testDisjointTree/0,false,88,3,6,0,6,1,10,13,0,4,0,10,3,1,0,0,0,0,0,18,4,0,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,testLastGraphInSlides/0,false,196,3,6,0,6,1,10,21,0,4,0,10,3,1,0,0,0,0,0,35,4,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,testTwoDisjointComponents/0,false,47,3,6,0,6,1,10,13,0,4,0,10,3,1,0,0,0,0,0,16,4,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,testFirstGraphInSlides/0,false,161,3,6,0,6,1,10,24,0,4,0,10,3,1,0,0,0,0,0,42,4,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,24,0,6,6,0,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,createGraph/1[int],false,17,0,7,7,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,testButterflyCase/0,false,68,3,6,0,6,1,10,14,0,4,0,10,3,1,0,0,0,0,0,18,4,0,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\KosarajuTest.java,com.williamfiset.algorithms.graphtheory.KosarajuTest,"isScc/2[int[],java.util.List<java.util.List<java.lang.Integer>>]",false,223,1,6,6,0,5,4,16,3,3,2,4,0,0,2,1,0,0,0,2,4,0,2,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixMultiplication.java,com.williamfiset.algorithms.linearalgebra.MatrixMultiplication,"multiply/2[double[][],double[][]]",false,14,1,1,1,0,5,0,8,2,8,2,0,0,0,3,1,0,0,0,5,9,1,3,0,0,0,10,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixMultiplication.java,com.williamfiset.algorithms.linearalgebra.MatrixMultiplication,main/1[java.lang.String[]],false,24,2,1,0,1,2,3,6,0,3,1,3,1,1,1,0,0,0,0,20,3,0,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\LazyRangeAdderTest.java,com.williamfiset.algorithms.other.LazyRangeAdderTest,randomRangeAdditionTests/0,false,34,4,6,0,6,3,10,19,0,8,0,10,3,2,2,0,0,0,0,8,10,0,2,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\LazyRangeAdderTest.java,com.williamfiset.algorithms.other.LazyRangeAdderTest,rangeUpdateTest2/0,false,22,3,3,0,3,1,4,10,0,3,0,4,0,0,0,0,0,0,0,23,3,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\LazyRangeAdderTest.java,com.williamfiset.algorithms.other.LazyRangeAdderTest,"randValue/2[int,int]",false,77,0,2,2,0,1,1,3,1,0,2,1,0,0,0,0,0,3,0,0,0,3,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\LazyRangeAdderTest.java,com.williamfiset.algorithms.other.LazyRangeAdderTest,"slowRangeAdd/4[int[],int,int,int]",false,64,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\LazyRangeAdderTest.java,com.williamfiset.algorithms.other.LazyRangeAdderTest,randomFill/1[int[]],false,70,2,2,1,1,2,1,5,0,1,1,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\LazyRangeAdderTest.java,com.williamfiset.algorithms.other.LazyRangeAdderTest,rangeUpdateTest1/0,false,10,3,3,0,3,1,4,10,0,3,0,4,0,0,0,0,0,0,0,17,3,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers,"pad/2[com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex[],int]",false,38,1,2,1,1,3,0,5,1,2,2,0,0,0,1,0,0,1,0,3,3,0,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers,ifft/1[com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex[]],false,44,2,4,1,3,4,3,9,1,5,1,3,1,1,3,0,0,0,0,4,9,1,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers,"polyMult/2[com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex[],com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex[]]",false,28,2,4,0,4,2,6,9,1,6,2,6,3,2,1,0,0,0,0,4,9,3,1,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers,fft/1[com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex[]],false,10,2,8,3,5,5,6,17,2,10,1,6,1,0,3,1,0,0,0,14,14,11,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\Stack.java,com.williamfiset.algorithms.datastructures.stack.Stack,pop/0,false,15,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\Stack.java,com.williamfiset.algorithms.datastructures.stack.Stack,peek/0,false,17,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\Stack.java,com.williamfiset.algorithms.datastructures.stack.Stack,isEmpty/0,false,9,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\Stack.java,com.williamfiset.algorithms.datastructures.stack.Stack,size/0,false,6,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\Stack.java,com.williamfiset.algorithms.datastructures.stack.Stack,push/1[T],false,12,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordEdgeList.java,com.williamfiset.algorithms.graphtheory.BellmanFordEdgeList,"bellmanFord/3[com.williamfiset.algorithms.graphtheory.BellmanFordEdgeList.Edge[],int,int]",false,33,2,1,1,0,9,1,26,1,4,3,1,0,0,4,0,0,0,0,5,12,5,3,0,0,0,52,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordEdgeList.java,com.williamfiset.algorithms.graphtheory.BellmanFordEdgeList,main/1[java.lang.String[]],false,73,3,2,0,2,2,2,16,0,6,1,2,1,1,1,0,0,0,1,44,16,0,1,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,testPopOnEmpty/0,false,30,2,1,0,1,2,1,5,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,setup/0,false,15,4,3,0,3,1,1,5,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,testPeekOnEmpty/0,false,37,2,1,0,1,2,1,5,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,testExhaustively/0,false,70,2,5,0,5,2,9,18,0,0,0,9,0,0,1,0,0,0,0,11,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,testPeek/0,false,52,2,3,0,3,2,5,7,0,0,0,5,0,0,1,0,0,0,0,3,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,testPop/0,false,61,2,3,0,3,2,5,7,0,0,0,5,0,0,1,0,0,0,0,3,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,testPush/0,false,44,2,2,0,2,2,4,6,0,0,0,4,0,0,1,0,0,0,0,2,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\stack\StackTest.java,com.williamfiset.algorithms.datastructures.stack.StackTest,testEmptyStack/0,false,22,2,2,0,2,2,5,6,0,0,0,5,0,0,1,0,0,0,0,1,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort3.java,com.williamfiset.algorithms.sorting.QuickSort3,sort/1[int[]],false,20,2,1,0,1,1,1,3,0,0,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort3.java,com.williamfiset.algorithms.sorting.QuickSort3,"partition3/3[int[],int,int]",false,31,2,2,1,1,6,1,32,2,6,3,1,1,1,1,1,0,0,0,2,8,2,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort3.java,com.williamfiset.algorithms.sorting.QuickSort3,"swap/3[int[],int,int]",false,79,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort3.java,com.williamfiset.algorithms.sorting.QuickSort3,main/1[java.lang.String[]],false,85,3,2,0,2,1,3,6,0,2,1,3,0,0,0,0,0,0,0,8,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort3.java,com.williamfiset.algorithms.sorting.QuickSort3,"randomizedQuickSort/3[int[],int,int]",false,64,2,4,2,2,2,3,12,1,3,3,3,2,2,0,0,0,0,0,3,5,3,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort3.java,com.williamfiset.algorithms.sorting.QuickSort3,quickSort3/1[int[]],false,24,2,2,1,1,2,1,4,1,0,1,1,1,3,0,1,0,0,0,2,0,1,1,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,findMax/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,305,2,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,height/0,false,45,0,0,0,0,2,0,4,2,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,update/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,122,1,0,0,0,3,1,6,0,2,1,1,0,0,0,2,0,2,0,3,4,2,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,leftLeftCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,166,1,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,"insert/2[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node,T]",false,91,2,4,0,4,6,4,17,5,3,2,4,0,0,0,3,0,0,0,2,5,0,2,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,"remove/2[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node,T]",false,220,2,5,0,5,11,6,40,8,7,2,6,0,0,0,7,0,0,0,2,13,0,4,0,0,0,22,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,leftRotation/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,184,1,1,0,1,1,1,8,1,1,1,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,insert/1[T],false,77,2,1,0,1,4,1,10,2,2,1,1,0,0,0,2,0,1,0,0,3,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,leftRightCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,170,1,2,0,2,1,2,4,1,0,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,size/0,false,51,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,rightLeftCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,179,1,2,0,2,1,2,4,1,0,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,iterator/0,false,311,3,1,0,1,1,1,29,1,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,validateBSTInvarient/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,356,2,1,0,1,4,2,8,2,2,1,2,0,0,0,3,0,0,0,2,4,0,1,0,0,0,12,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,contains/1[T],false,61,2,0,0,0,4,1,10,2,2,1,1,0,0,1,1,0,0,0,2,4,0,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,remove/1[T],false,203,2,1,0,1,4,1,10,2,2,1,1,0,0,0,2,0,2,0,0,3,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,findMin/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,299,2,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,rightRightCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,175,1,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,rightRotation/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,193,1,1,0,1,1,1,8,1,1,1,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,isEmpty/0,false,56,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized,balance/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized<T>.Node],false,135,1,4,0,4,5,4,19,5,0,1,4,0,0,0,2,0,0,0,4,0,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase$Anonymous1,hasNext/0,false,373,0,0,0,0,3,0,4,1,0,0,0,0,0,0,2,0,0,0,1,0,0,1,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase$Anonymous1,next/0,false,381,1,0,0,0,3,0,5,1,0,0,0,0,0,1,2,0,0,0,0,0,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase$Anonymous1,remove/0,false,388,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArrayImpl$SuffixRankTuple,compareTo/1[com.williamfiset.algorithms.strings.LongestCommonSubstring.SuffixArrayImpl.SuffixRankTuple],false,222,1,0,0,0,2,1,5,2,1,1,1,0,0,0,1,0,0,0,1,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CoplanarPoints.java,com.williamfiset.algorithms.geometry.CoplanarPoints$Vector,"Vector/3[double,double,double]",true,20,0,2,2,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinimumSpanningTreeSolver,relaxEdgesAtNode/1[int],false,173,2,4,1,3,4,4,14,0,2,1,4,0,0,1,0,0,0,0,0,3,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinimumSpanningTreeSolver,getMst/0,false,126,2,2,1,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinimumSpanningTreeSolver,mstExists/0,false,136,1,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinimumSpanningTreeSolver,MinimumSpanningTreeSolver/1[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.Edge>>],true,118,1,1,1,0,3,2,5,0,0,1,2,0,0,0,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinimumSpanningTreeSolver,solve/0,false,142,4,8,3,5,5,7,18,1,5,0,7,1,1,1,2,0,1,0,5,12,2,1,0,0,0,23,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinimumSpanningTreeSolver,getMstCost/0,false,131,1,2,1,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,TreapTree/0,true,66,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,"insert/2[T,int]",false,93,2,2,0,2,3,2,11,2,0,2,2,0,0,0,1,0,0,1,0,1,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,"remove/2[com.williamfiset.algorithms.datastructures.balancedtree.TreapTree<T>.Node,T]",false,154,2,3,0,3,7,4,21,4,1,2,4,0,0,0,3,0,0,0,2,7,0,4,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,leftRotation/1[com.williamfiset.algorithms.datastructures.balancedtree.TreapTree<T>.Node],false,130,1,0,0,0,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,contains/1[T],false,75,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,isEmpty/0,false,89,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,insert/1[T],false,105,2,1,0,1,1,2,3,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,size/0,false,71,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,"contains/2[com.williamfiset.algorithms.datastructures.balancedtree.TreapTree<T>.Node,T]",false,79,2,2,0,2,4,3,7,4,1,2,3,0,0,0,1,0,0,0,2,1,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,"insert/3[com.williamfiset.algorithms.datastructures.balancedtree.TreapTree<T>.Node,T,int]",false,109,2,4,0,4,6,4,19,2,1,3,4,0,0,0,1,0,0,0,2,5,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,rightRotation/1[com.williamfiset.algorithms.datastructures.balancedtree.TreapTree<T>.Node],false,137,1,0,0,0,1,0,6,1,1,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree,remove/1[T],false,144,2,2,0,2,3,2,9,3,0,1,2,0,0,0,1,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullGrahamScan.java,com.williamfiset.algorithms.geometry.ConvexHullGrahamScan$PolarOrder,"compare/2[java.awt.geom.Point2D,java.awt.geom.Point2D]",false,54,1,1,0,1,11,3,12,6,4,2,3,0,0,0,2,0,0,0,15,4,4,5,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullGrahamScan.java,com.williamfiset.algorithms.geometry.ConvexHullGrahamScan$PolarOrder,PolarOrder/1[java.awt.geom.Point2D],true,49,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayFast.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayFast,SuffixArrayFast/1[int[]],true,21,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayFast.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayFast,main/1[java.lang.String[]],false,64,1,1,0,1,1,1,4,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayFast.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayFast,SuffixArrayFast/1[java.lang.String],true,17,1,8,7,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayFast.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayFast,"SuffixArrayFast/2[int[],int]",true,26,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayFast.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayFast,construct/0,false,32,1,0,0,0,17,2,27,0,3,0,2,0,0,10,3,0,1,0,24,30,15,3,0,0,0,12,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,testRemovingDuplicates/0,false,181,2,4,0,4,2,5,15,0,2,0,5,0,0,1,0,0,0,0,19,2,1,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,testEmpty/0,false,21,2,5,0,5,1,8,7,0,1,0,8,0,0,0,0,0,0,0,3,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,testPriorityRandomOperations/0,false,58,3,6,0,6,9,13,31,0,11,0,13,1,1,2,0,0,1,0,5,13,2,4,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,genUniqueRandList/1[int],false,338,0,0,0,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,setup/0,false,18,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,testPriorityQueueSizeParam/0,false,41,3,4,0,4,4,8,12,0,4,0,8,1,1,3,0,0,0,0,1,4,0,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,testHeapProperty/0,false,30,2,3,0,3,3,4,6,0,3,0,4,0,0,2,0,0,0,0,13,3,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,testClear/0,false,93,2,5,0,5,2,7,8,0,2,0,7,0,0,1,0,0,0,5,2,2,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,genRandArray/1[int],false,324,0,2,2,0,2,1,5,1,2,1,1,0,0,1,0,0,1,0,1,3,1,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeapTest,genRandList/1[int],false,331,0,0,0,0,2,2,5,1,2,1,2,0,0,1,0,0,1,0,1,2,1,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample,main/1[java.lang.String[]],false,29,3,6,0,6,3,7,27,0,3,1,7,2,2,1,0,0,0,4,37,3,1,2,0,0,0,21,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample,"addDirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.Edge>>,int,int,int]",false,76,1,2,1,1,1,2,3,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample,"addUndirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.Edge>>,int,int,int]",false,80,2,2,1,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample,createEmptyGraph/1[int],false,70,1,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,example4/0,false,186,2,2,1,1,1,2,5,0,2,0,2,1,1,0,0,0,0,0,4,2,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,example2/0,false,203,2,3,0,3,1,5,7,0,1,0,5,3,2,0,0,0,0,0,7,1,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,p/1[int[]],false,172,1,0,0,0,3,2,6,0,0,1,2,0,0,1,1,0,0,1,1,0,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,main/1[java.lang.String[]],false,179,1,1,0,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,"coinChangeSpaceEfficient/2[int[],int]",false,88,2,7,6,1,11,3,39,2,6,2,3,0,0,4,2,0,0,1,9,12,9,3,0,0,0,26,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,p/1[int[][]],false,163,1,0,0,0,4,2,8,0,0,1,2,0,0,2,1,0,0,1,1,0,0,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,example3/0,false,211,2,3,0,3,1,5,7,0,1,0,5,3,2,0,0,0,0,0,7,1,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,"coinChange/2[int[],int]",false,34,2,6,5,1,13,3,41,2,10,2,3,0,0,4,3,0,0,4,18,15,13,3,0,0,0,29,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,"coinChangeRecursive/3[int,int[],int[]]",false,146,2,3,2,1,8,1,11,4,2,3,1,1,0,1,4,0,1,0,8,4,2,2,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,example1/0,false,195,2,3,0,3,1,5,7,0,1,0,5,3,2,0,0,0,0,0,7,1,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\CoinChange.java,com.williamfiset.algorithms.dp.CoinChange,"coinChangeRecursive/2[int[],int]",false,137,2,5,4,1,3,1,6,2,1,2,1,1,1,0,1,0,0,1,3,1,1,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testRandomInsertionsAndPolls/0,false,202,5,7,0,7,6,14,21,0,7,0,14,1,1,2,0,0,0,0,4,7,0,4,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testRandomInsertionsAndRemovals/0,false,229,4,9,0,9,10,22,40,0,13,0,22,1,1,4,0,0,2,0,6,13,2,5,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testInsertionAndValueOf/0,false,159,3,3,0,3,3,4,6,0,4,0,4,0,0,2,0,0,0,6,2,4,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testLegalSize/0,false,30,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,sortPairsByValue/1[java.lang.Integer[][]],false,278,0,3,2,1,1,1,8,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,setup/0,false,17,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testPeekAndPollMinIndex/0,false,96,4,5,0,5,3,6,14,0,6,0,6,1,1,2,0,0,0,0,26,7,0,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testContainsInvalidKey/0,false,42,3,3,0,3,1,4,5,0,1,0,4,0,0,0,0,0,0,1,3,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testPeekAndPollMinValue/0,false,127,4,6,0,6,3,7,15,0,6,0,7,1,1,2,0,0,0,0,28,7,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testDuplicateKeys/0,false,49,3,2,0,2,1,1,5,0,1,0,1,0,0,0,0,0,0,2,3,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testContainsValidKey/0,false,35,3,3,0,3,1,4,5,0,1,0,4,0,0,0,0,0,0,1,3,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,"genRandArray/3[int,int,int]",false,274,1,1,1,0,1,2,3,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,genUniqueRandList/1[int],false,290,0,1,1,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testTestDecreaseKeyNoUpdate/0,false,72,3,4,0,4,1,5,6,0,1,0,5,0,0,0,0,0,0,0,7,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testOperations/0,false,167,3,11,0,11,1,14,32,0,2,0,14,0,0,0,0,0,0,0,38,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testIllegalSizeOfNegativeOne/0,false,20,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testIllegalSizeOfZero/0,false,25,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testTestDecreaseKey/0,false,64,3,4,0,4,1,5,6,0,1,0,5,0,0,0,0,0,0,0,7,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testTestIncreaseKeyNoUpdate/0,false,88,3,4,0,4,1,5,6,0,1,0,5,0,0,0,0,0,0,0,7,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testUpdateKeyValue/0,false,56,3,4,0,4,1,5,6,0,1,0,5,0,0,0,0,0,0,3,4,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest,testTestIncreaseKey/0,false,80,3,4,0,4,1,5,6,0,1,0,5,0,0,0,0,0,0,0,7,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment$Pt,"Pt/2[double,double]",true,21,0,3,3,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment$Pt,toString/0,false,27,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\NChooseRModPrime.java,com.williamfiset.algorithms.math.NChooseRModPrime,main/1[java.lang.String[]],false,52,1,2,0,2,1,5,9,0,5,1,5,2,1,0,0,0,0,0,3,5,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\NChooseRModPrime.java,com.williamfiset.algorithms.math.NChooseRModPrime,"bigIntegerNChooseRModP/3[int,int,int]",false,34,0,1,1,0,3,5,17,2,3,3,5,0,0,1,1,0,0,6,2,9,3,1,0,0,0,11,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\NChooseRModPrime.java,com.williamfiset.algorithms.math.NChooseRModPrime,"compute/3[int,int,int]",false,15,2,2,1,1,3,1,9,2,2,3,1,0,0,1,1,0,1,0,7,4,10,1,0,0,0,16,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\GaussianElimination.java,com.williamfiset.algorithms.linearalgebra.GaussianElimination,hasMultipleSolutions/1[double[][]],false,60,1,1,1,0,5,1,8,1,4,1,1,0,0,2,0,0,0,0,5,4,2,3,0,0,0,14,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\GaussianElimination.java,com.williamfiset.algorithms.linearalgebra.GaussianElimination,isInconsistent/1[double[][]],false,47,1,1,1,0,5,1,10,2,3,1,1,0,0,2,0,0,0,0,5,3,2,4,0,0,0,13,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\GaussianElimination.java,com.williamfiset.algorithms.linearalgebra.GaussianElimination,solve/1[double[][]],false,20,1,1,1,0,10,1,25,1,9,1,1,0,0,5,3,0,0,0,6,16,1,4,0,0,0,15,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\GaussianElimination.java,com.williamfiset.algorithms.linearalgebra.GaussianElimination,main/1[java.lang.String[]],false,70,2,3,0,3,3,4,10,0,4,1,4,3,1,0,0,0,0,1,18,4,0,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$UnionFind,UnionFind/1[int],true,223,1,2,2,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,2,6,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$UnionFind,find/1[int],false,233,0,3,3,0,3,0,10,1,2,1,0,0,0,2,2,0,0,0,0,5,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$UnionFind,"connected/2[int,int]",false,244,1,3,2,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$UnionFind,size/1[int],false,248,1,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$UnionFind,"union/2[int,int]",false,252,1,3,2,1,3,1,13,1,2,2,1,1,1,0,1,0,0,0,0,6,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\tilingdominoes\TilingDominoes.java,com.williamfiset.algorithms.dp.examples.tilingdominoes.TilingDominoes,solution1/1[int],false,36,1,1,1,0,2,0,17,1,2,1,0,0,0,1,0,0,0,0,39,13,13,1,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\tilingdominoes\TilingDominoes.java,com.williamfiset.algorithms.dp.examples.tilingdominoes.TilingDominoes,printMatrix/1[int[][]],false,68,1,0,0,0,3,2,8,0,2,1,2,0,0,2,0,0,0,1,4,2,1,2,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\tilingdominoes\TilingDominoes.java,com.williamfiset.algorithms.dp.examples.tilingdominoes.TilingDominoes,main/1[java.lang.String[]],false,15,1,1,0,1,3,3,7,0,1,1,3,1,1,1,1,0,0,0,1,1,0,2,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\tilingdominoes\TilingDominoes.java,com.williamfiset.algorithms.dp.examples.tilingdominoes.TilingDominoes,solution2/1[int],false,77,1,0,0,0,2,0,9,1,2,1,0,0,0,1,0,0,0,0,11,6,6,1,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterative,"dfs/3[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterative.Edge>>,int,int]",false,25,2,1,1,0,5,4,21,1,5,3,4,0,0,2,1,0,0,0,1,7,0,4,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterative,main/1[java.lang.String[]],false,54,2,2,0,2,3,3,16,0,3,1,3,2,1,0,2,0,0,4,23,4,2,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterative,"addDirectedEdge/4[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterative.Edge>>,int,int,int]",false,87,1,2,1,1,2,3,8,0,1,4,3,0,0,0,1,0,0,0,0,2,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,main/1[java.lang.String[]],false,45,1,1,0,1,1,2,14,0,2,1,2,1,3,0,0,0,0,8,0,8,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,"rabinKarp/2[java.lang.String,java.lang.String]",false,73,2,4,1,3,9,11,23,3,12,2,11,3,2,3,3,0,0,0,5,15,4,2,0,0,0,35,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,"addRight/3[long,char,int]",false,148,0,2,2,0,1,0,4,1,0,3,0,0,0,0,0,0,2,0,0,1,5,0,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,(initializer 1),false,31,0,6,0,6,3,3,8,0,4,0,3,0,0,2,0,0,0,0,3,7,0,1,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,"removeRight/3[long,char,int]",false,156,0,1,1,0,1,0,4,1,0,3,0,0,0,0,0,0,4,0,0,1,6,0,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,"removeLeft/4[long,long,char,int]",false,181,0,1,1,0,1,0,4,1,0,4,0,0,0,0,0,0,2,0,0,1,5,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,"addLeft/4[long,long,char,int]",false,169,0,1,1,0,1,0,4,1,0,4,0,0,0,0,0,0,2,0,0,1,5,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,"rabinKarpBackwards/2[java.lang.String,java.lang.String]",false,112,2,3,0,3,9,11,23,3,12,2,11,3,2,3,2,0,0,0,3,15,3,2,0,0,0,36,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\RabinKarp.java,com.williamfiset.algorithms.strings.RabinKarp,computeHash/1[java.lang.String],false,187,2,3,2,1,3,3,5,1,3,1,3,1,1,2,0,0,0,0,2,4,0,2,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsAdjacencyList$Edge,"Edge/3[int,int,int]",true,22,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\Benchmark.java,com.williamfiset.algorithms.datastructures.hashtable.Benchmark,main/1[java.lang.String[]],false,29,1,4,0,4,1,4,6,0,0,1,4,4,1,0,0,0,0,0,0,0,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\Benchmark.java,com.williamfiset.algorithms.datastructures.hashtable.Benchmark,testLinearProbing/0,false,36,2,4,1,3,3,4,11,0,5,0,4,0,0,1,1,0,1,2,2,5,3,2,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\Benchmark.java,com.williamfiset.algorithms.datastructures.hashtable.Benchmark,testHashMapSpeed/0,false,80,0,1,1,0,3,4,11,0,5,0,4,0,0,1,1,0,1,2,2,5,3,2,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\Benchmark.java,com.williamfiset.algorithms.datastructures.hashtable.Benchmark,testQuadraticProbing/0,false,50,2,4,1,3,3,4,11,0,5,0,4,0,0,1,1,0,1,2,2,5,3,2,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\Benchmark.java,com.williamfiset.algorithms.datastructures.hashtable.Benchmark,(initializer 1),false,21,1,6,0,6,2,1,7,0,1,0,1,0,0,1,0,0,0,0,1,4,2,1,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\Benchmark.java,com.williamfiset.algorithms.datastructures.hashtable.Benchmark,testDoubleHashing/0,false,64,3,4,1,3,3,4,11,0,5,0,4,0,0,1,1,0,1,2,2,5,3,2,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testIllegalCreation3/0,false,42,3,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testConcurrentModificationException/0,false,111,3,2,0,2,2,1,10,0,4,0,1,0,0,1,0,0,0,0,8,4,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,randomIteratorTests/0,false,232,5,8,0,8,5,14,36,0,11,0,14,1,1,2,1,0,0,0,5,15,1,3,0,0,0,34,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,(initializer 1),false,13,1,6,0,6,1,1,5,0,0,0,1,1,1,0,0,0,0,0,5,3,0,0,0,0,0,17,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testIllegalCreation1/0,false,32,3,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testUpdatingValue/0,false,53,3,3,0,3,1,4,11,0,3,0,4,0,0,0,0,0,0,0,9,3,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,setup/0,false,22,3,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,genRandList/1[int],false,288,2,4,2,2,2,3,10,1,4,1,3,1,1,1,0,0,0,0,1,4,0,1,0,0,0,14,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testIllegalCreation2/0,false,37,3,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testIterator/0,false,70,5,7,0,7,6,17,27,0,6,0,17,1,2,5,0,0,0,0,2,7,0,2,0,0,0,33,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testRandomMapOperations/0,false,193,5,8,0,8,5,17,25,0,9,0,17,1,2,2,0,0,0,0,2,10,0,3,0,0,0,34,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,removeTest/0,false,163,4,5,0,5,3,5,18,0,6,0,5,0,0,2,0,0,0,0,16,6,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,"randInt/2[int,int]",false,283,0,4,4,0,1,1,3,1,0,2,1,0,0,0,0,0,1,0,1,0,3,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testLegalCreation/0,false,47,3,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,genUniqueRandList/1[int],false,301,1,1,0,1,2,2,9,1,3,1,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testConcurrentModificationException2/0,false,124,3,3,0,3,2,2,9,0,3,0,2,0,0,1,0,0,0,0,6,3,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,testNullKey/0,false,27,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashingTest,randomRemove/0,false,135,5,9,0,9,4,12,18,0,7,0,12,1,1,3,0,0,0,0,3,7,0,2,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest$HashObject,hashCode/0,false,21,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest$HashObject,"HashObject/2[int,int]",true,15,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest$HashObject,equals/1[java.lang.Object],false,26,1,1,0,1,3,1,4,1,1,1,1,1,1,0,2,0,0,0,0,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointRotation.java,com.williamfiset.algorithms.geometry.PointRotation,"rotatePoint/3[java.awt.geom.Point2D,java.awt.geom.Point2D,double]",false,20,0,1,1,0,1,4,11,1,8,3,4,0,0,0,0,0,0,0,0,8,10,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointRotation.java,com.williamfiset.algorithms.geometry.PointRotation,main/1[java.lang.String[]],false,43,1,1,0,1,2,2,11,0,5,1,2,1,1,1,0,0,0,2,7,6,3,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized$Node,Node/1[T],true,25,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList$Anonymous1,hasNext/0,false,266,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList$Anonymous1,next/0,false,271,1,0,0,0,1,0,5,1,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList$Anonymous1,remove/0,false,278,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,insert/1[T],false,147,2,3,0,3,7,3,31,2,3,1,3,0,0,1,3,0,0,1,3,9,0,2,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,findMax/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,398,1,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,RedBlackTree/0,true,104,1,1,0,1,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,insertFix/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,181,1,4,0,4,7,4,43,0,1,1,4,0,0,1,6,0,0,0,0,16,0,4,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,findMin/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,392,1,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,delete/1[T],false,246,2,12,0,12,7,12,33,2,4,1,12,0,0,0,6,0,2,0,0,8,0,3,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,deleteFix/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,279,1,7,0,7,14,7,59,0,2,1,7,0,0,1,13,0,3,0,0,16,0,3,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,rightRotate/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,234,1,0,0,0,4,0,11,0,1,1,0,0,0,0,3,0,0,0,0,9,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,size/0,false,114,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,leftRotate/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,222,1,5,0,5,4,5,11,0,1,1,5,0,0,0,3,0,0,0,0,2,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,"search/2[T,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node]",false,350,2,1,0,1,4,3,6,4,0,2,3,0,0,0,1,0,0,0,1,0,0,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,successor/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,336,1,1,0,1,3,1,4,2,0,1,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,"updateParentChildLink/3[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node]",false,381,1,0,0,0,3,0,10,0,0,3,0,0,0,0,2,0,0,0,0,2,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,main/1[java.lang.String[]],false,448,2,3,0,3,2,3,9,0,2,1,3,0,0,1,0,0,0,4,16,2,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,height/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,361,1,1,0,1,4,2,9,3,0,1,2,0,0,0,3,0,0,0,3,0,1,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,contains/1[T],false,123,2,0,0,0,6,1,11,3,2,1,1,0,0,1,3,0,0,0,2,4,0,3,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,isEmpty/0,false,119,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,height/0,false,357,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,"transplant/2[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node]",false,341,1,0,0,0,3,0,10,0,0,2,0,0,0,0,2,0,0,0,0,4,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,"swapColors/2[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node]",false,372,1,0,0,0,1,0,5,0,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,iterator/0,false,405,3,1,0,1,1,1,29,1,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$Edge,remainingCapacity/0,false,42,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$Edge,"toString/2[int,int]",false,51,1,2,1,1,5,3,5,1,2,2,3,1,1,0,4,0,6,5,0,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$Edge,augment/1[long],false,46,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$Edge,isResidual/0,false,38,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$Edge,"Edge/3[int,int,long]",true,32,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonPrefixArray.java,com.williamfiset.algorithms.strings.LongestCommonPrefixArray$SuffixArray,display/0,false,96,0,1,1,0,2,1,8,0,3,0,1,0,0,1,0,0,0,2,1,3,1,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonPrefixArray.java,com.williamfiset.algorithms.strings.LongestCommonPrefixArray$SuffixArray,kasai/0,false,82,1,1,1,0,8,0,13,0,5,0,0,0,0,3,1,0,2,0,7,8,6,3,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonPrefixArray.java,com.williamfiset.algorithms.strings.LongestCommonPrefixArray$SuffixArray,SuffixArray/1[int[]],true,43,2,2,0,2,1,3,10,0,0,1,3,2,1,0,0,0,0,0,0,6,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonPrefixArray.java,com.williamfiset.algorithms.strings.LongestCommonPrefixArray$SuffixArray,construct/0,false,54,0,1,1,0,17,1,23,0,3,0,1,0,0,10,3,0,1,0,24,26,15,3,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonPrefixArray.java,com.williamfiset.algorithms.strings.LongestCommonPrefixArray$SuffixArray,SuffixArray/1[java.lang.String],true,32,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonPrefixArray.java,com.williamfiset.algorithms.strings.LongestCommonPrefixArray$SuffixArray,toIntArray/1[java.lang.String],false,36,1,1,1,0,2,2,5,1,2,1,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,add/1[java.lang.String],false,94,2,5,3,2,1,2,3,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"removeRight/3[long,char,int]",false,186,1,1,0,1,1,1,3,1,0,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,addAllSubstrings/1[java.lang.String],false,121,3,3,1,2,5,5,14,0,6,1,5,1,1,4,0,0,0,0,4,8,0,3,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,computeHash/1[java.lang.String],false,75,2,3,2,1,3,4,10,1,3,1,4,1,1,2,0,0,0,0,3,4,0,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"addRight/3[long,int,int]",false,148,0,4,4,0,1,0,4,1,0,3,0,0,0,0,0,0,2,0,0,1,5,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"addLeft/4[long,char,int,int]",false,163,1,1,0,1,1,1,3,1,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"removeLeft/4[long,int,int,int]",false,172,0,2,2,0,1,0,4,1,0,4,0,0,0,0,0,0,2,0,1,1,6,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"removeLeft/4[long,char,int,int]",false,177,1,1,0,1,1,1,3,1,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,contains/1[long[]],false,192,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"StringSet/2[int[],int]",true,47,3,2,1,1,4,4,19,0,5,2,4,0,0,3,0,0,1,0,6,14,3,2,0,0,0,34,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"add/2[java.lang.String,int]",false,99,2,4,0,4,3,6,12,0,4,2,6,3,3,2,0,0,0,0,1,6,2,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"addLeft/4[long,int,int,int]",false,158,0,1,1,0,1,0,4,1,0,4,0,0,0,0,0,0,2,0,0,1,5,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,(initializer 1),false,35,0,6,0,6,2,0,5,0,2,0,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,2,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,StringSet/1[int],true,41,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"addRight/3[long,char,int]",false,153,1,1,0,1,1,1,3,1,0,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,"removeRight/3[long,int,int]",false,181,0,1,1,0,1,0,4,1,0,3,0,0,0,0,0,0,4,0,0,1,6,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,contains/1[java.lang.String],false,197,2,5,3,2,1,2,3,1,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\StringSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.StringSet,toString/0,false,202,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\ZAlgorithmTest.java,com.williamfiset.algorithms.strings.ZAlgorithmTest,shouldReturnEmptyArrayOnNullOrEmptyInput/0,false,17,2,1,0,1,1,3,4,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\ZAlgorithmTest.java,com.williamfiset.algorithms.strings.ZAlgorithmTest,textContainsRepeatedPattern/0,false,34,3,1,0,1,1,3,5,0,0,0,3,0,0,0,0,0,0,3,27,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\ZAlgorithmTest.java,com.williamfiset.algorithms.strings.ZAlgorithmTest,setup/0,false,12,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\ZAlgorithmTest.java,com.williamfiset.algorithms.strings.ZAlgorithmTest,textContainsASingleCharacterRepeated/0,false,23,3,1,0,1,1,3,4,0,0,0,3,0,0,0,0,0,0,2,15,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\ZAlgorithmTest.java,com.williamfiset.algorithms.strings.ZAlgorithmTest,textContainsAllDistinctCharacters/0,false,29,3,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,1,8,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest$HashObject,hashCode/0,false,21,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest$HashObject,"HashObject/2[int,int]",true,15,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest$HashObject,equals/1[java.lang.Object],false,26,1,1,0,1,3,1,4,1,1,1,1,1,1,0,2,0,0,0,0,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\SecondaryHash.java,com.williamfiset.algorithms.datastructures.hashtable.SecondaryHash,hashCode2/0,false,11,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,SplayTree/0,true,87,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,delete/1[T],false,129,3,7,0,7,3,8,11,3,3,1,8,0,0,0,2,0,0,0,1,4,0,1,0,0,0,15,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,"join/2[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>]",false,260,3,3,0,3,2,3,9,2,0,2,3,0,0,0,1,0,0,0,0,2,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,findMin/0,false,156,2,2,0,2,2,2,5,1,1,0,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,toString/0,false,177,3,2,0,2,2,3,4,1,0,0,3,0,0,0,1,0,1,1,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,getRoot/0,false,95,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,search/1[T],false,100,3,2,0,2,3,3,5,2,0,1,3,0,0,0,2,0,0,0,1,1,0,1,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,insert/1[T],false,109,3,5,0,5,2,5,14,2,3,1,5,0,0,0,1,0,0,0,2,5,0,1,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,leftRotate/1[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>],false,191,2,4,0,4,1,4,6,1,1,1,4,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,findMax/0,false,149,2,2,0,2,2,2,5,1,1,0,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,split/1[T],false,240,2,5,0,5,2,7,18,1,3,1,7,0,0,0,0,0,0,0,1,5,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,rightRotate/1[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>],false,184,2,4,0,4,1,4,6,1,1,1,4,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,SplayTree/1[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>],true,91,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,"splayUtil/2[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>,T]",false,198,3,8,0,8,14,9,27,5,0,2,9,0,0,0,8,0,2,0,5,2,0,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,findMax/1[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>],false,163,2,2,0,2,2,2,5,1,1,1,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,findMin/1[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>],false,170,2,2,0,2,2,2,5,1,1,1,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,"inorder/2[com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree.BinaryTree<T>,java.util.ArrayList<T>]",false,271,3,4,0,4,2,5,9,2,0,2,5,0,0,0,1,0,0,0,0,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTree,splay/1[T],false,232,3,1,0,1,2,1,5,2,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,mainProgram/0,false,67,2,2,1,1,5,3,18,0,6,0,3,1,3,2,2,0,0,1,9,11,5,2,0,0,0,13,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,main/1[java.lang.String[]],false,93,1,1,0,1,1,1,3,0,0,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,"ok/2[int,int]",false,201,0,1,1,0,2,1,5,0,0,2,1,0,0,0,1,0,0,2,0,0,1,1,0,0,0,3,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,test2/0,false,98,2,1,0,1,1,2,10,0,2,0,2,1,3,0,0,0,0,0,22,4,1,0,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,test1/0,false,124,2,3,0,3,1,3,55,0,2,0,3,3,3,0,0,0,0,0,149,4,2,0,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,min/1[int[]],false,25,1,2,2,0,3,0,5,1,1,1,0,0,0,1,0,0,0,0,0,2,0,2,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,"f/2[int,int]",false,31,1,5,3,2,1,2,3,1,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\narrowartgallery\NarrowArtGalleryRecursive.java,com.williamfiset.algorithms.dp.examples.narrowartgallery.NarrowArtGalleryRecursive,"f/3[int,int,int]",false,43,1,7,4,3,4,3,13,4,1,3,3,3,2,0,2,0,0,0,6,2,4,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\AngleBetweenVectors2D.java,com.williamfiset.algorithms.geometry.AngleBetweenVectors2D,"angleBetweenVectors/4[double,double,double,double]",false,15,0,1,1,0,3,2,9,3,4,4,2,0,0,0,0,0,3,0,3,4,11,1,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\AngleBetweenVectors2D.java,com.williamfiset.algorithms.geometry.AngleBetweenVectors2D,main/1[java.lang.String[]],false,35,1,1,0,1,1,2,12,0,0,1,2,1,1,0,0,0,0,10,40,0,10,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\GraphDiameter.java,com.williamfiset.algorithms.graphtheory.GraphDiameter,"eccentricity/2[int,java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.GraphDiameter.Edge>>]",false,36,1,1,1,0,7,6,27,1,3,2,6,0,0,2,3,0,0,0,1,3,0,5,0,0,0,23,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\GraphDiameter.java,com.williamfiset.algorithms.graphtheory.GraphDiameter,"graphDiameter/1[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.GraphDiameter.Edge>>]",false,85,2,2,1,1,3,4,11,2,3,1,4,1,1,1,1,0,0,0,2,5,0,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\GraphDiameter.java,com.williamfiset.algorithms.graphtheory.GraphDiameter,"addUndirectedEdge/3[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.GraphDiameter.Edge>>,int,int]",false,152,1,2,1,1,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\GraphDiameter.java,com.williamfiset.algorithms.graphtheory.GraphDiameter,createGraph/1[int],false,146,1,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\GraphDiameter.java,com.williamfiset.algorithms.graphtheory.GraphDiameter,main/1[java.lang.String[]],false,105,2,3,0,3,5,4,34,0,2,1,4,3,2,0,4,0,0,4,48,8,0,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,toString/0,false,78,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,TreeNode/1[int],true,16,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,"rootTree/2[java.util.List<java.util.List<java.lang.Integer>>,int]",false,53,1,5,3,2,1,1,4,1,1,2,1,1,2,0,0,0,0,0,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,children/0,false,49,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,addChildren/1[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode[]],false,26,1,1,1,0,2,1,5,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,parent/0,false,45,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,"buildTree/2[java.util.List<java.util.List<java.lang.Integer>>,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode]",false,59,1,9,2,7,4,7,14,1,2,2,7,6,1,1,2,0,0,0,1,3,0,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,"TreeNode/2[int,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode]",true,20,1,1,1,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,size/0,false,37,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,id/0,false,41,0,7,7,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor$TreeNode,setSize/1[int],false,32,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\ManachersAlgorithm.java,com.williamfiset.algorithms.strings.ManachersAlgorithm,main/1[java.lang.String[]],false,81,1,1,0,1,1,2,4,0,1,1,2,1,3,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\ManachersAlgorithm.java,com.williamfiset.algorithms.strings.ManachersAlgorithm,manachers/1[char[]],false,18,3,2,1,1,5,2,15,1,7,1,2,1,1,2,1,0,0,0,8,10,8,2,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\ManachersAlgorithm.java,com.williamfiset.algorithms.strings.ManachersAlgorithm,preProcess/1[char[]],false,37,1,1,1,0,2,0,11,1,2,1,0,0,0,1,0,0,0,0,10,7,8,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\ManachersAlgorithm.java,com.williamfiset.algorithms.strings.ManachersAlgorithm,findPalindromeSubstrings/1[java.lang.String],false,52,3,2,1,1,6,3,25,1,7,1,3,1,2,3,1,0,3,0,15,9,10,4,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,test2/0,false,279,2,2,0,2,2,3,9,0,3,0,3,1,4,0,1,0,0,1,17,3,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,solve/0,false,118,3,1,0,1,11,1,36,1,14,0,1,1,2,4,3,0,6,0,13,21,10,3,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,test1/0,false,239,3,3,0,3,6,9,29,0,12,0,9,2,4,4,1,0,0,3,16,13,9,2,0,0,0,19,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,main/1[java.lang.String[]],false,227,0,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,include/1[int],false,234,0,0,0,0,3,1,4,1,1,1,1,0,0,0,1,0,0,0,3,1,1,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,reconstructMatching/1[int[]],false,186,2,3,2,1,3,4,18,0,9,1,4,1,1,2,1,0,0,0,8,15,5,1,0,0,0,24,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,getMinWeightCostMatching/0,false,70,2,2,1,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,46,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,getBitPosition/1[int],false,216,0,1,1,0,2,0,8,1,1,1,0,0,0,1,0,0,0,0,3,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,"f/3[int,java.lang.Double[],int[]]",false,86,2,3,2,1,10,1,28,3,6,3,1,1,0,2,2,0,6,0,11,10,6,3,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,solveRecursive/0,false,77,2,4,2,2,2,2,8,1,2,0,2,2,2,0,0,0,0,0,2,4,2,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,getMinWeightCost/0,false,48,1,3,2,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MinimumWeightPerfectMatching.java,com.williamfiset.algorithms.dp.MinimumWeightPerfectMatching,MinimumWeightPerfectMatching/1[double[][]],true,34,1,2,2,0,5,0,9,0,0,1,0,0,0,0,3,0,1,5,6,3,4,1,0,0,0,48,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSelect.java,com.williamfiset.algorithms.sorting.QuickSelect,"quickSelect/2[int[],int]",false,5,2,3,2,1,4,1,6,4,0,2,1,1,3,0,1,0,0,0,3,0,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSelect.java,com.williamfiset.algorithms.sorting.QuickSelect,"partition/3[int[],int,int]",false,28,2,2,1,1,5,1,16,1,3,3,1,1,1,3,0,0,0,0,2,3,2,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSelect.java,com.williamfiset.algorithms.sorting.QuickSelect,main/1[java.lang.String[]],false,50,2,2,0,2,1,2,6,0,3,1,2,1,4,0,0,0,0,0,9,3,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSelect.java,com.williamfiset.algorithms.sorting.QuickSelect,"quickSelect/4[int[],int,int,int]",false,13,2,4,2,2,4,2,14,4,2,4,2,2,2,0,1,0,0,0,2,2,2,2,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSelect.java,com.williamfiset.algorithms.sorting.QuickSelect,"swap/3[int[],int,int]",false,44,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\LinearRecurrenceSolver.java,com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver,matrixDeepCopy/1[long[][]],false,20,1,1,1,0,2,1,6,1,3,1,1,0,0,1,0,0,0,0,1,4,0,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\LinearRecurrenceSolver.java,com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver,"solveRecurrence/4[long[],long,long,long]",false,105,2,4,1,3,5,3,18,2,6,4,3,3,2,1,1,0,0,1,7,8,6,2,0,0,0,111,8,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\LinearRecurrenceSolver.java,com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver,main/1[java.lang.String[]],false,160,2,1,0,1,6,3,20,0,9,1,3,1,3,2,1,0,0,2,20,13,6,2,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\LinearRecurrenceSolver.java,com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver,"computeInitialValues/3[long[],long,long]",false,146,1,1,1,0,3,0,10,1,4,3,0,0,0,2,0,0,0,0,4,7,3,2,0,0,0,60,8,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\LinearRecurrenceSolver.java,com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver,"createTransformationMatrix/2[long[],int]",false,79,1,1,1,0,3,0,7,1,3,2,0,0,0,2,0,0,0,0,13,7,9,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\LinearRecurrenceSolver.java,com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver,"matrixPower/2[long[][],long]",false,46,2,3,1,2,8,2,21,2,4,2,2,2,1,2,3,0,1,0,8,10,0,4,0,0,0,15,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\LinearRecurrenceSolver.java,com.williamfiset.algorithms.linearalgebra.LinearRecurrenceSolver,"squareMatrixMult/2[long[][],long[][]]",false,28,1,1,1,0,4,0,6,1,5,2,0,0,0,3,0,0,0,0,3,6,2,3,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight$TreeNode,getValue/0,false,26,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeHeight.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeHeight$TreeNode,TreeNode/1[int],true,22,0,3,3,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testLeftLeftRotation/0,false,34,3,3,0,3,1,6,15,0,0,0,6,2,1,0,0,0,0,0,6,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,setup/0,false,19,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testNullRemoval/0,false,266,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testTreeContainsNull/0,false,29,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testRightRightRotation/0,false,100,3,3,0,3,1,6,15,0,0,0,6,2,1,0,0,0,0,0,6,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,randValue/0,false,362,0,2,2,0,1,1,3,1,0,0,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testRightUncleCase/0,false,164,3,3,0,3,1,6,30,0,0,0,6,2,1,0,0,0,0,0,14,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,"validateParentLinksAreCorrect/2[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node]",false,348,2,2,1,1,3,1,5,3,0,2,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,"assertCorrectParentLinks/3[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node]",false,323,3,8,7,1,3,4,11,1,0,3,4,1,0,0,1,1,0,0,0,0,0,1,0,0,0,13,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testTreeHeight/0,false,301,3,3,0,3,2,6,8,0,3,0,6,1,1,1,0,0,1,0,4,3,3,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testLeftUncleCase/0,false,122,3,3,0,3,1,6,29,0,0,0,6,2,1,0,0,0,0,0,14,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testRandomizedValueInsertionsAgainstTreeSet/0,false,237,3,5,0,5,2,9,10,0,3,0,9,2,1,1,0,0,0,0,1,3,0,1,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,"assertBinarySearchTreeInvariant/2[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<java.lang.Integer>.Node]",false,337,2,3,2,1,4,2,7,2,1,2,2,1,0,0,3,0,0,0,2,3,0,1,0,0,0,11,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,genRandList/1[int],false,355,0,1,1,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testLeftRightRotation/0,false,56,3,3,0,3,1,6,15,0,0,0,6,2,1,0,0,0,0,0,6,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,"assertNullChildren/2[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree.Node[]]",false,315,2,6,6,0,2,2,6,0,0,2,2,0,0,1,0,0,0,0,0,0,0,1,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,interestingCase1/0,false,207,3,1,0,1,2,4,22,0,1,0,4,0,0,1,0,0,0,0,18,1,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testNullInsertion/0,false,24,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testRemoval/0,false,250,2,3,0,3,1,5,11,0,0,0,5,0,0,0,0,0,0,0,9,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testRightLeftRotation/0,false,78,3,3,0,3,1,6,15,0,0,0,6,2,1,0,0,0,0,0,6,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,testNumberDoesntExist/0,false,271,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTreeTest,randomRemoveTests/0,false,276,3,6,0,6,4,14,20,0,7,0,14,1,1,3,0,0,0,0,3,7,1,2,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixInverse.java,com.williamfiset.algorithms.linearalgebra.MatrixInverse,hasMultipleSolutions/1[double[][]],false,74,1,0,0,0,5,1,8,1,4,1,1,0,0,2,0,0,0,0,5,4,2,3,0,0,0,14,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixInverse.java,com.williamfiset.algorithms.linearalgebra.MatrixInverse,main/1[java.lang.String[]],false,84,2,1,0,1,2,3,5,0,2,1,3,1,2,1,0,0,0,0,9,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixInverse.java,com.williamfiset.algorithms.linearalgebra.MatrixInverse,isInconsistent/1[double[][]],false,61,1,0,0,0,5,1,10,2,3,1,1,0,0,2,0,0,0,0,5,3,2,4,0,0,0,13,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixInverse.java,com.williamfiset.algorithms.linearalgebra.MatrixInverse,solve/1[double[][]],false,34,1,1,1,0,10,1,25,1,9,1,1,0,0,5,3,0,0,0,6,16,1,4,0,0,0,15,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixInverse.java,com.williamfiset.algorithms.linearalgebra.MatrixInverse,inverse/1[double[][]],false,14,2,2,1,1,6,1,13,2,7,1,1,1,1,4,1,0,0,0,7,10,3,2,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\AngleBetweenVectors3D.java,com.williamfiset.algorithms.geometry.AngleBetweenVectors3D,main/1[java.lang.String[]],false,33,1,1,0,1,1,2,7,0,0,1,2,1,1,0,0,0,0,5,30,0,5,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\AngleBetweenVectors3D.java,com.williamfiset.algorithms.geometry.AngleBetweenVectors3D,"angleBetweenVectors/6[double,double,double,double,double,double]",false,16,0,1,1,0,3,2,9,3,4,6,2,0,0,0,0,0,4,0,3,4,16,1,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\SubstringVerificationSuffixArray.java,com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray$SuffixArray,construct/0,false,56,0,1,1,0,17,1,23,0,3,0,1,0,0,10,3,0,1,0,24,26,15,3,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\SubstringVerificationSuffixArray.java,com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray$SuffixArray,SuffixArray/1[int[]],true,46,2,1,0,1,1,2,9,0,0,1,2,1,1,0,0,0,0,0,0,6,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\SubstringVerificationSuffixArray.java,com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray$SuffixArray,SuffixArray/1[java.lang.String],true,35,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\SubstringVerificationSuffixArray.java,com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray$SuffixArray,contains/1[java.lang.String],false,91,0,1,1,0,7,3,25,4,8,1,3,0,0,1,2,0,1,1,7,11,6,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\SubstringVerificationSuffixArray.java,com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray$SuffixArray,toIntArray/1[java.lang.String],false,39,1,1,1,0,2,2,5,1,2,1,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MwpmInterface.java,com.williamfiset.algorithms.dp.MwpmInterface,getMinWeightCost/0,false,6,0,15,15,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MwpmInterface.java,com.williamfiset.algorithms.dp.MwpmInterface,getMatching/0,false,9,1,15,15,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap,"reconstructPath/2[int,int]",false,140,1,1,0,1,7,3,10,2,3,2,3,1,1,1,2,0,0,2,2,4,0,1,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap,"dijkstra/2[int,int]",false,81,3,8,1,7,8,8,28,2,6,2,8,0,0,2,1,0,0,0,2,12,2,4,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap,"addEdge/3[int,int,int]",false,64,1,1,0,1,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap,createEmptyGraph/0,false,52,1,1,1,0,2,1,4,0,1,0,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap,DijkstrasShortestPathAdjacencyListWithDHeap/1[int],true,46,1,1,0,1,1,1,4,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap,getGraph/0,false,73,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testSearchNull/0,false,68,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testDeleteMismatchDimensions/0,false,182,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,4,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testSearchMismatchDimensions/0,false,74,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,4,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testFindMinNegative/0,false,107,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,2,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testDimensionsNegative/0,false,16,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testSearch/0,false,49,2,3,0,3,1,5,17,0,5,0,5,0,0,0,0,0,0,0,25,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testInsertMismatchDimensions/0,false,42,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,4,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testDeleteEmpty/0,false,114,2,2,0,2,2,3,4,0,1,0,3,0,0,0,1,0,0,0,3,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testInsert/0,false,22,2,3,0,3,4,4,12,0,4,0,4,0,0,0,3,0,0,0,10,4,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testDeleteNull/0,false,176,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testDeleteRoot/0,false,120,2,3,0,3,5,4,21,0,7,0,4,0,0,0,4,0,0,0,13,7,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testDimensionsZero/0,false,11,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testFindMinOutOfBounds/0,false,101,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,2,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testInsertNull/0,false,36,2,2,0,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testFindMin/0,false,81,2,3,0,3,5,4,18,0,4,0,4,0,0,0,4,0,0,0,29,4,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTreeTest.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTreeTest,testDelete/0,false,148,2,4,0,4,6,5,24,0,9,0,5,0,0,0,5,0,0,0,26,9,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest,testGraphInSlides/0,false,93,4,5,0,5,1,7,18,0,5,0,7,3,1,0,0,0,0,0,27,5,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,20,0,4,4,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest,getSortedBridges/1[java.util.List<java.lang.Integer>],false,147,1,4,4,0,3,4,16,1,5,1,4,0,0,1,0,0,0,0,3,7,1,2,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest,graphWithCyclesTest/0,false,65,4,5,0,5,1,7,21,0,5,0,7,3,1,0,0,0,0,0,35,5,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest,testTreeCase/0,false,27,4,5,0,5,1,7,19,0,5,0,7,3,1,0,0,0,0,0,45,5,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest,testDisconnectedGraph/0,false,117,4,5,0,5,1,7,17,0,5,0,7,3,1,0,0,0,0,0,31,5,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListTest,createGraph/1[int],false,13,0,4,4,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayMed.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayMed,SuffixArrayMed/1[java.lang.String],true,29,1,8,7,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayMed.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayMed,SuffixArrayMed/1[int[]],true,33,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayMed.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayMed,construct/0,false,39,2,1,0,1,10,1,35,0,11,0,1,0,0,5,3,0,0,0,22,27,4,3,0,0,0,15,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayMed.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayMed,main/1[java.lang.String[]],false,100,1,1,0,1,1,1,4,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList$Edge,"Edge/3[int,int,double]",true,18,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,cppTest1/0,false,527,2,4,1,3,1,2,13,0,3,0,2,2,2,0,0,0,0,0,25,3,0,0,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,createEmptyGraph/1[int],false,489,1,2,2,0,2,1,7,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,eulerTest1/0,false,511,3,4,0,4,2,4,15,0,4,0,4,2,1,1,0,0,0,1,19,4,0,1,0,0,0,19,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,getTour/0,false,150,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,"findEdge/3[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.Edge>>,int,int]",false,141,1,1,1,0,3,1,8,2,0,3,1,0,0,1,1,0,0,0,0,0,0,2,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,"addUndirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.Edge>>,int,int,double]",false,501,2,2,1,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,"addDirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.Edge>>,int,int,double]",false,497,1,3,2,1,1,2,3,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,ChinesePostmanProblem/1[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.Edge>>],true,35,5,7,1,6,14,12,69,0,23,1,12,1,1,9,4,0,0,6,18,27,9,3,0,0,0,50,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem,main/1[java.lang.String[]],false,506,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolver.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolver,main/1[java.lang.String[]],false,127,2,4,0,4,7,12,34,0,10,1,12,3,3,4,2,0,0,7,33,22,1,3,0,0,0,38,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolver.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolver,FloydWarshallSolver/1[double[][]],true,38,1,9,9,0,4,0,11,0,2,1,0,0,0,2,1,0,0,0,2,7,0,3,0,0,0,63,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolver.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolver,solve/0,false,63,0,3,3,0,12,0,18,1,6,0,0,0,0,6,2,0,0,0,7,11,2,4,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolver.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolver,createGraph/1[int],false,118,1,1,1,0,2,1,8,1,2,1,1,0,0,1,0,0,0,0,2,3,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolver.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolver,getApspMatrix/0,false,57,2,7,6,1,1,1,4,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,26,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolver.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolver,"reconstructShortestPath/2[int,int]",false,98,1,5,4,1,5,2,13,4,2,2,2,1,1,1,4,0,0,0,0,3,0,2,0,0,0,47,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testNegativeCyclePropagation/0,false,200,4,3,0,3,2,4,9,0,7,0,4,1,1,1,0,0,0,0,9,9,2,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testApspAgainstBellmanFord_nonNegativeEdgeWeights/0,false,119,5,6,0,6,4,8,15,0,8,0,8,2,1,3,0,0,1,0,6,8,1,3,0,0,0,33,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testSingleNodeNegativeCycleDetection/0,false,211,4,3,0,3,1,4,12,0,6,0,4,1,1,0,0,0,0,0,19,10,1,0,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testDirectedGraph/0,false,70,3,2,0,2,1,3,20,0,2,0,3,0,0,0,0,0,0,0,48,2,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,setup/0,false,17,2,0,0,0,1,0,5,0,0,0,0,0,0,0,0,0,0,0,47,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testPathReconstructionBellmanFord_nonNegativeEdgeWeights/0,false,158,5,7,0,7,6,8,22,0,11,0,8,2,1,4,2,0,3,1,7,11,1,5,0,0,0,35,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,"addRandomEdges/3[double[][],int,boolean]",false,55,1,3,3,0,5,1,11,0,4,3,1,0,0,1,1,0,4,0,3,6,3,2,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testApspAgainstBellmanFord_withNegativeEdgeWeights/0,false,137,5,6,0,6,4,8,15,0,8,0,8,2,1,3,0,0,1,0,6,8,1,3,0,0,0,33,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testSimpleNegativeCycleDetection/0,false,187,4,3,0,3,1,4,11,0,6,0,4,1,1,0,0,0,0,0,15,10,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,createMatrix/1[int],false,44,1,6,6,0,3,0,10,1,3,1,0,0,0,2,0,0,0,0,3,5,0,2,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\FloydWarshallSolverTest.java,com.williamfiset.algorithms.graphtheory.FloydWarshallSolverTest,testNegativeCycleGraph/0,false,93,3,2,0,2,1,3,23,0,2,0,3,0,0,0,0,0,0,0,42,2,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic,"heuristic/4[double[],double[],int,int]",false,119,1,1,1,0,1,0,3,1,0,4,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic,main/1[java.lang.String[]],false,128,5,3,0,3,6,9,41,0,22,1,9,3,2,3,1,0,2,4,13,29,15,2,0,0,0,32,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic,"astar/6[double[],double[],java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic.Edge>>,int,int,int]",false,58,4,3,1,2,9,11,36,2,11,6,11,1,1,2,2,0,0,0,2,14,1,5,0,0,0,20,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic,"dijkstra/4[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic.Edge>>,int,int,int]",false,216,4,2,1,1,8,7,29,2,8,4,7,0,0,2,2,0,0,0,3,11,1,4,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic,"addEdge/7[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic.Edge>>,int,int,int,int,int,int]",false,188,1,2,1,1,1,3,5,0,2,7,3,0,0,0,0,0,0,0,0,2,3,0,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbing,HashTableLinearProbing/1[int],true,20,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbing,adjustCapacity/0,false,39,1,1,0,1,2,1,5,0,0,0,1,0,0,1,1,0,0,0,1,0,0,1,0,0,0,4,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbing,probe/1[int],false,32,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,13,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbing,HashTableLinearProbing/0,true,16,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbing,"HashTableLinearProbing/2[int,double]",true,24,0,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbing,setupProbing/1[K],false,29,1,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\BucketSort.java,com.williamfiset.algorithms.sorting.BucketSort,"bucketSort/3[int[],int,int]",false,30,1,1,1,0,9,6,20,1,12,3,6,0,0,4,4,0,1,0,8,13,6,3,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\BucketSort.java,com.williamfiset.algorithms.sorting.BucketSort,sort/1[int[]],false,17,2,2,1,1,4,1,9,0,3,1,1,1,1,1,0,0,0,0,1,5,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\BucketSort.java,com.williamfiset.algorithms.sorting.BucketSort,main/1[java.lang.String[]],false,57,2,2,0,2,1,3,9,0,2,1,3,1,2,0,0,0,0,0,12,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LongitudeLatitudeGeographicDistance.java,com.williamfiset.algorithms.geometry.LongitudeLatitudeGeographicDistance,"dist/4[double,double,double,double]",false,16,0,0,0,0,1,5,6,1,3,4,5,0,0,0,0,0,0,0,6,3,11,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic$DNode,compareTo/1[com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic.DNode],false,206,1,0,0,0,3,1,4,2,0,1,1,0,0,0,0,0,1,0,4,0,2,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic$DNode,"DNode/2[int,double]",true,200,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,assertFlow/1[long],false,33,1,7,6,1,2,3,5,0,0,1,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,testSmallFlowGraph/0,false,66,2,3,0,3,1,3,14,0,3,0,3,3,1,0,0,0,0,0,27,3,2,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,testMediumSizeFlowGraph/0,false,118,2,3,0,3,1,3,26,0,3,0,3,3,1,0,0,0,0,0,61,3,2,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,setUp/0,false,14,2,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,"createAllSolvers/3[int,int,int]",false,18,6,13,7,6,1,1,8,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,"addEdge/3[int,int,int]",false,27,1,8,7,1,2,1,5,0,0,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,classicNetwork/0,false,89,2,3,0,3,1,3,11,0,4,0,3,3,1,0,0,0,0,0,12,4,3,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,testFlowInEqualsFlowOut/0,false,148,5,3,0,3,7,5,41,0,9,0,5,2,1,4,2,0,0,0,62,11,2,3,0,0,0,27,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,evilNetwork1/0,false,104,2,3,0,3,3,3,10,0,4,0,3,3,1,2,0,0,0,0,12,4,8,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,testDisconnectedGraph/0,false,52,2,3,0,3,1,3,7,0,3,0,3,3,1,0,0,0,0,0,8,3,2,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\MaxFlowTests.java,com.williamfiset.algorithms.graphtheory.networkflow.MaxFlowTests,lineGraphTest/0,false,40,2,3,0,3,1,3,8,0,3,0,3,3,1,0,0,0,0,0,11,3,2,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Node,"Node/3[com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node,T]",true,26,2,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ExtendedEuclideanAlgorithm.java,com.williamfiset.algorithms.math.ExtendedEuclideanAlgorithm,"egcd/2[long,long]",false,11,2,2,1,1,2,1,10,2,2,2,1,1,0,0,1,0,1,0,8,4,4,2,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\examples\MinSparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable,MinSparseTable/1[long[]],true,53,2,1,1,0,6,2,27,0,6,1,2,0,0,4,0,0,6,0,21,17,18,3,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\examples\MinSparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable,main/1[java.lang.String[]],false,20,2,3,0,3,1,4,10,0,2,1,4,2,1,0,0,0,0,0,19,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\examples\MinSparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable,"queryMin/2[int,int]",false,95,0,1,1,0,1,1,6,1,3,2,1,0,0,0,0,0,0,0,3,3,5,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\examples\MinSparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.examples.MinSparseTable,"queryMinIndex/2[int,int]",false,103,0,1,1,0,2,0,13,2,5,2,0,0,0,0,0,0,0,0,4,5,7,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,getEulerianPath/0,false,38,2,16,12,4,4,7,9,3,2,0,7,4,1,1,1,0,0,0,3,3,2,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,EulerianPathDirectedEdgesAdjacencyList/1[java.util.List<java.util.List<java.lang.Integer>>],true,29,0,12,12,0,2,1,6,0,0,1,1,0,0,0,1,0,0,1,0,3,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,initializeEmptyGraph/1[int],false,106,0,2,2,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,"addDirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,112,0,2,2,0,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,dfs/1[int],false,96,1,3,2,1,2,4,7,0,1,1,4,1,0,1,1,0,0,0,1,1,0,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,main/1[java.lang.String[]],false,118,1,2,0,2,1,2,4,0,0,1,2,2,4,0,0,0,0,0,0,0,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,smallExample/0,false,147,1,5,1,4,1,5,13,0,3,0,5,3,2,0,0,0,0,0,13,3,0,0,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,setUp/0,false,56,1,1,1,0,3,1,12,0,1,0,1,0,0,2,0,0,0,0,2,4,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,graphHasEulerianPath/0,false,73,0,1,1,0,11,0,10,3,3,0,0,0,0,1,7,0,2,0,12,3,4,4,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,exampleFromSlides/0,false,123,1,5,1,4,1,5,19,0,3,0,5,3,2,0,0,0,0,0,25,3,0,0,0,0,0,17,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyList,findStartNode/0,false,84,0,1,1,0,4,0,8,2,2,0,0,0,0,1,1,0,0,0,4,3,1,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,add/1[T],false,35,1,0,0,0,2,1,3,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,isEmpty/0,false,31,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,remove/1[T],false,39,1,0,0,0,2,1,3,1,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,"HSet/2[int,float]",true,19,1,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,clear/0,false,27,0,0,0,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,HSet/0,true,11,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,HSet/1[int],true,15,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,contains/1[T],false,43,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,iterator/0,false,47,1,0,0,0,1,2,3,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,size/0,false,23,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\set\HSet.java,com.williamfiset.algorithms.datastructures.set.HSet,toString/0,false,52,0,0,0,0,2,3,7,1,1,0,3,0,0,1,0,0,0,3,0,1,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$NetworkFlowSolverBase,"addEdge/3[int,int,long]",false,106,1,2,1,1,2,1,9,0,2,3,1,0,0,0,0,0,0,1,2,4,0,1,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$NetworkFlowSolverBase,getMaxFlow/0,false,127,1,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$NetworkFlowSolverBase,execute/0,false,133,1,3,2,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$NetworkFlowSolverBase,initializeEmptyFlowGraph/0,false,94,1,1,1,0,2,0,4,0,1,0,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$NetworkFlowSolverBase,"NetworkFlowSolverBase/3[int,int,int]",true,85,1,1,0,1,1,1,6,0,0,3,1,1,1,0,0,0,0,0,0,3,0,0,0,0,0,34,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$NetworkFlowSolverBase,getGraph/0,false,121,2,1,0,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$NetworkFlowSolverBase,solve/0,false,140,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1025,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest,testSingletonGraph/0,false,31,3,3,0,3,1,5,9,0,4,0,5,0,0,0,0,0,0,0,4,5,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest,"generateRandomGraph/2[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative.Edge>>,int]",false,92,4,2,1,1,4,4,16,1,6,2,4,0,0,2,0,0,3,0,3,10,3,2,0,0,0,20,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest,testNullGraphInput/0,false,26,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest,setup/0,false,21,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest,testTwoNodeGraph/0,false,43,3,4,0,4,1,6,11,0,4,0,6,0,0,0,0,0,0,0,7,5,0,0,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest,testThreeNodeGraph/0,false,58,3,4,0,4,1,6,13,0,4,0,6,0,0,0,0,0,0,0,10,5,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeTest,testShortestPathAgainstBellmanFord/0,false,75,6,6,0,6,2,8,14,0,10,0,8,1,1,1,0,0,2,0,3,11,2,1,0,0,0,33,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList,createGraph/1[int],false,27,1,1,1,0,2,0,5,1,2,1,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList,"bellmanFord/3[java.util.List<com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList.Edge>[],int,int]",false,48,2,1,1,0,9,1,8,1,3,3,1,0,0,6,0,0,0,0,5,6,5,4,0,0,0,50,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList,"addEdge/4[java.util.List<com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList.Edge>[],int,int,double]",false,34,1,2,1,1,1,1,3,0,0,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyList,main/1[java.lang.String[]],false,75,3,3,0,3,2,4,16,0,6,1,4,3,1,1,0,0,0,1,34,6,0,1,0,0,0,20,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\CapacityScalingSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList,main/1[java.lang.String[]],false,93,1,2,0,2,1,2,4,0,0,1,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\CapacityScalingSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList,solve/0,false,48,2,3,0,3,5,4,12,0,2,0,4,1,1,3,1,0,0,0,5,7,0,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\CapacityScalingSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList,"addEdge/3[int,int,long]",false,40,0,2,2,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\CapacityScalingSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList,testExampleFromMySlides/0,false,126,2,4,1,3,1,3,17,0,4,0,3,1,1,0,0,0,0,0,26,4,2,0,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\CapacityScalingSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList,"dfs/2[int,long]",false,68,3,7,2,5,6,6,16,3,3,2,6,1,0,1,1,0,0,0,2,3,0,3,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\CapacityScalingSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList,"CapacityScalingSolverAdjacencyList/3[int,int,int]",true,28,0,3,3,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\CapacityScalingSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.CapacityScalingSolverAdjacencyList,testSmallFlowGraph/0,false,100,2,4,1,3,1,3,17,0,4,0,3,1,1,0,0,0,0,0,26,4,2,0,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorPostOrder/0,false,240,2,3,0,3,2,4,11,0,2,0,4,0,0,1,0,0,0,0,4,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorLevelOrder/0,false,257,2,3,0,3,2,4,11,0,2,0,4,0,0,1,0,0,0,0,4,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testPostOrderTraversal/0,false,435,2,2,0,2,2,4,6,0,2,0,4,2,1,1,0,0,0,0,1,2,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorRemovingPostOrder/0,false,308,2,4,0,4,2,5,11,0,2,0,5,0,0,1,0,0,0,0,4,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,setup/0,false,88,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testSize/0,false,101,2,3,0,3,1,4,6,0,1,0,4,0,0,0,0,0,0,1,2,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testLevelOrderTraversal/0,false,444,2,2,0,2,2,4,6,0,2,0,4,2,1,1,0,0,0,0,1,2,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorPreOrder/0,false,206,2,3,0,3,2,4,11,0,2,0,4,0,0,1,0,0,0,0,4,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testContains/0,false,183,2,3,0,3,1,5,10,0,1,0,5,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorRemovingPreOrder/0,false,274,2,4,0,4,2,5,11,0,2,0,5,0,0,1,0,0,0,0,4,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorRemovingLevelOrder/0,false,325,2,4,0,4,2,5,11,0,2,0,5,0,0,1,0,0,0,0,4,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testRemove/0,false,160,2,5,0,5,1,8,15,0,1,0,8,0,0,0,0,0,0,0,7,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorRemovingInOrderOrder/0,false,291,2,4,0,4,2,5,11,0,2,0,5,0,0,1,0,0,0,0,4,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testIsEmpty/0,false,91,2,3,0,3,1,5,6,0,1,0,5,0,0,0,0,0,0,1,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,"validateTreeTraversal/2[com.williamfiset.algorithms.datastructures.binarysearchtree.TreeTraversalOrder,java.util.List<java.lang.Integer>]",false,373,3,12,4,8,10,13,29,3,6,2,13,0,0,3,1,0,0,0,1,7,0,2,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testAdd/0,false,146,2,2,0,2,1,4,6,0,1,0,4,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,randomRemoveTests/0,false,342,3,7,0,7,4,12,16,0,6,0,12,1,1,3,0,0,0,0,3,6,1,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testHeight/0,false,110,2,3,0,3,1,4,18,0,1,0,4,0,0,0,0,0,0,7,8,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,concurrentModificationErrorInOrderOrder/0,false,223,2,3,0,3,2,4,11,0,2,0,4,0,0,1,0,0,0,0,4,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,genRandList/1[int],false,366,0,5,5,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testPreOrderTraversal/0,false,417,2,2,0,2,2,4,6,0,2,0,4,2,1,1,0,0,0,0,1,2,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTreeTest,testInOrderTraversal/0,false,426,2,2,0,2,2,4,6,0,2,0,4,2,1,1,0,0,0,0,1,2,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\GCD.java,com.williamfiset.algorithms.math.GCD,"gcd/2[long,long]",false,14,1,3,2,1,3,1,3,1,0,2,1,1,0,0,1,0,1,0,2,0,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\GCD.java,com.williamfiset.algorithms.math.GCD,main/1[java.lang.String[]],false,18,1,1,0,1,1,2,11,0,0,1,2,1,1,0,0,0,0,0,18,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,size/0,false,160,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,iterator/0,false,140,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,potential/0,false,407,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,"cut/2[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>]",false,373,3,4,0,4,1,4,7,0,0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,peek/0,false,188,3,2,0,2,2,2,6,2,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,remove/1[java.lang.Object],false,145,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,remove/0,false,248,2,2,0,2,2,2,6,1,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,offer/1[E],false,183,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,toArray/1[T[]],false,170,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,toString/0,false,425,2,2,0,2,6,9,28,2,4,0,9,0,0,2,4,0,0,4,0,6,0,3,0,0,0,15,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,element/0,false,175,2,2,0,2,2,2,6,1,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,poll/0,false,196,3,11,0,11,4,12,29,2,5,0,12,0,0,1,1,0,0,0,1,8,0,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,clear/0,false,102,0,0,0,0,1,1,7,0,0,0,1,0,0,0,0,0,0,0,3,4,0,0,0,0,0,8,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,containsAll/1[java.util.Collection<?>],false,120,1,1,0,1,4,1,11,3,0,1,1,0,0,1,1,0,0,0,0,0,0,2,0,0,0,8,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,FibonacciHeap/0,true,41,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,moveToRoot/1[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>],false,49,3,6,0,6,3,6,16,0,0,1,6,0,0,0,0,0,0,0,1,2,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,consolidate/0,false,258,3,6,0,6,12,11,50,1,9,0,11,0,0,5,6,0,1,0,4,16,1,3,0,0,0,33,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,addAll/1[java.util.Collection<? extends E>],false,93,1,1,0,1,2,1,6,1,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,isEmpty/0,false,135,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,retainAll/1[java.util.Collection<?>],false,155,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,"compare/2[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>]",false,411,2,1,0,1,2,3,7,2,1,2,3,0,0,0,1,0,0,1,0,1,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,FibonacciHeap/1[java.util.Comparator<? super E>],true,45,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,cascadingCut/1[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>],false,387,3,5,0,5,3,5,13,0,1,1,5,0,0,0,1,0,0,0,0,1,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,removeAll/1[java.util.Collection<?>],false,150,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,add/1[E],false,72,3,2,0,2,2,2,10,1,1,1,2,0,0,0,1,0,0,1,0,1,0,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,toArray/0,false,165,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,contains/1[java.lang.Object],false,111,0,0,0,0,2,1,6,2,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,5,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeap.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeap,"link/2[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>]",false,347,2,9,0,9,2,9,19,0,0,2,9,0,0,0,1,0,0,0,0,0,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,testExample2/0,false,124,2,5,1,4,3,4,9,0,5,0,4,3,2,1,0,0,0,1,6,5,0,2,0,0,0,17,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,"dfs/3[int,int,int]",false,53,1,3,2,1,6,3,19,0,1,3,3,1,0,1,2,0,0,0,0,7,0,3,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,testExample1/0,false,96,2,4,0,4,3,4,17,0,5,0,4,3,2,1,0,0,0,1,22,5,0,2,0,0,0,17,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,findArticulationPoints/0,false,32,3,15,14,1,4,1,17,2,1,0,1,1,1,1,0,0,1,0,5,9,0,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,85,0,2,2,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,"ArticulationPointsAdjacencyList/2[java.util.List<java.util.List<java.lang.Integer>>,int]",true,24,0,14,14,0,4,1,5,0,0,2,1,0,0,0,2,0,0,0,1,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,createGraph/1[int],false,78,0,2,2,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyList,main/1[java.lang.String[]],false,92,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\BinarySearch.java,com.williamfiset.algorithms.search.BinarySearch,main/1[java.lang.String[]],false,46,1,1,0,1,1,2,14,0,12,1,2,1,1,0,0,0,4,2,8,10,4,0,0,0,2,21,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\BinarySearch.java,com.williamfiset.algorithms.search.BinarySearch,"binarySearch/4[double,double,double,java.util.function.DoubleFunction<java.lang.Double>]",false,21,0,1,1,0,4,1,16,1,2,4,1,0,0,1,0,0,2,1,1,4,3,2,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive$Node,getRight/0,false,38,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive$Node,getText/0,false,43,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive$Node,Node/1[T],true,28,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive$Node,getLeft/0,false,33,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\CombinationsWithRepetition.java,com.williamfiset.algorithms.other.CombinationsWithRepetition,"combinationsWithRepetition/5[int[],int[],int,int,int]",false,24,2,3,2,1,6,3,16,0,4,5,3,1,0,3,2,0,0,3,5,5,3,4,0,0,0,48,10,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\CombinationsWithRepetition.java,com.williamfiset.algorithms.other.CombinationsWithRepetition,main/1[java.lang.String[]],false,67,2,1,0,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,6,1,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\CombinationsWithRepetition.java,com.williamfiset.algorithms.other.CombinationsWithRepetition,"printCombinationsWithRepetition/3[int[],int,int]",false,56,2,2,1,1,4,1,8,1,2,3,1,1,1,0,1,0,0,2,1,2,0,1,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest,testGraphInSlides/0,false,93,4,5,0,5,1,7,18,0,5,0,7,3,1,0,0,0,0,0,27,5,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,20,0,4,4,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest,getSortedBridges/1[java.util.List<java.lang.Integer>],false,147,1,4,4,0,3,4,16,1,5,1,4,0,0,1,0,0,0,0,3,7,1,2,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest,graphWithCyclesTest/0,false,65,4,5,0,5,1,7,21,0,5,0,7,3,1,0,0,0,0,0,35,5,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest,testTreeCase/0,false,27,4,5,0,5,1,7,19,0,5,0,7,3,1,0,0,0,0,0,45,5,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest,testDisconnectedGraph/0,false,117,4,5,0,5,1,7,17,0,5,0,7,3,1,0,0,0,0,0,31,5,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterativeTest.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterativeTest,createGraph/1[int],false,13,0,4,4,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive$MatchingCost,createInfiniteValueMatchingCost/0,false,178,1,2,1,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive$MatchingCost,MatchingCost/1[com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.WeightedMaximumCardinalityMatchingRecursive.MatchingCost],true,173,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive$MatchingCost,toString/0,false,205,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive$MatchingCost,MatchingCost/0,true,166,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive$MatchingCost,isBetterMatchingCost/1[com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.WeightedMaximumCardinalityMatchingRecursive.MatchingCost],false,194,1,1,1,0,3,0,9,3,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive$MatchingCost,updateMatchingCost/1[java.lang.Double],false,185,0,1,1,0,2,0,8,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive$MatchingCost,"MatchingCost/2[double,int]",true,168,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\InplaceSort.java,com.williamfiset.algorithms.sorting.InplaceSort,sort/1[int[]],false,5,1,7,7,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\SteinerTree.java,com.williamfiset.algorithms.graphtheory.SteinerTree,floydWarshall/1[double[][]],false,92,1,1,1,0,9,0,5,0,7,1,0,0,0,6,0,0,0,0,6,9,3,4,0,0,0,59,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\SteinerTree.java,com.williamfiset.algorithms.graphtheory.SteinerTree,main/1[java.lang.String[]],false,113,3,1,0,1,1,2,23,0,3,1,2,1,2,0,0,0,0,0,73,3,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\SteinerTree.java,com.williamfiset.algorithms.graphtheory.SteinerTree,"minLengthSteinerTree/2[double[][],int[]]",false,26,3,3,2,1,10,3,30,2,11,2,3,1,1,8,0,0,3,0,18,15,9,3,0,0,0,56,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList$Edge,"Edge/3[int,int,int]",true,60,0,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.KruskalsEdgeList.Edge],false,67,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01,"mutate/2[com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01.Individual,int]",false,114,1,1,1,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01,"selectIndividual/3[com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01.Individual[],double[],double[]]",false,118,2,1,1,0,5,1,10,1,4,3,1,0,0,1,0,0,1,0,6,6,6,2,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01,"crossover/3[com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01.Individual,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01.Individual,int]",false,132,1,2,1,1,5,3,7,1,4,3,3,0,0,2,0,0,0,0,1,4,0,2,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01,"run/3[int,int[],int[]]",false,30,5,6,1,5,11,6,41,1,20,3,6,4,1,6,1,0,0,1,20,33,10,4,0,0,0,40,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01,"fitness/5[com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01.Individual,int[],int[],int,int]",false,102,2,1,1,0,4,1,11,2,3,5,1,0,0,1,0,0,0,0,4,5,0,2,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01,main/1[java.lang.String[]],false,140,3,2,0,2,2,5,16,0,8,1,5,1,2,1,0,0,5,5,6,10,9,1,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\SubstringVerificationSuffixArray.java,com.williamfiset.algorithms.strings.SubstringVerificationSuffixArray,main/1[java.lang.String[]],false,19,1,2,0,2,1,2,7,0,3,1,2,0,0,0,0,0,0,3,0,3,0,0,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$FordFulkersonDfsSolver,"FordFulkersonDfsSolver/3[int,int,int]",true,227,0,1,1,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$FordFulkersonDfsSolver,"dfs/2[int,long]",false,242,2,5,2,3,6,4,15,3,2,2,4,1,0,1,2,0,0,0,3,3,0,3,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$FordFulkersonDfsSolver,solve/0,false,234,1,1,0,1,2,1,6,0,1,0,1,1,1,1,1,0,0,0,1,3,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,example1/0,false,72,2,1,0,1,1,2,5,0,2,0,2,0,0,0,0,0,0,0,10,2,0,0,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,"function/2[long,long]",false,36,0,2,2,0,3,0,5,3,0,2,0,0,0,0,2,0,0,0,0,0,1,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,main/1[java.lang.String[]],false,67,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,CompactSegmentTree/1[int],true,20,1,0,0,0,1,1,4,0,0,1,1,0,0,0,0,0,1,0,1,2,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,example2/0,false,78,2,3,1,2,1,4,8,0,2,0,4,1,2,0,0,0,0,0,12,2,0,0,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,CompactSegmentTree/1[long[]],true,25,2,3,2,1,2,1,4,0,1,1,1,1,2,1,0,0,0,0,1,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,"query/2[int,int]",false,55,1,2,1,1,7,1,11,1,1,2,1,1,1,1,3,0,2,1,6,7,0,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\CompactSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.CompactSegmentTree,"modify/2[int,long]",false,47,1,2,1,1,2,1,6,0,0,2,1,1,1,1,0,0,0,0,4,4,3,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeRun,main/1[java.lang.String[]],false,285,2,6,0,6,10,9,39,0,4,1,9,0,0,2,1,0,0,6,17,5,2,2,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\EditDistanceRecursive.java,com.williamfiset.algorithms.dp.EditDistanceRecursive,"f/3[java.lang.Integer[][],int,int]",false,43,1,4,2,2,7,2,18,5,3,3,2,2,1,0,6,0,3,0,6,4,11,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\EditDistanceRecursive.java,com.williamfiset.algorithms.dp.EditDistanceRecursive,main/1[java.lang.String[]],false,62,1,2,0,2,1,2,26,0,4,1,2,1,3,0,0,0,0,12,18,18,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\EditDistanceRecursive.java,com.williamfiset.algorithms.dp.EditDistanceRecursive,"EditDistanceRecursive/5[java.lang.String,java.lang.String,int,int,int]",true,16,0,1,1,0,3,1,10,0,0,5,1,0,0,0,2,0,0,1,0,5,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\EditDistanceRecursive.java,com.williamfiset.algorithms.dp.EditDistanceRecursive,min/1[int[]],false,27,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,0,2,0,2,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\EditDistanceRecursive.java,com.williamfiset.algorithms.dp.EditDistanceRecursive,editDistance/0,false,38,1,2,1,1,1,1,4,1,1,0,1,1,2,0,0,0,0,0,4,1,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining$Anonymous1,hasNext/0,false,231,3,0,0,0,8,2,15,1,1,0,2,0,0,1,3,0,0,0,0,2,0,4,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining$Anonymous1,next/0,false,256,1,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining$Anonymous1,remove/0,false,261,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\EditDistanceIterative.java,com.williamfiset.algorithms.dp.EditDistanceIterative,"editDistance/5[java.lang.String,java.lang.String,int,int,int]",false,15,1,1,1,0,9,3,14,1,6,5,3,0,0,2,2,0,2,0,17,10,11,3,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\EditDistanceIterative.java,com.williamfiset.algorithms.dp.EditDistanceIterative,main/1[java.lang.String[]],false,42,1,1,0,1,1,2,17,0,2,1,2,1,1,0,0,0,0,10,15,10,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\TriangleArea.java,com.williamfiset.algorithms.geometry.TriangleArea,"triangleArea/3[double,double,double]",false,19,0,1,1,0,1,1,4,1,1,3,1,0,0,0,0,0,4,0,1,1,6,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\TriangleArea.java,com.williamfiset.algorithms.geometry.TriangleArea,"triangleArea/6[double,double,double,double,double,double]",false,30,0,1,1,0,1,1,8,1,5,6,1,0,0,0,0,0,0,0,1,5,8,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\TriangleArea.java,com.williamfiset.algorithms.geometry.TriangleArea,"triangleArea/2[double,double]",false,55,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\TriangleArea.java,com.williamfiset.algorithms.geometry.TriangleArea,"triangleArea/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,50,1,2,1,1,1,3,3,1,0,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\TriangleArea.java,com.williamfiset.algorithms.geometry.TriangleArea,main/1[java.lang.String[]],false,60,1,2,0,2,1,4,10,0,6,1,4,2,2,0,0,0,0,0,6,6,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImpl.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl$DfsResult,"DfsResult/2[int,int]",true,22,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,minQueryAssignUpdateExample/0,false,538,2,3,0,3,3,4,15,0,5,0,4,2,6,0,2,0,0,4,14,8,0,1,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"safeSum/2[java.lang.Long,java.lang.Long]",false,73,0,0,0,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"rangeQuery1/2[int,int]",false,288,1,7,6,1,1,1,3,1,0,2,1,1,3,0,0,0,0,0,3,0,1,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"safeMax/2[java.lang.Long,java.lang.Long]",false,91,0,0,0,0,3,1,5,3,0,2,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"rangeUpdate1/6[int,int,int,int,int,long]",false,343,2,6,2,4,4,7,16,1,1,6,7,3,2,0,2,0,1,0,11,3,12,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"GenericSegmentTree/3[long[],com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree.SegmentCombinationFn,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree.RangeUpdateFn]",true,170,4,8,7,1,24,1,94,0,1,3,1,1,1,0,23,0,0,4,4,39,3,2,0,0,0,47,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"propagate1/3[int,int,int]",false,320,2,4,2,2,2,2,8,1,0,3,2,1,1,0,1,0,0,0,0,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,t/0,false,531,2,3,1,2,1,1,5,0,2,0,1,1,2,0,0,0,0,0,11,2,0,0,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"safeMul/2[java.lang.Long,java.lang.Long]",false,79,0,0,0,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"printDebugInfo/3[int,int,int]",false,406,1,3,2,1,2,2,9,1,1,3,2,1,0,0,1,0,1,1,6,1,7,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"propagateLazy1/4[int,int,int,long]",false,332,1,3,2,1,2,1,5,1,0,4,1,0,0,0,1,0,0,0,8,2,8,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"rangeUpdate1/3[int,int,long]",false,339,1,7,6,1,1,1,3,0,0,3,1,1,3,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,productQueryMulUpdateExample/0,false,429,2,3,0,3,4,4,17,0,5,0,4,2,6,0,3,0,0,6,15,7,0,1,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,gcdQueryAssignUpdateExample/0,false,487,2,3,0,3,4,4,19,0,5,0,4,2,6,0,3,0,0,6,18,9,0,1,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,sumQuerySumUpdateExample/0,false,514,2,3,0,3,3,4,13,0,5,0,4,2,6,0,2,0,0,4,12,6,0,1,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,main/1[java.lang.String[]],false,420,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,printDebugInfo/0,false,401,1,2,1,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"safeMin/2[java.lang.Long,java.lang.Long]",false,85,0,0,0,0,3,1,5,3,0,2,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,270,2,3,2,1,2,2,10,1,1,4,2,1,0,0,1,0,1,0,10,3,11,1,0,0,0,30,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,"rangeQuery1/5[int,int,int,int,int]",false,301,1,4,2,2,4,5,11,3,1,5,5,2,2,0,2,0,1,0,7,1,8,1,0,0,0,26,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree,gcdQueryMulUpdateExample/0,false,465,2,3,0,3,4,4,17,0,5,0,4,2,6,0,3,0,0,6,14,8,0,1,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TreePrinter.java,com.williamfiset.algorithms.datastructures.utils.TreePrinter,getTreeDisplay/1[com.williamfiset.algorithms.datastructures.utils.TreePrinter.PrintableNode],false,23,1,5,2,3,27,17,85,1,24,1,17,0,0,10,14,0,2,7,34,32,18,6,0,0,0,29,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01$Knapsack_01,"knapsack/3[int,int[],int[]]",false,197,1,1,1,0,9,0,17,1,6,3,0,0,0,2,3,0,0,1,10,8,11,3,0,0,0,36,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineCircleIntersection.java,com.williamfiset.algorithms.geometry.LineCircleIntersection,main/1[java.lang.String[]],false,83,1,2,0,2,1,2,5,0,0,1,2,2,1,0,0,0,0,0,18,0,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineCircleIntersection.java,com.williamfiset.algorithms.geometry.LineCircleIntersection,"lineCircleIntersection/6[double,double,double,double,double,double]",false,23,0,1,1,0,7,2,31,6,11,6,2,0,0,0,0,0,10,0,9,14,49,2,0,0,0,25,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineCircleIntersection.java,com.williamfiset.algorithms.geometry.LineCircleIntersection,display/1[java.awt.geom.Point2D[]],false,95,0,1,1,0,4,2,7,0,0,1,2,0,0,1,2,0,0,2,1,0,0,4,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection,"pointOnLine/3[com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt]",false,124,2,3,2,1,6,3,3,1,0,3,3,1,1,0,1,0,0,0,1,0,0,0,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection,main/1[java.lang.String[]],false,181,2,2,0,2,1,2,17,0,8,1,2,1,4,0,0,0,0,2,19,13,0,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection,"lineSegmentLineSegmentIntersection/4[com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt]",false,41,2,7,1,6,20,8,35,11,16,4,8,4,3,0,4,0,14,0,7,16,34,2,0,0,0,37,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection,"getCommonEndpoints/4[com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt]",false,157,1,2,1,1,9,2,20,1,1,4,2,0,0,0,0,0,0,0,0,1,0,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection,"segmentsIntersect/4[com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt]",false,133,2,3,1,2,11,2,12,6,4,4,2,2,2,0,6,0,0,0,4,4,0,1,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection,"orientation/3[com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt]",false,115,1,3,3,0,3,1,5,2,1,3,1,0,0,0,0,0,5,0,4,1,7,1,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver$Edge,"Edge/3[int,int,int]",true,21,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver.Edge],false,28,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue$Edge,"Edge/3[int,int,int]",true,56,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TarjanAdjacencyMatrix,main/1[java.lang.String[]],false,12,2,3,0,3,1,4,24,0,3,1,4,0,0,0,0,0,0,2,35,20,2,0,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,Kosaraju/1[java.util.List<java.util.List<java.lang.Integer>>],true,31,0,9,9,0,2,1,5,0,0,1,1,0,0,0,1,0,0,1,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,solve/0,false,50,3,5,2,3,4,5,19,0,1,0,5,3,2,2,0,0,0,0,2,6,0,2,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,getSccs/0,false,45,2,9,8,1,2,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,example1/0,false,207,1,4,1,3,1,3,18,0,2,0,3,3,5,0,0,0,0,0,27,2,0,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,exampleFromCp4/0,false,130,1,3,0,3,1,3,14,0,2,0,3,3,5,0,0,0,0,0,19,2,0,0,0,0,0,11,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,example4/0,false,147,1,3,0,3,1,3,17,0,2,0,3,3,5,0,0,0,0,0,25,2,0,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,sccCount/0,false,38,1,9,8,1,2,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,dfs1/1[int],false,78,1,3,2,1,3,3,10,1,0,1,3,1,0,1,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,example2/0,false,185,1,3,0,3,1,3,17,0,2,0,3,3,5,0,0,0,0,0,25,2,0,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,runKosaraju/1[java.util.List<java.util.List<java.lang.Integer>>],false,233,2,8,5,3,4,10,14,0,5,1,10,2,4,2,0,0,0,3,1,5,1,2,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,createTransposeGraph/0,false,101,1,3,1,2,3,3,8,0,1,0,3,2,1,2,0,0,0,0,1,2,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,118,0,6,6,0,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,dfs2/1[int],false,90,1,3,2,1,3,2,10,1,0,1,2,1,0,1,0,0,0,0,0,2,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,createGraph/1[int],false,111,0,6,6,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,main/1[java.lang.String[]],false,122,1,1,0,1,1,1,3,0,0,1,1,1,6,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kosaraju.java,com.williamfiset.algorithms.graphtheory.Kosaraju,example3/0,false,168,1,3,0,3,1,3,13,0,2,0,3,3,5,0,0,0,0,0,17,2,0,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList$Node,"Node/3[T,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList.Node<T>,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList.Node<T>]",true,18,2,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList$Node,toString/0,false,25,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\TernarySearchDiscrete.java,com.williamfiset.algorithms.search.TernarySearchDiscrete,main/1[java.lang.String[]],false,47,1,1,0,1,1,2,6,0,3,1,2,1,2,0,0,0,0,1,2,3,1,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\TernarySearchDiscrete.java,com.williamfiset.algorithms.search.TernarySearchDiscrete,"discreteTernarySearch/2[int,int]",false,32,1,2,1,1,6,3,15,3,4,2,3,1,1,1,3,0,2,0,8,8,10,2,0,0,0,10,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\TernarySearchDiscrete.java,com.williamfiset.algorithms.search.TernarySearchDiscrete,f/1[int],false,28,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList$Anonymous1,"compare/2[com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Node,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Node]",false,56,1,0,0,0,3,1,4,2,0,2,1,0,0,0,0,0,1,0,4,0,2,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,simpleTest/0,false,99,2,3,0,3,1,5,13,0,2,0,5,0,0,0,0,0,0,0,18,2,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,differentNumberOfNodes/0,false,117,2,3,0,3,1,5,8,0,2,0,5,0,0,0,0,0,0,0,8,2,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,testTwoNodeTree/0,false,29,2,3,0,3,1,5,7,0,2,0,5,0,0,0,0,0,0,0,6,2,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,generateRandomTree/1[int],false,150,1,3,1,2,2,6,11,1,4,1,6,0,0,1,1,0,1,0,2,4,1,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,singletonTreesAreIsomorphic/0,false,24,2,2,0,2,1,4,3,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,testIsomorphismEquivilanceAgainstOtherImpl/0,false,130,4,3,0,3,4,7,16,0,6,0,7,1,1,2,1,0,0,1,4,6,0,3,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,emptyTreeThrowsException/0,false,19,2,2,0,2,1,2,3,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,testSmall/0,false,38,2,3,0,3,1,5,13,0,2,0,5,0,0,0,0,0,0,0,18,2,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismTest,testSimilarChains/0,false,56,2,3,0,3,1,5,36,0,4,0,5,0,0,0,0,0,0,0,55,4,0,0,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection$Pt,"Pt/2[double,double]",true,29,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentLineSegmentIntersection.java,com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection$Pt,equals/1[com.williamfiset.algorithms.geometry.LineSegmentLineSegmentIntersection.Pt],false,34,1,2,2,0,3,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.IntStack,peek/0,false,32,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.IntStack,IntStack/1[int],true,23,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.IntStack,isEmpty/0,false,27,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.IntStack,pop/0,false,42,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.IntStack,push/1[int],false,37,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,"delete/2[java.lang.String,int]",false,77,2,6,5,1,5,5,18,3,4,2,5,1,2,1,0,0,0,1,3,8,0,2,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,contains/1[java.lang.String],false,110,1,7,6,1,2,1,3,1,0,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,clear/0,false,149,1,4,3,1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,count/1[java.lang.String],false,115,1,5,5,0,5,3,11,3,3,1,3,0,0,1,3,0,0,1,3,4,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,clear/1[com.williamfiset.algorithms.datastructures.trie.Trie.Node],false,134,2,2,1,1,3,4,10,1,1,1,4,1,0,1,1,0,0,0,0,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,insert/1[java.lang.String],false,68,1,10,9,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,"insert/2[java.lang.String,int]",false,28,1,5,3,2,7,4,23,1,6,2,4,0,0,1,3,0,0,2,2,12,0,3,0,0,0,28,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie,delete/1[java.lang.String],false,105,1,2,1,1,1,1,3,1,0,1,1,1,3,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest$MockRangeUpdateFt,"updateRange/3[int,int,long]",false,21,0,1,1,0,2,0,3,0,1,3,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest$MockRangeUpdateFt,MockRangeUpdateFt/1[long[]],true,13,1,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest$MockRangeUpdateFt,get/1[int],false,17,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\FreivaldsAlgorithm.java,com.williamfiset.algorithms.linearalgebra.FreivaldsAlgorithm,"freivalds/4[int[][],int[][],int[][],int]",false,36,2,2,0,2,8,3,13,2,4,4,3,2,1,1,5,0,0,1,4,4,0,2,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\FreivaldsAlgorithm.java,com.williamfiset.algorithms.linearalgebra.FreivaldsAlgorithm,"product/2[int[],int[][]]",false,22,1,1,1,0,3,0,6,1,4,2,0,0,0,2,0,0,0,0,2,5,1,2,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\FreivaldsAlgorithm.java,com.williamfiset.algorithms.linearalgebra.FreivaldsAlgorithm,randomizeVector/1[int[]],false,15,1,1,1,0,3,1,5,0,1,1,1,0,0,1,0,0,1,0,4,2,0,1,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircularSegmentArea.java,com.williamfiset.algorithms.geometry.CircularSegmentArea,"circularSegmentArea/4[java.awt.geom.Point2D,double,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,17,1,3,1,2,1,4,15,1,15,4,4,2,1,0,0,0,3,0,2,17,11,0,0,0,0,30,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircularSegmentArea.java,com.williamfiset.algorithms.geometry.CircularSegmentArea,"triangleArea/6[double,double,double,double,double,double]",false,53,0,1,1,0,1,1,8,1,5,6,1,0,0,0,0,0,0,0,1,5,8,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircularSegmentArea.java,com.williamfiset.algorithms.geometry.CircularSegmentArea,main/1[java.lang.String[]],false,91,1,1,0,1,1,2,9,0,3,1,2,1,2,0,0,0,0,0,12,5,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircularSegmentArea.java,com.williamfiset.algorithms.geometry.CircularSegmentArea,"angleBetweenVectors/4[double,double,double,double]",false,73,0,1,1,0,3,2,9,3,4,4,2,0,0,0,0,0,3,0,3,4,11,1,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$Mouse,"Mouse/2[int,int]",true,24,0,1,1,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\domino-and-tromino-tiling\Solution.java,Solution,numTilings/1[int],false,6,1,2,1,1,1,1,6,1,1,1,1,1,2,0,0,0,0,0,4,3,2,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\domino-and-tromino-tiling\Solution.java,Solution,"f/3[int,boolean,boolean]",false,15,1,4,2,2,33,2,22,3,4,3,2,2,1,0,2,0,0,0,13,14,12,1,0,0,0,15,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\domino-and-tromino-tiling\Solution.java,Solution,main/1[java.lang.String[]],false,89,1,2,0,2,2,2,6,0,2,1,2,1,3,1,0,0,0,1,2,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\domino-and-tromino-tiling\Solution.java,Solution,"makeState/2[boolean,boolean]",false,82,0,1,1,0,3,0,6,1,1,2,0,0,0,0,0,0,0,0,3,3,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\InterpolationSearch.java,com.williamfiset.algorithms.search.InterpolationSearch,main/1[java.lang.String[]],false,31,2,1,0,1,1,2,5,0,1,1,2,1,1,0,0,0,0,0,13,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\InterpolationSearch.java,com.williamfiset.algorithms.search.InterpolationSearch,"interpolationSearch/2[int[],int]",false,17,1,5,5,0,6,0,15,3,3,2,0,0,0,1,1,0,4,0,6,6,9,2,0,0,0,35,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordEdgeList.java,com.williamfiset.algorithms.graphtheory.BellmanFordEdgeList$Edge,"Edge/3[int,int,double]",true,16,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MaximumSubarray.java,com.williamfiset.algorithms.dp.MaximumSubarray,maximumSubarrayValue/1[int[]],false,17,1,1,1,0,6,0,11,2,4,1,0,0,0,1,2,0,0,0,4,7,2,2,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\MaximumSubarray.java,com.williamfiset.algorithms.dp.MaximumSubarray,main/1[java.lang.String[]],false,10,2,1,0,1,1,2,5,0,0,1,2,1,1,0,0,0,0,0,16,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$Edge,"Edge/2[int,double]",true,27,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$CapacityScalingSolver,"CapacityScalingSolver/3[int,int,int]",true,182,0,1,1,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$CapacityScalingSolver,"addEdge/3[int,int,long]",false,194,0,0,0,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$CapacityScalingSolver,solve/0,false,202,2,2,0,2,3,3,11,0,1,0,3,1,1,2,1,0,0,0,4,5,0,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$CapacityScalingSolver,"dfs/2[int,long]",false,219,3,7,2,5,6,6,15,3,2,2,6,1,0,1,1,0,0,0,2,2,0,3,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\TernarySearch.java,com.williamfiset.algorithms.search.TernarySearch,"ternarySearch/3[double,double,java.util.function.DoubleFunction<java.lang.Double>]",false,25,0,1,1,0,5,2,12,1,5,3,2,0,0,1,1,0,2,0,4,8,7,2,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\search\TernarySearch.java,com.williamfiset.algorithms.search.TernarySearch,main/1[java.lang.String[]],false,38,1,1,0,1,1,2,5,0,3,1,2,1,1,0,0,0,1,1,4,2,4,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\BitManipulationsTest.java,com.williamfiset.algorithms.other.BitManipulationsTest,testSetBit/0,false,10,2,1,0,1,1,3,8,0,0,0,3,0,0,0,0,0,0,0,18,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\BitManipulationsTest.java,com.williamfiset.algorithms.other.BitManipulationsTest,testClearBit/0,false,35,2,1,0,1,1,3,6,0,0,0,3,0,0,0,0,0,0,0,12,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\BitManipulationsTest.java,com.williamfiset.algorithms.other.BitManipulationsTest,testPowerOfTwo/0,false,20,2,1,0,1,1,4,12,0,0,0,4,0,0,0,0,0,0,0,11,0,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,isEmpty/0,false,49,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,removeLast/0,false,140,2,1,0,1,3,1,9,1,1,0,1,0,0,0,0,0,0,1,0,4,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,removeFirst/0,false,119,2,1,0,1,3,1,9,1,1,0,1,0,0,0,0,0,0,1,0,4,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,clear/0,false,31,2,0,0,0,2,0,11,0,2,0,0,0,0,1,1,0,0,0,1,10,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,contains/1[java.lang.Object],false,256,1,1,0,1,2,1,3,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,iterator/0,false,261,2,1,0,1,1,0,17,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,peekFirst/0,false,107,2,1,0,1,2,1,4,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,peekLast/0,false,113,2,1,0,1,2,1,4,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,toString/0,false,285,2,0,0,0,3,3,14,1,2,0,3,0,0,1,2,0,0,3,0,3,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,size/0,false,44,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,add/1[T],false,54,2,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,indexOf/1[java.lang.Object],false,233,2,0,0,0,6,1,19,3,2,1,1,0,0,2,4,0,0,0,2,4,0,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,addLast/1[T],false,59,3,2,0,2,2,1,10,0,0,1,1,0,0,0,0,0,0,0,0,4,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,remove/1[com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList.Node<T>],false,161,3,2,0,2,3,2,11,3,1,1,2,0,0,0,2,0,0,0,0,7,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,"addAt/2[int,T]",false,81,3,3,0,3,6,2,21,2,3,2,2,0,0,1,2,0,0,1,4,6,1,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,remove/1[java.lang.Object],false,209,3,1,0,1,6,2,20,3,1,1,2,0,0,2,4,0,0,0,0,5,0,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,removeAt/1[int],false,185,3,1,0,1,6,1,18,1,2,1,1,0,0,2,2,0,0,0,4,6,2,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\linkedlist\DoublyLinkedList.java,com.williamfiset.algorithms.datastructures.linkedlist.DoublyLinkedList,addFirst/1[T],false,70,3,2,0,2,2,1,10,0,0,1,1,0,0,0,0,0,0,0,0,4,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers$Complex,plus/1[com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex],false,62,1,2,1,1,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers$Complex,minus/1[com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex],false,66,1,2,1,1,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers$Complex,"Complex/2[double,double]",true,57,0,7,7,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers$Complex,conjugate/0,false,78,1,2,1,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers$Complex,times/1[com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers.Complex],false,70,1,3,2,1,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransformComplexNumbers.java,com.williamfiset.algorithms.math.FastFourierTransformComplexNumbers$Complex,scalar/1[double],false,74,1,2,1,1,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsAdjacencyList,main/1[java.lang.String[]],false,46,2,2,0,2,1,3,11,0,3,1,3,2,1,0,0,0,0,1,16,3,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsAdjacencyList,"addUndirectedEdge/4[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.ConnectedComponentsAdjacencyList.Edge>>,int,int,int]",false,65,1,2,1,1,2,3,9,0,1,4,3,0,0,0,1,0,0,0,0,2,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.ConnectedComponentsAdjacencyList,"countConnectedComponents/2[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.ConnectedComponentsAdjacencyList.Edge>>,int]",false,29,2,4,1,3,4,3,12,1,3,2,3,0,0,2,1,0,0,0,1,3,0,3,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree$KDNode,KDNode/1[E[]],true,187,1,0,0,0,3,0,7,0,0,1,0,0,0,0,2,0,0,3,0,3,1,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,incraeseDegree/0,false,75,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,getElement/0,false,91,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,getDegree/0,false,71,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,setLeft/1[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>],false,51,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,getLeft/0,false,47,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,FibonacciHeapNode/1[E],true,21,2,5,0,5,1,5,9,0,0,1,5,0,0,0,0,0,0,0,1,2,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,setParent/1[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>],false,43,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,getRight/0,false,55,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,setChild/1[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>],false,67,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,isMarked/0,false,83,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,setMarked/1[boolean],false,87,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,getParent/0,false,39,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,setRight/1[com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode<E>],false,59,2,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,toString/0,false,96,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,getChild/0,false,63,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciNode.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapNode,decraeseDegree/0,false,79,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\boardtilings\BoardTilingsSolver.java,com.williamfiset.algorithms.dp.examples.boardtilings.BoardTilingsSolver,init/0,false,16,0,1,1,0,2,2,5,0,0,0,2,0,0,1,0,0,0,0,2,0,1,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\boardtilings\BoardTilingsSolver.java,com.williamfiset.algorithms.dp.examples.boardtilings.BoardTilingsSolver,recursiveSolution/1[int],false,37,1,2,1,1,1,1,4,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\boardtilings\BoardTilingsSolver.java,com.williamfiset.algorithms.dp.examples.boardtilings.BoardTilingsSolver,main/1[java.lang.String[]],false,64,2,3,0,3,2,4,12,0,4,1,4,2,2,1,0,0,0,4,7,4,0,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\boardtilings\BoardTilingsSolver.java,com.williamfiset.algorithms.dp.examples.boardtilings.BoardTilingsSolver,"f/2[int,java.util.Map<java.lang.Integer,java.lang.Long>]",false,44,1,3,2,1,5,5,16,3,1,2,5,1,0,1,2,0,0,0,4,3,3,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\boardtilings\BoardTilingsSolver.java,com.williamfiset.algorithms.dp.examples.boardtilings.BoardTilingsSolver,iterativeSolution/1[int],false,23,1,1,1,0,4,2,11,1,2,1,2,0,0,2,0,0,0,0,5,4,4,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\boardtilings\BoardTilingsSolver.java,com.williamfiset.algorithms.dp.examples.boardtilings.BoardTilingsSolver,BoardTilingsSolver/1[int[]],true,11,2,2,1,1,1,1,4,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\JosephusProblem.java,com.williamfiset.algorithms.dp.JosephusProblem,main/1[java.lang.String[]],false,21,1,1,0,1,1,2,10,0,2,1,2,1,1,0,0,0,0,0,6,6,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\JosephusProblem.java,com.williamfiset.algorithms.dp.JosephusProblem,"josephus/2[int,int]",false,15,1,1,1,0,2,0,5,1,2,2,0,0,0,1,0,0,2,0,4,3,5,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"assignFunction/2[java.lang.Long,java.lang.Long]",false,114,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"propagate1/3[int,int,int]",false,125,1,3,2,1,2,1,7,0,0,3,1,1,2,0,1,0,0,0,0,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,printDebugInfo/0,false,247,1,2,1,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,main/1[java.lang.String[]],false,266,2,4,0,4,1,5,27,0,2,1,5,3,7,0,0,0,0,0,45,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"minFunction/2[java.lang.Long,java.lang.Long]",false,26,0,3,3,0,5,1,6,4,0,2,1,0,0,0,4,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,61,2,4,2,2,2,2,10,1,1,4,2,2,1,0,1,0,1,0,10,3,11,1,0,0,0,32,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"rangeQuery1/5[int,int,int,int,int]",false,92,1,5,2,3,4,5,11,3,1,5,5,3,3,0,2,0,1,0,7,1,8,1,0,0,0,28,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"propagateLazy/4[int,int,int,long]",false,118,1,3,2,1,2,1,5,1,0,4,1,1,1,0,1,0,0,0,6,2,4,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"printDebugInfo/3[int,int,int]",false,252,1,3,2,1,2,2,9,1,1,3,2,1,0,0,1,0,1,1,6,1,7,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"rangeQuery1/2[int,int]",false,79,1,3,2,1,1,1,3,1,0,2,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,MinQueryAssignUpdateSegmentTree/1[long[]],true,33,2,3,2,1,2,1,10,0,1,1,1,1,2,0,1,0,0,1,4,4,2,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"rangeUpdate1/6[int,int,int,int,int,long]",false,136,1,6,2,4,4,6,17,1,1,6,6,4,2,0,2,0,1,0,11,4,12,1,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTree,"rangeUpdate1/3[int,int,long]",false,109,1,3,2,1,1,1,3,0,0,3,1,1,3,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\Heapsort.java,com.williamfiset.algorithms.sorting.Heapsort,heapsort/1[int[]],false,21,2,3,1,2,4,3,11,1,3,1,3,2,2,2,1,0,1,0,8,3,3,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\Heapsort.java,com.williamfiset.algorithms.sorting.Heapsort,sort/1[int[]],false,17,2,2,1,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\Heapsort.java,com.williamfiset.algorithms.sorting.Heapsort,main/1[java.lang.String[]],false,66,2,2,0,2,1,3,6,0,2,1,3,1,4,0,0,0,0,0,8,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\Heapsort.java,com.williamfiset.algorithms.sorting.Heapsort,"sink/3[int[],int,int]",false,38,2,2,1,1,7,1,14,0,3,3,1,1,1,1,1,0,0,0,4,6,4,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\Heapsort.java,com.williamfiset.algorithms.sorting.Heapsort,"swap/3[int[],int,int]",false,58,1,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,peek/0,false,80,2,1,0,1,2,2,4,2,0,0,2,0,0,0,0,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,remove/1[T],false,183,2,2,0,2,4,2,6,2,1,1,2,0,0,0,3,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,"mapAdd/2[T,int]",false,252,1,0,0,0,2,3,9,0,1,2,3,0,0,0,1,0,0,0,0,2,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,"mapRemove/2[T,int]",false,268,1,0,0,0,2,4,5,0,1,2,4,0,0,0,1,0,0,0,1,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,"swap/2[int,int]",false,171,2,1,0,1,1,3,7,0,2,2,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,add/1[T],false,107,2,3,0,3,2,4,7,0,1,1,4,0,0,0,1,0,0,0,1,1,1,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,BinaryHeapQuickRemovals/1[java.util.Collection<T>],true,56,2,1,0,1,2,2,4,0,0,1,2,0,0,1,0,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,"mapSwap/4[T,T,int,int]",false,284,1,0,0,0,1,3,8,0,2,4,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,BinaryHeapQuickRemovals/0,true,29,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,clear/0,false,67,0,0,0,0,1,2,4,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,removeAt/1[int],false,202,2,6,0,6,4,9,13,3,3,1,9,0,0,0,1,0,0,0,1,3,1,1,0,0,0,20,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,swim/1[int],false,128,1,2,0,2,3,2,8,0,1,1,2,0,0,1,0,0,2,0,5,3,4,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,isMinHeap/1[int],false,232,1,3,0,3,6,3,9,4,3,1,3,0,0,0,0,0,0,0,4,3,4,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,mapGet/1[T],false,277,1,0,0,0,2,2,5,2,1,1,2,0,0,0,1,0,0,0,0,1,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,BinaryHeapQuickRemovals/1[T[]],true,40,2,2,0,2,3,4,9,0,3,1,4,0,0,2,0,0,1,0,5,4,2,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,poll/0,false,86,2,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,sink/1[int],false,147,1,3,0,3,6,3,12,0,4,1,3,0,0,1,0,0,0,0,4,6,4,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,BinaryHeapQuickRemovals/1[int],true,34,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,isEmpty/0,false,62,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,contains/1[T],false,91,1,0,0,0,2,1,4,2,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,size/0,false,73,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,"less/2[int,int]",false,120,1,0,0,0,2,2,5,1,2,2,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovals.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovals,toString/0,false,297,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree$Node,"Node/2[T,int]",true,31,1,0,0,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree$Node,getValue/0,false,37,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree$Node,getLeft/0,false,46,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree$Node,getRight/0,false,51,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree$Node,setValue/1[T],false,41,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTree.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTree$Node,getText/0,false,56,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\houserobber\HouseRobber.java,com.williamfiset.algorithms.dp.examples.houserobber.HouseRobber,main/1[java.lang.String[]],false,48,2,3,0,3,3,4,15,0,5,1,4,2,1,1,1,0,0,4,11,6,1,1,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\houserobber\HouseRobber.java,com.williamfiset.algorithms.dp.examples.houserobber.HouseRobber,rob/1[int[]],false,25,1,1,1,0,2,2,9,1,3,1,2,0,0,1,0,0,0,0,6,5,5,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\houserobber\HouseRobber.java,com.williamfiset.algorithms.dp.examples.houserobber.HouseRobber,findRobbedHouses/1[int[]],false,37,1,1,1,0,3,1,10,1,4,1,1,0,0,1,0,0,0,0,5,4,5,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,PrimsAdjList/1[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis.Edge>>],true,136,1,1,1,0,3,2,5,0,0,1,2,0,0,0,1,0,0,0,0,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,getMstCost/0,false,149,1,2,1,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,solve/0,false,177,4,7,2,5,5,7,18,1,5,0,7,1,1,1,2,0,1,0,5,12,2,1,0,0,0,23,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,createEmptyGraph/1[int],false,211,1,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,getMst/0,false,144,2,1,0,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,"addUndirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis.Edge>>,int,int,int]",false,221,2,2,1,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,relaxEdgesAtNode/1[int],false,154,2,4,1,3,4,4,14,0,2,1,4,0,0,1,0,0,0,0,0,3,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjList,"addDirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis.Edge>>,int,int,int]",false,217,1,2,1,1,1,2,3,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver$UnionFind,"union/2[int,int]",false,129,1,2,1,1,3,1,13,1,2,2,1,1,1,0,1,0,0,0,0,6,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver$UnionFind,UnionFind/1[int],true,100,1,1,1,0,2,0,8,0,1,1,0,0,0,1,0,0,0,0,2,5,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver$UnionFind,"connected/2[int,int]",false,121,1,2,1,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver$UnionFind,find/1[int],false,109,0,3,3,0,3,0,10,1,2,1,0,0,0,2,2,0,0,0,0,5,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver$UnionFind,size/1[int],false,125,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,stringHash/0,false,59,0,0,0,0,2,2,11,0,5,0,2,0,0,1,0,0,0,0,4,8,1,1,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,DoubleHashingTestObject/1[int[]],true,37,1,0,0,0,2,2,6,0,0,1,2,2,2,0,1,0,0,1,0,1,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,hashCode2/0,false,85,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,DoubleHashingTestObject/1[String],true,44,1,0,0,0,2,2,6,0,0,1,2,2,2,0,1,0,0,1,0,1,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,vectorHash/0,false,55,0,0,0,0,2,0,3,0,1,0,0,0,0,1,0,0,0,0,1,2,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,DoubleHashingTestObject/1[int],true,31,0,0,0,0,1,2,5,0,0,1,2,2,2,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,hashCode/0,false,80,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,(initializer 1),false,22,0,6,0,6,3,1,8,0,2,0,1,0,0,2,1,0,0,0,3,5,1,2,0,0,0,17,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,intHash/0,false,51,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,equals/1[Object],false,90,2,0,0,0,4,1,7,4,1,1,1,0,0,0,3,0,0,0,0,1,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,DoubleHashingTestObject,computeHash/0,false,73,0,0,0,0,3,1,5,0,0,0,1,1,1,0,2,0,0,0,0,3,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayTest.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest,lcpTest1/0,false,72,6,5,0,5,3,4,13,0,7,0,4,0,0,2,0,0,0,1,11,7,0,2,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayTest.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest,lcsUniqueCharacters/0,false,38,5,5,0,5,3,4,11,0,5,0,4,0,0,2,0,0,0,0,2,5,0,2,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayTest.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest,lcpTest2/0,false,91,6,5,0,5,3,4,13,0,7,0,4,0,0,2,0,0,0,1,11,7,0,2,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayTest.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest,suffixArrayLength/0,false,25,5,4,0,4,1,4,9,0,4,0,4,0,0,0,0,0,0,1,0,4,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayTest.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest,setup/0,false,22,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayTest.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest,saConstruction/0,false,109,5,4,0,4,4,3,16,0,10,0,3,0,0,3,0,0,0,1,3,10,1,3,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayTest.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayTest,increasingLCPTest/0,false,54,5,5,0,5,3,4,12,0,6,0,4,0,0,2,0,0,0,1,1,6,0,2,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,poll/0,false,38,2,2,0,2,2,2,7,1,0,0,2,0,0,0,0,0,0,2,0,1,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,peek/0,false,48,2,2,0,2,2,2,7,1,0,0,2,0,0,0,0,0,0,2,0,1,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,isEmpty/0,false,62,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,"adjustIndex/2[int,int]",false,70,0,0,0,0,2,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,size/0,false,57,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,offer/1[T],false,28,2,2,0,2,2,2,7,0,0,1,2,0,0,0,0,0,0,1,0,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,isFull/0,false,66,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,1,0,3,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\ArrayQueue.java,com.williamfiset.algorithms.datastructures.queue.ArrayQueue,ArrayQueue/1[int],true,20,0,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,3,3,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterative,findBridges/0,false,36,2,1,1,0,11,6,49,2,7,0,6,0,0,3,2,0,0,0,3,19,0,5,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterative,main/1[java.lang.String[]],false,97,1,4,0,4,2,6,23,0,7,1,6,3,1,1,0,0,0,1,30,7,4,1,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterative,"BridgesAdjacencyListIterative/2[java.util.List<java.util.List<java.lang.Integer>>,int]",true,26,0,1,1,0,4,1,5,0,0,2,1,0,0,0,2,0,0,0,1,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterative,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,132,0,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyListIterative,createGraph/1[int],false,125,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,testRandomizedStaticSumQueries/0,false,91,4,3,0,3,3,2,9,0,4,0,2,2,3,2,0,0,0,0,3,4,1,2,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,"highBound/2[int,int]",false,164,0,1,1,0,1,2,3,1,0,2,2,0,0,0,0,0,1,0,0,0,2,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,setup/0,false,19,2,1,0,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,randValue/0,false,168,0,4,4,0,1,1,3,1,0,0,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,testIntervalSumNegativeValues/0,false,50,3,2,0,2,1,3,16,0,2,0,3,0,0,0,0,0,0,0,42,2,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,"doRandomRangeQuery/2[long[],com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate]",false,105,3,6,3,3,2,5,8,0,5,2,5,2,1,1,0,0,0,0,2,6,1,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,testRandomizedSetSumQueries/0,false,121,4,5,0,5,3,5,13,0,6,0,5,3,3,2,0,0,1,0,4,7,3,2,0,0,0,27,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,testReusability/0,false,143,4,4,0,4,3,3,13,0,6,0,3,2,2,2,0,0,0,0,4,7,1,2,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,testIntervalSumNegativeValues2/0,false,72,3,2,0,2,2,3,14,0,3,0,3,0,0,1,0,0,0,0,27,3,0,1,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,testIllegalCreation/0,false,173,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,lowBound/1[int],false,160,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,testIntervalSumPositiveValues/0,false,24,3,2,0,2,1,3,19,0,2,0,3,0,0,0,0,0,0,0,51,2,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdateTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdateTest,genRandList/1[int],false,178,2,3,2,1,2,1,7,1,2,1,1,1,1,1,0,0,0,0,2,3,1,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\graphutils\GraphGenerator.java,com.williamfiset.algorithms.utils.graphutils.GraphGenerator$DagGenerator,"DagGenerator/5[int,int,int,int,double]",true,18,0,3,3,0,1,0,7,0,0,5,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\graphutils\GraphGenerator.java,com.williamfiset.algorithms.utils.graphutils.GraphGenerator$DagGenerator,createDag/0,false,35,3,6,3,3,6,4,22,1,9,0,4,1,1,4,0,0,0,0,8,12,4,4,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\graphutils\GraphGenerator.java,com.williamfiset.algorithms.utils.graphutils.GraphGenerator$DagGenerator,"rand/2[int,int]",false,31,0,1,1,0,1,1,3,1,0,2,1,0,0,0,0,0,3,0,1,0,4,0,0,0,0,14,10,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDFSAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDFSAdjacencyMatrix,"dfs/5[int[][],int[],int,int,int]",false,47,2,3,2,1,7,1,17,3,3,5,1,1,0,1,2,0,0,0,4,7,0,3,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDFSAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDFSAdjacencyMatrix,"fordFulkerson/3[int[][],int,int]",false,16,3,1,0,1,3,1,13,1,5,3,1,1,1,1,1,0,0,0,2,6,0,2,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring,main/1[java.lang.String[]],false,15,1,2,0,2,1,2,11,0,2,1,2,0,0,0,0,0,0,6,0,6,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonPrefixArray.java,com.williamfiset.algorithms.strings.LongestCommonPrefixArray,main/1[java.lang.String[]],false,17,1,2,0,2,1,3,6,0,2,1,3,0,0,0,0,0,0,2,0,2,1,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,pollMinValue/0,false,468,2,3,0,3,1,3,5,1,1,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"MinIndexedDHeap/2[int,int]",true,419,1,0,0,0,3,1,15,0,1,2,1,0,0,1,0,0,1,1,7,12,5,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,isNotEmptyOrThrow/0,false,584,1,1,0,1,2,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,swim/1[int],false,542,1,2,0,2,2,2,6,0,0,1,2,0,0,1,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,isMinHeap/1[int],false,614,1,2,0,2,4,3,8,3,3,1,3,0,0,1,0,0,0,0,0,3,1,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"increase/2[int,T]",false,524,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,peekMinValue/0,false,463,2,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,isEmpty/0,false,442,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,delete/1[int],false,490,2,4,0,4,1,4,12,1,2,1,4,0,0,0,0,0,0,1,2,5,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"less/2[int,int]",false,566,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,pollMinKeyIndex/0,false,456,1,2,0,2,1,2,5,1,1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,valueOf/1[int],false,484,2,1,0,1,1,1,4,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"swap/2[int,int]",false,556,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,minChild/1[int],false,550,1,1,0,1,3,2,5,1,4,1,2,0,0,1,0,0,0,0,1,6,1,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"decrease/2[int,T]",false,515,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,keyInBoundsOrThrow/1[int],false,601,0,0,0,0,3,0,3,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,isMinHeap/0,false,610,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,size/0,false,438,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"update/2[int,T]",false,504,2,3,0,3,1,3,9,1,2,2,3,0,0,0,0,0,0,1,0,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"less/2[java.lang.Object,java.lang.Object]",false,571,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"keyExistsAndValueNotNullOrThrow/2[int,java.lang.Object]",false,588,1,2,0,2,1,2,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,keyExistsOrThrow/1[int],false,593,1,1,0,1,2,1,3,0,0,1,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,sink/1[int],false,534,1,2,0,2,2,2,7,0,1,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,toString/0,false,576,0,0,0,0,2,2,5,1,2,0,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,contains/1[int],false,446,1,1,0,1,2,1,4,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,peekMinKeyIndex/0,false,451,1,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,"insert/2[int,T]",false,474,2,3,0,3,2,3,8,0,0,2,3,0,0,0,0,0,0,1,0,3,1,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$MinIndexedDHeap,valueNotNullOrThrow/1[java.lang.Object],false,597,0,0,0,0,2,0,3,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,getMinWeightCost/0,false,129,1,2,1,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,reconstructMatching/1[int[]],false,209,2,2,1,1,8,4,30,0,12,1,4,1,1,2,5,0,1,0,11,19,6,2,0,0,0,32,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,getBitPosition/1[int],false,256,0,1,1,0,2,0,8,1,1,1,0,0,0,1,0,0,0,0,3,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,getMatching/0,false,151,2,2,1,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,44,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,"f/3[int,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost[],int[]]",false,168,3,8,2,6,10,4,29,3,6,3,4,1,0,2,2,0,6,0,10,10,5,3,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,test/0,false,271,2,4,1,3,3,4,17,0,7,0,4,2,4,1,1,0,0,3,42,7,4,1,0,0,0,19,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,setCostMatrix/1[java.lang.Double[][]],false,100,0,1,1,0,7,0,25,0,4,1,0,0,0,3,1,0,1,0,8,13,3,2,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,WeightedMaximumCardinalityMatchingRecursive/1[java.lang.Double[][]],true,89,1,10,9,1,3,1,7,0,0,1,1,1,1,0,1,0,1,2,3,2,3,1,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,solve/0,false,156,3,4,2,2,2,2,9,1,3,0,2,2,2,0,0,0,0,0,2,5,2,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive,main/1[java.lang.String[]],false,267,1,1,0,1,1,1,3,0,0,1,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeDiameter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeDiameter,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,119,0,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeDiameter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeDiameter,"resetGraph/2[java.util.List<java.util.List<java.lang.Integer>>,int]",false,115,0,1,1,0,2,2,3,0,1,2,2,0,0,1,0,0,0,0,1,1,0,1,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeDiameter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeDiameter,"dfs/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,24,2,3,2,1,5,2,17,2,5,3,2,1,0,1,2,0,0,0,6,8,1,3,0,0,0,22,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeDiameter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeDiameter,"treeDiameter/2[java.util.List<java.util.List<java.lang.Integer>>,int]",false,51,1,2,1,1,3,1,9,3,2,2,1,1,1,0,2,0,0,0,8,2,1,1,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeDiameter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeDiameter,main/1[java.lang.String[]],false,70,1,4,0,4,4,5,32,0,3,1,5,4,2,0,3,0,0,6,40,6,3,1,0,0,0,24,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeDiameter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeDiameter,createGraph/1[int],false,109,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TestUtils.java,com.williamfiset.algorithms.datastructures.utils.TestUtils,"randLong/2[long,long]",false,37,0,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,3,0,0,0,3,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TestUtils.java,com.williamfiset.algorithms.datastructures.utils.TestUtils,randomUniformUniqueIntegerList/1[int],false,17,0,2,2,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TestUtils.java,com.williamfiset.algorithms.datastructures.utils.TestUtils,"sortedIntegerList/2[int,int]",false,42,0,1,1,0,2,1,5,1,2,2,1,0,0,1,0,0,0,0,0,2,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TestUtils.java,com.williamfiset.algorithms.datastructures.utils.TestUtils,"randomIntegerList/3[int,int,int]",false,9,1,3,2,1,2,2,5,1,2,3,2,1,1,1,0,0,0,0,1,2,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TestUtils.java,com.williamfiset.algorithms.datastructures.utils.TestUtils,"randInt/2[int,int]",false,32,0,1,1,0,1,1,3,1,0,2,1,0,0,0,0,0,3,0,0,0,3,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TestUtils.java,com.williamfiset.algorithms.datastructures.utils.TestUtils,"randomUniformUniqueIntegerList/2[int,int]",false,24,0,0,0,0,2,2,6,1,2,2,2,0,0,1,0,0,0,0,0,2,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray$Color,toString/0,false,208,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray$Color,Color/1[java.lang.String],true,203,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,clear/0,false,40,0,0,0,0,1,1,4,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,poll/0,false,53,2,2,0,2,2,2,8,2,1,0,2,0,0,0,0,0,0,0,3,3,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,size/0,false,30,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,"less/2[int,int]",false,92,0,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,sink/1[int],false,70,1,2,0,2,2,2,7,0,1,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,"MinDHeap/2[int,int]",true,16,2,0,0,0,2,1,11,0,1,2,1,0,0,1,0,0,1,0,4,8,4,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,peek/0,false,46,2,1,0,1,2,1,4,2,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,minChild/1[int],false,86,1,1,0,1,3,2,5,1,4,1,2,0,0,1,0,0,0,0,1,6,1,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,"swap/2[int,int]",false,96,1,0,0,0,1,0,5,0,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,add/1[T],false,63,2,1,0,1,2,1,6,0,0,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,swim/1[int],false,78,1,2,0,2,2,2,6,0,0,1,2,0,0,1,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinDHeap,isEmpty/0,false,35,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\KMP.java,com.williamfiset.algorithms.strings.KMP,"kmpHelper/2[java.lang.String,int]",false,40,1,1,1,0,4,1,13,1,3,2,1,0,0,1,1,0,0,0,4,5,1,3,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\KMP.java,com.williamfiset.algorithms.strings.KMP,main/1[java.lang.String[]],false,53,1,1,0,1,1,2,8,0,1,1,2,1,2,0,0,0,0,6,0,3,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\KMP.java,com.williamfiset.algorithms.strings.KMP,"kmp/2[java.lang.String,java.lang.String]",false,12,2,2,1,1,10,4,22,3,6,2,4,1,1,1,6,0,0,0,6,9,4,3,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$CompactMinSegmentTree,CompactMinSegmentTree/1[int[]],true,554,2,2,1,1,2,1,4,0,1,1,1,1,2,1,0,0,0,0,1,1,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$CompactMinSegmentTree,"function/2[int,int]",false,560,0,2,2,0,4,0,5,3,0,2,0,0,0,0,2,0,1,0,0,0,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$CompactMinSegmentTree,"query/2[int,int]",false,575,1,2,1,1,7,1,11,1,1,2,1,1,1,1,3,0,2,1,6,7,0,2,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$CompactMinSegmentTree,CompactMinSegmentTree/1[int],true,549,1,0,0,0,1,1,4,0,0,1,1,0,0,0,0,0,1,0,1,2,1,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$CompactMinSegmentTree,"modify/2[int,int]",false,567,1,2,1,1,2,1,6,0,0,2,1,1,1,1,0,0,0,0,4,4,3,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\CompressedPrimeSieve.java,com.williamfiset.algorithms.math.CompressedPrimeSieve,main/1[java.lang.String[]],false,66,2,2,0,2,3,3,9,0,3,1,3,2,3,1,0,0,0,1,2,3,0,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\CompressedPrimeSieve.java,com.williamfiset.algorithms.math.CompressedPrimeSieve,"isPrime/2[long[],int]",false,41,2,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\CompressedPrimeSieve.java,com.williamfiset.algorithms.math.CompressedPrimeSieve,"setBit/2[long[],int]",false,24,1,1,1,0,3,0,4,1,0,2,0,0,0,0,1,0,3,0,5,1,4,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\CompressedPrimeSieve.java,com.williamfiset.algorithms.math.CompressedPrimeSieve,primeSieve/1[int],false,47,2,3,1,2,5,4,10,1,5,1,4,2,1,2,0,0,0,0,4,8,2,4,0,0,0,23,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\CompressedPrimeSieve.java,com.williamfiset.algorithms.math.CompressedPrimeSieve,"isNotSet/2[long[],int]",false,31,1,2,2,0,6,0,8,4,2,2,0,0,0,0,3,0,4,0,7,2,4,1,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,traverse/1[com.williamfiset.algorithms.datastructures.binarysearchtree.TreeTraversalOrder],false,207,3,4,0,4,5,4,14,5,0,1,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,preOrderTraversal/0,false,223,3,1,0,1,1,1,22,1,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,"add/2[com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node,T]",false,61,2,2,0,2,3,2,14,1,0,2,2,0,0,0,1,0,0,0,1,3,0,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,contains/1[T],false,169,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,remove/1[T],false,80,2,2,0,2,2,2,8,2,0,1,2,0,0,0,0,0,0,0,0,1,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,levelOrderTraversal/0,false,332,3,1,0,1,1,1,22,1,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,"remove/2[com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node,T]",false,92,2,2,0,2,6,3,24,4,2,2,3,0,0,0,3,0,0,0,2,6,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,inOrderTraversal/0,false,253,3,1,0,1,1,1,29,1,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,19,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,add/1[T],false,45,2,2,0,2,2,2,10,2,0,1,2,0,0,0,0,0,0,0,0,1,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,findMin/1[com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node],false,157,1,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,findMax/1[com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node],false,163,1,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,isEmpty/0,false,34,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,postOrderTraversal/0,false,298,3,1,0,1,5,3,28,1,4,0,3,0,0,1,3,0,0,0,0,4,0,3,1,0,0,19,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,size/0,false,39,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,height/1[com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node],false,199,1,1,0,1,2,2,4,2,0,1,2,0,0,0,1,0,0,0,2,0,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,"contains/2[com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree<T>.Node,T]",false,174,2,1,0,1,4,2,7,4,1,2,2,0,0,0,1,0,0,0,2,1,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree,height/0,false,194,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\ZAlgorithm.java,com.williamfiset.algorithms.strings.ZAlgorithm,calculateZ/1[java.lang.String],false,13,1,4,4,0,10,3,29,2,6,1,3,0,0,3,3,0,0,0,4,13,7,6,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\MinimumCostConvexPolygonTriangulationTest.java,com.williamfiset.algorithms.geometry.MinimumCostConvexPolygonTriangulationTest,MinimumCostConvexPolygonTriangulationConvex/0,false,38,2,1,0,1,1,4,11,0,2,0,4,0,0,0,0,0,0,0,20,8,0,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\MinimumCostConvexPolygonTriangulationTest.java,com.williamfiset.algorithms.geometry.MinimumCostConvexPolygonTriangulationTest,MinimumCostConvexPolygonTriangulationBasicTest/0,false,13,2,1,0,1,1,4,10,0,2,0,4,0,0,0,0,0,0,0,17,7,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\MinimumCostConvexPolygonTriangulationTest.java,com.williamfiset.algorithms.geometry.MinimumCostConvexPolygonTriangulationTest,MinimumCostConvexPolygonTriangulationInvalidTest/0,false,27,2,1,0,1,1,3,7,0,2,0,3,0,0,0,0,0,0,0,8,4,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,"bruteForceSum/3[long[],int,int]",false,71,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,"bruteForceMin/3[long[],int,int]",false,80,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,setup/0,false,19,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,"bruteForceMax/3[long[],int,int]",false,89,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,109,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,simpleTest/0,false,22,3,3,0,3,1,4,11,0,2,0,4,0,0,0,0,0,0,0,54,2,25,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,97,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,testRandomRangeSumUpdatesWithSumRangeQueries/0,false,38,5,7,0,7,3,11,22,0,13,0,11,2,1,2,0,0,0,0,14,15,4,2,0,0,0,42,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTreeTest,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,103,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\IsPrime.java,com.williamfiset.algorithms.math.IsPrime,isPrime/1[long],false,10,0,1,1,0,9,1,12,5,2,1,1,0,0,1,6,0,1,0,12,3,5,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\IsPrime.java,com.williamfiset.algorithms.math.IsPrime,main/1[java.lang.String[]],false,25,1,1,0,1,1,2,6,0,0,1,2,1,1,0,0,0,0,0,4,0,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,initializeEmptyFlowGraph/0,false,105,1,1,1,0,2,0,4,0,1,0,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,"addEdge/3[int,int,long]",false,117,1,2,1,1,2,1,9,0,2,3,1,0,0,0,0,0,0,1,2,4,0,1,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,getGraph/0,false,132,2,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,visit/1[int],false,144,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,solve/0,false,167,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1025,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,"NetworkFlowSolverBase/3[int,int,int]",true,95,2,1,0,1,1,1,7,0,0,3,1,1,1,0,0,0,0,0,0,4,0,0,0,0,0,35,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,markAllNodesAsUnvisited/0,false,155,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,getMaxFlow/0,false,138,1,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,execute/0,false,160,1,3,2,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$NetworkFlowSolverBase,visited/1[int],false,149,0,1,1,0,2,0,3,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,testTwoDisjointComponents/0,false,43,3,7,0,7,1,11,14,0,4,0,11,3,1,0,0,0,0,0,16,4,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,testDisjointTree/0,false,86,3,7,0,7,1,11,14,0,4,0,11,3,1,0,0,0,0,0,18,4,0,0,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,19,0,6,6,0,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,singletonCase/0,false,29,4,5,0,5,1,6,10,0,5,0,6,1,1,0,0,0,0,0,2,5,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,testDisjointTreeFromHackerrank/0,false,115,3,7,0,7,1,11,24,0,4,0,11,3,1,0,0,0,0,0,47,4,0,0,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,testButterflyCase/0,false,65,3,7,0,7,1,11,15,0,4,0,11,3,1,0,0,0,0,0,18,4,0,0,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,testFirstGraphInSlides/0,false,161,3,7,0,7,1,11,25,0,4,0,11,3,1,0,0,0,0,0,42,4,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,"isScc/2[int[],java.util.List<java.util.List<java.lang.Integer>>]",false,225,1,6,6,0,5,4,16,3,3,2,4,0,0,2,1,0,0,0,2,4,0,2,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,testLastGraphInSlides/0,false,197,3,7,0,7,1,11,22,0,4,0,11,3,1,0,0,0,0,0,35,4,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,nullGraphConstructor/0,false,24,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyListTest,createGraph/1[int],false,12,0,7,7,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,"bruteForceMin/3[long[],int,int]",false,100,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,testRandomRangeSumUpdatesWithSumRangeQueries/0,false,58,5,7,0,7,3,10,22,0,13,0,10,2,1,2,0,0,0,0,14,15,4,2,0,0,0,38,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,setup/0,false,18,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,"bruteForceSum/3[long[],int,int]",false,91,1,0,0,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,117,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,123,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,"bruteForceMax/3[long[],int,int]",false,109,1,1,1,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,simpleTest/0,false,21,3,3,0,3,1,4,29,0,2,0,4,0,0,0,0,0,0,0,80,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MaxQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MaxQuerySumUpdateSegmentTreeTest,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,129,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,(initializer 1),false,35,0,6,0,6,2,0,5,0,2,0,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,2,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,"add/2[long[],char]",false,91,1,2,2,0,2,0,5,0,1,2,0,0,0,1,0,0,1,0,1,2,2,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,AnagramSet/0,true,41,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,"remove/2[long[],char]",false,98,1,0,0,0,2,0,5,0,1,2,0,0,0,1,0,0,1,0,1,2,3,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,AnagramSet/1[int[]],true,45,3,1,0,1,3,4,14,0,4,1,4,0,0,2,0,0,0,0,2,10,0,2,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,contains/1[long[]],false,111,2,2,1,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,computeHashShallow/1[java.lang.String],false,76,2,3,2,1,2,4,5,1,1,1,4,1,1,1,0,0,0,0,2,1,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,add/1[java.lang.String],false,86,2,2,0,2,1,2,3,0,0,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,computeHash/1[java.lang.String],false,65,2,1,0,1,2,5,5,1,1,1,5,1,1,1,0,0,0,0,2,1,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\AnagramSet.java,com.williamfiset.algorithms.datastructures.bloomfilter.AnagramSet,contains/1[java.lang.String],false,105,1,2,0,2,1,2,3,1,0,1,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\InsertionSort.java,com.williamfiset.algorithms.sorting.InsertionSort,insertionSort/1[int[]],false,23,2,2,1,1,5,1,10,1,2,1,1,1,1,2,1,0,0,0,4,2,2,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\InsertionSort.java,com.williamfiset.algorithms.sorting.InsertionSort,"swap/3[int[],int,int]",false,35,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\InsertionSort.java,com.williamfiset.algorithms.sorting.InsertionSort,sort/1[int[]],false,15,2,1,0,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\InsertionSort.java,com.williamfiset.algorithms.sorting.InsertionSort,main/1[java.lang.String[]],false,41,3,2,0,2,1,3,6,0,2,1,3,0,0,0,0,0,0,0,7,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilter.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilter,add/1[long[]],false,46,2,5,4,1,2,1,5,0,1,1,1,1,1,1,0,0,0,0,1,1,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilter.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilter,toString/0,false,63,1,1,1,0,8,4,19,1,8,0,4,0,0,5,1,0,1,1,6,10,4,3,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilter.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilter,BloomFilter/1[int[]],true,27,2,2,2,0,2,1,8,0,1,1,1,0,0,1,0,0,0,0,1,5,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilter.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilter,contains/1[long[]],false,53,1,3,3,0,4,0,8,2,3,1,0,0,0,1,1,0,3,0,2,3,2,2,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilter.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilter,"add/2[int,long]",false,37,0,1,1,0,1,0,5,0,1,2,0,0,0,0,0,0,3,0,1,3,3,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"MinIndexedDHeap/2[int,int]",true,226,1,0,0,0,3,1,15,0,1,2,1,0,0,1,0,0,1,1,7,12,5,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,pollMinValue/0,false,275,2,3,0,3,1,3,5,1,1,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,isNotEmptyOrThrow/0,false,391,1,1,0,1,2,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,isMinHeap/1[int],false,421,1,2,0,2,4,3,8,3,3,1,3,0,0,1,0,0,0,0,0,3,1,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"increase/2[int,T]",false,331,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,isEmpty/0,false,249,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,peekMinValue/0,false,270,2,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,delete/1[int],false,297,2,4,0,4,1,4,12,1,2,1,4,0,0,0,0,0,0,1,2,5,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,pollMinKeyIndex/0,false,263,1,2,0,2,1,2,5,1,1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,valueOf/1[int],false,291,2,1,0,1,1,1,4,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"less/2[int,int]",false,373,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,minChild/1[int],false,357,1,1,0,1,3,2,5,1,4,1,2,0,0,1,0,0,0,0,1,6,1,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"swap/2[int,int]",false,363,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"update/2[int,T]",false,311,2,3,0,3,1,3,9,1,2,2,3,0,0,0,0,0,0,1,0,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"less/2[java.lang.Object,java.lang.Object]",false,378,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,keyInBoundsOrThrow/1[int],false,408,0,0,0,0,3,0,3,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,isMinHeap/0,false,417,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,size/0,false,245,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"keyExistsAndValueNotNullOrThrow/2[int,java.lang.Object]",false,395,1,2,0,2,1,2,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"decrease/2[int,T]",false,322,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,keyExistsOrThrow/1[int],false,400,1,1,0,1,2,1,3,0,0,1,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,toString/0,false,383,0,0,0,0,2,2,5,1,2,0,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,sink/1[int],false,341,1,2,0,2,2,2,7,0,1,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,swim/1[int],false,349,1,2,0,2,2,2,6,0,0,1,2,0,0,1,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,peekMinKeyIndex/0,false,258,1,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,contains/1[int],false,253,1,1,0,1,2,1,4,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,valueNotNullOrThrow/1[java.lang.Object],false,404,0,0,0,0,2,0,3,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$MinIndexedDHeap,"insert/2[int,T]",false,281,2,3,0,3,2,3,8,0,0,2,3,0,0,0,0,0,0,1,0,3,1,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowJohnsons.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons$1Node,"Node/2[int,long]",true,92,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowJohnsons.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons$1Node,compareTo/1[],false,98,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor,createEmptyGraph/1[int],false,122,0,2,2,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor,"lca/2[int,int]",false,91,2,6,5,1,1,1,5,1,0,2,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor,createFirstTreeFromSlides/0,false,139,2,4,1,3,1,3,21,1,2,0,3,2,1,0,0,0,0,0,34,2,0,0,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor,main/1[java.lang.String[]],false,133,2,4,0,4,1,4,5,0,2,1,4,2,3,0,0,0,0,0,2,2,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor,"helper/3[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode,int,int]",false,97,2,5,2,3,8,3,21,2,1,3,3,1,0,1,4,0,0,0,3,2,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor,LowestCommonAncestor/1[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor.TreeNode],true,86,1,5,5,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestor.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestor,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,128,0,2,2,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testNullKey/0,false,49,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testUpdatingValue/0,false,74,2,2,0,2,1,4,8,0,0,0,4,0,0,0,0,0,0,0,12,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,genRandList/1[int],false,309,1,3,2,1,2,3,6,1,2,1,3,1,1,1,0,0,0,0,1,2,0,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,removeTest/0,false,167,2,4,0,4,3,5,15,0,3,0,5,0,0,2,0,0,0,0,19,3,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testIllegalCreation3/0,false,64,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,"randInt/2[int,int]",false,304,0,4,4,0,1,1,3,1,0,2,1,0,0,0,0,0,1,0,1,0,3,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,genUniqueRandList/1[int],false,318,0,0,0,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testLegalCreation/0,false,69,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testIllegalCreation1/0,false,54,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testConcurrentModificationException2/0,false,132,2,2,0,2,2,2,6,0,0,0,2,0,0,1,0,0,0,0,7,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,(initializer 1),false,35,1,6,0,6,1,1,5,0,0,0,1,1,1,0,0,0,0,0,5,3,0,0,0,0,0,17,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,randomIteratorTests/0,false,255,3,7,0,7,5,14,35,0,10,0,14,1,1,2,1,0,0,0,5,14,1,3,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testConcurrentModificationException/0,false,124,2,1,0,1,2,1,6,0,0,0,1,0,0,1,0,0,0,0,8,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testIllegalCreation2/0,false,59,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,removeTestComplex1/0,false,193,3,5,0,5,1,5,16,0,5,0,5,0,0,0,0,0,0,0,13,5,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,randomRemove/0,false,140,3,8,0,8,4,12,17,0,6,0,12,1,1,3,0,0,0,0,3,6,0,2,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testRandomMapOperations/0,false,216,3,8,0,8,5,17,25,0,9,0,17,1,2,2,0,0,0,0,2,10,0,3,0,0,0,30,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,setup/0,false,44,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChainingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChainingTest,testIterator/0,false,87,3,7,0,7,6,17,26,0,5,0,17,1,2,5,0,0,0,0,2,6,0,2,0,0,0,28,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,pop/0,false,47,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,benchMarkTest/0,false,76,4,8,1,7,9,8,27,0,15,0,8,2,1,8,0,0,4,4,13,21,12,1,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,isEmpty/0,false,29,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,push/1[java.lang.Integer],false,41,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,main/1[java.lang.String[]],false,52,1,5,0,5,2,5,16,0,1,1,5,4,2,1,0,0,0,0,9,1,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,size/0,false,24,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,IntStack/1[int],true,19,1,3,3,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\IntStack.java,com.williamfiset.algorithms.datastructures.stack.IntStack,peek/0,false,35,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ClosestPairOfPoints.java,com.williamfiset.algorithms.geometry.ClosestPairOfPoints$X_Sort,"compare/2[com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT,com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT]",false,35,1,0,0,0,3,1,4,2,0,2,1,0,0,0,0,0,1,0,3,0,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,main/1[java.lang.String[]],false,141,1,5,0,5,2,6,10,0,2,1,6,4,1,1,0,0,0,0,6,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,removeAt/1[int],false,70,0,1,1,0,1,1,5,0,0,1,1,0,0,0,0,0,0,0,2,0,2,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,remove/1[int],false,78,1,1,0,1,3,1,9,2,1,1,1,1,1,1,1,0,0,0,1,1,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,isEmpty/0,false,43,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,reverse/0,false,89,0,0,0,0,2,0,7,0,2,0,0,0,0,1,0,0,0,0,4,4,3,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,binarySearch/1[int],false,99,0,0,0,0,1,1,4,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,IntArray/1[int],true,24,1,1,1,0,2,0,5,0,0,1,0,0,0,0,0,0,0,1,1,2,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,get/1[int],false,49,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,add/1[int],false,58,0,1,1,0,3,1,8,0,0,1,1,0,0,0,1,0,0,0,4,4,1,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,toString/0,false,131,0,0,0,0,3,2,8,2,2,0,2,0,0,1,1,0,0,4,4,2,4,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,IntArray/0,true,19,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,size/0,false,38,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,iterator/0,false,112,1,1,0,1,1,0,15,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,IntArray/1[int[]],true,31,1,0,0,0,2,1,5,0,0,1,1,0,0,0,1,0,0,1,0,3,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,sort/0,false,106,0,1,1,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray,"set/2[int,int]",false,53,0,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\EdmondsKarpAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList,"EdmondsKarpAdjacencyList/3[int,int,int]",true,26,0,2,2,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\EdmondsKarpAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList,bfs/0,false,43,2,5,1,4,9,8,23,2,7,0,8,0,0,4,4,0,0,0,2,11,0,3,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\EdmondsKarpAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList,solve/0,false,32,2,3,0,3,4,3,10,0,2,0,3,1,1,2,1,0,0,0,2,4,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\EdmondsKarpAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList,main/1[java.lang.String[]],false,84,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\EdmondsKarpAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.EdmondsKarpAdjacencyList,testSmallFlowGraph/0,false,90,2,4,1,3,1,3,17,0,4,0,3,0,0,0,0,0,0,0,26,4,2,0,0,0,0,12,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,FenwickTreeRangeQueryPointUpdate/1[long[]],true,24,2,7,6,1,4,2,10,0,2,1,2,1,1,1,1,0,0,1,3,6,1,2,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,prefixSum/1[int],false,57,1,2,1,1,2,1,8,1,1,1,1,1,1,1,1,0,0,0,2,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,"add/2[int,long]",false,78,1,3,2,1,2,1,6,0,0,2,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,get/1[int],false,73,1,1,0,1,1,1,3,1,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,"set/2[int,long]",false,86,1,3,1,2,1,2,3,0,0,2,2,2,4,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,FenwickTreeRangeQueryPointUpdate/1[int],true,17,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,1,0,1,2,1,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,lsb/1[int],false,46,0,3,3,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,"sum/2[int,int]",false,67,1,7,6,1,2,1,4,1,0,2,1,1,2,0,0,0,0,1,1,0,2,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeQueryPointUpdate.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeQueryPointUpdate,toString/0,false,91,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithm.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithm$PointComparator,"compare/2[java.awt.geom.Point2D,java.awt.geom.Point2D]",false,32,0,0,0,0,5,3,8,4,0,2,3,0,0,0,0,0,0,0,4,0,2,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\SlidingWindowMaximumTest.java,com.williamfiset.algorithms.other.SlidingWindowMaximumTest,smallWindowTest/0,false,12,3,4,0,4,1,5,26,0,2,0,5,0,0,0,0,0,0,0,17,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\SlidingWindowMaximumTest.java,com.williamfiset.algorithms.other.SlidingWindowMaximumTest,randomizedSlidingWindowTest/0,false,42,2,1,0,1,2,1,5,0,1,0,1,1,2,1,0,0,0,0,1,1,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\SlidingWindowMaximumTest.java,com.williamfiset.algorithms.other.SlidingWindowMaximumTest,fillRandom/1[int[]],false,48,1,1,1,0,3,1,10,0,1,1,1,0,0,1,0,0,2,0,4,3,2,2,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\other\SlidingWindowMaximumTest.java,com.williamfiset.algorithms.other.SlidingWindowMaximumTest,randomizedTest/1[int],false,58,3,6,1,5,6,9,23,0,7,1,9,1,1,2,1,0,0,0,4,8,1,3,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList$Edge,"Edge/3[int,int,int]",true,18,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList.Edge],false,25,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch,"crossover/2[com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch.Individual,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch.Individual]",false,168,1,2,1,1,1,2,5,1,2,2,2,0,0,0,0,0,0,0,1,2,1,0,0,0,0,11,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch,main/1[java.lang.String[]],false,174,1,1,0,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch,"selectIndividual/3[com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch.Individual[],double[],double[]]",false,154,2,1,1,0,5,1,10,1,4,3,1,0,0,1,0,0,1,0,6,6,6,2,0,0,0,19,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch,run/0,false,33,3,5,1,4,11,7,46,1,19,0,7,3,1,6,1,0,0,3,18,32,10,4,0,0,0,44,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch,"mutate/2[com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch.Individual,int]",false,148,1,1,1,0,1,1,5,1,0,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"propagate1/3[int,int,int]",false,131,1,4,2,2,2,2,7,0,0,3,2,2,2,0,1,0,0,0,2,2,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"minFunction/2[java.lang.Long,java.lang.Long]",false,27,0,3,3,0,5,1,6,4,0,2,1,0,0,0,4,0,0,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,printDebugInfo/0,false,164,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,71,2,4,2,2,2,2,10,1,1,4,2,2,1,0,1,0,1,0,10,3,11,1,0,0,0,32,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"rangeQuery1/5[int,int,int,int,int]",false,102,1,5,2,3,4,5,11,3,1,5,5,3,3,0,2,0,1,0,7,1,8,1,0,0,0,28,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"rangeUpdate1/3[int,int,long]",false,119,1,3,2,1,1,1,3,0,0,3,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"sumFunction/2[java.lang.Long,java.lang.Long]",false,34,0,1,1,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,main/1[java.lang.String[]],false,183,2,1,0,1,1,0,4,0,2,1,0,0,0,0,0,0,0,0,5,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"minSegmentUpdateFn/4[long,int,int,long]",false,40,0,2,2,0,1,0,3,1,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,MinQuerySumUpdateSegmentTree/1[long[]],true,44,2,4,3,1,2,1,10,0,1,1,1,1,2,0,1,0,0,1,4,4,2,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"rangeQuery1/2[int,int]",false,89,1,3,2,1,1,1,3,1,0,2,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"propagateLazy/4[int,int,int,long]",false,123,1,3,2,1,2,1,5,1,0,4,1,1,1,0,1,0,0,0,8,2,8,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"printDebugInfo/3[int,int,int]",false,169,1,3,2,1,2,2,9,1,1,3,2,1,0,0,1,0,1,1,6,1,7,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTree,"rangeUpdate1/6[int,int,int,int,int,long]",false,143,1,7,2,5,4,7,16,1,1,6,7,5,3,0,2,0,1,0,13,3,12,1,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeList.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeList,"kruskals/2[com.williamfiset.algorithms.graphtheory.KruskalsEdgeList.Edge[],int]",false,75,2,4,0,4,6,4,14,3,2,2,4,0,0,1,3,0,0,0,3,3,0,2,0,0,0,13,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\ModularLinearAlgebra.java,com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra,"modInv/2[int,int]",false,109,1,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,1,0,1,0,2,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\ModularLinearAlgebra.java,com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra,main/1[java.lang.String[]],false,113,2,4,0,4,4,5,15,0,7,1,5,4,2,1,0,0,0,1,20,8,0,1,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\ModularLinearAlgebra.java,com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra,"egcd/2[int,int]",false,99,2,3,2,1,2,1,8,2,2,2,1,1,0,0,1,0,1,0,8,4,4,1,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\ModularLinearAlgebra.java,com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra,isInconsistent/1[int[][]],false,68,1,1,1,0,5,0,12,2,3,1,0,0,0,2,2,0,0,0,7,3,2,4,0,0,0,10,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\ModularLinearAlgebra.java,com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra,hasMultipleSolutions/1[int[][]],false,85,1,1,1,0,5,0,11,1,4,1,0,0,0,2,1,0,0,0,6,4,2,3,0,0,0,11,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\ModularLinearAlgebra.java,com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra,"rref/3[int[][],int,int[]]",false,13,1,2,2,0,12,0,28,0,11,3,0,0,0,5,5,0,2,0,12,16,10,4,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\ModularLinearAlgebra.java,com.williamfiset.algorithms.linearalgebra.ModularLinearAlgebra,"inverse/3[int[][],int,int[]]",false,44,2,1,0,1,9,1,21,4,7,3,1,1,1,4,4,0,0,0,9,10,3,4,0,0,0,10,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArraySlow.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow,SuffixArraySlow/1[int[]],true,48,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArraySlow.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow,construct/0,false,55,2,1,0,1,3,1,12,0,3,0,1,0,0,2,0,0,0,0,2,9,0,1,0,0,0,8,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArraySlow.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow,main/1[java.lang.String[]],false,72,1,1,0,1,1,1,4,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArraySlow.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow,SuffixArraySlow/1[java.lang.String],true,44,1,8,7,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,singleton/0,false,33,2,2,0,2,1,4,3,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,twoNodeTree/0,false,38,2,3,0,3,1,5,5,0,1,0,5,0,0,0,0,0,0,0,5,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,simpleTest4/0,false,62,2,3,0,3,1,5,10,0,1,0,5,0,0,0,0,0,0,0,15,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,simpleTest2/0,false,45,2,3,0,3,1,5,6,0,1,0,5,0,0,0,0,0,0,0,6,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,simpleTest3/0,false,53,2,3,0,3,1,5,7,0,1,0,5,0,0,0,0,0,0,0,9,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,testTreeCenterVsOtherImpl/0,false,74,4,3,0,3,3,5,10,0,5,0,5,1,1,2,0,0,0,0,4,5,0,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,generateRandomTree/1[int],false,89,1,3,1,2,2,6,11,1,4,1,6,0,0,1,1,0,1,0,2,4,1,1,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterTest,simpleTest1/0,false,19,2,3,0,3,1,5,12,0,1,0,5,0,0,0,0,0,0,0,18,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testConcurrentModificationException/0,false,145,2,1,0,1,2,1,6,0,0,0,1,0,0,1,0,0,0,0,8,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testNullKey/0,false,49,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,removeTestComplex1/0,false,214,4,5,0,5,1,5,16,0,5,0,5,0,0,0,0,0,0,0,13,5,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,genUniqueRandList/1[int],false,339,0,0,0,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testTableSize/0,false,95,4,3,0,3,3,2,11,0,4,0,2,1,1,2,0,0,0,0,4,4,0,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testUpdatingValue/0,false,74,2,2,0,2,1,4,8,0,0,0,4,0,0,0,0,0,0,0,12,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,randomRemove/0,false,161,4,8,0,8,4,12,17,0,6,0,12,1,1,3,0,0,0,0,3,6,0,2,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testRandomMapOperations/0,false,237,4,8,0,8,5,17,25,0,9,0,17,1,2,2,0,0,0,0,2,10,0,3,0,0,0,30,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testIterator/0,false,108,4,7,0,7,6,17,26,0,5,0,17,1,2,5,0,0,0,0,2,6,0,2,0,0,0,28,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testIllegalCreation3/0,false,64,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testLegalCreation/0,false,69,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,genRandList/1[int],false,330,1,3,2,1,2,3,6,1,2,1,3,1,1,1,0,0,0,0,1,2,0,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testIllegalCreation1/0,false,54,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,(initializer 1),false,35,1,6,0,6,1,1,5,0,0,0,1,1,1,0,0,0,0,0,5,3,0,0,0,0,0,17,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testIllegalCreation2/0,false,59,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,randomIteratorTests/0,false,276,4,7,0,7,5,14,35,0,10,0,14,1,1,2,1,0,0,0,5,14,1,3,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,"randInt/2[int,int]",false,325,0,4,4,0,1,1,3,1,0,2,1,0,0,0,0,0,1,0,1,0,3,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,setup/0,false,44,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,"assertCapacityIsPowerOfTwo/1[com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing<java.lang.Integer,java.lang.Integer>]",false,86,2,2,1,1,2,3,5,1,1,1,3,0,0,0,1,0,2,0,3,1,1,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,removeTest/0,false,188,3,4,0,4,3,5,15,0,3,0,5,0,0,2,0,0,0,0,19,3,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest,testConcurrentModificationException2/0,false,153,2,2,0,2,2,2,6,0,0,0,2,0,0,1,0,0,0,0,7,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$EdmondsKarpSolver,"EdmondsKarpSolver/3[int,int,int]",true,179,0,1,1,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$EdmondsKarpSolver,solve/0,false,185,2,2,0,2,2,2,9,0,1,0,2,1,1,1,1,0,0,0,1,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$EdmondsKarpSolver,bfs/0,false,194,2,5,1,4,9,8,23,2,7,0,8,0,0,4,4,0,0,0,2,11,0,3,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest$SlowLcsSolver,SlowLcsSolver/1[java.lang.String[]],true,19,0,3,3,0,3,0,4,0,0,1,0,0,0,0,1,0,0,1,1,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest$SlowLcsSolver,getLongestCommonSubstrings/1[int],false,25,0,3,3,0,11,9,40,1,11,1,9,0,0,5,2,0,0,0,5,11,1,3,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,"highBound/2[int,int]",false,131,0,1,1,0,1,2,3,1,0,2,2,0,0,0,0,0,1,0,0,0,2,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,lowBound/1[int],false,126,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,randValue/0,false,135,0,2,2,0,1,1,3,1,0,0,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,setup/0,false,35,2,1,0,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,testFenwickTreeRangeUpdatePointQuerySimple2/0,false,71,3,3,0,3,1,4,10,0,2,0,4,0,0,0,0,0,0,0,18,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,testFenwickTreeRangeUpdatePointQueryOverlappingRanges/0,false,102,5,9,0,9,4,9,15,0,10,0,9,3,1,3,0,0,0,0,5,11,1,2,0,0,0,32,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,testFenwickTreeRangeUpdatePointQueryRepeatedAddition/0,false,84,3,3,0,3,3,4,13,0,7,0,4,0,0,2,0,0,0,0,8,9,1,2,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,testIllegalCreation/0,false,40,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,testFenwickTreeRangeUpdatePointQueryNegativeNumbers/0,false,45,3,3,0,3,1,4,10,0,2,0,4,0,0,0,0,0,0,0,18,2,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQueryTest.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQueryTest,testFenwickTreeRangeUpdatePointQuerySimple/0,false,58,3,3,0,3,1,4,10,0,2,0,4,0,0,0,0,0,0,0,18,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilterTest.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest,testStringSetAllSubsets/0,false,27,2,3,0,3,3,6,11,0,5,0,6,0,0,2,0,0,0,1,3,5,2,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilterTest.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest,randomString/1[int],false,112,0,1,1,0,2,5,5,1,2,1,5,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilterTest.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest,containsTests/0,false,74,3,4,0,4,7,8,20,0,8,0,8,1,1,5,0,0,0,0,8,9,0,4,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilterTest.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest,setup/0,false,24,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilterTest.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest,testStringSetAllSubsetsFailure/0,false,42,3,3,0,3,6,6,21,0,11,0,6,0,0,4,0,0,0,1,9,13,4,3,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\bloomfilter\BloomFilterTest.java,com.williamfiset.algorithms.datastructures.bloomfilter.BloomFilterTest,"randNum/2[int,int]",false,104,0,0,0,0,1,1,4,1,1,2,1,0,0,0,0,0,0,0,1,1,3,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Pt,"Pt/2[long,long]",true,28,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Pt,toString/0,false,34,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.ConstObj,hashCode/0,false,23,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.ConstObj,equals/1[java.lang.Object],false,28,1,0,0,0,2,0,3,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.ConstObj,"ConstObj/2[int,int]",true,17,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterativeFastStack$Edge,"Edge/3[int,int,int]",true,52,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\RotateSquareMatrixInplace.java,com.williamfiset.algorithms.linearalgebra.RotateSquareMatrixInplace,rotate/1[int[][]],false,13,1,1,1,0,3,0,13,0,6,1,0,0,0,2,0,0,0,0,4,10,3,2,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\RotateSquareMatrixInplace.java,com.williamfiset.algorithms.linearalgebra.RotateSquareMatrixInplace,main/1[java.lang.String[]],false,27,2,1,0,1,5,3,11,0,1,1,3,1,1,4,0,0,0,0,25,1,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Anonymous1,next/0,false,421,2,0,0,0,5,2,13,1,1,0,2,0,0,1,4,0,0,0,0,3,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Anonymous1,hasNext/0,false,415,0,0,0,0,3,1,4,1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Anonymous1,remove/0,false,441,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\BitManipulations.java,com.williamfiset.algorithms.other.BitManipulations,isPowerOfTwo/1[int],false,36,0,1,1,0,3,0,3,1,0,1,0,0,0,0,1,0,2,0,3,0,1,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\BitManipulations.java,com.williamfiset.algorithms.other.BitManipulations,setAll/1[int],false,31,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,2,0,2,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\BitManipulations.java,com.williamfiset.algorithms.other.BitManipulations,"setBit/2[int,int]",false,11,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\BitManipulations.java,com.williamfiset.algorithms.other.BitManipulations,"toggleBit/2[int,int]",false,26,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\BitManipulations.java,com.williamfiset.algorithms.other.BitManipulations,"isSet/2[int,int]",false,16,0,0,0,0,2,0,3,1,0,2,0,0,0,0,1,0,2,0,2,0,1,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\BitManipulations.java,com.williamfiset.algorithms.other.BitManipulations,"clearBit/2[int,int]",false,21,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyMatrix$Edge,"Edge/2[int,int]",true,19,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyMatrix$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyMatrix.Edge],false,25,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,remove/1[K],false,321,3,3,0,3,6,5,17,2,4,1,5,0,0,1,3,0,0,1,1,7,1,2,0,0,0,27,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,clear/0,false,75,0,0,0,0,2,0,8,0,1,0,0,0,0,1,0,0,0,0,2,5,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,getCapacity/0,false,90,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,"add/2[K,V]",false,103,3,1,0,1,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,size/0,false,85,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,"HashTableOpenAddressingBase/2[int,double]",true,44,3,1,0,1,5,4,10,0,0,2,4,0,0,0,0,0,1,2,2,5,3,1,0,0,0,16,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,resizeTable/0,false,129,3,3,0,3,4,3,19,0,5,0,3,0,0,1,2,0,1,0,2,14,1,2,0,0,0,30,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,keys/0,false,113,2,1,0,1,4,2,5,1,2,0,2,0,0,1,2,0,0,0,1,2,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,adjustCapacity/0,false,68,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1028,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,toString/0,false,351,0,0,0,0,4,2,7,1,2,0,2,0,0,1,2,0,0,4,1,2,1,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,hasKey/1[K],false,231,2,3,0,3,8,5,22,2,4,1,5,0,0,1,5,0,0,1,4,10,1,4,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,HashTableOpenAddressingBase/0,true,35,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,"gcd/2[int,int]",false,167,1,1,0,1,2,1,4,2,0,2,1,0,0,0,1,0,0,0,1,0,1,1,0,0,0,3,28,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,"insert/2[K,V]",false,174,3,4,0,4,10,6,42,2,5,2,6,0,0,1,6,0,0,1,5,16,1,4,0,0,0,34,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,get/1[K],false,275,3,3,0,3,8,5,25,3,4,1,5,0,0,1,5,0,0,1,4,10,1,4,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,containsKey/1[K],false,108,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,iterator/0,false,363,2,1,0,1,1,0,19,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,32,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,HashTableOpenAddressingBase/1[int],true,39,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,probe/1[int],false,63,0,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1028,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,setupProbing/1[K],false,61,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1028,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,increaseCapacity/0,false,71,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,1,0,2,1,2,0,0,0,0,3,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,isEmpty/0,false,95,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,"put/2[K,V]",false,99,3,1,0,1,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,normalizeIndex/1[int],false,162,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,7,20,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableOpenAddressingBase.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableOpenAddressingBase,values/0,false,121,2,1,0,1,4,2,5,1,2,0,2,0,0,1,2,0,0,0,1,2,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterative$Edge,"Edge/3[int,int,int]",true,15,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,setRight/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,83,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,getParent/0,false,87,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,"Node/2[boolean,T]",true,35,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,getValue/0,false,63,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,getRight/0,false,79,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,setLeft/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,75,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,getLeft/0,false,71,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,"Node/5[T,boolean,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node]",true,40,2,0,0,0,4,0,12,0,0,5,0,0,0,0,3,0,0,0,0,8,0,1,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,setColor/1[boolean],false,59,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,getColor/0,false,55,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,setParent/1[com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node],false,91,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,setValue/1[T],false,67,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\RedBlackTree.java,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree$Node,"Node/2[T,com.williamfiset.algorithms.datastructures.balancedtree.RedBlackTree<T>.Node]",true,30,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\LazyRangeAdder.java,com.williamfiset.algorithms.other.LazyRangeAdder,LazyRangeAdder/1[int[]],true,24,1,4,4,0,2,0,9,0,1,1,0,0,0,1,0,0,0,0,5,6,3,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\LazyRangeAdder.java,com.williamfiset.algorithms.other.LazyRangeAdder,"add/3[int,int,int]",false,36,0,4,4,0,1,0,4,0,0,3,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\LazyRangeAdder.java,com.williamfiset.algorithms.other.LazyRangeAdder,main/1[java.lang.String[]],false,53,2,3,0,3,1,4,11,0,2,1,4,2,1,0,0,0,0,0,17,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\LazyRangeAdder.java,com.williamfiset.algorithms.other.LazyRangeAdder,done/0,false,43,0,4,4,0,3,0,10,0,1,0,0,0,0,1,1,0,0,0,3,3,2,2,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample,main/1[java.lang.String[]],false,234,3,5,0,5,3,6,27,0,5,1,6,0,0,2,0,0,0,1,51,5,2,2,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Permutations.java,com.williamfiset.algorithms.other.Permutations,"swap/3[T[],int,int]",false,84,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Permutations.java,com.williamfiset.algorithms.other.Permutations,generatePermutations/1[java.lang.Object[]],false,16,3,2,1,1,2,1,6,1,2,1,1,1,1,0,1,0,0,0,1,2,0,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Permutations.java,com.williamfiset.algorithms.other.Permutations,"permutations/4[int,boolean[],int[],java.lang.Object[]]",false,28,3,3,2,1,5,3,18,0,3,4,3,1,0,2,1,0,0,3,3,6,2,3,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Permutations.java,com.williamfiset.algorithms.other.Permutations,nextPermutation/1[T[]],false,67,2,2,0,2,4,3,10,2,2,1,3,2,1,2,1,0,0,0,4,3,2,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Permutations.java,com.williamfiset.algorithms.other.Permutations,getFirst/1[T[]],false,78,1,1,1,0,3,1,4,2,1,1,1,0,0,1,0,0,0,0,5,1,2,2,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Permutations.java,com.williamfiset.algorithms.other.Permutations,main/1[java.lang.String[]],false,90,1,2,0,2,2,4,9,0,2,1,4,1,2,1,0,0,0,4,4,2,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterativeFastStack,main/1[java.lang.String[]],false,93,2,2,0,2,3,3,16,0,3,1,3,2,1,0,2,0,0,4,23,4,2,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterativeFastStack,"addDirectedEdge/4[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterativeFastStack.Edge>>,int,int,int]",false,126,1,2,1,1,2,3,8,0,1,4,3,0,0,0,1,0,0,0,0,2,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListIterativeFastStack.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterativeFastStack,"dfs/3[java.util.Map<java.lang.Integer,java.util.List<com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListIterativeFastStack.Edge>>,int,int]",false,62,3,5,1,4,6,4,22,1,5,3,4,0,0,2,1,0,0,0,1,6,0,5,0,0,0,14,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashing,HashTableDoubleHashing/1[int],true,19,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashing,probe/1[int],false,38,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashing,HashTableDoubleHashing/0,true,15,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashing,setupProbing/1[K],false,29,3,2,0,2,2,2,4,0,0,1,2,0,0,0,1,0,0,0,2,2,0,1,0,0,0,7,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashing,"HashTableDoubleHashing/2[int,double]",true,24,0,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableDoubleHashing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableDoubleHashing,adjustCapacity/0,false,46,0,0,0,0,2,2,5,0,0,0,2,0,0,1,0,0,1,0,1,0,0,1,0,0,0,5,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\scenes\Scenes.java,com.williamfiset.algorithms.dp.examples.scenes.Scenes,"f/2[int,int]",false,40,1,3,2,1,5,1,16,4,2,2,1,1,0,1,1,0,1,0,6,4,4,1,0,0,0,13,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\scenes\Scenes.java,com.williamfiset.algorithms.dp.examples.scenes.Scenes,main/1[java.lang.String[]],false,19,1,1,0,1,1,4,7,0,1,1,4,1,2,0,0,0,0,1,3,4,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\scenes\Scenes.java,com.williamfiset.algorithms.dp.examples.scenes.Scenes,solution1/0,false,29,1,2,1,1,1,3,7,0,3,0,3,1,1,0,0,0,3,0,4,4,8,0,0,0,0,11,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter,createEmptyTree/1[int],false,56,0,8,8,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,12,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter,main/1[java.lang.String[]],false,67,1,3,0,3,1,4,34,0,6,1,4,3,1,0,0,0,0,0,46,6,0,0,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,62,0,7,7,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenter.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenter,findTreeCenters/1[java.util.List<java.util.List<java.lang.Integer>>],false,17,1,8,8,0,7,4,28,1,7,1,4,0,0,4,1,0,0,0,5,12,0,4,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis.Edge],false,115,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$Edge,"Edge/3[int,int,int]",true,108,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\MinimumCostConvexPolygonTriangulation.java,com.williamfiset.algorithms.geometry.MinimumCostConvexPolygonTriangulation,minimumCostTriangulation/1[java.awt.geom.Point2D[]],false,22,2,4,3,1,5,2,14,2,5,1,2,1,1,3,0,0,0,0,7,7,10,3,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\MinimumCostConvexPolygonTriangulation.java,com.williamfiset.algorithms.geometry.MinimumCostConvexPolygonTriangulation,"cost/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,17,0,1,1,0,1,1,3,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\graphutils\GraphGenerator.java,com.williamfiset.algorithms.utils.graphutils.GraphGenerator,main/1[java.lang.String[]],false,60,1,2,0,2,1,1,4,0,1,1,1,0,0,0,0,0,0,0,5,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunction.java,com.williamfiset.algorithms.math.EulerTotientFunction,primeFactorization/1[long],false,12,1,3,1,2,6,6,23,2,4,1,6,2,2,1,2,0,0,0,2,4,1,2,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunction.java,com.williamfiset.algorithms.math.EulerTotientFunction,"gcf/2[long,long]",false,52,1,3,2,1,2,1,3,1,0,2,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunction.java,com.williamfiset.algorithms.math.EulerTotientFunction,isPrime/1[long],false,56,0,1,1,0,9,1,8,5,2,1,1,0,0,1,6,0,1,0,12,3,5,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunction.java,com.williamfiset.algorithms.math.EulerTotientFunction,eulersTotient/1[long],false,7,1,2,1,1,2,1,4,1,0,1,1,1,3,1,0,0,1,0,0,1,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunction.java,com.williamfiset.algorithms.math.EulerTotientFunction,main/1[java.lang.String[]],false,69,1,1,0,1,2,3,7,0,1,1,3,1,4,1,0,0,0,2,3,1,0,1,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunction.java,com.williamfiset.algorithms.math.EulerTotientFunction,pollardRho/1[long],false,35,1,2,1,1,4,3,15,2,4,1,3,1,1,1,3,0,5,0,9,8,15,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic$Node,"Node/3[int,double,double]",true,35,0,1,1,0,1,0,6,0,0,3,0,0,0,0,0,0,0,0,0,4,1,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic$Node,compareTo/1[com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic.Node],false,44,1,0,0,0,5,1,7,3,0,1,1,0,0,0,0,0,2,0,7,0,4,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\LCM.java,com.williamfiset.algorithms.math.LCM,"gcd/2[long,long]",false,13,1,3,2,1,3,1,3,1,0,2,1,1,0,0,1,0,1,0,2,0,1,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\LCM.java,com.williamfiset.algorithms.math.LCM,"lcm/2[long,long]",false,18,1,2,1,1,2,1,4,1,1,2,1,1,1,0,0,0,1,0,1,1,2,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\LCM.java,com.williamfiset.algorithms.math.LCM,main/1[java.lang.String[]],false,23,1,1,0,1,1,2,6,0,0,1,2,1,2,0,0,0,0,0,8,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous2,hasNext/0,false,263,0,0,0,0,3,1,4,1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous2,remove/0,false,291,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous2,next/0,false,269,2,0,0,0,5,2,13,1,1,0,2,0,0,1,4,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,size/0,false,63,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,balance/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,142,1,4,0,4,5,4,19,5,0,1,4,0,0,0,2,0,0,0,4,0,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,rightRotation/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,199,1,1,0,1,1,1,8,1,1,1,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,validateBSTInvarient/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,353,2,1,0,1,4,2,8,2,2,1,2,0,0,0,3,0,0,0,2,4,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,leftRotation/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,190,1,1,0,1,1,1,8,1,1,1,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,contains/1[T],false,73,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,"remove/2[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node,T]",false,222,2,5,0,5,7,6,32,4,3,2,6,0,0,0,3,0,0,0,2,9,0,3,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,findMin/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,291,2,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,remove/1[T],false,209,2,2,0,2,3,2,9,3,0,1,2,0,0,0,1,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,toString/0,false,346,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,"insert/2[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node,T]",false,106,2,4,0,4,3,4,12,2,1,2,4,0,0,0,1,0,0,0,1,3,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,leftRightCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,176,1,2,0,2,1,2,4,1,0,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,isEmpty/0,false,68,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,rightLeftCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,185,1,2,0,2,1,2,4,1,0,1,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,rightRightCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,181,1,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,height/0,false,57,0,0,0,0,2,0,4,2,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,"contains/2[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node,T]",false,78,2,1,0,1,4,2,7,4,1,2,2,0,0,0,1,0,0,0,2,1,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,iterator/0,false,303,3,1,0,1,1,1,29,1,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,update/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,130,1,0,0,0,3,1,6,0,2,1,1,0,0,0,2,0,2,0,3,4,2,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,findMax/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,297,2,0,0,0,2,0,4,1,0,1,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,leftLeftCase/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<T>.Node],false,172,1,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive,insert/1[T],false,95,2,2,0,2,3,2,9,3,0,1,2,0,0,0,1,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous3,hasNext/0,false,313,0,0,0,0,3,1,4,1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous3,next/0,false,319,1,0,0,0,2,1,4,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous3,remove/0,false,325,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$EulerianPathDirectedEdgesAdjacencyList,getEulerianPath/0,false,423,2,6,2,4,3,8,11,2,2,0,8,4,1,1,0,0,0,1,1,2,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$EulerianPathDirectedEdgesAdjacencyList,EulerianPathDirectedEdgesAdjacencyList/1[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.Edge>>],true,414,1,2,2,0,2,1,6,0,0,1,1,0,0,0,1,0,0,1,0,3,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$EulerianPathDirectedEdgesAdjacencyList,dfs/1[int],false,480,2,3,2,1,2,4,7,0,1,1,4,1,0,1,1,0,0,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$EulerianPathDirectedEdgesAdjacencyList,setUp/0,false,440,1,1,1,0,3,1,12,0,1,0,1,0,0,2,0,0,0,0,2,4,0,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$EulerianPathDirectedEdgesAdjacencyList,graphHasEulerianPath/0,false,457,0,1,1,0,11,0,10,3,3,0,0,0,0,1,7,0,2,0,12,3,4,4,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$EulerianPathDirectedEdgesAdjacencyList,findStartNode/0,false,468,0,1,1,0,4,0,8,2,2,0,0,0,0,1,1,0,0,0,4,3,1,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModularInverse.java,com.williamfiset.algorithms.math.ModularInverse,"modInv/2[long,long]",false,22,2,3,2,1,3,1,9,2,3,2,1,1,1,0,1,0,4,1,4,4,6,1,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModularInverse.java,com.williamfiset.algorithms.math.ModularInverse,main/1[java.lang.String[]],false,37,1,1,0,1,1,2,4,0,0,1,2,1,2,0,0,0,0,0,4,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModularInverse.java,com.williamfiset.algorithms.math.ModularInverse,"egcd/2[long,long]",false,11,2,3,2,1,2,1,8,2,2,2,1,1,0,0,1,0,1,0,8,4,4,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous1,hasNext/0,false,231,0,0,0,0,3,1,4,1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous1,remove/0,false,246,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous1,next/0,false,237,2,0,0,0,4,2,7,1,1,0,2,0,0,0,3,0,0,0,0,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\SteinerTreeTest.java,com.williamfiset.algorithms.graphtheory.SteinerTreeTest,testTreeGraph/0,false,77,2,1,0,1,1,3,8,0,0,0,3,1,1,0,0,0,0,0,23,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\SteinerTreeTest.java,com.williamfiset.algorithms.graphtheory.SteinerTreeTest,testCycleGraph/0,false,87,2,1,0,1,1,3,10,0,0,0,3,1,1,0,0,0,0,0,28,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\SteinerTreeTest.java,com.williamfiset.algorithms.graphtheory.SteinerTreeTest,testOneTerminalNodeGivesZero/0,false,67,2,1,0,1,3,3,8,0,2,0,3,1,1,2,0,0,0,0,6,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\SteinerTreeTest.java,com.williamfiset.algorithms.graphtheory.SteinerTreeTest,testNoTerminalNodesGivesZero/0,false,61,2,1,0,1,1,3,4,0,0,0,3,1,1,0,0,0,0,0,2,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\SteinerTreeTest.java,com.williamfiset.algorithms.graphtheory.SteinerTreeTest,"testSteiner/2[double[][],int[]]",false,98,3,5,4,1,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"propagateLazy/4[int,int,int,long]",false,132,1,3,2,1,2,1,5,1,0,4,1,1,1,0,1,0,0,0,8,2,8,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"printDebugInfo/3[int,int,int]",false,176,1,3,2,1,2,2,9,1,1,3,2,1,0,0,1,0,1,1,6,1,7,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"rangeQuery1/2[int,int]",false,98,1,3,2,1,1,1,3,1,0,2,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"rangeUpdate1/6[int,int,int,int,int,long]",false,150,1,7,2,5,4,7,16,1,1,6,7,5,3,0,2,0,1,0,13,3,12,1,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"rangeUpdate1/3[int,int,long]",false,128,1,3,2,1,1,1,3,0,0,3,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,main/1[java.lang.String[]],false,190,2,1,0,1,1,0,4,0,2,1,0,0,0,0,0,0,0,0,5,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,printDebugInfo/0,false,171,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"multLruf/2[java.lang.Long,java.lang.Long]",false,43,0,1,1,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,SumQueryMultiplicationUpdateSegmentTree/1[long[]],true,53,2,3,2,1,2,1,10,0,1,1,1,1,2,0,1,0,0,1,4,4,2,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"propagate1/3[int,int,int]",false,139,1,4,2,2,2,2,7,0,0,3,2,2,2,0,1,0,0,0,2,2,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,80,2,4,2,2,2,2,10,1,1,4,2,2,1,0,1,0,1,0,10,3,11,1,0,0,0,32,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"sumFunction/2[java.lang.Long,java.lang.Long]",false,27,0,3,3,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"rangeQuery1/5[int,int,int,int,int]",false,111,1,5,2,3,4,5,11,3,1,5,5,3,3,0,2,0,1,0,7,1,8,1,0,0,0,28,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryMultiplicationUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryMultiplicationUpdateSegmentTree,"multRuf/4[java.lang.Long,int,int,java.lang.Long]",false,34,0,2,2,0,3,0,5,1,0,4,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous4,next/0,false,346,2,0,0,0,4,2,7,1,1,0,2,0,0,0,3,0,0,0,0,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous4,remove/0,false,355,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTree.java,com.williamfiset.algorithms.datastructures.binarysearchtree.BinarySearchTree$Anonymous4,hasNext/0,false,340,0,0,0,0,3,1,4,1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestCommonSubstring.java,com.williamfiset.algorithms.dp.LongestCommonSubstring,main/1[java.lang.String[]],false,65,2,1,0,1,1,2,8,0,2,1,2,1,1,0,0,0,0,0,0,4,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestCommonSubstring.java,com.williamfiset.algorithms.dp.LongestCommonSubstring,"lcs/2[char[],char[]]",false,15,2,1,1,0,15,1,26,3,11,2,1,0,0,5,7,0,0,0,24,14,13,3,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"RangeQueryPointUpdateSegmentTree/3[long[],com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree.SegmentCombinationFn,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree.RangeUpdateFn]",true,69,4,1,0,1,9,2,34,0,1,3,2,1,1,0,8,0,0,3,4,10,2,1,0,0,0,33,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,121,2,3,2,1,2,2,10,1,1,4,2,1,0,0,1,0,1,0,10,3,11,1,0,0,0,30,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"rangeQuery2/5[int,int,int,int,int]",false,200,1,3,2,1,8,4,17,4,3,5,4,1,0,0,2,0,3,0,13,3,14,1,0,0,0,51,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"pointUpdate/2[int,long]",false,220,1,1,0,1,1,1,3,0,0,2,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,main/1[java.lang.String[]],false,264,1,3,0,3,1,3,5,0,0,1,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,rangeMaxQueryExample/0,false,294,2,3,1,2,1,2,6,0,4,0,2,1,2,0,0,0,0,1,6,4,0,0,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,rangeMinQueryExample/0,false,282,2,3,1,2,1,2,6,0,4,0,2,1,2,0,0,0,0,1,6,4,0,0,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"rangeQuery/5[int,int,int,int,int]",false,162,1,3,2,1,7,4,18,5,1,5,4,1,0,0,5,0,1,0,8,1,8,2,0,0,0,25,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"rangeQuery/2[int,int]",false,139,1,4,3,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"rangeQuery2/2[int,int]",false,149,1,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"pointUpdate/5[int,int,int,int,long]",false,237,1,3,2,1,3,2,14,1,1,5,2,1,0,0,1,0,1,0,10,3,11,1,0,0,0,47,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"RangeQueryPointUpdateSegmentTree/2[long[],com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree.SegmentCombinationFn]",true,61,2,3,3,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,rangeSumQueryExample/0,false,270,2,3,1,2,1,2,6,0,4,0,2,1,2,0,0,0,0,1,6,4,0,0,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\RangeQueryPointUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.RangeQueryPointUpdateSegmentTree,"rangeUpdate/3[int,int,long]",false,256,0,0,0,0,1,0,3,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,setup/0,false,18,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,testRandomRangeSumUpdatesWithSumRangeQueries/0,false,109,5,7,0,7,3,11,22,0,13,0,11,2,1,2,0,0,0,0,14,15,4,2,0,0,0,37,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,"bruteForceSum/3[long[],int,int]",false,139,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,165,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,simpleTest3/0,false,70,3,3,0,3,1,4,10,0,2,0,4,0,0,0,0,0,0,0,23,2,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,171,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,simpleTest5/0,false,97,3,3,0,3,1,4,8,0,2,0,4,0,0,0,0,0,0,0,17,2,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,simpleTest/0,false,21,3,3,0,3,1,4,29,0,2,0,4,0,0,0,0,0,0,0,96,2,7,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,"bruteForceMin/3[long[],int,int]",false,148,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,simpleTest2/0,false,58,3,3,0,3,1,4,8,0,2,0,4,0,0,0,0,0,0,0,17,2,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,simpleTest4/0,false,85,3,3,0,3,1,4,8,0,2,0,4,0,0,0,0,0,0,0,17,2,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,"bruteForceMax/3[long[],int,int]",false,157,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTreeTest,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,177,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2$Ruf,"apply/2[com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2.Segment,java.lang.Long]",false,96,1,3,3,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CoplanarPoints.java,com.williamfiset.algorithms.geometry.CoplanarPoints,"dot/2[com.williamfiset.algorithms.geometry.CoplanarPoints.Vector,com.williamfiset.algorithms.geometry.CoplanarPoints.Vector]",false,74,1,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,3,0,0,0,4,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CoplanarPoints.java,com.williamfiset.algorithms.geometry.CoplanarPoints,main/1[java.lang.String[]],false,79,1,1,0,1,1,2,5,0,0,1,2,1,2,0,0,0,0,3,36,0,3,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CoplanarPoints.java,com.williamfiset.algorithms.geometry.CoplanarPoints,"coplanar/12[double,double,double,double,double,double,double,double,double,double,double,double]",false,41,2,4,1,3,2,3,7,1,4,12,3,2,1,0,0,0,0,0,0,4,9,0,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CoplanarPoints.java,com.williamfiset.algorithms.geometry.CoplanarPoints,"cross/2[com.williamfiset.algorithms.geometry.CoplanarPoints.Vector,com.williamfiset.algorithms.geometry.CoplanarPoints.Vector]",false,66,1,2,1,1,1,0,6,1,3,2,0,0,0,0,0,0,0,0,0,3,9,0,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive$Anonymous1,remove/0,false,339,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive$Anonymous1,hasNext/0,false,313,0,0,0,0,3,1,4,1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursive.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive$Anonymous1,next/0,false,319,2,0,0,0,5,2,13,1,1,0,2,0,0,1,4,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,toString/0,false,207,0,0,0,0,2,2,5,1,2,0,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,swim/1[int],false,173,1,2,0,2,2,2,6,0,0,1,2,0,0,1,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,peekMinKeyIndex/0,false,82,1,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,delete/1[int],false,121,2,4,0,4,1,4,12,1,2,1,4,0,0,0,0,0,0,1,2,5,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,contains/1[int],false,77,1,1,0,1,2,1,4,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,pollMinKeyIndex/0,false,87,1,2,0,2,1,2,5,1,1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,valueOf/1[int],false,115,2,1,0,1,1,1,4,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"less/2[int,int]",false,197,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"insert/2[int,T]",false,105,2,3,0,3,2,3,8,0,0,2,3,0,0,0,0,0,0,1,0,3,1,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"swap/2[int,int]",false,187,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,keyInBoundsOrThrow/1[int],false,232,0,0,0,0,3,0,3,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,size/0,false,69,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,isNotEmptyOrThrow/0,false,215,1,1,0,1,2,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"keyExistsAndValueNotNullOrThrow/2[int,java.lang.Object]",false,219,1,2,0,2,1,2,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,keyExistsOrThrow/1[int],false,224,1,1,0,1,2,1,3,0,0,1,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,sink/1[int],false,165,1,2,0,2,2,2,7,0,1,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,isEmpty/0,false,73,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,peekMinValue/0,false,94,2,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,valueNotNullOrThrow/1[java.lang.Object],false,228,0,0,0,0,2,0,3,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,minChild/1[int],false,181,1,1,0,1,3,2,5,1,4,1,2,0,0,1,0,0,0,0,1,6,1,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"update/2[int,T]",false,135,2,3,0,3,1,3,9,1,2,2,3,0,0,0,0,0,0,1,0,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"less/2[java.lang.Object,java.lang.Object]",false,202,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"MinIndexedDHeap/2[int,int]",true,50,1,0,0,0,3,1,15,0,1,2,1,0,0,1,0,0,1,1,7,12,5,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,isMinHeap/0,false,241,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,pollMinValue/0,false,99,2,3,0,3,1,3,5,1,1,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,isMinHeap/1[int],false,245,1,2,0,2,4,3,8,3,3,1,3,0,0,1,0,0,0,0,0,3,1,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"increase/2[int,T]",false,155,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedDHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedDHeap,"decrease/2[int,T]",false,146,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative$Edge,"Edge/3[int,int,int]",true,21,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$Edge,augment/1[long],false,45,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$Edge,remainingCapacity/0,false,41,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$Edge,"toString/2[int,int]",false,50,1,1,0,1,5,3,5,1,2,2,3,1,1,0,4,0,6,5,0,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$Edge,"Edge/3[int,int,long]",true,31,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$Edge,isResidual/0,false,37,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\PowerSet.java,com.williamfiset.algorithms.other.PowerSet,powerSetUsingBinary/1[int[]],false,16,1,1,1,0,5,2,12,0,5,1,2,0,0,2,1,0,1,3,4,5,3,3,0,0,0,15,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\PowerSet.java,com.williamfiset.algorithms.other.PowerSet,main/1[java.lang.String[]],false,54,3,2,0,2,1,3,6,0,1,1,3,2,1,0,0,0,0,0,4,1,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\PowerSet.java,com.williamfiset.algorithms.other.PowerSet,"powerSetRecursive/3[int,int[],boolean[]]",false,33,3,3,2,1,4,3,13,0,1,3,3,1,0,1,1,0,0,3,3,3,3,3,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$Edge,remainingCapacity/0,false,43,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$Edge,isResidual/0,false,39,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$Edge,"toString/2[int,int]",false,52,1,2,1,1,5,3,5,1,2,2,3,1,1,0,4,0,6,5,0,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$Edge,augment/1[long],false,47,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$Edge,"Edge/3[int,int,long]",true,33,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,buildSuffixArray/0,false,89,1,3,2,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,7,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,kasai/0,false,116,1,1,1,0,8,0,13,0,5,0,0,0,0,3,1,0,2,0,6,8,5,3,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,"findColorFromPos/2[int,java.util.List<java.lang.Integer>]",false,147,1,1,1,0,4,0,11,1,2,2,0,0,0,1,0,0,0,1,1,2,0,2,0,0,0,18,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,toString/1[java.util.List<java.lang.Integer>],false,169,2,3,1,2,3,5,13,0,7,1,5,2,3,2,0,0,1,2,2,8,2,2,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,getTextLength/0,false,72,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,buildLcpArray/0,false,96,1,4,2,2,2,2,6,1,0,0,2,2,2,0,0,0,0,0,0,1,0,1,0,0,0,7,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,toString/0,false,131,1,0,0,0,3,3,13,1,8,0,3,0,0,2,0,0,1,2,2,9,1,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,getSa/0,false,77,2,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,toIntArray/1[java.lang.String],false,103,1,1,1,0,3,2,6,2,2,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,7,12,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,construct/0,false,112,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1028,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,SuffixArray/1[int[]],true,66,1,0,0,0,2,0,5,0,0,1,0,0,0,0,1,0,0,1,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArray,getLcpArray/0,false,83,2,2,1,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,poll/0,false,78,2,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,BinaryHeap/1[java.util.Collection<T>],true,42,2,1,0,1,2,4,6,0,2,1,4,0,0,1,0,0,1,0,4,3,2,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,removeAt/1[int],false,172,2,5,0,5,4,8,12,3,3,1,8,0,0,0,1,0,0,0,1,3,1,1,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,BinaryHeap/0,true,18,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,isMinHeap/1[int],false,198,1,3,0,3,6,3,9,4,3,1,3,0,0,0,0,0,0,0,4,3,4,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,"less/2[int,int]",false,103,1,0,0,0,2,2,5,1,2,2,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,toString/0,false,217,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,BinaryHeap/1[int],true,23,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,clear/0,false,60,0,0,0,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,BinaryHeap/1[T[]],true,29,2,1,0,1,3,3,6,0,3,1,3,0,0,2,0,0,1,0,5,4,2,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,add/1[T],false,91,2,2,0,2,2,3,6,0,1,1,3,0,0,0,1,0,0,0,1,1,1,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,peek/0,false,72,2,1,0,1,2,2,4,2,0,0,2,0,0,0,0,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,isEmpty/0,false,55,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,remove/1[T],false,159,2,2,0,2,4,4,10,3,1,1,4,0,0,1,1,0,0,0,1,1,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,swim/1[int],false,110,1,2,0,2,3,2,8,0,1,1,2,0,0,1,0,0,2,0,5,3,4,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,"swap/2[int,int]",false,150,1,0,0,0,1,2,6,0,2,2,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,sink/1[int],false,128,1,3,0,3,6,3,12,0,4,1,3,0,0,1,0,0,0,0,4,6,4,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,contains/1[T],false,83,2,1,0,1,3,3,4,2,1,1,3,0,0,1,0,0,0,0,1,1,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeap.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeap,size/0,false,65,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\RadixSortTest.java,com.williamfiset.algorithms.sorting.RadixSortTest,randomRadixSort_smallNumbers/0,false,25,4,2,0,2,3,6,12,0,4,0,6,1,1,2,0,0,0,0,5,5,0,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\RadixSortTest.java,com.williamfiset.algorithms.sorting.RadixSortTest,randomRadixSort_largeNumbers/0,false,41,4,2,0,2,3,6,12,0,4,0,6,1,1,2,0,0,0,0,4,5,0,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\RadixSortTest.java,com.williamfiset.algorithms.sorting.RadixSortTest,"randInt/2[int,int]",false,57,0,2,2,0,1,1,3,1,0,2,1,0,0,0,0,0,1,0,1,0,3,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\RadixSortTest.java,com.williamfiset.algorithms.sorting.RadixSortTest,testGetMax/0,false,13,3,1,0,1,1,3,4,0,1,0,3,0,0,0,0,0,0,0,8,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\RadixSortTest.java,com.williamfiset.algorithms.sorting.RadixSortTest,testCalculateNumberOfDigits/0,false,19,2,1,0,1,1,3,4,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,setUp/0,false,13,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testInvalidGraph3/0,false,149,3,4,0,4,1,5,17,0,3,0,5,2,1,0,0,0,0,0,21,3,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testOneNodeMultipleSelfLoopsGraph/0,false,197,2,3,0,3,1,3,10,0,2,0,3,3,1,0,0,0,0,0,11,2,0,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testGraphAllEqualEdgeFrequency2/0,false,106,2,3,0,3,1,3,13,0,2,0,3,3,1,0,0,0,0,0,17,2,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testEmptyGraph/0,false,78,3,3,0,3,1,4,6,0,2,0,4,1,1,0,0,0,0,0,1,2,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testGraphWithNoEdges/0,false,86,3,3,0,3,1,4,6,0,2,0,4,1,1,0,0,0,0,0,1,2,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testGraphAllEqualEdgeFrequency/0,false,94,2,3,0,3,1,3,9,0,2,0,3,3,1,0,0,0,0,0,9,2,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testInvalidGraph4/0,false,171,3,4,0,4,1,5,13,0,3,0,5,2,1,0,0,0,0,0,13,3,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testOneNodeSelfLoopGraph/0,false,189,2,3,0,3,1,3,6,0,2,0,3,3,1,0,0,0,0,0,3,2,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testGraphWithUniquePath/0,false,273,4,5,0,5,1,6,20,0,5,0,6,3,1,0,0,0,0,0,32,5,0,0,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,initializeEmptyGraph/1[int],false,18,0,16,16,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testMultiPartDisconnectedGraph/0,false,209,3,4,0,4,1,5,12,0,3,0,5,2,1,0,0,0,0,0,11,3,0,0,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testMultiPartDisconnectedGraph2/0,false,226,3,4,0,4,1,5,9,0,3,0,5,2,1,0,0,0,0,0,5,3,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testPathUniqueStartAndEndNodes/0,false,254,2,3,0,3,1,3,14,0,2,0,3,3,1,0,0,0,0,0,19,2,0,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testInvalidGraph2/0,false,134,3,4,0,4,1,5,12,0,3,0,5,2,1,0,0,0,0,0,11,3,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,"addDirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,25,0,14,14,0,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testSomewhatComplexPath/0,false,298,2,3,0,3,1,3,22,0,2,0,3,3,1,0,0,0,0,0,35,2,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testInvalidGraph1/0,false,122,3,4,0,4,1,5,9,0,3,0,5,2,1,0,0,0,0,0,5,3,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,testSimpleGraph/0,false,239,2,3,0,3,1,3,11,0,2,0,3,3,1,0,0,0,0,0,13,2,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\EulerianPathDirectedEdgesAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.EulerianPathDirectedEdgesAdjacencyListTest,verifyEulerianPath/1[java.util.List<java.util.List<java.lang.Integer>>],false,29,2,10,8,2,7,10,33,1,13,1,10,0,0,4,2,0,2,0,12,14,5,3,0,0,0,21,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic$Edge,toString/0,false,22,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\AStar_GridHeuristic.java,com.williamfiset.algorithms.graphtheory.AStar_GridHeuristic$Edge,"Edge/3[int,int,double]",true,14,0,1,1,0,2,0,6,0,0,3,0,0,0,0,0,0,0,1,1,3,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SlidingWindowMinimum,advance/0,false,512,0,0,0,0,3,4,5,0,0,0,4,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SlidingWindowMinimum,shrink/0,false,524,0,0,0,0,3,3,4,0,0,0,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SlidingWindowMinimum,getMin/0,false,534,0,0,0,0,2,1,4,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SlidingWindowMinimum,SlidingWindowMinimum/1[int[]],true,505,1,0,0,0,2,0,5,0,0,1,0,0,0,0,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,setup/0,false,15,4,3,0,3,1,1,5,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,testPollOnEmpty/0,false,30,2,1,0,1,2,1,5,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,testPeekOnEmpty/0,false,37,2,1,0,1,2,1,5,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,testOffer/0,false,44,2,2,0,2,2,4,6,0,0,0,4,0,0,1,0,0,0,0,2,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,testEmptyQueue/0,false,22,2,2,0,2,2,5,6,0,0,0,5,0,0,1,0,0,0,0,1,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,testExhaustively/0,false,70,2,5,0,5,2,9,18,0,0,0,9,0,0,1,0,0,0,0,11,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,testPeek/0,false,52,2,3,0,3,2,5,7,0,0,0,5,0,0,1,0,0,0,0,3,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\QueueTest.java,com.williamfiset.algorithms.datastructures.queue.QueueTest,testPoll/0,false,61,2,3,0,3,2,5,7,0,0,0,5,0,0,1,0,0,0,0,3,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\BoothsAlgorithm.java,com.williamfiset.algorithms.strings.BoothsAlgorithm,main/1[java.lang.String[]],false,33,1,1,0,1,1,2,8,0,2,1,2,1,1,0,0,0,0,2,0,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\BoothsAlgorithm.java,com.williamfiset.algorithms.strings.BoothsAlgorithm,leastCyclicRotation/1[java.lang.String],false,13,1,1,1,0,7,3,20,1,5,1,3,0,0,2,3,0,0,0,11,11,8,3,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,size/0,false,63,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,insert/1[int],false,88,2,11,8,3,6,3,11,3,2,1,3,2,4,1,1,0,1,0,3,2,2,1,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,increaseRank/1[com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node],false,160,2,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,getIndex/1[int],false,181,2,3,2,1,2,1,4,1,1,1,1,1,2,0,1,0,0,0,1,1,0,0,0,0,0,15,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,remove/1[int],false,134,2,8,6,2,5,2,14,3,1,1,2,2,3,1,4,0,0,0,0,6,0,1,0,0,0,23,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,search/1[int],false,73,2,5,4,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,decreaseRank/1[com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node],false,155,2,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,"SkipList/3[int,int,int]",true,32,2,12,10,2,2,1,17,0,3,3,1,1,1,1,0,0,0,0,2,12,1,1,0,0,0,28,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,"setHeadTail/3[int,com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node,com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node]",false,54,1,1,1,0,1,0,8,0,0,3,0,0,0,0,0,0,0,0,2,6,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,find/1[int],false,68,1,4,3,1,2,1,3,1,0,1,1,1,2,0,1,0,1,0,0,0,0,0,0,0,0,10,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,"search/2[int,com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node]",false,78,2,4,2,2,5,2,7,3,0,2,2,1,0,0,2,0,0,0,2,0,0,3,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,"insert/5[com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node,com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node,com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node,int,int]",false,102,2,5,2,3,7,2,25,0,1,5,2,2,2,1,5,0,0,0,1,11,0,2,0,0,0,12,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList,"modifyRank/2[com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node,int]",false,165,1,2,2,0,3,0,12,0,1,2,0,0,0,2,2,0,0,0,0,6,0,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModPow.java,com.williamfiset.algorithms.math.ModPow,"egcd/2[long,long]",false,32,2,3,2,1,3,1,8,2,2,2,1,1,0,0,1,0,1,0,9,4,4,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModPow.java,com.williamfiset.algorithms.math.ModPow,"modPow/3[long,long,long]",false,56,1,5,2,3,12,3,20,3,4,3,3,3,2,1,4,0,8,4,9,7,12,2,0,0,0,34,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModPow.java,com.williamfiset.algorithms.math.ModPow,randLong/1[long],false,163,0,1,1,0,1,2,3,1,0,1,2,0,0,0,0,0,0,0,2,0,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModPow.java,com.williamfiset.algorithms.math.ModPow,"gcd/2[long,long]",false,23,1,3,2,1,3,1,3,1,0,2,1,1,0,0,1,0,1,0,2,0,1,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModPow.java,com.williamfiset.algorithms.math.ModPow,main/1[java.lang.String[]],false,88,1,3,0,3,5,8,55,0,9,1,8,3,3,1,1,1,0,20,3,41,7,3,0,0,0,19,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModPow.java,com.williamfiset.algorithms.math.ModPow,"modInv/2[long,long]",false,43,2,2,1,1,1,1,6,1,2,2,1,1,1,0,0,0,4,0,1,3,6,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ModPow.java,com.williamfiset.algorithms.math.ModPow,randLong/0,false,167,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kahns.java,com.williamfiset.algorithms.graphtheory.Kahns,kahns/1[java.util.List<java.util.List<java.lang.Integer>>],false,28,1,7,7,0,9,5,31,1,7,1,5,0,0,5,3,0,0,1,4,8,0,3,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kahns.java,com.williamfiset.algorithms.graphtheory.Kahns,test2/0,false,116,2,4,0,4,1,5,14,0,2,0,5,1,1,0,0,0,0,0,19,2,0,0,0,0,0,11,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kahns.java,com.williamfiset.algorithms.graphtheory.Kahns,main/1[java.lang.String[]],false,68,1,1,0,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kahns.java,com.williamfiset.algorithms.graphtheory.Kahns,test1/0,false,103,2,4,0,4,1,5,12,0,2,0,5,1,1,0,0,0,0,0,15,2,0,0,0,0,0,11,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kahns.java,com.williamfiset.algorithms.graphtheory.Kahns,exampleFromSlides/0,false,75,3,5,1,4,1,5,24,0,3,0,5,1,1,0,0,0,0,0,37,3,0,0,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Kahns.java,com.williamfiset.algorithms.graphtheory.Kahns,cycleTest/0,false,131,2,4,0,4,1,5,9,0,2,0,5,1,1,0,0,0,0,0,9,2,0,0,0,0,0,12,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01$Individual,Individual/1[java.util.BitSet],true,178,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01$Individual,toString/0,false,183,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_knapsack_01.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_knapsack_01$Individual,Individual/1[int],true,169,0,1,1,0,3,2,8,0,1,1,2,0,0,1,0,0,0,0,2,2,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DepthFirstSearchAdjacencyListRecursive.java,com.williamfiset.algorithms.graphtheory.DepthFirstSearchAdjacencyListRecursive$Edge,"Edge/3[int,int,int]",true,15,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase$Edge,isResidual/0,false,29,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase$Edge,"Edge/4[int,int,long,long]",true,22,0,1,1,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase$Edge,"Edge/3[int,int,long]",true,18,0,1,1,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase$Edge,augment/1[long],false,37,0,6,6,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase$Edge,remainingCapacity/0,false,33,0,11,11,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase$Edge,"toString/2[int,int]",false,42,1,3,2,1,5,3,5,1,2,2,3,1,1,0,4,0,6,5,0,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,TreeNode/1[int],true,96,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,"TreeNode/2[int,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode]",true,100,1,1,1,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,"rootTree/2[java.util.List<java.util.List<java.lang.Integer>>,int]",false,133,1,6,3,3,2,4,8,1,2,2,4,2,2,0,0,0,0,1,0,2,0,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,index/0,false,121,0,7,7,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,children/0,false,129,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,toString/0,false,163,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,parent/0,false,125,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,addChildren/1[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode[]],false,106,1,1,1,0,2,1,5,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,size/0,false,117,0,4,4,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,"buildTree/2[java.util.List<java.util.List<java.lang.Integer>>,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode]",false,144,1,9,2,7,4,7,14,1,2,2,7,6,1,1,2,0,0,0,1,3,0,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$TreeNode,setSize/1[int],false,112,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,407,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"generateRandomArrayByTestType/2[int,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree.SegmentCombinationFn]",false,333,3,2,1,1,2,1,6,2,0,2,1,0,0,0,1,0,0,0,4,0,0,1,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,395,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,testAllFunctionCombinations/0,false,222,7,14,0,14,21,20,64,0,16,0,20,10,2,4,15,0,1,1,12,24,4,5,0,0,0,65,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceGcd/3[long[],int,int]",false,387,2,2,1,1,2,1,7,1,2,3,1,1,1,1,0,0,0,0,0,3,0,1,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"gcd/2[long,long]",false,376,0,1,1,0,2,1,9,1,1,2,1,0,0,1,1,0,0,0,1,4,1,1,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,401,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceMin/3[long[],int,int]",false,351,1,1,1,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceMax/3[long[],int,int]",false,360,1,1,1,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,getRandValueByTestType/1[com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree.SegmentCombinationFn],false,325,2,2,1,1,2,1,6,2,0,1,1,0,0,0,1,0,0,0,4,0,0,1,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceSum/3[long[],int,int]",false,342,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTreeTest,"bruteForceMul/3[long[],int,int]",false,368,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList$Node,"Node/2[int,double]",true,42,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList,"mcbm/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,28,2,2,1,1,2,2,11,1,5,3,2,1,1,1,0,0,0,0,2,6,1,1,0,0,0,41,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList,createEmptyGraph/1[int],false,77,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,83,0,1,1,0,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList,main/1[java.lang.String[]],false,87,1,3,0,3,1,4,12,0,2,1,4,3,2,0,0,0,0,0,17,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.MaximumCardinalityBipartiteMatchingAugmentingPathAdjacencyList,"augment/4[java.util.List<java.util.List<java.lang.Integer>>,int[],int[],int]",false,44,2,3,2,1,5,2,16,4,1,4,2,1,0,1,3,0,0,0,5,4,0,2,0,0,0,10,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,getBitPosition/1[int],false,174,0,1,1,0,2,0,8,1,1,1,0,0,0,1,0,0,0,0,3,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,getMinWeightCost/0,false,49,1,2,1,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,reconstructMatching/1[int[]],false,144,2,2,1,1,3,4,18,0,9,1,4,1,1,2,1,0,0,0,8,15,5,1,0,0,0,24,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,getMatching/0,false,71,2,2,1,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,44,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,WeightedMaximumCardinalityMatchingIterative/1[double[][]],true,35,1,1,1,0,5,0,9,0,0,1,0,0,0,0,3,0,1,5,6,3,4,1,0,0,0,49,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,main/1[java.lang.String[]],false,185,1,1,0,1,1,1,3,0,0,1,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,test/0,false,189,3,4,1,3,3,4,17,0,7,0,4,2,4,1,1,0,0,3,42,7,4,1,0,0,0,19,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingIterative.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingIterative,solve/0,false,76,3,3,2,1,11,1,36,1,14,0,1,1,2,4,3,0,6,0,13,21,10,3,0,0,0,23,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,117,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,123,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,setup/0,false,18,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,testRandomRangeAssignUpdatesWithSumRangeQueries/0,false,54,5,7,0,7,3,10,22,0,13,0,10,2,1,2,0,0,0,0,14,15,4,2,0,0,0,38,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,"bruteForceMin/3[long[],int,int]",false,94,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,"bruteForceMax/3[long[],int,int]",false,103,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,"bruteForceSum/3[long[],int,int]",false,85,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,simpleTest/0,false,21,3,3,0,3,1,4,25,0,2,0,4,0,0,0,0,0,0,0,68,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTreeTest,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,111,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testPeekLast/0,false,101,2,3,0,3,1,5,5,0,0,0,5,0,0,0,0,0,0,0,3,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testAddAt/0,false,66,2,2,0,2,1,4,12,0,0,0,4,0,0,0,0,0,0,0,15,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,setup/0,false,19,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testAddFirst/0,false,50,2,2,0,2,1,4,6,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testToString/0,false,313,2,3,0,3,1,4,13,0,1,0,4,0,0,0,0,0,0,10,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testAddLast/0,false,58,2,2,0,2,1,4,6,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRandomizedRemoving/0,false,195,3,6,0,6,9,19,38,0,11,0,19,1,1,8,0,0,1,0,3,13,1,3,0,0,0,35,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRemoveLast/0,false,87,2,3,0,3,1,6,5,0,0,0,6,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRandomizedRemoveAt/0,false,248,3,6,0,6,5,17,22,0,9,0,17,1,1,4,0,0,1,0,2,9,1,3,0,0,0,31,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRemoveLastOfEmpty/0,false,35,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRemoving/0,false,146,2,4,0,4,1,5,16,0,1,0,5,0,0,0,0,0,0,12,1,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testEmptyList/0,false,24,2,2,0,2,1,5,4,0,0,0,5,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRemoveFirst/0,false,80,2,3,0,3,1,5,5,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRemoveAt/0,false,164,2,5,0,5,1,7,13,0,0,0,7,0,0,0,0,0,0,0,11,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,genRandList/1[int],false,328,0,2,2,0,3,3,7,1,3,1,3,0,0,2,0,0,1,0,2,3,1,1,0,0,0,17,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testPeekFirst/0,false,94,2,3,0,3,1,5,5,0,0,0,5,0,0,0,0,0,0,0,3,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testClear/0,false,179,2,3,0,3,1,5,14,0,0,0,5,0,0,0,0,0,0,0,10,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRemoveFirstOfEmpty/0,false,30,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testPeeking/0,false,108,2,6,0,6,1,8,23,0,0,0,8,0,0,0,0,0,0,0,18,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testPeekFirstOfEmpty/0,false,40,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testPeekLastOfEmpty/0,false,45,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,testRandomizedIndexOf/0,false,280,3,6,0,6,5,18,23,0,9,0,18,1,1,4,0,0,0,0,2,9,0,3,0,0,0,31,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\linkedlist\LinkedListTest.java,com.williamfiset.algorithms.datastructures.linkedlist.LinkedListTest,genUniqueRandList/1[int],false,337,0,1,1,0,3,2,7,1,3,1,2,0,0,2,0,0,0,0,2,3,0,1,0,0,0,14,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,toString/0,false,336,0,0,0,0,2,2,5,1,2,0,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,contains/1[int],false,206,1,1,0,1,2,1,4,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,peekMinKeyIndex/0,false,211,1,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,delete/1[int],false,250,2,4,0,4,1,4,12,1,2,1,4,0,0,0,0,0,0,1,2,5,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"less/2[int,int]",false,326,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"insert/2[int,T]",false,234,2,3,0,3,2,3,8,0,0,2,3,0,0,0,0,0,0,1,0,3,1,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,pollMinKeyIndex/0,false,216,1,2,0,2,1,2,5,1,1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,valueOf/1[int],false,244,2,1,0,1,1,1,4,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"swap/2[int,int]",false,316,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,keyInBoundsOrThrow/1[int],false,361,0,0,0,0,3,0,3,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,size/0,false,198,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,isNotEmptyOrThrow/0,false,344,1,1,0,1,2,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,swim/1[int],false,302,1,2,0,2,2,2,6,0,0,1,2,0,0,1,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"keyExistsAndValueNotNullOrThrow/2[int,java.lang.Object]",false,348,1,2,0,2,1,2,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,keyExistsOrThrow/1[int],false,353,1,1,0,1,2,1,3,0,0,1,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,sink/1[int],false,294,1,2,0,2,2,2,7,0,1,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,peekMinValue/0,false,223,2,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,isEmpty/0,false,202,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,valueNotNullOrThrow/1[java.lang.Object],false,357,0,0,0,0,2,0,3,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,minChild/1[int],false,310,1,1,0,1,3,2,5,1,4,1,2,0,0,1,0,0,0,0,1,6,1,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,pollMinValue/0,false,228,2,3,0,3,1,3,5,1,1,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"decrease/2[int,T]",false,275,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"MinIndexedDHeap/2[int,int]",true,179,1,0,0,0,3,1,15,0,1,2,1,0,0,1,0,0,1,1,7,12,5,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"update/2[int,T]",false,264,2,3,0,3,1,3,9,1,2,2,3,0,0,0,0,0,0,1,0,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"less/2[java.lang.Object,java.lang.Object]",false,331,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyListWithDHeap.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyListWithDHeap$MinIndexedDHeap,"increase/2[int,T]",false,284,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImpl.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl,"dfs/5[java.util.List<java.util.List<java.lang.Integer>>,boolean[],int[],int,int]",false,29,4,4,2,2,4,2,16,2,5,5,2,1,0,1,0,0,0,0,4,9,1,2,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImpl.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl,findTreeCenters/1[java.util.List<java.util.List<java.lang.Integer>>],false,55,4,9,8,1,5,7,26,3,9,1,7,1,1,1,4,0,0,0,12,11,4,1,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImpl.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,101,0,6,6,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImpl.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl,createEmptyTree/1[int],false,95,0,7,7,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,12,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImpl.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl,main/1[java.lang.String[]],false,106,1,3,0,3,1,4,34,0,6,1,4,3,2,0,0,0,0,0,46,6,0,0,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$MinSparseTable,init/1[long[]],false,252,2,1,1,0,6,2,27,0,6,1,2,0,0,4,0,0,6,0,21,17,18,3,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$MinSparseTable,"queryIndex/2[int,int]",false,286,0,1,1,0,2,0,12,2,4,2,0,0,0,0,0,0,2,0,6,4,10,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour$MinSparseTable,MinSparseTable/1[long[]],true,248,2,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"genRandArray/3[int,int,int]",false,165,1,3,3,0,1,2,3,1,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,verifyIndexIsAlwaysLeftmostPositionWhenThereAreCollisions/0,false,109,3,3,0,3,5,4,19,0,7,0,4,0,0,3,0,0,0,0,12,9,0,4,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"gcdQuery/4[long[],int,int,long]",false,57,2,2,1,1,2,3,5,0,2,4,3,1,1,1,0,0,0,0,0,3,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,testAllOperations/1[long[]],false,63,3,7,3,4,3,3,16,0,7,1,3,1,3,2,0,0,0,0,4,7,0,2,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"queryResultTest/6[long[],int,int,long,int,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable.Operation]",false,11,3,6,1,5,6,5,17,0,0,6,5,5,2,0,5,0,0,0,0,0,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"maxQuery/5[long[],int,int,long,int]",false,32,1,1,1,0,2,3,6,0,2,5,3,0,0,1,0,0,0,0,0,3,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"multQuery/4[long[],int,int,long]",false,45,1,1,1,0,2,2,5,0,2,4,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"sumQuery/4[long[],int,int,long]",false,39,1,1,1,0,2,2,5,0,2,4,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"minQuery/5[long[],int,int,long,int]",false,25,1,1,1,0,2,3,6,0,2,5,3,0,0,1,0,0,0,0,0,3,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,"gcd/2[long,long]",false,53,1,3,2,1,3,1,3,1,0,2,1,1,0,0,1,0,1,0,2,0,1,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,smallRangeRandomArrayTests/0,false,93,3,2,0,2,2,2,6,0,2,0,2,2,4,1,0,0,0,0,4,2,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,simple/0,false,87,3,1,0,1,1,1,4,0,1,0,1,1,4,0,0,0,0,0,11,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,randomArrayTests/0,false,101,3,2,0,2,2,2,6,0,2,0,2,2,4,1,0,0,0,0,4,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTableTest.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTableTest,verifyIndexIsAlwaysLeftmostPosition_randomized/0,false,132,4,4,0,4,7,5,30,0,11,0,5,1,1,4,0,0,0,0,7,15,0,5,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\magicalcows\MagicalCows.java,com.williamfiset.algorithms.dp.examples.magicalcows.MagicalCows,"query/2[long[][],int]",false,71,1,1,1,0,2,0,8,1,3,2,0,0,0,1,0,0,0,0,2,4,0,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\magicalcows\MagicalCows.java,com.williamfiset.algorithms.dp.examples.magicalcows.MagicalCows,main/1[java.lang.String[]],false,27,2,1,0,1,6,5,25,0,11,1,5,1,1,4,0,0,0,1,15,13,7,3,0,0,0,20,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,relaxEdgesAtNode/1[int],false,64,2,4,1,3,4,4,14,0,2,1,4,0,0,1,0,0,0,0,0,3,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,EagerPrimsAdjacencyList/1[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList.Edge>>],true,46,1,7,7,0,3,2,5,0,0,1,2,0,0,0,1,0,0,0,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,firstGraphFromSlides/0,false,196,2,5,0,5,3,6,27,0,4,0,6,4,4,1,1,0,0,3,37,4,1,2,0,0,0,25,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,solve/0,false,87,4,7,2,5,5,7,18,1,5,0,7,1,1,1,2,0,1,0,5,12,2,1,0,0,0,23,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,example1/0,false,148,2,5,0,5,3,6,33,0,4,0,6,4,4,1,1,0,0,3,55,4,1,2,0,0,0,23,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,main/1[java.lang.String[]],false,138,1,1,0,1,1,1,3,0,0,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,lazyVsEagerAnalysis/0,false,355,4,8,0,8,4,10,25,0,12,0,10,3,4,2,1,0,2,4,4,14,7,2,0,0,0,21,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,disjointOnFirstNode/0,false,256,2,5,0,5,3,6,18,0,4,0,6,4,4,1,1,0,0,3,10,4,1,2,0,0,0,26,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,createEmptyGraph/1[int],false,121,1,7,7,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,"addUndirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList.Edge>>,int,int,int]",false,131,2,7,6,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,squareGraphFromSlides/0,false,226,2,5,0,5,3,6,27,0,4,0,6,4,4,1,1,0,0,3,37,4,1,2,0,0,0,25,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,"addDirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList.Edge>>,int,int,int]",false,127,1,3,2,1,1,2,3,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,getMstCost/0,false,59,1,8,7,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,eagerPrimsExampleFromSlides/0,false,305,2,6,1,5,3,6,39,0,4,0,6,4,3,1,1,0,0,3,73,4,1,2,0,0,0,26,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,disjointGraph/0,false,278,2,5,0,5,3,6,21,0,4,0,6,4,4,1,1,0,0,3,19,4,1,2,0,0,0,23,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList,getMst/0,false,54,2,7,6,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$Edge,remainingCapacity/0,false,44,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$Edge,isResidual/0,false,40,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$Edge,"toString/2[int,int]",false,53,1,2,1,1,5,3,5,1,2,2,3,1,1,0,4,0,6,5,0,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$Edge,augment/1[long],false,48,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample$Edge,"Edge/3[int,int,long]",true,34,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTreeTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTreeTest,getGraph1/0,false,23,1,3,1,2,1,2,12,1,1,0,2,2,1,0,0,0,0,0,17,1,0,0,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTreeTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTreeTest,testSimpleRooting1/0,false,37,4,6,0,6,1,9,19,0,11,0,9,1,2,0,0,0,0,0,15,11,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTreeTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTreeTest,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,18,0,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTreeTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTreeTest,createGraph/1[int],false,12,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArraySlow.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow$Suffix,compareTo/1[com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow.Suffix],false,25,1,0,0,0,5,1,9,4,2,1,1,0,0,1,1,0,0,0,4,2,5,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArraySlow.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow$Suffix,"Suffix/2[int[],int]",true,17,1,1,1,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArraySlow.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArraySlow$Suffix,toString/0,false,36,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample,main/1[java.lang.String[]],false,218,2,3,0,3,1,3,25,0,4,1,3,0,0,0,0,0,0,1,48,4,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspBruteForce.java,com.williamfiset.algorithms.graphtheory.TspBruteForce,tsp/1[double[][]],false,16,3,6,4,2,4,3,16,1,6,1,3,2,2,2,0,0,0,0,1,9,0,2,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspBruteForce.java,com.williamfiset.algorithms.graphtheory.TspBruteForce,"computeTourCost/2[int[],double[][]]",false,40,2,5,5,0,2,0,11,1,6,2,0,0,0,1,0,0,0,0,5,7,3,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspBruteForce.java,com.williamfiset.algorithms.graphtheory.TspBruteForce,getFirst/1[int[]],false,72,1,1,1,0,3,0,4,2,1,1,0,0,0,1,0,0,0,0,4,1,2,2,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspBruteForce.java,com.williamfiset.algorithms.graphtheory.TspBruteForce,main/1[java.lang.String[]],false,83,3,2,0,2,3,5,12,0,7,1,5,2,3,2,0,0,0,1,16,8,2,1,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspBruteForce.java,com.williamfiset.algorithms.graphtheory.TspBruteForce,"swap/3[int[],int,int]",false,77,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TspBruteForce.java,com.williamfiset.algorithms.graphtheory.TspBruteForce,nextPermutation/1[int[]],false,61,2,3,1,2,4,2,10,2,2,1,2,2,1,2,1,0,0,0,3,3,2,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,testSumQuerySumUpdate_Simple/0,false,22,3,2,0,2,1,3,7,0,2,0,3,0,0,0,0,0,0,0,14,2,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,"bruteForceSum/3[long[],int,int]",false,456,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,setup/0,false,19,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,testSumQueryAssignUpdate_simple/0,false,65,3,3,0,3,1,4,25,0,2,0,4,0,0,0,0,0,0,0,68,2,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,maxQueryMulUpdate_simple/0,false,242,3,3,0,3,1,4,17,0,2,0,4,0,0,0,0,0,0,0,44,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,minQueryMulUpdate_simple/0,false,269,3,3,0,3,1,4,17,0,2,0,4,0,0,0,0,0,0,0,44,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,maxminQueryMulUpdate_simple/0,false,208,3,3,0,3,1,4,17,0,3,0,4,0,0,0,0,0,0,0,41,3,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,testAllFunctionCombinations/0,false,376,7,11,0,11,15,15,51,0,15,0,15,6,1,4,10,0,1,1,15,20,4,5,0,0,0,49,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,482,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,488,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,"bruteForceMin/3[long[],int,int]",false,465,1,1,1,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,minQuerySumUpdates_simple/0,false,122,3,3,0,3,1,4,29,0,2,0,4,0,0,0,0,0,0,0,80,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,maxQuerySumUpdate_simple/0,false,163,3,3,0,3,1,4,29,0,2,0,4,0,0,0,0,0,0,0,80,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,494,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,testSumQuerySumUpdate_RangeUpdate/0,false,36,3,3,0,3,1,4,16,0,2,0,4,0,0,0,0,0,0,0,76,2,31,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,"bruteForceMax/3[long[],int,int]",false,474,1,1,1,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2Test.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2Test,testSumQueryMulUpdate_simple/0,false,102,3,3,0,3,1,4,11,0,2,0,4,0,0,0,0,0,0,0,54,2,25,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\graphutils\Utils.java,com.williamfiset.algorithms.utils.graphutils.Utils,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,37,1,8,7,1,1,1,4,0,0,3,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,15,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\graphutils\Utils.java,com.williamfiset.algorithms.utils.graphutils.Utils,"addDirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,26,0,8,8,0,6,3,7,0,1,3,3,0,0,0,1,0,0,3,2,1,2,1,0,0,0,25,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\graphutils\Utils.java,com.williamfiset.algorithms.utils.graphutils.Utils,createEmptyAdjacencyList/1[int],false,18,0,14,14,0,3,1,6,1,2,1,1,0,0,1,0,0,0,1,2,2,1,1,0,0,0,28,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,push/1[T],false,31,1,0,0,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,iterator/0,false,57,1,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,peek/0,false,44,2,1,0,1,2,2,4,1,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,ListStack/1[T],true,16,2,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,search/1[T],false,51,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,isEmpty/0,false,26,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,ListStack/0,true,13,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,pop/0,false,37,2,1,0,1,2,2,4,1,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ListStack.java,com.williamfiset.algorithms.datastructures.stack.ListStack,size/0,false,21,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testClosedCycle/0,false,52,4,4,0,4,1,5,11,0,5,0,5,2,1,0,0,0,0,0,7,5,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,18,0,11,11,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testButterflyGraph/0,false,122,4,4,0,4,1,5,15,0,5,0,5,2,1,0,0,0,0,0,14,6,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testDisconnectedGraph/0,false,163,4,4,0,4,1,5,19,0,5,0,5,2,1,0,0,0,0,0,20,8,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testStarGraphWithRootNotInMiddle/0,false,85,4,4,0,4,1,5,14,0,5,0,5,2,1,0,0,0,0,0,12,6,0,0,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testBiConnectedGraph/0,false,104,4,4,0,4,1,5,14,0,5,0,5,2,1,0,0,0,0,0,13,5,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,createGraph/1[int],false,11,0,12,12,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testTwoNodeGraph/0,false,200,4,4,0,4,1,5,9,0,5,0,5,2,1,0,0,0,0,0,3,5,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testMultiCycleGraph/0,false,213,4,4,0,4,1,5,19,0,5,0,5,2,1,0,0,0,0,0,21,7,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testStarGraphWithRootAsMiddle/0,false,67,4,4,0,4,1,5,14,0,5,0,5,2,1,0,0,0,0,0,12,6,0,0,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testButterflyGraphWithThreeWings/0,false,141,4,4,0,4,1,5,18,0,5,0,5,2,1,0,0,0,0,0,20,6,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testSingleNodeGraph/0,false,188,4,3,0,3,1,4,8,0,5,0,4,1,1,0,0,0,0,0,1,5,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testThreeNodeLineGraph/0,false,238,4,4,0,4,1,5,11,0,5,0,5,2,1,0,0,0,0,0,6,6,0,0,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\ArticulationPointsAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.ArticulationPointsAdjacencyListTest,testTreeCase/0,false,25,4,4,0,4,1,5,21,0,5,0,5,2,1,0,0,0,0,0,29,11,0,0,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyListTest,createGraph/1[int],false,11,0,3,3,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,3,2,2,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyListTest,testSimpleSatisfiable/0,false,18,3,4,0,4,1,5,7,0,3,0,5,1,1,0,0,0,0,0,4,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyListTest,testSimpleImpossible/0,false,30,3,4,0,4,1,5,8,0,3,0,5,1,1,0,0,0,0,0,7,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyListTest,testImpossibleFourNodeCycle/0,false,43,3,4,0,4,1,5,10,0,3,0,5,1,1,0,0,0,0,0,21,3,8,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman$Individual,mutate/0,false,268,0,1,1,0,1,1,7,0,3,0,1,0,0,0,0,0,0,0,0,5,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman$Individual,shuffleArray/1[int[]],false,277,1,2,2,0,3,1,11,0,2,1,1,0,0,1,1,0,0,0,3,5,2,2,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman$Individual,toString/0,false,290,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman$Individual,Individual/1[int[]],true,256,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman$Individual,Individual/1[int],true,249,2,2,1,1,2,1,5,0,1,1,1,1,1,1,0,0,0,0,1,3,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,PrimsAdjMatrix/1[java.lang.Integer[][]],true,243,0,1,1,0,4,0,5,0,0,1,0,0,0,0,3,0,0,0,2,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,getMst/0,false,252,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,createEmptyGraph/1[int],false,317,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,relaxEdgesAtNode/1[int],false,262,1,4,1,3,5,3,14,0,2,1,3,0,0,1,1,0,0,0,1,3,0,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,"addUndirectedEdge/4[java.lang.Integer[][],int,int,int]",false,325,1,2,1,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,getMstCost/0,false,257,1,2,1,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,"addDirectedEdge/4[java.lang.Integer[][],int,int,int]",false,321,0,1,1,0,1,0,3,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis$PrimsAdjMatrix,solve/0,false,284,3,6,1,5,5,7,17,1,5,0,7,1,1,1,2,0,1,0,5,10,2,1,0,0,0,22,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray$Anonymous1,next/0,false,120,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray$Anonymous1,remove/0,false,124,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\dynamicarray\IntArray.java,com.williamfiset.algorithms.datastructures.dynamicarray.IntArray$Anonymous1,hasNext/0,false,116,0,0,0,0,2,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,TreeNode/1[int],true,21,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,addChildren/1[com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree.TreeNode[]],false,31,1,1,1,0,2,1,5,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,toString/0,false,50,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,parent/0,false,41,1,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,equals/1[java.lang.Object],false,56,1,1,0,1,2,1,6,2,0,1,1,1,1,0,1,0,1,0,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,"TreeNode/2[int,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree.TreeNode]",true,25,1,2,2,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,id/0,false,37,0,3,3,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree$TreeNode,children/0,false,45,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeSum.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum,treeSum/1[com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum.TreeNode],false,43,2,5,2,3,3,3,7,2,1,1,3,1,0,1,1,0,0,0,2,3,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeSum.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum,main/1[java.lang.String[]],false,53,2,2,0,2,1,3,4,0,1,1,3,2,1,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeSum.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum,makeTree/0,false,58,1,3,1,2,1,1,19,1,11,0,1,0,0,0,0,0,0,0,11,11,0,0,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SegmentTreeWithPointersTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest,testIllegalSegmentTreeCreation1/0,false,17,2,1,0,1,1,0,3,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SegmentTreeWithPointersTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest,setup/0,false,14,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SegmentTreeWithPointersTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest,"bruteForceSum/3[int[],int,int]",false,55,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SegmentTreeWithPointersTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest,testAllSumQueries/0,false,40,5,4,0,4,3,5,12,0,7,0,5,1,1,2,0,0,0,0,5,7,1,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SegmentTreeWithPointersTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest,testSumQuery/0,false,28,3,2,0,2,1,3,9,0,2,0,3,0,0,0,0,0,0,0,20,2,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\SegmentTreeWithPointersTest.java,com.williamfiset.algorithms.datastructures.segmenttree.SegmentTreeWithPointersTest,testIllegalSegmentTreeCreation2/0,false,22,2,1,0,1,1,0,4,0,2,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointInsideTriangle.java,com.williamfiset.algorithms.geometry.PointInsideTriangle,"collinear/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,62,0,2,2,0,2,4,8,2,7,3,4,0,0,0,0,0,4,0,1,7,7,1,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointInsideTriangle.java,com.williamfiset.algorithms.geometry.PointInsideTriangle,"pointInsideTriangle/4[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,23,1,2,1,1,8,1,9,1,3,4,1,1,1,0,1,0,2,1,7,3,0,1,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointInsideTriangle.java,com.williamfiset.algorithms.geometry.PointInsideTriangle,main/1[java.lang.String[]],false,71,1,2,0,2,7,6,22,0,9,1,6,2,3,4,0,0,0,2,14,9,0,3,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointInsideTriangle.java,com.williamfiset.algorithms.geometry.PointInsideTriangle,"pointInsideTriangle2/4[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,42,1,2,1,1,7,1,9,1,3,4,1,1,1,0,3,0,2,1,4,3,0,1,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\Dinics.java,com.williamfiset.algorithms.graphtheory.networkflow.Dinics,main/1[java.lang.String[]],false,94,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\Dinics.java,com.williamfiset.algorithms.graphtheory.networkflow.Dinics,testGraphFromSlides/0,false,127,2,3,0,3,1,3,26,0,4,0,3,0,0,0,0,0,0,1,51,4,2,0,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\Dinics.java,com.williamfiset.algorithms.graphtheory.networkflow.Dinics,"Dinics/3[int,int,int]",true,31,1,3,3,0,1,0,4,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,29,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\Dinics.java,com.williamfiset.algorithms.graphtheory.networkflow.Dinics,"dfs/3[int,int[],long]",false,73,3,5,2,3,6,6,16,3,4,3,6,1,0,1,2,0,0,0,4,4,1,3,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\Dinics.java,com.williamfiset.algorithms.graphtheory.networkflow.Dinics,solve/0,false,37,2,2,0,2,5,3,10,0,3,0,3,2,1,3,2,0,0,0,4,6,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\Dinics.java,com.williamfiset.algorithms.graphtheory.networkflow.Dinics,bfs/0,false,55,1,2,1,1,6,5,17,1,3,0,5,0,0,2,2,0,0,0,6,5,1,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\Dinics.java,com.williamfiset.algorithms.graphtheory.networkflow.Dinics,testSmallFlowGraph/0,false,101,2,4,1,3,1,3,17,0,4,0,3,0,0,0,0,0,0,0,26,4,2,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring$SuffixArray,construct/0,false,58,0,1,1,0,17,1,23,0,3,0,1,0,0,10,3,0,1,0,24,26,15,3,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring$SuffixArray,display/0,false,124,0,0,0,0,2,1,8,0,3,0,1,0,0,1,0,0,0,2,1,3,1,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring$SuffixArray,SuffixArray/1[int[]],true,47,2,2,0,2,1,3,10,0,0,1,3,2,1,0,0,0,0,0,0,6,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring$SuffixArray,lrs/0,false,104,0,1,1,0,5,2,12,1,3,0,2,0,0,1,0,0,0,0,3,4,0,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring$SuffixArray,SuffixArray/1[java.lang.String],true,36,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring$SuffixArray,toIntArray/1[java.lang.String],false,40,1,1,1,0,2,2,5,1,2,1,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestRepeatedSubstring.java,com.williamfiset.algorithms.strings.LongestRepeatedSubstring$SuffixArray,kasai/0,false,86,1,1,1,0,8,0,13,0,5,0,0,0,0,3,1,0,2,0,7,8,6,3,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"printDebugInfo/3[int,int,int]",false,170,1,3,2,1,2,2,9,1,1,3,2,1,0,0,1,0,1,1,6,1,7,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"sumRangeUpdateAssignFn/4[long,int,int,long]",false,35,0,2,2,0,1,0,3,1,0,4,0,0,0,0,0,0,1,0,1,0,3,0,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,67,2,4,2,2,2,2,10,1,1,4,2,2,1,0,1,0,1,0,10,3,11,1,0,0,0,33,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"assignFunction/2[java.lang.Long,java.lang.Long]",false,122,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"propagate1/3[int,int,int]",false,133,1,4,2,2,2,2,7,0,0,3,2,2,2,0,1,0,0,0,1,2,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"sumCombinationFn/2[java.lang.Long,java.lang.Long]",false,26,0,3,3,0,5,0,6,4,0,2,0,0,0,0,4,0,0,0,0,0,1,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"rangeUpdate1/3[int,int,long]",false,117,1,3,2,1,1,1,3,0,0,3,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"rangeQuery1/5[int,int,int,int,int]",false,98,1,5,2,3,4,5,11,3,1,5,5,3,3,0,2,0,1,0,7,1,8,1,0,0,0,29,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,printDebugInfo/0,false,165,1,1,0,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,SumQueryAssignUpdateSegmentTree/1[long[]],true,39,2,4,3,1,2,1,10,0,1,1,1,1,2,0,1,0,0,1,4,4,2,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"propagateLazy/4[int,int,int,long]",false,126,1,3,2,1,2,1,5,1,0,4,1,1,1,0,1,0,0,0,6,2,4,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"rangeQuery1/2[int,int]",false,85,1,3,2,1,1,1,3,1,0,2,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,main/1[java.lang.String[]],false,184,2,1,0,1,1,0,4,0,2,1,0,0,0,0,0,0,0,0,5,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQueryAssignUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQueryAssignUpdateSegmentTree,"rangeUpdate1/6[int,int,int,int,int,long]",false,144,1,7,2,5,4,7,16,1,1,6,7,5,3,0,2,0,1,0,12,3,12,1,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,"QuadTree/2[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Rect,int]",true,365,2,1,0,1,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,count/1[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Rect],false,374,2,3,2,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,isNorth/1[int],false,21,0,1,1,0,3,0,3,1,0,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,"getPoints/2[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Node,java.util.List<com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Pt>]",false,388,3,4,2,2,3,2,8,1,1,2,2,1,0,1,1,0,0,0,1,1,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,"kNearestNeighbors/3[int,long,long]",false,378,2,1,0,1,1,1,3,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,"add/2[long,long]",false,370,1,3,2,1,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,QuadTree/1[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Rect],true,360,2,3,2,1,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree,getPoints/0,false,382,2,1,0,1,1,1,5,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$SortedPt,compareTo/1[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.SortedPt],false,49,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$SortedPt,toString/0,false,54,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$SortedPt,"SortedPt/2[double,com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Pt]",true,43,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList$Edge,"Edge/3[int,int,double]",true,30,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestCommonSubsequence.java,com.williamfiset.algorithms.dp.LongestCommonSubsequence,main/1[java.lang.String[]],false,65,2,1,0,1,1,2,8,0,2,1,2,1,1,0,0,0,0,0,0,4,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestCommonSubsequence.java,com.williamfiset.algorithms.dp.LongestCommonSubsequence,"lcs/2[char[],char[]]",false,15,2,1,1,0,15,1,26,3,11,2,1,0,0,5,7,0,0,0,24,14,13,3,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList,main/1[java.lang.String[]],false,80,1,1,0,1,1,1,4,0,2,1,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList,isSatisfiable/0,false,21,1,4,3,1,2,1,4,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList,solve/0,false,26,2,2,1,1,5,1,14,1,2,0,1,0,0,1,1,0,0,0,3,6,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList,createImplicationGraph/1[int],false,56,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,3,2,2,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList,TwoSatSolverAdjacencyList/1[java.util.List<java.util.List<java.lang.Integer>>],true,15,1,4,3,1,1,1,4,0,0,1,1,0,0,0,0,0,0,0,1,2,1,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList,"addOrClause/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,71,0,4,4,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TwoSatSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TwoSatSolverAdjacencyList,"addXorClause/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,63,1,1,0,1,1,1,4,0,0,3,1,1,1,0,0,0,0,0,2,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\CapacityScalingExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.CapacityScalingExample,main/1[java.lang.String[]],false,243,3,5,0,5,3,6,18,0,5,1,6,0,0,2,0,0,0,1,26,5,2,2,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixDeterminantLaplaceExpansion.java,com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion,laplace/1[double[][]],false,171,2,4,2,2,6,2,18,2,14,1,2,2,1,1,2,0,5,0,28,15,15,2,0,0,0,19,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixDeterminantLaplaceExpansion.java,com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion,main/1[java.lang.String[]],false,17,2,1,0,1,1,2,30,0,1,1,2,1,3,0,0,0,0,0,449,14,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixDeterminantLaplaceExpansion.java,com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion,determinant/1[double[][]],false,154,2,2,1,1,3,1,6,3,1,1,1,1,2,0,2,0,0,0,12,1,3,1,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixDeterminantLaplaceExpansion.java,com.williamfiset.algorithms.linearalgebra.MatrixDeterminantLaplaceExpansion,"constructMatrix/3[double[][],int,int]",false,203,1,1,1,0,5,0,15,1,6,3,0,0,0,2,2,0,0,0,6,7,2,3,0,0,0,12,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman,"trueTravelCost/3[com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman.Individual,double[][],int]",false,151,2,1,1,0,2,0,12,1,6,3,0,0,0,1,0,0,0,0,5,8,2,1,0,0,0,11,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman,"crossover/3[com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman.Individual,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman.Individual,int]",false,187,2,3,1,2,7,4,25,1,9,3,4,0,0,2,0,0,2,0,5,13,3,2,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman,mutate/1[com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman.Individual],false,169,1,2,1,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman,tsp/1[double[][]],false,26,4,7,1,6,14,9,63,1,29,1,9,5,1,8,2,0,0,1,18,47,10,4,0,0,0,51,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman,"fitness/4[com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman.Individual,double[][],double,int]",false,132,2,1,1,0,2,1,12,1,6,4,1,0,0,1,0,0,0,0,5,8,4,1,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman,"selectIndividual/3[com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman.Individual[],double[],double[]]",false,173,2,1,1,0,5,1,10,1,4,3,1,0,0,1,0,0,1,0,6,6,6,2,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_travelingSalesman.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_travelingSalesman,main/1[java.lang.String[]],false,217,2,1,0,1,4,5,18,0,9,1,5,1,2,3,0,0,0,0,9,11,2,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$DinicsSolver,solve/0,false,161,2,2,0,2,3,3,9,0,2,0,3,2,1,2,1,0,0,0,2,4,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$DinicsSolver,"DinicsSolver/3[int,int,int]",true,155,1,1,1,0,1,0,4,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,30,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$DinicsSolver,"dfs/3[int,int[],long]",false,198,3,5,2,3,6,6,16,3,4,3,6,1,0,1,2,0,0,0,4,4,1,3,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\DinicsExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.DinicsExample$DinicsSolver,bfs/0,false,179,1,2,1,1,6,5,17,1,3,0,5,0,0,2,2,0,0,0,6,5,1,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,createEmptyGraph/1[int],false,76,0,3,3,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,"lca/2[int,int]",false,223,2,6,5,1,1,3,6,1,3,2,3,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,"dfs/2[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode,long]",false,203,2,5,2,3,3,3,10,1,0,2,3,2,1,1,1,0,0,0,1,0,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,"visit/2[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode,long]",false,215,1,2,1,1,1,1,6,0,0,2,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,LowestCommonAncestorEulerTour/1[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode],true,183,2,7,5,2,1,2,4,0,0,1,2,1,3,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,setup/1[com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour.TreeNode],false,188,5,3,1,2,1,1,8,0,1,1,1,1,2,0,0,0,0,0,3,5,2,0,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,createFirstTreeFromSlides/0,false,49,2,4,1,3,1,3,21,1,2,0,3,2,1,0,0,0,0,0,34,2,0,0,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,main/1[java.lang.String[]],false,23,2,4,0,4,4,5,19,0,3,1,5,2,2,0,3,0,0,6,9,5,0,1,0,0,0,21,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTour.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTour,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,82,0,3,3,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,poll/0,false,37,2,1,0,1,2,2,4,1,0,0,2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,LinkedQueue/0,true,12,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,peek/0,false,30,2,1,0,1,2,2,4,1,0,0,2,0,0,0,0,0,0,1,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,offer/1[T],false,43,1,0,0,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,LinkedQueue/1[T],true,14,2,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,isEmpty/0,false,24,1,1,0,1,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,size/0,false,19,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\LinkedQueue.java,com.williamfiset.algorithms.datastructures.queue.LinkedQueue,iterator/0,false,50,1,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,LcsSolver/1[java.lang.String[]],true,317,0,17,17,0,3,0,4,0,0,1,0,0,0,0,1,0,0,1,1,1,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,solve/0,false,463,4,9,1,8,6,6,22,0,6,0,6,3,5,1,3,0,1,0,4,8,4,2,0,0,0,30,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,log/1[java.lang.String],false,423,0,1,1,0,2,1,5,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,"addLcs/3[int,int,int]",false,429,1,4,1,3,6,6,21,3,0,3,6,3,1,0,2,0,0,3,2,1,2,1,0,0,0,25,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,buildText/0,false,375,2,2,1,1,7,4,18,0,5,0,4,1,1,2,0,0,5,2,12,8,11,3,0,0,0,26,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,computeTextLength/1[java.lang.String[]],false,337,0,1,1,0,2,1,5,0,0,1,1,0,0,1,0,0,0,0,1,3,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,getLongestCommonSubstrings/1[int],false,456,1,18,17,1,2,1,6,1,0,1,1,1,6,0,0,0,0,1,1,1,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,init/0,false,323,1,5,1,4,1,4,12,0,0,0,4,4,3,0,0,0,0,0,1,10,0,0,0,0,0,25,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,verifyMinAndMaxAsciiValues/0,false,360,0,2,2,0,3,0,3,0,0,0,0,0,0,0,2,0,0,1,0,0,0,1,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,"enoughUniqueColorsInWindow/2[int,int]",false,406,0,2,2,0,3,2,7,1,2,2,2,0,0,1,1,0,0,0,0,2,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,buildReverseColorMapping/0,false,345,1,1,1,0,5,2,13,0,5,0,2,0,0,2,0,0,0,0,3,10,0,3,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,"retrieveString/2[int,int]",false,417,1,1,1,0,2,0,5,1,2,2,0,0,0,1,0,0,1,0,1,3,2,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$LcsSolver,computeShift/0,false,365,1,2,1,1,1,1,4,0,0,0,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis,main/1[java.lang.String[]],false,333,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\analysis\PrimsGraphRepresentationAnaylsis.java,com.williamfiset.algorithms.graphtheory.analysis.PrimsGraphRepresentationAnaylsis,densityTest/0,false,339,3,9,1,8,7,16,38,0,18,0,16,0,0,3,2,0,0,12,10,23,7,4,0,0,0,32,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonArea.java,com.williamfiset.algorithms.geometry.ConvexPolygonArea,convexPolygonArea/1[java.awt.geom.Point2D[]],false,18,0,1,1,0,4,3,16,1,12,1,3,0,0,1,1,0,0,1,8,13,10,1,0,0,0,28,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonArea.java,com.williamfiset.algorithms.geometry.ConvexPolygonArea,main/1[java.lang.String[]],false,54,1,1,0,1,1,2,18,0,2,1,2,1,1,0,0,0,0,0,34,14,1,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\PrimeFactorization.java,com.williamfiset.algorithms.math.PrimeFactorization,"gcd/2[long,long]",false,47,1,3,2,1,2,1,3,1,0,2,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\PrimeFactorization.java,com.williamfiset.algorithms.math.PrimeFactorization,primeFactorization/1[long],false,8,1,3,1,2,6,6,23,2,4,1,6,2,2,1,2,0,0,0,2,4,1,2,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\PrimeFactorization.java,com.williamfiset.algorithms.math.PrimeFactorization,isPrime/1[long],false,51,0,1,1,0,9,1,8,5,2,1,1,0,0,1,6,0,1,0,12,3,5,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\PrimeFactorization.java,com.williamfiset.algorithms.math.PrimeFactorization,pollardRho/1[long],false,31,1,2,1,1,4,3,15,2,4,1,3,1,1,1,3,0,5,0,9,8,15,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\PrimeFactorization.java,com.williamfiset.algorithms.math.PrimeFactorization,main/1[java.lang.String[]],false,60,1,1,0,1,1,2,6,0,0,1,2,1,3,0,0,0,0,0,4,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTourTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTourTest,randomizedLcaQueriesVsOtherImpl/0,false,67,6,9,0,9,3,13,20,0,13,0,13,1,1,2,0,0,2,0,6,13,2,2,0,0,0,30,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTourTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTourTest,testLcaTreeFromSlides1/0,false,35,4,4,0,4,1,5,7,0,2,0,5,1,1,0,0,0,0,0,9,2,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTourTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTourTest,createFirstTreeFromSlides/0,false,10,2,6,3,3,1,3,21,1,2,0,3,0,0,0,0,0,0,0,34,2,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTourTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTourTest,testLcaOfTheSameNodeIsItself/0,false,56,4,5,0,5,2,6,7,0,3,0,6,1,1,1,0,0,0,0,1,3,0,1,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTourTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTourTest,generateRandomTree/1[int],false,94,1,3,1,2,2,6,11,1,4,1,6,0,0,1,1,0,1,0,2,4,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorEulerTourTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorEulerTourTest,testLcaTreeFromSlides2/0,false,44,4,4,0,4,1,5,10,0,2,0,5,1,1,0,0,0,0,0,18,2,0,0,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism$TreeNode,TreeNode/1[int],true,21,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism$TreeNode,addChildren/1[com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism.TreeNode[]],false,31,1,2,2,0,2,1,5,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism$TreeNode,toString/0,false,50,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism$TreeNode,parent/0,false,41,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism$TreeNode,"TreeNode/2[int,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism.TreeNode]",true,25,1,1,1,0,1,0,5,0,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism$TreeNode,id/0,false,37,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphism.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphism$TreeNode,children/0,false,45,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullGrahamScan.java,com.williamfiset.algorithms.geometry.ConvexHullGrahamScan$PointOrder,"compare/2[java.awt.geom.Point2D,java.awt.geom.Point2D]",false,70,0,0,0,0,5,2,9,5,0,2,2,0,0,0,1,0,0,0,5,0,0,3,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,"crt/2[long[],long[]]",false,107,2,1,0,1,4,1,12,1,6,2,1,1,1,3,0,0,3,0,6,10,6,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,primeFactorization/1[long],false,124,1,3,1,2,6,6,23,2,4,1,6,2,2,1,2,0,0,0,2,4,1,2,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,"eliminateCoefficient/3[long,long,long]",false,28,2,1,0,1,2,2,11,2,2,3,2,1,1,0,1,0,3,0,3,7,5,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,"gcf/2[long,long]",false,176,1,3,2,1,2,1,3,1,0,2,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,isPrime/1[long],false,180,0,1,1,0,9,1,8,5,2,1,1,0,0,1,6,0,1,0,12,3,5,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,"egcd/2[long,long]",false,165,2,4,3,1,2,1,10,2,2,2,1,1,0,0,1,0,1,0,8,4,4,2,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,"reduce/2[long[],long[]]",false,47,2,1,0,1,13,10,55,3,12,2,10,1,3,6,5,0,2,0,9,15,6,5,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\ChineseRemainderTheorem.java,com.williamfiset.algorithms.math.ChineseRemainderTheorem,pollardRho/1[long],false,147,1,2,1,1,4,3,15,2,4,1,3,1,1,1,3,0,5,0,9,8,15,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowJohnsons.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons,init/0,false,32,3,3,1,2,6,3,7,0,2,0,3,1,1,3,0,0,0,0,4,4,3,4,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowJohnsons.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons,"MinCostMaxFlowJohnsons/3[int,int,int]",true,28,0,2,2,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowJohnsons.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons,adjustEdgeCosts/1[long[]],false,48,2,3,2,1,4,1,12,0,1,1,1,0,0,2,0,0,0,0,3,3,1,3,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowJohnsons.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons,solve/0,false,61,2,4,0,4,4,6,13,0,2,0,6,2,3,3,1,0,1,0,1,5,1,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\MinCostMaxFlowJohnsons.java,com.williamfiset.algorithms.graphtheory.networkflow.MinCostMaxFlowJohnsons,getAugmentingPath/0,false,86,5,7,1,6,9,12,41,2,10,0,12,1,1,3,2,0,0,0,4,14,1,3,0,1,0,28,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort.java,com.williamfiset.algorithms.sorting.QuickSort,quicksort/1[int[]],false,19,2,2,1,1,2,1,4,1,0,1,1,1,3,0,1,0,0,0,2,0,1,1,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort.java,com.williamfiset.algorithms.sorting.QuickSort,sort/1[int[]],false,15,2,1,0,1,1,1,3,0,0,1,1,1,4,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort.java,com.williamfiset.algorithms.sorting.QuickSort,"quicksort/3[int[],int,int]",false,25,2,4,2,2,2,2,7,0,1,3,2,2,2,0,0,0,0,0,1,1,1,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort.java,com.williamfiset.algorithms.sorting.QuickSort,"swap/3[int[],int,int]",false,50,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort.java,com.williamfiset.algorithms.sorting.QuickSort,"partition/3[int[],int,int]",false,34,2,2,1,1,5,1,16,1,3,3,1,1,1,3,0,0,0,0,2,3,2,2,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\QuickSort.java,com.williamfiset.algorithms.sorting.QuickSort,main/1[java.lang.String[]],false,56,3,2,0,2,1,3,6,0,2,1,3,0,0,0,0,0,0,0,8,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testBadTrieDelete2/0,false,19,2,3,0,3,1,2,5,0,1,0,2,0,0,0,0,0,0,2,1,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testClear/0,false,199,2,4,0,4,1,6,27,0,1,0,6,0,0,0,0,0,0,22,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testBadTrieDelete1/0,false,12,2,3,0,3,1,2,5,0,1,0,2,0,0,0,0,0,0,2,1,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testBadTrieCount/0,false,38,2,2,0,2,1,1,3,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testEdgeCases/0,false,387,2,3,0,3,3,5,13,0,3,0,5,0,0,2,0,0,0,10,9,3,2,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testBadTrieDelete3/0,false,26,2,3,0,3,1,2,5,0,1,0,2,0,0,0,0,0,0,2,1,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testDelete/0,false,237,2,7,0,7,1,9,110,0,1,0,9,0,0,0,0,0,0,98,19,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testContains/0,false,48,2,3,0,3,1,5,44,0,3,0,5,0,0,0,0,0,0,39,0,3,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testInsert/0,false,161,2,5,0,5,1,8,29,0,1,0,8,0,0,0,0,0,0,25,14,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testBadTrieInsert/0,false,33,2,2,0,2,1,1,3,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testBadTrieContains/0,false,43,2,2,0,2,1,1,3,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\trie\TrieTest.java,com.williamfiset.algorithms.datastructures.trie.TrieTest,testCount/0,false,104,2,3,0,3,1,4,44,0,3,0,4,0,0,0,0,0,0,39,19,3,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$Edge,remainingCapacity/0,false,107,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$Edge,isResidual/0,false,103,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$Edge,"toString/2[int,int]",false,116,1,1,0,1,5,3,5,1,2,2,3,1,1,0,4,0,6,5,0,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$Edge,augment/1[long],false,111,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$Edge,"Edge/3[int,int,long]",true,97,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,insert/1[T[]],false,32,2,2,0,2,2,1,5,0,1,1,1,0,0,0,1,0,0,0,1,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,findMin/1[int],false,71,2,1,0,1,3,1,4,1,0,1,1,0,0,0,0,0,0,1,2,0,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,"deleteRecursiveSearch/3[com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,int]",false,140,2,2,0,2,8,4,16,3,3,3,4,0,0,0,4,0,7,0,4,5,6,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,GeneralKDTree/1[int],true,14,0,0,0,0,2,0,5,0,0,1,0,0,0,0,0,0,0,1,1,2,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,deleteRecursiveRoot/0,false,116,2,3,0,3,4,2,19,3,1,0,2,0,0,0,3,0,0,0,6,6,2,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,"deleteRecursiveExtract/3[com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,int]",false,159,2,3,0,3,4,2,16,3,1,3,2,0,0,0,3,0,2,0,2,5,4,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,"insertRecursive/3[com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,int]",false,40,2,1,0,1,4,2,10,0,0,3,2,0,0,0,2,0,3,0,1,2,2,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,search/1[T[]],false,54,2,2,0,2,1,1,4,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,delete/1[T[]],false,106,2,4,0,4,3,4,6,3,1,1,4,0,0,0,0,0,0,0,1,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,getRootPoint/0,false,26,1,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,"findMinRecursive/3[int,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,int]",false,76,2,1,0,1,11,2,19,5,4,3,2,0,0,0,8,0,8,0,5,5,6,2,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,"searchRecursive/3[com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree<T>.KDNode<T>,int]",false,59,2,1,0,1,4,3,6,3,1,3,3,0,0,0,1,0,4,0,1,1,1,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\kdtree\GeneralKDTree.java,com.williamfiset.algorithms.datastructures.kdtree.GeneralKDTree,getDimensions/0,false,22,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,printDebugInfo/0,false,153,1,2,1,1,1,2,4,0,0,0,2,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"rangeQuery1/2[int,int]",false,78,1,8,7,1,1,1,3,1,0,2,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"propagate1/3[int,int,int]",false,119,1,4,2,2,2,2,8,0,1,3,2,2,2,0,1,0,1,0,1,3,3,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,SumQuerySumUpdateSegmentTree/1[long[]],true,33,2,9,8,1,2,1,10,0,1,1,1,1,2,0,1,0,0,1,4,4,2,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"propagateLazy/4[int,int,int,long]",false,112,1,3,2,1,2,1,5,1,0,4,1,1,1,0,1,0,0,0,8,2,8,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"printDebugInfo/3[int,int,int]",false,158,1,3,2,1,2,2,9,1,1,3,2,1,0,0,1,0,1,1,6,1,7,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"rangeQuery1/5[int,int,int,int,int]",false,91,1,5,2,3,4,5,11,3,1,5,5,3,3,0,2,0,1,0,7,1,8,1,0,0,0,28,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"rangeUpdate1/3[int,int,long]",false,108,1,8,7,1,1,1,3,0,0,3,1,1,4,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"rangeUpdate1/6[int,int,int,int,int,long]",false,131,1,6,2,4,4,6,17,1,2,6,6,4,3,0,2,0,2,0,12,4,15,1,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"sumFunction/2[java.lang.Long,java.lang.Long]",false,27,0,5,5,0,3,0,5,1,0,2,0,0,0,0,2,0,0,0,2,2,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,"buildSegmentTree/4[int,int,int,long[]]",false,60,2,4,2,2,2,2,10,1,1,4,2,2,1,0,1,0,1,0,10,3,11,1,0,0,0,32,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\SumQuerySumUpdateSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.SumQuerySumUpdateSegmentTree,main/1[java.lang.String[]],false,172,2,4,0,4,1,4,11,0,4,1,4,3,8,0,0,0,0,2,8,4,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithm.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithm,convexHull/1[java.awt.geom.Point2D[]],false,43,2,9,7,2,10,4,23,2,9,1,4,1,1,5,0,0,0,0,18,13,7,2,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithm.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithm,"orientation/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,83,0,1,1,0,3,3,5,2,1,3,3,0,0,0,0,0,5,0,4,1,7,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,"bruteForceMin/3[long[],int,int]",false,100,1,1,1,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,testRandomRangeSumUpdatesWithSumRangeQueries/0,false,58,5,7,0,7,3,10,22,0,13,0,10,2,1,2,0,0,0,0,14,15,4,2,0,0,0,38,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,setup/0,false,18,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,"bruteForceSum/3[long[],int,int]",false,91,1,0,0,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,117,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,123,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,"bruteForceMax/3[long[],int,int]",false,109,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,simpleTest/0,false,21,3,3,0,3,1,4,29,0,2,0,4,0,0,0,0,0,0,0,80,2,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQuerySumUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQuerySumUpdateSegmentTreeTest,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,129,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArrayImpl,SuffixArrayImpl/1[java.lang.String],true,229,1,2,1,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArrayImpl,SuffixArrayImpl/1[int[]],true,233,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\LongestCommonSubstring.java,com.williamfiset.algorithms.strings.LongestCommonSubstring$SuffixArrayImpl,construct/0,false,239,2,1,0,1,10,1,35,0,11,0,1,0,0,5,3,0,0,0,22,27,4,3,0,0,0,15,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList,"DijkstrasShortestPathAdjacencyList/2[int,java.util.Comparator<com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList.Node>]",true,73,1,0,0,0,2,0,5,0,0,2,0,0,0,0,1,0,0,1,0,1,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList,createEmptyGraph/0,false,165,1,1,1,0,2,1,4,0,1,0,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList,DijkstrasShortestPathAdjacencyList/1[int],true,68,1,1,0,1,1,1,4,0,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,30,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList,getGraph/0,false,92,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList,"reconstructPath/2[int,int]",false,102,1,1,0,1,7,3,10,2,3,2,3,1,1,1,2,0,0,2,2,4,0,1,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList,"dijkstra/2[int,int]",false,117,4,2,1,1,7,7,27,2,7,2,7,0,0,2,1,0,0,0,4,13,2,3,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\DijkstrasShortestPathAdjacencyList.java,com.williamfiset.algorithms.graphtheory.DijkstrasShortestPathAdjacencyList,"addEdge/3[int,int,int]",false,86,1,1,0,1,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testSimpleFunctionality/0,false,65,2,5,0,5,3,6,11,0,1,0,6,0,0,0,2,0,0,5,11,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testFind/0,false,103,2,5,0,5,2,6,17,0,1,0,6,0,0,0,1,0,0,4,17,1,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testIndex/0,false,20,2,3,0,3,3,3,9,0,1,0,3,0,0,0,2,0,0,2,11,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testRemoveNonExisting/0,false,141,2,3,0,3,1,4,7,0,1,0,4,0,0,0,0,0,0,3,7,1,0,0,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testInsertLesserThanMinValue/0,false,54,2,2,0,2,5,2,7,0,1,0,2,0,0,0,4,0,0,4,7,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testSize/0,false,82,2,4,0,4,5,5,12,0,1,0,5,0,0,0,4,0,0,4,12,1,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testInsertGreaterThanMaxValue/0,false,43,2,2,0,2,4,2,6,0,1,0,2,0,0,0,3,0,0,3,6,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testRemoveHeadTail/0,false,154,2,2,0,2,1,2,5,0,1,0,2,0,0,0,0,0,0,2,5,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testIndexWithNonExistingValue/0,false,34,2,2,0,2,2,2,4,0,1,0,2,0,0,0,1,0,0,1,5,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\skiplist\SkipListTest.java,com.williamfiset.algorithms.datastructures.skiplist.SkipListTest,testDuplicate/0,false,127,2,5,0,5,2,6,8,0,1,0,6,0,0,0,1,0,0,3,8,1,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfs.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,27,0,5,5,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfs.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs,encodeTree/1[java.util.List<java.util.List<java.lang.Integer>>],false,63,3,4,3,1,17,18,57,4,18,1,18,1,1,7,6,0,4,6,14,27,3,4,0,0,0,31,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfs.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs,main/1[java.lang.String[]],false,151,1,3,0,3,1,5,17,0,4,1,5,3,2,0,0,0,1,3,18,4,3,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfs.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs,findTreeCenters/1[java.util.List<java.util.List<java.lang.Integer>>],false,32,1,1,1,0,7,4,18,1,7,1,4,0,0,4,1,0,0,0,3,10,0,4,0,0,0,15,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfs.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs,createEmptyTree/1[int],false,21,0,7,7,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfs.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfs,"treesAreIsomorphic/2[java.util.List<java.util.List<java.lang.Integer>>,java.util.List<java.util.List<java.lang.Integer>>]",false,145,1,6,5,1,1,2,3,1,0,2,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\SieveOfEratosthenes.java,com.williamfiset.algorithms.math.SieveOfEratosthenes,main/1[java.lang.String[]],false,35,2,1,0,1,1,3,4,0,1,1,3,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\SieveOfEratosthenes.java,com.williamfiset.algorithms.math.SieveOfEratosthenes,sieve/1[int],false,13,2,1,1,0,7,3,16,2,8,1,3,0,0,3,0,0,1,0,6,12,4,3,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,toIntArray/1[java.lang.String],false,62,1,3,3,0,3,2,6,2,2,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,7,12,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,SuffixArray/1[int[]],true,25,1,0,0,0,2,0,5,0,0,1,0,0,0,0,1,0,0,1,0,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,getLcpArray/0,false,42,2,5,4,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,construct/0,false,71,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1028,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,kasai/0,false,75,1,1,1,0,8,0,13,0,5,0,0,0,0,3,1,0,2,0,6,8,5,3,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,buildSuffixArray/0,false,48,1,3,2,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,7,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,getTextLength/0,false,31,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,toString/0,false,90,1,0,0,0,3,3,13,1,8,0,3,0,0,2,0,0,0,2,2,9,1,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,buildLcpArray/0,false,55,1,3,1,2,2,2,6,1,0,0,2,2,2,0,0,0,0,0,0,1,0,1,0,0,0,7,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArray.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArray,getSa/0,false,36,2,7,6,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,isNotEmptyOrThrow/0,false,581,1,1,0,1,2,1,3,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,isMinHeap/1[int],false,611,1,2,0,2,4,3,8,3,3,1,3,0,0,1,0,0,0,0,0,3,1,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,pollMinValue/0,false,465,2,3,0,3,1,3,5,1,1,0,3,0,0,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"increase/2[int,T]",false,521,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"MinIndexedDHeap/2[int,int]",true,416,1,0,0,0,3,1,15,0,1,2,1,0,0,1,0,0,1,1,7,12,5,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,delete/1[int],false,487,2,4,0,4,1,4,12,1,2,1,4,0,0,0,0,0,0,1,2,5,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,isEmpty/0,false,439,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,valueOf/1[int],false,481,2,1,0,1,1,1,4,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"less/2[int,int]",false,563,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,peekMinValue/0,false,460,2,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"swap/2[int,int]",false,553,0,0,0,0,1,0,7,0,1,2,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,pollMinKeyIndex/0,false,453,1,2,0,2,1,2,5,1,1,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"keyExistsAndValueNotNullOrThrow/2[int,java.lang.Object]",false,585,1,2,0,2,1,2,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,minChild/1[int],false,547,1,1,0,1,3,2,5,1,4,1,2,0,0,1,0,0,0,0,1,6,1,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"update/2[int,T]",false,501,2,3,0,3,1,3,9,1,2,2,3,0,0,0,0,0,0,1,0,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"less/2[java.lang.Object,java.lang.Object]",false,568,1,0,0,0,2,1,3,1,0,2,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,isMinHeap/0,false,607,1,1,0,1,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,size/0,false,435,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"decrease/2[int,T]",false,512,2,3,0,3,2,3,7,0,0,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,keyExistsOrThrow/1[int],false,590,1,1,0,1,2,1,3,0,0,1,1,0,0,0,0,0,0,1,0,0,1,1,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,keyInBoundsOrThrow/1[int],false,598,0,0,0,0,3,0,3,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,sink/1[int],false,531,1,2,0,2,2,2,7,0,1,1,2,0,0,1,1,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,swim/1[int],false,539,1,2,0,2,2,2,6,0,0,1,2,0,0,1,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,toString/0,false,573,0,0,0,0,2,2,5,1,2,0,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,peekMinKeyIndex/0,false,448,1,1,0,1,1,1,4,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,"insert/2[int,T]",false,471,2,3,0,3,2,3,8,0,0,2,3,0,0,0,0,0,0,1,0,3,1,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,contains/1[int],false,443,1,1,0,1,2,1,4,1,0,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\EagerPrimsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.EagerPrimsAdjacencyList$MinIndexedDHeap,valueNotNullOrThrow/1[java.lang.Object],false,594,0,0,0,0,2,0,3,0,0,1,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixPower.java,com.williamfiset.algorithms.linearalgebra.MatrixPower,"matrixPower/2[long[][],long]",false,38,2,3,1,2,8,2,21,2,4,2,2,2,1,2,3,0,1,0,8,10,0,4,0,0,0,15,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixPower.java,com.williamfiset.algorithms.linearalgebra.MatrixPower,"squareMatrixMult/2[long[][],long[][]]",false,20,1,1,1,0,4,0,6,1,5,2,0,0,0,3,0,0,0,0,3,6,2,3,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixPower.java,com.williamfiset.algorithms.linearalgebra.MatrixPower,main/1[java.lang.String[]],false,69,2,2,0,2,1,3,18,0,4,1,3,2,2,0,0,0,0,0,65,6,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixPower.java,com.williamfiset.algorithms.linearalgebra.MatrixPower,matrixDeepCopy/1[long[][]],false,12,1,1,1,0,2,1,6,1,3,1,1,0,0,1,0,0,0,0,1,4,0,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\MatrixPower.java,com.williamfiset.algorithms.linearalgebra.MatrixPower,print2DMatrix/1[long[][]],false,119,1,1,1,0,2,3,4,0,0,1,3,0,0,1,0,0,0,0,0,0,0,1,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\IntQueueTest.java,com.williamfiset.algorithms.datastructures.queue.IntQueueTest,testEmptyQueue/0,false,15,2,3,0,3,1,5,5,0,1,0,5,0,0,0,0,0,0,0,2,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\IntQueueTest.java,com.williamfiset.algorithms.datastructures.queue.IntQueueTest,testAll/0,false,43,2,6,0,6,9,9,48,0,10,0,9,0,0,8,0,0,0,0,13,13,4,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\IntQueueTest.java,com.williamfiset.algorithms.datastructures.queue.IntQueueTest,testofferOneElement/0,false,36,2,3,0,3,1,4,5,0,1,0,4,0,0,0,0,0,0,0,3,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\IntQueueTest.java,com.williamfiset.algorithms.datastructures.queue.IntQueueTest,setup/0,false,12,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\IntQueueTest.java,com.williamfiset.algorithms.datastructures.queue.IntQueueTest,testPeekOneElement/0,false,93,2,4,0,4,1,5,6,0,1,0,5,0,0,0,0,0,0,0,4,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\IntQueueTest.java,com.williamfiset.algorithms.datastructures.queue.IntQueueTest,testpollOneElement/0,false,101,2,4,0,4,1,5,6,0,1,0,5,0,0,0,0,0,0,0,4,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\queue\IntQueueTest.java,com.williamfiset.algorithms.datastructures.queue.IntQueueTest,testRandom/0,false,109,2,5,0,5,6,11,25,0,6,0,11,0,0,2,0,0,1,0,6,6,1,4,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest$BruteForceMwpm,"swap/3[int[],int,int]",false,71,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest$BruteForceMwpm,solve/0,false,38,2,3,1,2,4,2,11,0,3,0,2,2,2,2,0,0,0,0,1,5,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest$BruteForceMwpm,getFirst/1[int[]],false,66,1,1,1,0,3,0,4,2,1,1,0,0,0,1,0,0,0,0,4,1,2,2,0,0,0,4,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest$BruteForceMwpm,getMinWeightCost/0,false,23,1,3,2,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest$BruteForceMwpm,nextPermutation/1[int[]],false,55,2,3,1,2,4,2,10,2,2,1,2,2,1,2,1,0,0,0,3,3,2,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest$BruteForceMwpm,computeMatchingCost/1[int[]],false,28,1,1,1,0,2,0,9,1,4,1,0,0,0,1,0,0,0,0,6,5,4,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest$BruteForceMwpm,BruteForceMwpm/1[java.lang.Double[][]],true,18,0,2,2,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorTest,testLcaOfTheSameNodeIsItself/0,false,59,4,5,0,5,2,6,7,0,3,0,6,1,1,1,0,0,0,0,1,3,0,1,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorTest,createFirstTreeFromSlides/0,false,13,2,6,3,3,1,3,21,1,2,0,3,0,0,0,0,0,0,0,34,2,0,0,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorTest,testLcaTreeFromSlides1/0,false,38,4,4,0,4,1,5,7,0,2,0,5,1,1,0,0,0,0,0,9,2,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\LowestCommonAncestorTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.LowestCommonAncestorTest,testLcaTreeFromSlides2/0,false,47,4,4,0,4,1,5,10,0,2,0,5,1,1,0,0,0,0,0,18,2,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyMatrix,"dagShortestPath/2[java.lang.Double[][],int]",false,52,2,2,1,1,5,2,13,1,4,2,2,1,2,2,1,0,0,0,2,6,1,4,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyMatrix,topologicalSort/1[java.lang.Double[][]],false,18,3,3,2,1,3,1,8,1,5,1,1,1,1,1,0,0,0,0,2,6,1,2,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyMatrix,main/1[java.lang.String[]],false,74,3,2,0,2,1,5,18,0,4,1,5,2,2,0,0,0,0,0,31,13,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyMatrix,"visit/5[java.lang.Double[][],boolean[],int[],int,int]",false,33,3,3,2,1,5,1,7,2,1,5,1,1,0,1,1,0,0,0,1,4,0,2,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTreeTest.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest,setup/0,false,15,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTreeTest.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest,testPointContainment/0,false,108,2,2,0,2,1,4,33,0,1,0,4,0,0,0,0,0,0,0,64,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTreeTest.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest,"bruteForceCount/5[int[][],int,int,int,int]",false,171,1,1,1,0,3,0,5,1,3,5,0,0,0,2,0,0,0,0,1,4,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTreeTest.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest,testCountingPoints/0,false,158,3,4,0,4,2,4,7,0,4,0,4,0,0,1,0,0,0,0,5,4,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTreeTest.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest,randomizedQueryTests/0,false,178,5,5,0,5,6,7,27,0,16,0,7,1,1,3,0,0,14,0,11,16,18,3,0,0,0,40,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTreeTest.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest,testRectContainment/0,false,63,2,2,0,2,1,4,31,0,10,0,4,0,0,0,0,0,0,0,40,10,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTreeTest.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTreeTest,testRectIntersection/0,false,18,2,2,0,2,1,4,31,0,10,0,4,0,0,0,0,0,0,0,40,10,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithmTest.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest,repeatedSinglePoint/0,false,89,3,1,0,1,1,5,11,0,3,0,5,0,0,0,0,0,0,0,13,8,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithmTest.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest,test3Points/0,false,56,3,1,0,1,1,5,9,0,3,0,5,0,0,0,0,0,0,0,13,6,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithmTest.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest,convexHullRedundantPoints/0,false,17,3,1,0,1,1,5,20,0,3,0,5,0,0,0,0,0,0,0,47,17,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithmTest.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest,test2Points/0,false,68,3,1,0,1,1,5,8,0,3,0,5,0,0,0,0,0,0,0,9,5,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithmTest.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest,testEmptyCase/0,false,12,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithmTest.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest,uniquePointsOnHull/0,false,42,3,1,0,1,1,5,11,0,3,0,5,0,0,0,0,0,0,0,21,8,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\geometry\ConvexHullMonotoneChainsAlgorithmTest.java,com.williamfiset.algorithms.geometry.ConvexHullMonotoneChainsAlgorithmTest,test1Point/0,false,79,3,1,0,1,1,5,7,0,3,0,5,0,0,0,0,0,0,0,5,4,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$FordFulkersonDfsSolver,"FordFulkersonDfsSolver/3[int,int,int]",true,162,0,1,1,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$FordFulkersonDfsSolver,"dfs/2[int,long]",false,177,2,5,2,3,6,4,15,3,2,2,4,1,0,1,2,0,0,0,3,3,0,3,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$FordFulkersonDfsSolver,solve/0,false,169,1,1,0,1,2,1,6,0,1,0,1,1,1,1,1,0,0,0,1,3,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointCircleTangent.java,com.williamfiset.algorithms.geometry.PointCircleTangent,main/1[java.lang.String[]],false,63,1,1,0,1,2,2,11,0,6,1,2,1,2,0,1,0,0,2,8,6,1,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointCircleTangent.java,com.williamfiset.algorithms.geometry.PointCircleTangent,"pointCircleTangentPoints/3[java.awt.geom.Point2D,double,java.awt.geom.Point2D]",false,32,1,2,1,1,3,8,17,3,12,3,8,1,1,0,0,0,0,0,0,13,16,1,0,0,0,29,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\PointCircleTangent.java,com.williamfiset.algorithms.geometry.PointCircleTangent,arcsinSafe/1[double],false,24,0,1,1,0,3,1,5,3,0,1,1,0,0,0,0,0,0,0,4,0,2,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized$Anonymous1,next/0,false,327,2,0,0,0,5,2,13,1,1,0,2,0,0,1,4,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized$Anonymous1,remove/0,false,347,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeRecursiveOptimized.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursiveOptimized$Anonymous1,hasNext/0,false,321,0,0,0,0,3,1,4,1,0,0,1,0,0,0,2,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchRecursive.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchRecursive,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,87,0,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchRecursive.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchRecursive,main/1[java.lang.String[]],false,64,1,2,0,2,2,4,19,0,3,1,4,2,2,1,0,0,0,1,29,3,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchRecursive.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchRecursive,"bfs/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,24,2,2,1,1,1,2,7,1,2,3,2,1,1,0,0,0,0,0,0,2,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchRecursive.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchRecursive,"bfs/3[boolean[],java.util.Queue<java.lang.Integer>,java.util.List<java.util.List<java.lang.Integer>>]",false,32,2,3,2,1,9,7,17,3,3,3,7,1,0,2,4,0,0,0,4,5,0,3,0,0,0,17,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.HSetTest,genRandList/1[int],false,138,0,2,2,0,2,3,6,1,2,1,3,0,0,1,0,0,1,0,1,2,1,1,0,0,0,14,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.HSetTest,randomizedSetTest/0,false,65,3,5,0,5,5,12,16,0,5,0,12,1,1,4,0,0,0,0,2,5,0,3,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.HSetTest,t/0,false,120,3,5,0,5,1,5,13,0,3,0,5,0,0,0,0,0,0,0,8,3,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.HSetTest,genUniqueRandList/1[int],false,146,0,0,0,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.HSetTest,testAddRemove/0,false,49,2,3,0,3,1,5,14,0,0,0,5,0,0,0,0,0,0,0,12,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.HSetTest,randomizedSetTest2/0,false,90,4,6,0,6,5,13,18,0,8,0,13,1,1,4,0,0,1,0,3,8,2,3,0,0,0,27,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\set\HSetTest.java,com.williamfiset.algorithms.datastructures.set.HSetTest,setup/0,false,44,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$NetworkFlowSolverBase,getGraph/0,false,195,2,1,0,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$NetworkFlowSolverBase,solve/0,false,214,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1025,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$NetworkFlowSolverBase,initializeEmptyFlowGraph/0,false,168,1,1,1,0,2,0,4,0,1,0,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$NetworkFlowSolverBase,"addEdge/3[int,int,long]",false,180,1,2,1,1,2,1,9,0,2,3,1,0,0,0,0,0,0,1,2,4,0,1,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$NetworkFlowSolverBase,"NetworkFlowSolverBase/3[int,int,int]",true,158,2,1,0,1,1,1,7,0,0,3,1,1,1,0,0,0,0,0,0,4,0,0,0,0,0,35,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$NetworkFlowSolverBase,getMaxFlow/0,false,201,1,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$NetworkFlowSolverBase,execute/0,false,207,1,3,2,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransform.java,com.williamfiset.algorithms.math.FastFourierTransform,"multiply/2[long[],long[]]",false,35,2,3,1,2,8,3,18,1,12,2,3,2,2,4,0,0,2,0,11,17,8,2,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransform.java,com.williamfiset.algorithms.math.FastFourierTransform,"transform/3[long[],int,boolean]",false,74,2,2,1,1,8,2,29,1,15,3,2,1,1,4,0,0,0,0,12,23,12,3,0,0,0,21,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransform.java,com.williamfiset.algorithms.math.FastFourierTransform,"mult/2[long,long]",false,61,0,3,3,0,7,0,12,3,1,2,0,0,0,0,0,0,3,0,8,3,11,1,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransform.java,com.williamfiset.algorithms.math.FastFourierTransform,(initializer 1),false,28,2,6,0,6,2,1,5,0,1,0,1,1,1,1,0,0,1,0,6,4,3,1,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\FastFourierTransform.java,com.williamfiset.algorithms.math.FastFourierTransform,main/1[java.lang.String[]],false,106,2,1,0,1,1,3,6,0,3,1,3,1,3,0,0,0,0,0,9,3,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImplTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImplTest,singleton/0,false,33,2,2,0,2,1,4,3,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImplTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImplTest,twoNodeTree/0,false,38,2,3,0,3,1,5,5,0,1,0,5,0,0,0,0,0,0,0,5,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImplTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImplTest,simpleTest4/0,false,62,2,3,0,3,1,5,10,0,1,0,5,0,0,0,0,0,0,0,15,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImplTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImplTest,simpleTest2/0,false,45,2,3,0,3,1,5,6,0,1,0,5,0,0,0,0,0,0,0,6,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImplTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImplTest,simpleTest3/0,false,53,2,3,0,3,1,5,7,0,1,0,5,0,0,0,0,0,0,0,9,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeCenterLongestPathImplTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImplTest,simpleTest1/0,false,19,2,3,0,3,1,5,12,0,1,0,5,0,0,0,0,0,0,0,18,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,main/1[java.lang.String[]],false,128,2,5,0,5,4,11,28,0,6,1,11,4,3,2,0,0,0,3,28,6,1,2,0,0,0,23,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,TarjanSccSolverAdjacencyList/1[java.util.List<java.util.List<java.lang.Integer>>],true,35,0,10,10,0,2,1,5,0,0,1,1,0,0,0,1,0,0,1,0,2,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,solve/0,false,54,3,10,9,1,4,2,15,1,1,0,2,1,1,1,1,0,0,0,1,7,0,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,dfs/1[int],false,73,1,3,2,1,7,5,21,0,1,1,5,1,0,2,3,0,0,0,0,8,0,3,0,0,0,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,sccCount/0,false,42,1,9,8,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,createGraph/1[int],false,115,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,getSccs/0,false,49,2,10,9,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanSccSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TarjanSccSolverAdjacencyList,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,122,0,1,1,0,1,2,3,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest,insertSearch/0,false,44,4,5,0,5,2,6,8,0,2,0,6,0,0,1,0,0,0,0,1,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest,splayTreePriorityQueueConsistencyTest/0,false,65,4,7,0,7,4,17,19,0,4,0,17,0,0,3,1,0,0,0,2,4,0,1,0,0,0,18,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest,splayInsertDeleteSearch/0,false,24,4,7,0,7,4,10,15,0,2,0,10,0,0,3,0,0,0,0,1,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest,findMax/0,false,54,3,5,0,5,2,6,8,0,2,0,6,0,0,1,0,0,0,0,2,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\SplayTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.SplayTreeTest,getRoot/0,false,14,4,5,0,5,2,6,8,0,2,0,6,0,0,1,0,0,0,0,1,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonContainsPoint.java,com.williamfiset.algorithms.geometry.ConvexPolygonContainsPoint,"containsPoint/2[java.awt.geom.Point2D[],java.awt.geom.Point2D]",false,25,1,1,0,1,9,1,20,1,11,2,1,1,1,1,2,0,3,0,13,16,7,3,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonContainsPoint.java,com.williamfiset.algorithms.geometry.ConvexPolygonContainsPoint,"collinear/3[java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D]",false,55,0,1,1,0,2,4,8,2,7,3,4,0,0,0,0,0,4,0,1,7,7,1,0,0,0,16,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ClosestPairOfPoints.java,com.williamfiset.algorithms.geometry.ClosestPairOfPoints$YX_Sort,"compare/2[com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT,com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT]",false,44,1,0,0,0,5,1,7,3,0,2,1,0,0,0,0,0,2,0,5,0,2,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest,setUp/0,false,15,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest,testSingleton/0,false,18,3,4,0,4,1,5,7,0,1,0,5,0,0,0,0,0,0,0,3,3,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest,testTwoNodeGraph/0,false,27,3,4,0,4,1,5,7,0,1,0,5,0,0,0,0,0,0,0,3,3,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest,testTriangleGraph/0,false,36,3,4,0,4,1,5,9,0,1,0,5,0,0,0,0,0,0,0,7,3,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest,testSquareBipartiteGraphWithAdditionalEdge/0,false,69,3,4,0,4,1,5,11,0,1,0,5,0,0,0,0,0,0,0,11,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest,testSquareBipartiteGraph/0,false,57,3,4,0,4,1,5,10,0,1,0,5,0,0,0,0,0,0,0,9,3,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyListTest.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyListTest,testDisjointBipartiteGraphComponents/0,false,47,3,4,0,4,1,5,8,0,1,0,5,0,0,0,0,0,0,0,5,3,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,HashTableSeparateChaining/0,true,45,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,hasKey/1[K],false,91,2,2,0,2,2,3,4,1,1,1,3,0,0,0,1,0,0,0,0,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,"bucketInsertEntry/2[int,com.williamfiset.algorithms.datastructures.hashtable.Entry<K,V>]",false,149,4,2,0,2,4,3,15,2,3,2,3,0,0,0,2,0,0,0,0,6,0,2,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,remove/1[K],false,128,3,2,0,2,2,3,5,2,1,1,3,0,0,0,1,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,get/1[K],false,116,4,2,0,2,3,3,7,3,2,1,3,0,0,0,2,0,0,0,0,2,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,toString/0,false,269,3,0,0,0,4,2,10,1,2,0,2,0,0,2,1,0,0,3,1,2,1,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,"HashTableSeparateChaining/2[int,double]",true,54,0,0,0,0,5,3,8,0,0,2,3,0,0,0,0,0,1,2,2,4,1,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,"add/2[K,V]",false,101,3,1,0,1,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,iterator/0,false,223,3,2,0,2,1,1,29,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,keys/0,false,204,4,1,0,1,4,2,5,1,1,0,2,0,0,2,1,0,0,0,0,1,0,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,HashTableSeparateChaining/1[int],true,49,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,isEmpty/0,false,70,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,containsKey/1[K],false,86,2,1,0,1,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,"bucketSeekEntry/2[int,K]",false,167,3,0,0,0,5,1,7,4,1,2,1,0,0,1,2,0,0,0,0,1,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,"insert/2[K,V]",false,105,4,3,0,3,2,2,6,1,2,2,2,0,0,0,1,0,0,1,0,2,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,normalizeIndex/1[int],false,76,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,values/0,false,213,4,1,0,1,4,2,5,1,1,0,2,0,0,2,1,0,0,0,0,1,0,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,"bucketRemoveEntry/2[int,K]",false,136,4,1,0,1,2,2,10,2,2,2,2,0,0,0,1,0,0,0,0,2,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,resizeTable/0,false,177,4,1,0,1,5,3,18,0,4,0,3,0,0,2,2,0,1,0,2,10,1,4,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,clear/0,false,81,0,0,0,0,1,1,4,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,"put/2[K,V]",false,97,3,1,0,1,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableSeparateChaining,size/0,false,65,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestIncreasingSubsequence.java,com.williamfiset.algorithms.dp.LongestIncreasingSubsequence,lis/1[int[]],false,20,1,1,1,0,8,1,15,2,5,1,1,0,0,2,2,0,0,0,8,7,3,3,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\LongestIncreasingSubsequence.java,com.williamfiset.algorithms.dp.LongestIncreasingSubsequence,main/1[java.lang.String[]],false,11,2,1,0,1,1,2,6,0,0,1,2,1,1,0,0,0,0,0,24,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive$MatchingCost,MatchingCost/1[com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost],true,37,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive$MatchingCost,"MatchingCost/2[double,int]",true,32,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive$MatchingCost,createInfiniteValueMatchingCost/0,false,42,1,2,1,1,1,0,3,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive$MatchingCost,toString/0,false,68,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive$MatchingCost,MatchingCost/0,true,30,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive$MatchingCost,isBetterMatchingCost/1[com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive.MatchingCost],false,57,1,1,1,0,3,0,9,3,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingRecursive.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingRecursive$MatchingCost,updateMatchingCost/1[java.lang.Double],false,48,0,1,1,0,2,0,8,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\MinIndexedBinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.MinIndexedBinaryHeapTest$Anonymous1,"compare/2[java.lang.Integer[],java.lang.Integer[]]",false,283,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TreePrinter.java,com.williamfiset.algorithms.datastructures.utils.TreePrinter$PrintableNode,getLeft/0,false,13,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TreePrinter.java,com.williamfiset.algorithms.datastructures.utils.TreePrinter$PrintableNode,getRight/0,false,16,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\utils\TreePrinter.java,com.williamfiset.algorithms.datastructures.utils.TreePrinter$PrintableNode,getText/0,false,19,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearch.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearch,main/1[java.lang.String[]],false,62,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,2,0,3,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearch.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearch,generateSkipTable/1[java.lang.String],false,54,1,1,1,0,2,2,7,1,2,1,2,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearch.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearch,"findOccurrences/2[java.lang.String,java.lang.String]",false,26,2,7,6,1,9,7,24,2,5,2,7,1,1,1,3,0,0,0,8,7,5,3,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\SortingTest.java,com.williamfiset.algorithms.sorting.SortingTest,verifySortingAlgorithms_smallPositiveIntegersOnly/0,false,55,5,3,0,3,3,7,12,0,4,0,7,0,0,2,0,0,0,0,4,4,0,2,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\SortingTest.java,com.williamfiset.algorithms.sorting.SortingTest,verifySortingAlgorithms_smallNegativeIntegersOnly/0,false,71,5,3,0,3,4,7,15,0,4,0,7,0,0,2,1,0,0,0,4,4,0,3,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList,displayGraph/1[java.util.List<java.util.List<java.lang.Integer>>],false,192,1,3,1,2,3,5,9,0,3,1,5,1,3,2,0,0,1,4,1,3,3,2,0,0,0,18,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList,BipartiteGraphCheckAdjacencyList/1[java.util.List<java.util.List<java.lang.Integer>>],true,24,0,7,7,0,2,1,5,0,0,1,1,0,0,0,1,0,0,1,0,2,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList,getTwoColoring/0,false,39,2,1,0,1,2,1,3,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList,main/1[java.lang.String[]],false,86,2,3,0,3,1,3,36,0,2,1,3,1,4,0,0,0,0,0,38,12,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList,"colorGraph/2[int,int]",false,58,1,3,2,1,5,2,14,3,4,2,2,1,0,1,3,0,1,0,5,6,0,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList,isBipartite/0,false,31,1,9,8,1,2,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\BipartiteGraphCheckAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.BipartiteGraphCheckAdjacencyList,solve/0,false,43,2,2,1,1,3,1,7,1,1,0,1,1,1,0,1,0,1,0,2,4,0,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Combinations.java,com.williamfiset.algorithms.other.Combinations,"combinationsChooseR/2[int[],int]",false,14,3,2,1,1,3,1,6,2,1,2,1,1,1,0,1,0,0,0,2,1,0,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Combinations.java,com.williamfiset.algorithms.other.Combinations,"nextCombination/3[int[],int,int]",false,60,1,1,1,0,5,0,8,2,2,3,0,0,0,2,1,0,0,1,3,3,6,2,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Combinations.java,com.williamfiset.algorithms.other.Combinations,main/1[java.lang.String[]],false,69,2,2,0,2,3,4,13,0,4,1,4,2,2,2,0,0,0,7,10,5,1,2,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\Combinations.java,com.williamfiset.algorithms.other.Combinations,"combinations/4[int[],int,int,boolean[]]",false,26,3,3,2,1,6,3,17,1,4,4,3,1,0,2,1,0,0,3,4,6,4,3,0,0,0,12,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,shouldReturnEmptyListOnNullInput/0,false,25,2,1,0,1,1,3,5,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,shouldReturnOneOccurrence/0,false,32,2,1,0,1,1,3,5,0,0,0,3,0,0,0,0,0,0,6,3,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,shouldReturnMultipleOccurrences/0,false,45,2,1,0,1,1,3,7,0,0,0,3,0,0,0,0,0,0,10,18,0,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,setup/0,false,19,2,1,0,1,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,shouldReturnDynamicString/0,false,63,3,3,0,3,2,6,12,0,8,0,6,2,1,1,0,0,0,0,7,8,2,1,0,0,0,31,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,shouldReturnEmptyForPatternLengthLargerThenText/0,false,57,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,"generateRandomString/2[int,int]",false,111,0,1,1,0,1,4,3,1,0,2,4,0,0,0,0,0,0,0,1,0,1,0,0,0,0,20,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\BoyerMooreStringSearchTest.java,com.williamfiset.algorithms.strings.BoyerMooreStringSearchTest,"getOccurrencesBruteForce/2[java.lang.String,java.lang.String]",false,83,0,1,1,0,9,4,19,2,4,2,4,0,0,2,2,0,0,0,4,5,3,3,0,0,0,29,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\UniqueCombinations.java,com.williamfiset.algorithms.other.UniqueCombinations,"combinations/4[int,int,boolean[],int[]]",false,29,3,3,2,1,7,3,16,0,4,4,3,1,0,2,2,0,0,0,5,6,3,3,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\UniqueCombinations.java,com.williamfiset.algorithms.other.UniqueCombinations,main/1[java.lang.String[]],false,54,2,1,0,1,1,1,8,0,2,1,1,1,2,0,0,0,0,0,15,4,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\UniqueCombinations.java,com.williamfiset.algorithms.other.UniqueCombinations,"combinations/2[int[],int]",false,17,3,2,1,1,3,2,7,2,1,2,2,1,1,0,1,0,0,0,2,1,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunctionWithSieve.java,com.williamfiset.algorithms.math.EulerTotientFunctionWithSieve,totient/1[int],false,20,0,1,1,0,6,0,11,1,3,1,0,0,0,2,3,0,0,1,6,7,6,2,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunctionWithSieve.java,com.williamfiset.algorithms.math.EulerTotientFunctionWithSieve,sieve/1[int],false,38,2,0,0,0,7,3,16,2,8,1,3,0,0,3,0,0,1,0,6,12,4,3,0,0,0,13,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\EulerTotientFunctionWithSieve.java,com.williamfiset.algorithms.math.EulerTotientFunctionWithSieve,main/1[java.lang.String[]],false,60,1,1,0,1,2,3,7,0,1,1,3,1,1,1,0,0,0,2,3,1,0,1,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,multipleKValueTest3/0,false,106,2,1,0,1,1,3,6,0,2,0,3,1,1,0,0,0,0,11,1,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,noLongestCommonSubstringTest/0,false,139,2,2,0,2,1,4,8,0,5,0,4,0,0,0,0,0,0,2,1,5,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,"verifyMultipleKValues/2[java.lang.String[],java.util.Map<java.lang.Integer,java.util.TreeSet<java.lang.String>>]",false,68,1,7,5,2,2,5,8,0,3,2,5,0,0,1,0,0,0,0,0,3,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,simple1/0,false,151,2,2,0,2,1,4,10,0,5,0,4,0,0,0,0,0,0,5,1,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,kValueTest3/0,false,258,2,2,0,2,1,4,9,0,5,0,4,0,0,0,0,0,0,13,1,5,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,"createRandomStrings/4[int,int,int,int]",false,356,1,4,3,1,2,1,7,1,2,4,1,1,1,1,0,0,0,0,1,3,0,1,0,0,0,9,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,kValueTest/0,false,225,2,2,0,2,1,4,9,0,5,0,4,0,0,0,0,0,0,13,1,5,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,smallStrings/0,false,290,2,2,0,2,1,4,12,0,5,0,4,0,0,0,0,0,0,43,1,5,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,multipleKValueTest2/0,false,94,2,1,0,1,1,3,8,0,2,0,3,1,1,0,0,0,0,9,3,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,simple3/0,false,178,2,2,0,2,1,4,12,0,5,0,4,0,0,0,0,0,0,9,1,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,randomLcssWithBruteForceSolver2/0,false,327,4,5,0,5,3,5,12,0,7,0,5,1,2,2,0,0,0,0,6,7,0,2,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,simple5/0,false,212,2,2,0,2,1,4,10,0,5,0,4,0,0,0,0,0,0,6,1,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,multipleKValueTest5/0,false,124,2,1,0,1,1,2,12,0,2,0,2,1,1,0,0,0,0,8,7,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,kValueTest2/0,false,241,2,2,0,2,1,4,10,0,5,0,4,0,0,0,0,0,0,14,1,5,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,kValueTest4/0,false,274,2,2,0,2,1,4,9,0,5,0,4,0,0,0,0,0,0,13,1,5,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,multipleKValueTest4/0,false,115,2,1,0,1,1,3,6,0,2,0,3,1,1,0,0,0,0,8,1,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,randomLcssWithBruteForceSolver3/0,false,342,4,5,0,5,3,5,12,0,7,0,5,1,2,2,0,0,0,0,6,7,0,2,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,multipleKValueTest1/0,false,79,2,1,0,1,1,3,11,0,2,0,3,1,1,0,0,0,0,15,6,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,simple4/0,false,194,2,2,0,2,1,4,9,0,5,0,4,0,0,0,0,0,0,8,1,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,randomLcssWithBruteForceSolver1/0,false,310,4,5,0,5,3,5,12,0,7,0,5,1,2,2,0,0,0,0,6,7,0,2,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,simple2/0,false,165,2,2,0,2,1,4,9,0,5,0,4,0,0,0,0,0,0,4,1,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,testLargeAlphabet/0,false,375,2,2,0,2,3,4,11,0,6,0,4,0,0,2,0,0,0,2,3,7,0,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\strings\LongestCommonSubstringTest.java,com.williamfiset.algorithms.strings.LongestCommonSubstringTest,"createString/3[int,int,int]",false,364,2,2,1,1,2,1,8,1,3,3,1,0,0,1,0,0,1,0,3,4,2,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList$Node,compareTo/1[com.williamfiset.algorithms.datastructures.skiplist.SkipList.Node],false,199,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList$Node,compareTo/1[int],false,203,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\skiplist\SkipList.java,com.williamfiset.algorithms.datastructures.skiplist.SkipList$Node,Node/1[int],true,195,0,3,3,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\linearalgebra\Simplex.java,com.williamfiset.algorithms.linearalgebra.Simplex,simplex/1[double[][]],false,30,1,0,0,0,12,0,33,1,10,1,0,0,0,6,1,0,0,0,14,18,2,4,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\SortingTest.java,com.williamfiset.algorithms.sorting.SortingTest$SortingAlgorithm,SortingAlgorithm/1[com.williamfiset.algorithms.sorting.InplaceSort],true,32,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\sorting\SortingTest.java,com.williamfiset.algorithms.sorting.SortingTest$SortingAlgorithm,getSortingAlgorithm/0,false,36,1,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SquareRootDecomposition.java,com.williamfiset.algorithms.other.SquareRootDecomposition,"query/2[int,int]",false,43,1,2,1,1,6,1,15,2,9,2,1,1,1,4,1,0,4,0,4,13,7,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SquareRootDecomposition.java,com.williamfiset.algorithms.other.SquareRootDecomposition,main/1[java.lang.String[]],false,64,2,2,0,2,1,2,8,0,2,1,2,1,2,0,0,0,0,4,25,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SquareRootDecomposition.java,com.williamfiset.algorithms.other.SquareRootDecomposition,blockID/1[int],false,31,0,2,2,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SquareRootDecomposition.java,com.williamfiset.algorithms.other.SquareRootDecomposition,SquareRootDecomposition/1[int],true,18,1,0,0,0,1,1,6,0,0,1,1,0,0,0,0,0,1,0,1,4,2,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SquareRootDecomposition.java,com.williamfiset.algorithms.other.SquareRootDecomposition,SquareRootDecomposition/1[int[]],true,26,2,2,1,1,2,1,4,0,1,1,1,1,2,1,0,0,0,0,1,1,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\other\SquareRootDecomposition.java,com.williamfiset.algorithms.other.SquareRootDecomposition,"set/2[int,int]",false,36,1,2,1,1,1,1,5,0,0,2,1,1,1,0,0,0,0,0,0,3,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,insertSameValuesAndReturnsOrderedItems/0,false,82,1,0,0,0,1,5,9,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,returnsOrderedItemsFromRandomInsert/0,false,94,1,0,0,0,3,9,15,0,5,0,9,0,0,2,0,0,0,0,3,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,tearDown/0,false,31,1,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,noLongerEmptyAfterAdd/0,false,42,1,0,0,0,1,4,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,offerPeekAndElement/0,false,147,1,0,0,0,1,8,11,0,0,0,8,0,0,0,0,0,0,0,7,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,insertSingleItem/0,false,74,1,0,0,0,1,5,5,0,0,0,5,0,0,0,0,0,0,0,2,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,setUp/0,false,26,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,singletonQueueReturnsSoleItemOnPoll/0,false,49,1,0,0,0,1,4,4,0,0,0,4,0,0,0,0,0,0,0,2,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,isEmptyAfterSoleElementRemoved/0,false,56,1,0,0,0,1,5,5,0,0,0,5,0,0,0,0,0,0,0,1,0,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,addAllAndContinsItem/0,false,114,1,0,0,0,1,7,14,0,1,0,7,0,0,0,0,0,0,0,8,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,elementThrowsException/0,false,161,1,0,0,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,clearQueue/0,false,134,1,0,0,0,2,7,10,0,3,0,7,0,0,1,0,0,0,0,3,3,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,returnsOrderedItems/0,false,64,1,0,0,0,1,5,7,0,0,0,5,0,0,0,0,0,0,0,4,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\fibonacciheap\FibonacciHeapTest.java,com.williamfiset.algorithms.datastructures.fibonacciheap.FibonacciHeapTest,emptyWhenCreated/0,false,36,1,0,0,0,1,4,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,getGraph/0,false,131,2,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,solve/0,false,166,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1025,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,initializeEmptyFlowGraph/0,false,104,1,1,1,0,2,0,4,0,1,0,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,visit/1[int],false,143,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,"addEdge/3[int,int,long]",false,116,1,2,1,1,2,1,9,0,2,3,1,0,0,0,0,0,0,1,2,4,0,1,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,"NetworkFlowSolverBase/3[int,int,int]",true,94,2,1,0,1,1,1,7,0,0,3,1,1,1,0,0,0,0,0,0,4,0,0,0,0,0,35,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,markAllNodesAsUnvisited/0,false,154,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,getMaxFlow/0,false,137,1,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,visited/1[int],false,148,0,1,1,0,2,0,3,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\EdmondsKarpExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.EdmondsKarpExample$NetworkFlowSolverBase,execute/0,false,159,1,3,2,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testRemovingDuplicates/0,false,163,2,4,0,4,1,5,14,0,2,0,5,0,0,0,0,0,0,0,17,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testHeapify/0,false,46,3,4,0,4,4,9,12,0,4,0,9,1,1,3,0,0,0,0,2,4,0,2,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testContainment/0,false,75,2,4,0,4,1,5,14,0,2,0,5,0,0,0,0,0,0,14,0,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testRandomizedRemoving/0,false,216,3,7,0,7,4,16,25,0,7,0,16,1,1,3,0,0,0,0,4,7,0,2,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,genUniqueRandList/1[int],false,310,0,1,1,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,setup/0,false,17,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,"sequentialRemoving/2[java.lang.Integer[],java.lang.Integer[]]",false,115,1,7,1,6,3,12,15,0,4,2,12,0,0,2,0,0,0,0,3,4,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,genRandArray/1[int],false,296,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,1,0,1,3,1,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testRemoving/0,false,139,2,1,0,1,1,1,17,0,2,0,1,1,1,0,0,0,0,0,80,10,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testClear/0,false,64,2,4,0,4,1,6,8,0,2,0,6,0,0,0,0,0,0,5,1,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testEmpty/0,false,20,2,5,0,5,1,8,7,0,1,0,8,0,0,0,0,0,0,0,1,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testPQReusability/0,false,251,3,9,0,9,5,19,31,0,7,0,19,2,1,3,0,0,1,0,6,7,2,3,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testHeapProperty/0,false,29,2,5,0,5,4,5,9,0,4,0,5,0,0,3,0,0,0,0,13,5,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testContainmentRandomized/0,false,92,3,5,0,5,4,11,18,0,7,0,11,1,1,3,0,0,0,0,4,7,0,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,testRandomizedPolling/0,false,182,3,8,0,8,4,16,24,0,7,0,16,1,1,3,0,0,0,0,3,7,0,2,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapTest,genRandList/1[int],false,303,0,4,4,0,2,2,5,1,2,1,2,0,0,1,0,0,1,0,1,2,1,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample,main/1[java.lang.String[]],false,203,3,5,0,5,3,6,26,0,5,1,6,0,0,2,0,0,0,1,49,5,2,2,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testNullKey/0,false,49,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testUpdatingValue/0,false,74,2,2,0,2,1,4,8,0,0,0,4,0,0,0,0,0,0,0,12,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,genRandList/1[int],false,309,1,3,2,1,2,3,6,1,2,1,3,1,1,1,0,0,0,0,1,2,0,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,removeTest/0,false,167,3,4,0,4,3,5,15,0,3,0,5,0,0,2,0,0,0,0,19,3,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testIllegalCreation3/0,false,64,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,"randInt/2[int,int]",false,304,0,4,4,0,1,1,3,1,0,2,1,0,0,0,0,0,1,0,1,0,3,0,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,genUniqueRandList/1[int],false,318,0,0,0,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testLegalCreation/0,false,69,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testIllegalCreation1/0,false,54,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testConcurrentModificationException2/0,false,132,2,2,0,2,2,2,6,0,0,0,2,0,0,1,0,0,0,0,7,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,(initializer 1),false,35,1,6,0,6,1,1,5,0,0,0,1,1,1,0,0,0,0,0,5,3,0,0,0,0,0,17,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,randomIteratorTests/0,false,255,4,7,0,7,5,14,35,0,10,0,14,1,1,2,1,0,0,0,5,14,1,3,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testConcurrentModificationException/0,false,124,2,1,0,1,2,1,6,0,0,0,1,0,0,1,0,0,0,0,8,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testIllegalCreation2/0,false,59,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,removeTestComplex1/0,false,193,4,5,0,5,1,5,16,0,5,0,5,0,0,0,0,0,0,0,13,5,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,randomRemove/0,false,140,4,8,0,8,4,12,17,0,6,0,12,1,1,3,0,0,0,0,3,6,0,2,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testRandomMapOperations/0,false,216,4,8,0,8,5,17,25,0,9,0,17,1,2,2,0,0,0,0,2,10,0,3,0,0,0,30,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,setup/0,false,44,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableLinearProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableLinearProbingTest,testIterator/0,false,87,4,7,0,7,6,17,26,0,5,0,17,1,2,5,0,0,0,0,2,6,0,2,0,0,0,28,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest$HashObject,hashCode/0,false,21,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest$HashObject,"HashObject/2[int,int]",true,15,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbingTest.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbingTest$HashObject,equals/1[java.lang.Object],false,26,1,1,0,1,3,1,4,1,1,1,1,1,1,0,2,0,0,0,0,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList,"dfs/2[int,long]",false,45,3,7,2,5,6,6,16,3,3,2,6,1,0,1,1,0,0,0,3,3,0,3,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList,solve/0,false,33,2,3,0,3,4,3,7,0,2,0,3,1,1,2,1,0,0,0,2,5,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList,main/1[java.lang.String[]],false,69,1,1,0,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList,exampleFromSlides/0,false,120,3,5,0,5,3,6,21,0,5,0,6,0,0,2,0,0,0,0,20,5,2,2,0,0,0,17,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList,"FordFulkersonDfsSolverAdjacencyList/3[int,int,int]",true,26,0,4,4,0,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList,testSmallFlowGraph/0,false,150,2,3,0,3,1,3,17,0,4,0,3,0,0,0,0,0,0,0,26,4,2,0,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\FordFulkersonDfsSolverAdjacencyList.java,com.williamfiset.algorithms.graphtheory.networkflow.FordFulkersonDfsSolverAdjacencyList,exampleFromSlides2/0,false,75,3,6,1,5,8,6,32,0,5,0,6,0,0,2,4,0,0,0,48,5,2,3,0,0,0,17,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree,createGraph/1[int],false,88,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,11,10,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree,"rootTree/2[java.util.List<java.util.List<java.lang.Integer>>,int]",false,64,2,4,2,2,1,1,4,1,1,2,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree,main/1[java.lang.String[]],false,99,2,3,0,3,1,7,22,0,2,1,7,3,2,0,0,0,0,2,29,3,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree,"addUndirectedEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,94,0,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\RootingTree.java,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree,"buildTree/2[java.util.List<java.util.List<java.lang.Integer>>,com.williamfiset.algorithms.graphtheory.treealgorithms.RootingTree.TreeNode]",false,70,2,7,2,5,4,5,11,1,1,2,5,1,0,1,2,0,0,0,0,1,0,2,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ClosestPairOfPoints.java,com.williamfiset.algorithms.geometry.ClosestPairOfPoints$PT,dist/1[com.williamfiset.algorithms.geometry.ClosestPairOfPoints.PT],false,26,1,1,1,0,1,1,4,1,2,1,1,0,0,0,0,0,0,0,0,2,5,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ClosestPairOfPoints.java,com.williamfiset.algorithms.geometry.ClosestPairOfPoints$PT,"PT/2[double,double]",true,21,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\editdistance\EditDistance.java,com.williamfiset.algorithms.dp.examples.editdistance.EditDistance,"f/3[java.lang.Integer[][],int,int]",false,41,1,4,2,2,7,2,18,5,3,3,2,2,1,0,6,0,3,0,6,4,11,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\editdistance\EditDistance.java,com.williamfiset.algorithms.dp.examples.editdistance.EditDistance,min/1[int[]],false,23,1,1,1,0,3,0,9,1,1,1,0,0,0,1,0,0,0,0,0,2,0,2,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\editdistance\EditDistance.java,com.williamfiset.algorithms.dp.examples.editdistance.EditDistance,"micahEditDistance/5[java.lang.String,java.lang.String,int,int,int]",false,63,1,1,1,0,9,3,14,1,6,5,3,0,0,2,2,0,2,0,17,10,11,3,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\editdistance\EditDistance.java,com.williamfiset.algorithms.dp.examples.editdistance.EditDistance,editDistance/0,false,36,1,2,1,1,1,1,4,1,1,0,1,1,2,0,0,0,0,0,4,1,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\editdistance\EditDistance.java,com.williamfiset.algorithms.dp.examples.editdistance.EditDistance,main/1[java.lang.String[]],false,90,1,3,0,3,1,3,32,0,4,1,3,2,3,0,0,0,0,12,36,18,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\examples\editdistance\EditDistance.java,com.williamfiset.algorithms.dp.examples.editdistance.EditDistance,"EditDistance/5[java.lang.String,java.lang.String,int,int,int]",true,12,0,1,1,0,3,1,10,0,0,5,1,0,0,0,2,0,0,1,0,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,genRandList/1[int],false,154,0,1,1,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,testLeftRightCase/0,false,65,2,2,0,2,1,5,18,0,0,0,5,0,0,0,0,0,0,0,15,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,testRightLeftCase/0,false,108,2,2,0,2,1,5,14,0,0,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,setup/0,false,22,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,testNullInsertion/0,false,27,2,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,LeftLeftCase/0,false,37,2,2,0,2,1,5,22,0,0,0,5,0,0,0,0,0,0,0,19,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,testTreeContainsNull/0,false,32,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,randomTreapOperations/0,false,128,3,6,0,6,4,14,19,0,6,0,14,1,1,3,0,0,0,0,3,6,1,2,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,randValue/0,false,161,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\TreapTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.TreapTreeTest,testRightRightCase/0,false,88,2,2,0,2,1,5,14,0,0,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfsTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest,testSingleton/0,false,21,2,2,0,2,1,4,5,0,2,0,4,0,0,0,0,0,0,0,2,2,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfsTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest,testTwoNodeTree/0,false,28,2,3,0,3,1,5,7,0,2,0,5,0,0,0,0,0,0,0,6,2,0,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfsTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest,testSlidesExample/0,false,100,2,3,0,3,1,5,24,0,3,0,5,0,0,0,0,0,0,1,37,3,0,0,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfsTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest,t/0,false,130,3,3,0,3,1,2,18,0,11,0,2,0,0,0,0,0,0,0,11,11,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfsTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest,testSimilarChains/0,false,57,2,3,0,3,1,5,36,0,4,0,5,0,0,0,0,0,0,0,55,4,0,0,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\treealgorithms\TreeIsomorphismWithBfsTest.java,com.williamfiset.algorithms.graphtheory.treealgorithms.TreeIsomorphismWithBfsTest,testSmall/0,false,39,2,3,0,3,1,5,13,0,2,0,5,0,0,0,0,0,0,0,18,2,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch$Individual,Individual/0,true,117,2,2,1,1,2,2,8,0,1,0,2,1,1,1,0,0,0,0,1,5,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch$Individual,Individual/1[java.lang.String],true,127,1,2,1,1,1,2,5,0,0,1,2,1,1,0,0,0,0,0,0,3,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch$Individual,toString/0,false,143,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\ai\GeneticAlgorithm_textSearch.java,com.williamfiset.algorithms.ai.GeneticAlgorithm_textSearch$Individual,fitness/0,false,134,0,2,2,0,3,2,7,1,2,0,2,0,0,1,1,0,0,0,2,2,0,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver,"KruskalsEdgeListPartialSortSolver/2[java.util.List<com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver.Edge>,int]",true,47,1,1,1,0,3,0,5,0,0,2,0,0,0,0,1,0,0,0,1,2,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver,main/1[java.lang.String[]],false,145,2,4,0,4,3,5,34,0,4,1,5,2,3,1,1,0,0,3,55,4,1,2,0,0,0,23,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver,getMstCost/0,false,60,1,2,1,1,2,1,4,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver,getMst/0,false,54,2,2,1,1,2,1,4,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\KruskalsEdgeListPartialSortSolver.java,com.williamfiset.algorithms.graphtheory.KruskalsEdgeListPartialSortSolver,kruskals/0,false,65,2,6,2,4,6,5,17,1,4,0,5,0,0,1,2,0,1,0,4,9,1,2,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyList,"addEdge/3[java.util.List<java.util.List<java.lang.Integer>>,int,int]",false,112,0,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyList,findBridges/0,false,35,3,10,9,1,4,1,11,2,1,0,1,1,1,1,0,0,0,0,3,7,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyList,createGraph/1[int],false,105,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyList,"BridgesAdjacencyList/2[java.util.List<java.util.List<java.lang.Integer>>,int]",true,25,0,9,9,0,4,1,5,0,0,2,1,0,0,0,2,0,0,0,1,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyList,"dfs/3[int,int,java.util.List<java.lang.Integer>]",false,52,1,3,2,1,5,4,18,0,0,3,4,1,0,1,1,0,0,0,0,5,0,3,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BridgesAdjacencyList.java,com.williamfiset.algorithms.graphtheory.BridgesAdjacencyList,main/1[java.lang.String[]],false,74,1,4,0,4,2,6,21,0,7,1,6,3,2,1,0,0,0,1,26,7,4,1,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\SelectionSort.java,com.williamfiset.algorithms.sorting.SelectionSort,"swap/3[int[],int,int]",false,35,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\SelectionSort.java,com.williamfiset.algorithms.sorting.SelectionSort,sort/1[int[]],false,15,2,1,0,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\SelectionSort.java,com.williamfiset.algorithms.sorting.SelectionSort,selectionSort/1[int[]],false,19,2,2,1,1,5,1,13,1,4,1,1,1,1,2,1,0,0,0,2,5,1,3,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\SelectionSort.java,com.williamfiset.algorithms.sorting.SelectionSort,main/1[java.lang.String[]],false,41,3,2,0,2,1,3,6,0,2,1,3,0,0,0,0,0,0,0,7,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTsp_small1/0,false,69,4,4,0,4,2,6,15,0,5,0,6,0,0,1,0,0,0,0,32,15,1,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspRecursiveNonSquareMatrix/0,false,33,3,1,0,1,1,0,4,0,1,0,0,0,0,0,0,0,0,0,6,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspRecursiveInvalidStartNode/0,false,13,3,1,0,1,1,0,4,0,1,0,0,0,0,0,0,0,0,0,10,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspIterativeNonSquareMatrix/0,false,42,3,1,0,1,1,0,4,0,1,0,0,0,0,0,0,0,0,0,6,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testDpVsBf/0,false,90,6,7,0,7,3,8,15,0,8,0,8,1,1,2,0,0,0,0,4,8,0,2,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspIterativeSmallGraph/0,false,60,3,1,0,1,1,0,4,0,1,0,0,0,0,0,0,0,0,0,4,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testDifferentStartingNodes/0,false,136,7,10,0,10,3,11,18,0,9,0,11,2,1,2,0,0,0,0,3,9,0,2,0,0,0,31,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspIterativePerformance/0,false,175,4,3,0,3,2,2,8,0,3,0,2,1,1,1,0,0,0,0,2,3,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,randomFillDistMatrix/1[double[][]],false,184,1,5,5,0,5,1,10,0,3,1,1,0,0,2,1,0,1,0,4,5,1,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,"getTourCost/2[double[][],java.util.List<java.lang.Integer>]",false,197,1,2,2,0,2,2,5,1,2,2,2,0,0,1,0,0,0,0,3,3,1,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspRecursiveSmallGraph/0,false,51,3,1,0,1,1,0,4,0,1,0,0,0,0,0,0,0,0,0,4,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testGeneratedTour/0,false,111,7,10,0,10,3,11,18,0,9,0,11,2,1,2,0,0,0,0,4,9,0,2,0,0,0,28,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspIterativeInvalidStartNode/0,false,23,3,1,0,1,1,0,4,0,1,0,0,0,0,0,0,0,0,0,10,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\graphtheory\TravelingSalesmanProblemTest.java,com.williamfiset.algorithms.graphtheory.TravelingSalesmanProblemTest,testTspRecursivePerformance/0,false,164,4,3,0,3,2,2,8,0,3,0,2,1,1,1,0,0,0,0,2,3,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Node,"add/2[long,long]",false,88,2,6,2,4,10,2,21,6,2,2,2,1,0,0,4,0,2,0,2,8,4,2,0,0,0,25,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Node,"knn/4[int,long,long,java.util.PriorityQueue<com.williamfiset.algorithms.datastructures.quadtree.QuadTree.SortedPt>]",false,166,5,7,2,5,91,10,128,0,15,4,10,1,0,2,50,0,6,0,7,23,13,7,0,0,0,49,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Node,"kNearestNeighbors/3[int,long,long]",false,156,3,2,1,1,2,3,7,1,2,3,3,1,1,1,0,0,0,0,0,2,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Node,Node/1[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Rect],true,78,2,3,3,0,2,0,6,0,0,1,0,0,0,0,1,0,0,1,0,3,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Node,count/1[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Rect],false,128,2,6,2,4,10,4,15,2,2,1,4,1,0,1,5,0,0,0,3,7,0,3,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeSum.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum$TreeNode,addChild/1[com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum.TreeNode[]],false,36,1,1,1,0,2,1,5,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeSum.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum$TreeNode,TreeNode/1[int],true,24,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeSum.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum$TreeNode,getChildren/0,false,32,1,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\treealgorithms\examples\TreeSum.java,com.williamfiset.algorithms.graphtheory.treealgorithms.examples.TreeSum$TreeNode,getValue/0,false,28,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\CoinChangeTest.java,com.williamfiset.algorithms.dp.CoinChangeTest,testCoinChangeSelectedCoins/0,false,34,5,3,0,3,4,9,19,0,6,0,9,0,0,2,0,0,0,0,7,7,0,2,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\CoinChangeTest.java,com.williamfiset.algorithms.dp.CoinChangeTest,testCoinChangeSpaceEfficientSelectedCoins/0,false,59,5,3,0,3,4,9,19,0,6,0,9,0,0,2,0,0,0,0,7,7,0,2,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\CoinChangeTest.java,com.williamfiset.algorithms.dp.CoinChangeTest,testCoinChange/0,false,15,5,5,0,5,4,10,14,0,9,0,10,0,0,1,0,0,0,0,7,9,0,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.Entry,toString/0,false,30,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.Entry,"Entry/2[K,V]",true,16,2,0,0,0,1,1,5,0,0,2,1,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableSeparateChaining.java,com.williamfiset.algorithms.datastructures.hashtable.Entry,"equals/1[com.williamfiset.algorithms.datastructures.hashtable.Entry<K,V>]",false,24,3,0,0,0,2,1,4,2,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,markAllNodesAsUnvisited/0,false,134,0,4,4,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,solve/0,false,177,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1025,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,getMaxFlow/0,false,149,1,12,11,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,getMinCut/0,false,164,2,1,0,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,"NetworkFlowSolverBase/3[int,int,int]",true,79,3,1,0,1,1,1,8,0,0,3,1,1,1,0,0,0,0,0,0,5,0,0,0,0,0,36,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,visit/1[int],false,123,0,4,4,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,getGraph/0,false,143,2,4,3,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,29,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,execute/0,false,170,1,5,4,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,visited/1[int],false,128,0,7,7,0,2,0,3,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,"addEdge/3[int,int,long]",false,102,1,8,7,1,2,1,9,0,2,3,1,0,0,0,0,0,0,1,2,4,0,1,0,0,0,24,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,initializeGraph/0,false,90,1,1,1,0,2,0,4,0,1,0,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,getMinCost/0,false,156,1,3,2,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\NetworkFlowSolverBase.java,com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase,"addEdge/4[int,int,long,long]",false,113,1,3,2,1,1,1,8,0,2,4,1,0,0,0,0,0,0,0,1,4,0,0,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"SparseTable/2[long[],com.williamfiset.algorithms.datastructures.sparsetable.SparseTable.Operation]",true,64,3,7,6,1,1,1,4,0,0,2,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,example1/0,false,234,2,2,0,2,1,2,5,0,2,0,2,1,2,0,0,0,0,0,9,2,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,exampleFromSlides/0,false,243,2,2,0,2,1,2,5,0,2,0,2,1,2,0,0,0,0,1,15,2,0,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"query/3[int,int,java.util.function.BinaryOperator<java.lang.Long>]",false,220,0,1,1,0,1,1,5,1,2,3,1,0,0,0,0,0,1,0,3,2,5,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"sumQuery/2[int,int]",false,195,0,1,1,0,2,0,8,1,2,2,0,0,0,1,0,0,1,0,4,5,5,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"query/2[int,int]",false,134,1,9,6,3,5,3,17,5,0,2,3,3,1,0,4,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,example3/0,false,252,2,3,1,2,1,2,5,0,2,0,2,1,2,0,0,0,0,1,8,2,1,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,init/1[long[]],false,70,2,1,1,0,12,2,47,0,6,1,2,0,0,4,5,0,8,0,25,23,23,4,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"queryIndex/2[int,int]",false,152,1,5,3,2,3,2,9,2,0,2,2,2,1,0,2,0,0,2,0,0,1,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,main/1[java.lang.String[]],false,228,1,1,0,1,1,1,3,0,0,1,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"multQuery/2[int,int]",false,204,0,1,1,0,2,0,8,1,2,2,0,0,0,1,0,0,1,0,4,5,5,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,printTable/0,false,124,0,0,0,0,3,2,8,0,1,0,2,0,0,2,0,0,0,1,1,1,0,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"minQueryIndex/2[int,int]",false,162,0,1,1,0,2,0,12,2,4,2,0,0,0,0,0,0,2,0,5,4,8,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\sparsetable\SparseTable.java,com.williamfiset.algorithms.datastructures.sparsetable.SparseTable,"maxQueryIndex/2[int,int]",false,174,0,1,1,0,2,0,12,2,4,2,0,0,0,0,0,0,2,0,5,4,8,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircleCircleIntersectionArea.java,com.williamfiset.algorithms.geometry.CircleCircleIntersectionArea,arccosSafe/1[double],false,23,0,2,2,0,3,1,5,3,0,1,1,0,0,0,0,0,0,0,3,0,0,1,0,0,0,6,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircleCircleIntersectionArea.java,com.williamfiset.algorithms.geometry.CircleCircleIntersectionArea,"circleCircleIntersection/4[java.awt.geom.Point2D,double,java.awt.geom.Point2D,double]",false,79,1,3,1,2,8,6,34,5,17,4,6,2,1,0,0,0,5,0,1,21,22,1,0,0,0,35,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircleCircleIntersectionArea.java,com.williamfiset.algorithms.geometry.CircleCircleIntersectionArea,"circleCircleIntersectionArea/4[java.awt.geom.Point2D,double,java.awt.geom.Point2D,double]",false,29,1,2,0,2,6,4,33,5,10,4,4,2,2,0,3,0,8,0,7,14,28,2,0,0,0,27,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\CircleCircleIntersectionArea.java,com.williamfiset.algorithms.geometry.CircleCircleIntersectionArea,"rotatePoint/3[java.awt.geom.Point2D,java.awt.geom.Point2D,double]",false,145,0,1,1,0,1,4,11,1,8,3,4,0,0,0,0,0,0,0,0,8,10,0,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\Line.java,com.williamfiset.algorithms.geometry.Line,toString/0,false,108,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\Line.java,com.williamfiset.algorithms.geometry.Line,normalise/0,false,46,0,2,2,0,3,1,12,0,0,0,1,0,0,0,0,0,1,0,4,6,1,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\Line.java,com.williamfiset.algorithms.geometry.Line,"Line/2[java.awt.geom.Point2D,java.awt.geom.Point2D]",true,22,0,1,1,0,1,2,3,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\Line.java,com.williamfiset.algorithms.geometry.Line,"getPerpBisector/4[double,double,double,double]",false,60,1,1,0,1,3,2,7,1,2,4,2,1,1,0,0,0,4,0,3,4,9,2,0,0,0,20,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\Line.java,com.williamfiset.algorithms.geometry.Line,"intersection/2[com.williamfiset.algorithms.geometry.Line,com.williamfiset.algorithms.geometry.Line]",false,77,1,1,0,1,7,2,27,2,2,2,2,1,1,0,0,0,7,0,0,12,24,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\Line.java,com.williamfiset.algorithms.geometry.Line,"Line/4[double,double,double,double]",true,27,1,1,0,1,1,1,6,0,0,4,1,1,1,0,0,0,0,0,0,3,5,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\Line.java,com.williamfiset.algorithms.geometry.Line,"slopePointToLine/2[double,java.awt.geom.Point2D]",false,35,1,2,1,1,3,2,10,1,1,2,2,0,0,0,2,0,0,0,2,3,3,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testMediumMatrix2/0,false,205,4,3,0,3,2,5,11,0,5,0,5,1,1,1,0,0,0,0,43,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testAgainstBruteForce_smallValues/0,false,415,4,5,0,5,3,8,14,0,7,0,8,2,1,2,0,0,1,0,5,7,2,2,0,0,0,28,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testSmallMatrix2/0,false,161,4,3,0,3,2,5,11,0,5,0,5,1,1,1,0,0,0,0,21,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testNegativeEdgeWeights/0,false,275,5,5,0,5,1,6,15,0,6,0,6,2,1,0,0,0,0,0,25,6,1,0,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testAgainstBruteForce_largeValues/0,false,397,5,6,0,6,3,9,15,0,8,0,9,2,1,2,0,0,1,0,5,8,2,2,0,0,0,29,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testNegativeEdge_smallerThanINFWeights/0,false,294,5,6,0,6,1,7,17,0,7,0,7,3,1,0,0,0,1,0,32,7,12,0,0,0,0,31,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testSmallestMatrix1/0,false,122,4,3,0,3,2,5,11,0,5,0,5,1,1,1,0,0,0,0,7,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testMatchingOutputsUniqueNodes/0,false,363,4,3,0,3,4,9,16,0,7,0,9,2,1,3,0,0,1,0,6,7,2,3,0,0,0,27,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,"addUndirectedWeightedEdge/4[java.lang.Double[][],int,int,double]",false,95,0,7,7,0,1,0,4,0,0,4,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testSmallGraph_oddSize/0,false,101,5,5,0,5,1,6,16,0,6,0,6,2,1,0,0,0,0,0,24,6,0,0,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testMediumMatrix1/0,false,182,4,3,0,3,2,5,11,0,5,0,5,1,1,1,0,0,0,0,43,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testSmallMatrix1/0,false,140,4,3,0,3,2,5,11,0,5,0,5,1,1,1,0,0,0,0,21,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,"randomFillSymmetricMatrix/2[java.lang.Double[][],int]",false,433,0,4,4,0,3,1,8,0,3,2,1,0,0,2,0,0,1,0,2,5,2,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testMediumGraph_evenSize_nonPerfectMatchingFromSlides/0,false,253,5,5,0,5,1,6,16,0,6,0,6,2,1,0,0,0,0,0,24,6,0,0,0,0,0,30,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,getImplementations/1[java.lang.Double[][]],false,78,2,10,9,1,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testHarderWmcm_fromSlides/0,false,339,5,5,0,5,1,6,20,0,6,0,6,2,1,0,0,0,0,0,40,6,1,0,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testMatchingAndCostAreConsistent/0,false,383,3,5,0,5,3,7,11,0,4,0,7,3,1,2,0,0,1,0,5,4,2,2,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testMediumGraph_evenSize_fromSlides/0,false,228,5,5,0,5,1,6,19,0,6,0,6,2,1,0,0,0,0,0,35,6,0,0,0,0,0,28,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,testDisjointGraph/0,false,315,5,6,0,6,1,7,19,0,5,0,7,3,1,0,0,0,0,0,33,5,0,0,0,0,0,24,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,"assertOptimalMatching/3[int[],java.lang.Double[][],double]",false,443,1,3,3,0,2,2,7,0,2,3,2,0,0,1,0,0,0,0,4,4,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\dp\WeightedMaximumCardinalityMatchingTest.java,com.williamfiset.algorithms.dp.WeightedMaximumCardinalityMatchingTest,createEmptyMatrix/1[int],false,84,0,7,7,0,4,0,10,1,3,1,0,0,0,2,1,0,0,0,2,4,0,3,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Rect,intersects/1[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Rect],false,334,1,2,2,0,6,0,3,1,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Rect,"contains/2[long,long]",false,340,0,5,5,0,5,0,3,1,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Rect,contains/1[com.williamfiset.algorithms.datastructures.quadtree.QuadTree.Rect],false,345,1,3,2,1,2,1,3,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\quadtree\QuadTree.java,com.williamfiset.algorithms.datastructures.quadtree.QuadTree$Rect,"Rect/4[long,long,long,long]",true,324,0,6,6,0,3,0,7,0,0,4,0,0,0,0,0,0,0,1,0,4,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,DoubleHashingTestObject/1[java.lang.String],true,44,1,2,0,2,2,2,6,0,0,1,2,2,1,0,1,0,0,1,0,1,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,stringHash/0,false,59,0,1,1,0,2,2,11,0,5,0,2,0,0,1,0,0,0,0,4,8,1,1,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,DoubleHashingTestObject/1[int[]],true,37,2,2,0,2,2,2,6,0,0,1,2,2,1,0,1,0,0,1,0,1,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,hashCode2/0,false,85,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,vectorHash/0,false,55,0,1,1,0,2,0,3,0,1,0,0,0,0,1,0,0,0,0,1,2,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,DoubleHashingTestObject/1[int],true,31,1,11,9,2,1,2,5,0,0,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,hashCode/0,false,80,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,(initializer 1),false,22,1,6,0,6,3,1,8,0,2,0,1,0,0,2,1,0,0,0,3,5,1,2,0,0,0,17,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,intHash/0,false,51,0,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,computeHash/0,false,73,0,3,3,0,3,3,5,0,0,0,3,0,0,0,2,0,0,0,0,3,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\DoubleHashingTestObject.java,com.williamfiset.algorithms.datastructures.hashtable.DoubleHashingTestObject,equals/1[java.lang.Object],false,90,1,0,0,0,4,3,7,4,1,1,3,0,0,0,3,0,0,0,0,1,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\Queue.java,com.williamfiset.algorithms.datastructures.queue.Queue,size/0,false,14,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\Queue.java,com.williamfiset.algorithms.datastructures.queue.Queue,isEmpty/0,false,16,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\Queue.java,com.williamfiset.algorithms.datastructures.queue.Queue,peek/0,false,12,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\Queue.java,com.williamfiset.algorithms.datastructures.queue.Queue,poll/0,false,10,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\Queue.java,com.williamfiset.algorithms.datastructures.queue.Queue,offer/1[T],false,8,1,0,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls,"solve/3[com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.Mouse[],com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls.Hole[],int]",false,52,4,4,1,3,6,4,25,0,12,3,4,0,0,4,0,0,0,1,9,12,6,3,0,0,0,23,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls,main/1[java.lang.String[]],false,39,3,3,0,3,1,1,5,0,2,1,1,1,1,0,0,0,0,0,22,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testRightRightCase/0,false,76,2,1,0,1,1,5,12,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testLeftRightCase/0,false,59,2,1,0,1,1,5,12,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testRandomizedValueInsertionsAgainstTreeSet/0,false,125,3,4,0,4,2,9,9,0,3,0,9,1,1,1,0,0,0,0,1,3,0,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,genRandList/1[int],false,182,0,1,1,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,randomRemoveTests/0,false,156,3,6,0,6,4,14,19,0,6,0,14,1,1,3,0,0,0,0,3,6,1,2,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,randValue/0,false,189,0,3,3,0,1,1,3,1,0,0,1,0,0,0,0,0,1,0,1,0,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,setup/0,false,22,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testTreeHeight/0,false,138,3,3,0,3,2,6,10,0,5,0,6,1,1,1,0,0,1,0,5,5,4,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testLeftLeftCase/0,false,42,2,1,0,1,1,5,12,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testTreeContainsNull/0,false,37,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testRightLeftCase/0,false,93,2,1,0,1,1,5,12,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testRandomizedBalanceFactorTest/0,false,110,3,3,0,3,2,5,6,0,1,0,5,2,1,1,0,0,0,0,1,1,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,validateBalanceFactorValues/1[com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeRecursive<java.lang.Integer>.Node],false,118,2,3,2,1,4,1,5,3,0,1,1,1,0,0,1,0,0,0,2,0,0,1,0,0,0,8,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testNullInsertion/0,false,27,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\balancedtree\AVLTreeTest.java,com.williamfiset.algorithms.datastructures.balancedtree.AVLTreeTest,testNullRemoval/0,false,32,2,1,0,1,1,3,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree$Ruf,"apply/4[java.lang.Long,long,long,java.lang.Long]",false,61,0,3,3,0,1,0,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.Boruvkas.Edge],false,21,1,0,0,0,3,0,9,3,1,1,0,0,0,0,2,0,0,0,2,2,3,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$Edge,toString/0,false,17,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\Boruvkas.java,com.williamfiset.algorithms.graphtheory.Boruvkas$Edge,"Edge/3[int,int,int]",true,11,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\GraphDiameter.java,com.williamfiset.algorithms.graphtheory.GraphDiameter$Edge,"Edge/2[int,int]",true,20,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyMatrix,reconstructShortestPath/1[int],false,43,1,4,3,1,5,2,11,3,2,1,2,1,1,1,3,0,0,0,1,3,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyMatrix,getShortestPaths/0,false,38,2,4,3,1,2,1,4,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyMatrix,solve/0,false,56,1,2,2,0,10,1,16,1,6,0,1,0,0,6,0,0,0,0,10,14,5,4,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyMatrix,"BellmanFordAdjacencyMatrix/2[int,double[][]]",true,29,1,5,5,0,2,1,6,0,1,2,1,0,0,1,0,0,0,0,1,5,0,1,0,0,0,46,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BellmanFordAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.BellmanFordAdjacencyMatrix,main/1[java.lang.String[]],false,92,2,3,0,3,5,10,36,0,11,1,10,2,3,3,1,0,0,4,36,23,0,2,0,0,0,26,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\TestUtils.java,com.williamfiset.algorithms.utils.TestUtils,"randValue/2[long,long]",false,46,0,1,1,0,1,1,3,1,0,2,1,0,0,0,0,0,3,0,0,0,3,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\TestUtils.java,com.williamfiset.algorithms.utils.TestUtils,randomUniformUniqueIntegerList/1[int],false,33,0,0,0,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\TestUtils.java,com.williamfiset.algorithms.utils.TestUtils,"randValue/2[int,int]",false,41,0,15,15,0,1,1,3,1,0,2,1,0,0,0,0,0,3,0,0,0,3,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\TestUtils.java,com.williamfiset.algorithms.utils.TestUtils,"randomIntegerArray/3[int,int,int]",false,9,2,5,4,1,2,1,5,1,2,3,1,1,1,1,0,0,0,0,1,3,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\TestUtils.java,com.williamfiset.algorithms.utils.TestUtils,"randomLongArray/3[int,long,long]",false,17,2,9,8,1,2,1,5,1,2,3,1,1,1,1,0,0,0,0,1,3,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\utils\TestUtils.java,com.williamfiset.algorithms.utils.TestUtils,"randomIntegerList/3[int,int,int]",false,25,1,4,3,1,2,2,5,1,2,3,2,1,1,1,0,0,0,0,1,2,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2$Segment,"Segment/6[int,java.lang.Long,java.lang.Long,java.lang.Long,int,int]",true,55,0,1,1,0,1,0,8,0,0,6,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\segmenttree\GenericSegmentTree2.java,com.williamfiset.algorithms.datastructures.segmenttree.GenericSegmentTree2$Segment,toString/0,false,80,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment,makeArray/1[java.util.List<com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment.Pt>],false,100,1,1,1,0,2,2,8,1,3,1,2,0,0,1,0,0,0,0,1,4,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment,"orientation/6[double,double,double,double,double,double]",false,81,0,1,1,0,3,0,8,1,1,6,0,0,0,0,0,0,0,0,3,5,3,0,0,0,0,11,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment,main/1[java.lang.String[]],false,110,2,5,0,5,3,6,14,0,6,1,6,4,2,2,0,0,0,2,14,8,0,1,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment,"intersect/8[double,double,double,double,double,double,double,double]",false,73,1,2,1,1,1,0,7,1,9,8,0,0,0,0,0,0,4,0,0,9,21,0,0,0,0,19,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment,sortCW/1[java.util.List<com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment.Pt>],false,33,1,2,1,1,2,5,19,2,9,1,5,0,0,1,0,0,3,0,7,11,11,1,0,0,1,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment,"cut/3[com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment.Pt[],com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment.Pt,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment.Pt]",false,59,2,3,1,2,4,5,11,1,6,3,5,2,1,1,0,0,0,0,4,7,2,2,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\ConvexPolygonCutWithLineSegment.java,com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment,makeList/1[com.williamfiset.algorithms.geometry.ConvexPolygonCutWithLineSegment.Pt[]],false,91,1,1,1,0,2,1,7,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyMatrix,main/1[java.lang.String[]],false,67,1,1,0,1,1,2,24,0,3,1,2,1,1,0,0,0,0,1,91,39,1,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\LazyPrimsAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyMatrix,prims/1[java.lang.Integer[][]],false,33,2,2,1,1,10,3,19,2,8,1,3,0,0,3,4,0,0,0,7,11,0,4,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,"addUndirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative.Edge>>,int,int,int]",false,95,2,2,1,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,formatPath/1[java.util.List<java.lang.Integer>],false,140,0,1,1,0,1,5,3,1,0,1,5,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,"addDirectedEdge/4[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative.Edge>>,int,int,int]",false,90,1,2,1,1,1,2,3,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,"addUnweightedUndirectedEdge/3[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative.Edge>>,int,int]",false,102,2,5,4,1,1,1,3,0,0,3,1,1,2,0,0,0,0,0,1,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,"reconstructPath/2[int,int]",false,45,1,6,5,1,3,5,9,2,2,2,5,1,1,1,2,0,0,0,1,3,0,1,0,0,0,31,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,createEmptyGraph/1[int],false,83,1,5,5,0,2,1,5,1,2,1,1,0,0,1,0,0,0,0,1,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,bfs/1[int],false,56,2,1,1,0,4,4,18,0,4,1,4,0,0,2,0,0,0,0,0,8,0,3,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,BreadthFirstSearchAdjacencyListIterative/1[java.util.List<java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative.Edge>>],true,32,1,6,6,0,2,1,5,0,0,1,1,0,0,0,1,0,0,1,0,2,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterative.java,com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterative,main/1[java.lang.String[]],false,108,2,5,0,5,1,5,24,0,6,1,5,4,4,0,0,0,0,1,33,6,0,0,0,0,0,24,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,nextPowerOfTwo/1[int],false,33,0,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,increaseCapacity/0,false,49,1,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,7,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,setupProbing/1[K],false,39,1,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,adjustCapacity/0,false,55,1,1,0,1,2,2,5,1,1,0,2,0,0,0,1,0,0,0,0,1,0,1,0,0,0,5,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,probe/1[int],false,42,0,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,1,0,3,0,0,0,0,2,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,HashTableQuadraticProbing/0,true,18,0,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,HashTableQuadraticProbing/1[int],true,22,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\hashtable\HashTableQuadraticProbing.java,com.williamfiset.algorithms.datastructures.hashtable.HashTableQuadraticProbing,"HashTableQuadraticProbing/2[int,double]",true,27,0,0,0,0,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ArrayStack.java,com.williamfiset.algorithms.datastructures.stack.ArrayStack,pop/0,false,43,2,1,0,1,2,1,6,1,1,0,1,0,0,0,0,0,0,1,0,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ArrayStack.java,com.williamfiset.algorithms.datastructures.stack.ArrayStack,isEmpty/0,false,23,0,0,0,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ArrayStack.java,com.williamfiset.algorithms.datastructures.stack.ArrayStack,increaseCapacity/0,false,36,0,0,0,0,1,1,4,0,0,0,1,0,0,0,0,0,0,0,1,2,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ArrayStack.java,com.williamfiset.algorithms.datastructures.stack.ArrayStack,push/1[T],false,28,2,1,0,1,2,1,6,0,0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ArrayStack.java,com.williamfiset.algorithms.datastructures.stack.ArrayStack,peek/0,false,52,2,1,0,1,2,1,4,1,0,0,1,0,0,0,0,0,0,1,1,0,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ArrayStack.java,com.williamfiset.algorithms.datastructures.stack.ArrayStack,ArrayStack/0,true,12,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\stack\ArrayStack.java,com.williamfiset.algorithms.datastructures.stack.ArrayStack,size/0,false,18,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFindTest.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest,testBadUnionFindCreation3/0,false,232,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFindTest.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest,testConnectivity/0,false,119,2,3,0,3,7,5,55,0,8,0,5,0,0,6,0,0,0,0,91,8,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFindTest.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest,testSize/0,false,194,2,4,0,4,1,5,25,0,1,0,5,0,0,0,0,0,0,0,31,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFindTest.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest,testNumComponents/0,false,11,2,3,0,3,1,4,22,0,1,0,4,0,0,0,0,0,0,0,29,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFindTest.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest,testBadUnionFindCreation1/0,false,222,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFindTest.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest,testComponentSize/0,false,45,2,3,0,3,1,4,62,0,1,0,4,0,0,0,0,0,0,0,119,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\unionfind\UnionFindTest.java,com.williamfiset.algorithms.datastructures.unionfind.UnionFindTest,testBadUnionFindCreation2/0,false,227,2,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$Edge,"Edge/3[int,int,int]",true,89,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\examples\EagerPrimsExample.java,com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample$Edge,compareTo/1[com.williamfiset.algorithms.graphtheory.examples.EagerPrimsExample.Edge],false,96,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TopologicalSortAdjacencyList.java,com.williamfiset.algorithms.graphtheory.TopologicalSortAdjacencyList$Edge,"Edge/3[int,int,int]",true,22,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\CountingSort.java,com.williamfiset.algorithms.sorting.CountingSort,"countingSort/3[int[],int,int]",false,26,1,1,1,0,4,0,8,0,5,3,0,0,0,3,0,0,0,0,5,6,4,2,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\CountingSort.java,com.williamfiset.algorithms.sorting.CountingSort,main/1[java.lang.String[]],false,35,2,2,0,2,1,3,6,0,2,1,3,1,2,0,0,0,0,0,15,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\CountingSort.java,com.williamfiset.algorithms.sorting.CountingSort,sort/1[int[]],false,15,2,2,1,1,4,1,9,0,3,1,1,1,1,1,0,0,0,0,1,5,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie$Node,Node/1[char],true,17,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\trie\Trie.java,com.williamfiset.algorithms.datastructures.trie.Trie$Node,"addChild/2[com.williamfiset.algorithms.datastructures.trie.Trie.Node,char]",false,21,1,1,1,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\Knapsack_01.java,com.williamfiset.algorithms.dp.Knapsack_01,"knapsack/3[int,int[],int[]]",false,26,1,1,1,0,11,1,22,1,10,3,1,0,0,3,4,0,0,1,13,13,13,3,0,0,0,37,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\Knapsack_01.java,com.williamfiset.algorithms.dp.Knapsack_01,main/1[java.lang.String[]],false,75,2,1,0,1,1,2,10,0,3,1,2,1,1,0,0,0,0,0,20,6,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\BubbleSort.java,com.williamfiset.algorithms.sorting.BubbleSort,"swap/3[int[],int,int]",false,40,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\BubbleSort.java,com.williamfiset.algorithms.sorting.BubbleSort,main/1[java.lang.String[]],false,46,2,2,0,2,1,3,6,0,2,1,3,1,3,0,0,0,0,0,7,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\BubbleSort.java,com.williamfiset.algorithms.sorting.BubbleSort,sort/1[int[]],false,15,2,2,1,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\sorting\BubbleSort.java,com.williamfiset.algorithms.sorting.BubbleSort,bubbleSort/1[int[]],false,23,2,2,1,1,5,1,16,1,2,1,1,1,1,2,1,0,0,0,3,3,2,3,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,"sequentialRemoving/2[java.lang.Integer[],java.lang.Integer[]]",false,116,1,7,1,6,3,12,15,0,4,2,12,0,0,2,0,0,0,0,3,4,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testContainment/0,false,76,2,4,0,4,1,5,14,0,2,0,5,0,0,0,0,0,0,14,0,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testRemovingDuplicates/0,false,164,2,4,0,4,1,5,14,0,2,0,5,0,0,0,0,0,0,0,17,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testHeapify/0,false,46,3,4,0,4,4,9,13,0,4,0,9,1,1,3,0,0,0,0,2,4,0,2,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testRandomizedRemoving/0,false,217,3,7,0,7,4,16,25,0,7,0,16,1,1,3,0,0,0,0,4,7,0,2,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,setup/0,false,17,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,genUniqueRandList/1[int],false,311,0,1,1,0,2,2,6,1,2,1,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testClear/0,false,65,2,4,0,4,1,6,8,0,2,0,6,0,0,0,0,0,0,5,1,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testRemoving/0,false,140,2,1,0,1,1,1,17,0,2,0,1,1,1,0,0,0,0,0,80,10,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,genRandArray/1[int],false,297,0,1,1,0,2,1,5,1,2,1,1,0,0,1,0,0,1,0,1,3,1,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testEmpty/0,false,20,2,5,0,5,1,8,7,0,1,0,8,0,0,0,0,0,0,0,1,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testPQReusability/0,false,252,3,9,0,9,5,19,31,0,7,0,19,2,1,3,0,0,1,0,6,7,2,3,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testHeapProperty/0,false,29,2,5,0,5,4,5,9,0,4,0,5,0,0,3,0,0,0,0,13,5,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testContainmentRandomized/0,false,93,3,5,0,5,4,11,18,0,7,0,11,1,1,3,0,0,0,0,4,7,0,2,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,genRandList/1[int],false,304,0,4,4,0,2,2,5,1,2,1,2,0,0,1,0,0,1,0,1,2,1,1,0,0,0,12,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\priorityqueue\BinaryHeapQuickRemovalsTest.java,com.williamfiset.algorithms.datastructures.priorityqueue.BinaryHeapQuickRemovalsTest,testRandomizedPolling/0,false,183,3,8,0,8,4,16,24,0,7,0,16,1,1,3,0,0,0,0,3,7,0,2,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\KnapsackUnbounded.java,com.williamfiset.algorithms.dp.KnapsackUnbounded,"unboundedKnapsack/3[int,int[],int[]]",false,25,1,0,0,0,9,0,13,1,6,3,0,0,0,2,3,0,0,1,9,8,8,3,0,0,0,38,9,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\KnapsackUnbounded.java,com.williamfiset.algorithms.dp.KnapsackUnbounded,main/1[java.lang.String[]],false,85,2,1,0,1,1,2,6,0,3,1,2,1,1,0,0,0,0,1,7,3,1,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\dp\KnapsackUnbounded.java,com.williamfiset.algorithms.dp.KnapsackUnbounded,"unboundedKnapsackSpaceEfficient/3[int,int[],int[]]",false,57,1,1,1,0,8,0,11,1,4,3,0,0,0,2,3,0,0,1,4,5,6,3,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,"inOrder/2[java.util.List<java.lang.Integer>,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode]",false,50,1,3,2,1,4,2,6,1,0,2,2,1,0,0,3,0,0,0,0,0,0,1,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,"levelOrder/2[java.util.List<java.lang.Integer>,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode]",false,68,1,1,1,0,5,4,10,0,1,2,4,0,0,1,3,0,0,0,0,2,0,2,0,0,0,5,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,"add/2[com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,int]",false,26,1,4,2,2,3,1,14,1,0,2,1,1,0,0,1,0,0,0,0,3,0,2,0,0,0,7,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,"TestTreeNode/3[java.lang.Integer,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode]",true,20,1,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,"postOrder/2[java.util.List<java.lang.Integer>,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode]",false,59,1,3,2,1,4,2,6,1,0,2,2,1,0,0,3,0,0,0,0,0,0,1,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\binarysearchtree\BinarySearchTreeTest.java,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode,"preOrder/2[java.util.List<java.lang.Integer>,com.williamfiset.algorithms.datastructures.binarysearchtree.TestTreeNode]",false,41,1,3,2,1,4,2,6,1,0,2,2,1,0,0,3,0,0,0,0,0,0,1,0,0,0,4,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,setCostMatrix/1[java.lang.Double[][]],false,237,0,1,1,0,7,0,25,0,4,1,0,0,0,3,1,0,1,0,8,13,3,2,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,solve/0,false,293,3,4,2,2,2,2,9,1,3,0,2,2,2,0,0,0,0,0,2,5,2,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,getMinWeightCost/0,false,266,1,1,0,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,reconstructMatching/1[int[]],false,346,2,2,1,1,8,4,30,0,12,1,4,1,1,2,5,0,1,0,11,19,6,2,0,0,0,32,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,WeightedMaximumCardinalityMatchingRecursive/1[java.lang.Double[][]],true,226,1,2,1,1,3,1,7,0,0,1,1,1,1,0,1,0,1,2,3,2,3,1,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,getBitPosition/1[int],false,393,0,1,1,0,2,0,8,1,1,1,0,0,0,1,0,0,0,0,3,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,getMatching/0,false,288,2,2,1,1,1,1,4,1,0,0,1,1,3,0,0,0,0,0,0,0,0,0,0,0,0,44,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ChinesePostmanProblem.java,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem$WeightedMaximumCardinalityMatchingRecursive,"f/3[int,com.williamfiset.algorithms.graphtheory.ChinesePostmanProblem.WeightedMaximumCardinalityMatchingRecursive.MatchingCost[],int[]]",false,305,3,8,2,6,10,4,29,3,6,3,4,1,0,2,2,0,6,0,10,10,5,3,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.IntQueue,peek/0,false,32,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.IntQueue,isEmpty/0,false,28,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.IntQueue,dequeue/0,false,44,0,1,1,0,2,0,5,1,1,0,0,0,0,0,1,0,0,0,1,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.IntQueue,enqueue/1[int],false,37,0,1,1,0,3,0,5,0,0,1,0,0,0,0,2,0,0,1,1,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\BreadthFirstSearchAdjacencyListIterativeFastQueue.java,com.williamfiset.algorithms.graphtheory.IntQueue,IntQueue/1[int],true,22,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,4,1,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.UnionFind,find/1[int],false,106,0,3,3,0,3,0,10,1,2,1,0,0,0,2,2,0,0,0,0,5,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.UnionFind,components/0,false,141,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.UnionFind,"unify/2[int,int]",false,146,1,2,1,1,3,1,14,1,2,2,1,1,1,0,1,0,0,0,0,6,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.UnionFind,size/0,false,136,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.UnionFind,UnionFind/1[int],true,91,1,1,1,0,3,0,10,0,1,1,0,0,0,1,0,0,0,1,3,7,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.UnionFind,componentSize/1[int],false,131,1,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\ConnectedComponentsAdjacencyList.java,com.williamfiset.algorithms.graphtheory.UnionFind,"connected/2[int,int]",false,126,1,1,0,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TarjanAdjacencyMatrix$Tarjan,getStronglyConnectedComponents/0,false,106,1,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TarjanAdjacencyMatrix$Tarjan,dfs/1[int],false,80,1,3,2,1,7,3,24,1,3,1,3,1,0,2,1,0,0,0,1,9,0,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TarjanAdjacencyMatrix$Tarjan,Tarjan/1[boolean[][]],true,71,3,2,1,1,3,1,8,0,1,1,1,1,1,1,0,0,0,0,1,6,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\TarjanAdjacencyMatrix.java,com.williamfiset.algorithms.graphtheory.TarjanAdjacencyMatrix$Tarjan,countStronglyConnectedComponents/0,false,111,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentToGeneralForm.java,com.williamfiset.algorithms.geometry.LineSegmentToGeneralForm,"segmentToGeneralForm/4[double,double,double,double]",false,16,1,1,1,0,1,0,7,1,1,4,0,0,0,0,0,0,0,0,4,4,5,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\geometry\LineSegmentToGeneralForm.java,com.williamfiset.algorithms.geometry.LineSegmentToGeneralForm,main/1[java.lang.String[]],false,34,2,1,0,1,1,2,4,0,1,1,2,1,1,0,0,0,0,1,7,1,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\RelativelyPrime.java,com.williamfiset.algorithms.math.RelativelyPrime,main/1[java.lang.String[]],false,22,1,1,0,1,1,2,4,0,0,1,2,1,2,0,0,0,0,0,4,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\RelativelyPrime.java,com.williamfiset.algorithms.math.RelativelyPrime,"gcf/2[long,long]",false,13,1,3,2,1,2,1,3,1,0,2,1,1,0,0,1,0,0,0,1,0,1,0,0,0,0,3,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\math\RelativelyPrime.java,com.williamfiset.algorithms.math.RelativelyPrime,"areCoprime/2[long,long]",false,18,1,2,1,1,2,1,3,1,0,2,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$NetworkFlowSolverBase,getGraph/0,false,130,2,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,33,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$NetworkFlowSolverBase,"NetworkFlowSolverBase/3[int,int,int]",true,93,2,1,0,1,1,1,7,0,0,3,1,1,1,0,0,0,0,0,0,4,0,0,0,0,0,35,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$NetworkFlowSolverBase,solve/0,false,149,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1025,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$NetworkFlowSolverBase,initializeEmptyFlowGraph/0,false,103,1,1,1,0,2,0,4,0,1,0,0,0,0,1,0,0,0,1,1,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$NetworkFlowSolverBase,"addEdge/3[int,int,long]",false,115,1,2,1,1,2,1,9,0,2,3,1,0,0,0,0,0,0,1,2,4,0,1,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$NetworkFlowSolverBase,execute/0,false,142,1,3,2,1,2,1,5,1,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\FordFulkersonExample.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.FordFulkersonExample$NetworkFlowSolverBase,getMaxFlow/0,false,136,1,2,1,1,1,1,4,1,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,size/0,false,31,0,6,6,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,isFull/0,false,44,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,benchMarkTest/0,false,103,1,3,0,3,5,6,15,0,9,0,6,2,2,4,0,0,2,2,7,11,6,1,0,0,0,14,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,isEmpty/0,false,26,0,5,5,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,offer/1[java.lang.Integer],false,50,1,8,7,1,2,1,8,0,0,1,1,1,1,0,0,0,0,1,0,2,1,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,poll/0,false,61,0,5,5,0,2,0,8,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,main/1[java.lang.String[]],false,71,1,4,0,4,1,5,21,0,1,1,5,3,2,0,0,0,0,0,9,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,IntQueue/1[int],true,20,1,9,9,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,1,4,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\queue\IntQueue.java,com.williamfiset.algorithms.datastructures.queue.IntQueue,peek/0,false,36,1,3,2,1,2,1,7,1,0,0,1,1,1,0,0,0,0,1,0,1,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\graphtheory\networkflow\examples\MiceAndOwls.java,com.williamfiset.algorithms.graphtheory.networkflow.examples.MiceAndOwls$Hole,"Hole/3[int,int,int]",true,33,0,1,1,0,1,0,4,0,0,3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQuery.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQuery,"add/2[int,long]",false,50,1,2,1,1,2,1,6,0,0,2,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQuery.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQuery,get/1[int],false,61,1,6,5,1,1,1,3,1,0,1,1,1,2,0,0,0,0,0,1,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQuery.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQuery,FenwickTreeRangeUpdatePointQuery/1[long[]],true,23,2,7,6,1,4,2,12,0,3,1,2,1,1,1,1,0,0,1,3,8,1,2,0,0,0,23,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQuery.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQuery,"prefixSum/2[int,long[]]",false,66,2,2,1,1,2,1,8,1,1,2,1,1,1,1,1,0,0,0,2,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQuery.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQuery,"updateRange/3[int,int,long]",false,44,1,6,5,1,1,1,4,0,0,3,1,1,2,0,0,0,0,0,1,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\fenwicktree\FenwickTreeRangeUpdatePointQuery.java,com.williamfiset.algorithms.datastructures.fenwicktree.FenwickTreeRangeUpdatePointQuery,lsb/1[int],false,80,0,3,3,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,"bruteForceAssignRangeUpdate/4[long[],int,int,long]",false,119,1,1,1,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,"bruteForceMax/3[long[],int,int]",false,99,1,0,0,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,"bruteForceSumRangeUpdate/4[long[],int,int,long]",false,107,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,testRandomRangeAssignUpdates1WithMinRangeQueries1/0,false,21,5,7,0,7,3,10,22,0,13,0,10,2,1,2,0,0,0,0,14,15,4,2,0,0,0,38,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,"bruteForceMulRangeUpdate/4[long[],int,int,long]",false,113,1,0,0,0,2,0,5,0,1,4,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,9,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,setup/0,false,18,1,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,"bruteForceSum/3[long[],int,int]",false,81,1,0,0,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\test\java\com\williamfiset\algorithms\datastructures\segmenttree\MinQueryAssignUpdateSegmentTreeTest.java,com.williamfiset.algorithms.datastructures.segmenttree.MinQueryAssignUpdateSegmentTreeTest,"bruteForceMin/3[long[],int,int]",false,90,1,1,1,0,2,1,7,1,2,3,1,0,0,1,0,0,0,0,0,3,0,1,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayMed.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayMed$SuffixRankTuple,compareTo/1[com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayMed.SuffixRankTuple],false,17,1,0,0,0,2,1,5,2,1,1,1,0,0,0,1,0,0,0,1,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\Algorithms\src\main\java\com\williamfiset\algorithms\datastructures\suffixarray\SuffixArrayMed.java,com.williamfiset.algorithms.datastructures.suffixarray.SuffixArrayMed$SuffixRankTuple,toString/0,false,24,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,7,1,0,false
