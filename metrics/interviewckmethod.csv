file,class,method,constructor,line,cbo,cboModified,fanin,fanout,wmc,rfc,loc,returnsQty,variablesQty,parametersQty,methodsInvokedQty,methodsInvokedLocalQty,methodsInvokedIndirectLocalQty,loopQty,comparisonsQty,tryCatchQty,parenthesizedExpsQty,stringLiteralsQty,numbersQty,assignmentsQty,mathOperationsQty,maxNestedBlocksQty,anonymousClassesQty,innerClassesQty,lambdasQty,uniqueWordsQty,modifiers,logStatementsQty,hasJavaDoc
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\CountRanges.java,com.interview.misc.CountRanges,main/1[java.lang.String[]],false,49,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,4,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\CountRanges.java,com.interview.misc.CountRanges,"countRangeSum/3[int[],int,int]",false,23,2,1,1,0,5,7,25,1,6,3,7,0,0,2,0,0,0,0,19,8,14,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutationRotation.java,com.interview.recursion.StringPermutationRotation,main/1[java.lang.String[]],false,30,1,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,1,1,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutationRotation.java,com.interview.recursion.StringPermutationRotation,"swap/3[char[],int,int]",false,5,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutationRotation.java,com.interview.recursion.StringPermutationRotation,printArray/1[char[]],false,11,1,1,1,0,2,2,6,0,1,1,2,0,0,1,0,0,0,1,1,1,0,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutationRotation.java,com.interview.recursion.StringPermutationRotation,"permute/2[char[],int]",false,18,2,5,2,3,3,3,11,1,1,2,3,3,1,1,1,0,0,0,1,1,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\MultiplyStrings.java,com.interview.string.MultiplyStrings,"add/2[char[],char[]]",false,74,1,1,1,0,6,3,33,1,11,2,3,0,0,3,1,0,0,0,14,14,15,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\MultiplyStrings.java,com.interview.string.MultiplyStrings,"multiply/2[java.lang.String,java.lang.String]",false,8,1,2,1,1,1,2,4,1,1,2,2,1,2,0,0,0,0,0,4,1,2,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\MultiplyStrings.java,com.interview.string.MultiplyStrings,"append0s/2[java.lang.String,int]",false,66,0,1,1,0,2,2,7,1,2,2,2,0,0,1,0,0,0,1,1,2,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\MultiplyStrings.java,com.interview.string.MultiplyStrings,"simpleMultiply/2[java.lang.String,java.lang.String]",false,38,0,1,1,0,5,5,28,2,8,2,5,0,0,1,3,0,0,1,9,11,7,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\MultiplyStrings.java,com.interview.string.MultiplyStrings,"multiply/6[java.lang.String,java.lang.String,int,int,int,int]",false,13,1,6,2,4,3,6,19,2,8,6,6,4,1,0,2,0,2,0,10,13,15,1,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\MultiplyStrings.java,com.interview.string.MultiplyStrings,main/1[java.lang.String[]],false,108,1,2,0,2,1,2,4,0,1,1,2,1,3,0,0,0,0,2,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\ValidWordAbbreviation.java,com.interview.string.ValidWordAbbreviation,isUnique/1[java.lang.String],false,37,0,1,1,0,7,4,17,3,4,1,4,0,0,0,5,0,0,2,8,6,3,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\ValidWordAbbreviation.java,com.interview.string.ValidWordAbbreviation,ValidWordAbbreviation/1[java.lang.String[]],true,16,0,1,1,0,5,6,20,0,4,1,6,0,0,1,2,0,0,2,7,8,4,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\array\AdditiveNumberTest.java,com.interview.array.AdditiveNumberTest,main/1[java.lang.String[]],false,6,1,0,0,0,1,3,6,0,1,1,3,0,0,0,0,0,0,3,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\FirstPositiveMissing.java,com.interview.array.FirstPositiveMissing,firstMissingPositive/1[int[]],false,7,2,1,0,1,5,2,15,2,4,1,2,1,2,2,0,0,0,0,4,5,6,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\FirstPositiveMissing.java,com.interview.array.FirstPositiveMissing,"swap/3[int[],int,int]",false,38,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\FirstPositiveMissing.java,com.interview.array.FirstPositiveMissing,segregate/1[int[]],false,23,2,2,1,1,4,1,16,1,2,1,1,1,1,1,0,0,0,0,4,2,1,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\ReverseBits.java,com.interview.bits.ReverseBits,reverse/1[int],false,8,0,1,1,0,4,0,10,1,3,1,0,0,0,1,1,0,1,0,7,5,1,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\ReverseBits.java,com.interview.bits.ReverseBits,main/1[java.lang.String[]],false,21,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\AddTwoNumberInBinaryRepresentation.java,com.interview.bits.AddTwoNumberInBinaryRepresentation,main/1[java.lang.String[]],false,78,1,5,0,5,1,6,9,0,4,1,6,4,1,0,0,0,0,2,4,4,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\AddTwoNumberInBinaryRepresentation.java,com.interview.bits.AddTwoNumberInBinaryRepresentation,"add/2[char[],char[]]",false,10,1,1,1,0,5,0,31,1,9,2,0,0,0,3,0,0,3,0,9,15,9,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\AddTwoNumberInBinaryRepresentation.java,com.interview.bits.AddTwoNumberInBinaryRepresentation,"addTwoNumbersWithoutArithmeticOperatorFaster/2[int,int]",false,59,0,1,1,0,2,0,8,1,1,2,0,0,0,1,1,0,0,0,2,3,1,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\AddTwoNumberInBinaryRepresentation.java,com.interview.bits.AddTwoNumberInBinaryRepresentation,"addTwoNumbersWithoutArithmeticOperator/2[int,int]",false,42,0,1,1,0,12,0,16,1,5,2,0,0,0,1,5,0,6,0,17,8,3,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\AddTwoNumberInBinaryRepresentation.java,com.interview.bits.AddTwoNumberInBinaryRepresentation,printResult/1[int],false,68,0,1,1,0,4,1,10,0,1,1,1,0,0,1,1,0,1,2,5,2,2,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LargestBSTInBinaryTree.java,com.interview.tree.LargestBSTInBinaryTree,largestBST/1[com.interview.tree.Node],false,26,3,2,1,1,1,1,4,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LargestBSTInBinaryTree.java,com.interview.tree.LargestBSTInBinaryTree,main/1[java.lang.String[]],false,71,3,4,0,4,2,3,10,0,6,1,3,1,2,0,1,0,0,1,31,6,1,0,0,0,0,21,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LargestBSTInBinaryTree.java,com.interview.tree.LargestBSTInBinaryTree,largest/1[com.interview.tree.Node],false,31,3,4,2,2,8,2,18,3,3,1,2,1,0,0,5,0,1,0,1,9,1,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RemoveExtraBrackets.java,com.interview.stackqueue.RemoveExtraBrackets,main/1[java.lang.String[]],false,129,1,4,0,4,1,4,39,0,14,1,4,3,1,0,0,0,0,12,0,25,0,0,0,0,0,21,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RemoveExtraBrackets.java,com.interview.stackqueue.RemoveExtraBrackets,"printArray/2[char[],int]",false,122,1,1,1,0,2,2,6,0,1,2,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RemoveExtraBrackets.java,com.interview.stackqueue.RemoveExtraBrackets,removeWithoutExtraSpace/1[char[]],false,81,1,1,1,0,11,0,35,1,7,1,0,0,0,2,5,0,0,0,7,12,0,3,0,0,0,23,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RemoveExtraBrackets.java,com.interview.stackqueue.RemoveExtraBrackets,remove/1[char[]],false,41,1,1,1,0,12,6,32,2,4,1,6,0,0,2,7,0,0,0,4,5,0,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OperatorAdditionForTarget.java,com.interview.recursion.OperatorAdditionForTarget,"addOperators/2[java.lang.String,int]",false,15,1,2,1,1,2,2,9,2,2,2,2,1,1,0,1,0,0,0,4,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OperatorAdditionForTarget.java,com.interview.recursion.OperatorAdditionForTarget,"dfs/7[java.lang.String,int,int,long,long,java.util.List<java.lang.String>,java.lang.StringBuffer]",false,25,1,3,2,1,7,11,26,1,3,7,11,1,0,1,5,0,0,3,9,3,15,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OperatorAdditionForTarget.java,com.interview.recursion.OperatorAdditionForTarget,main/1[java.lang.String[]],false,55,1,2,0,2,1,4,5,0,3,1,4,1,2,0,0,0,0,1,1,2,0,0,0,0,1,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LongestConsecutiveSequence.java,com.interview.tree.LongestConsecutiveSequence,longestConsecutive/1[com.interview.tree.Node],false,8,2,1,0,1,2,1,8,2,0,1,1,1,1,0,1,0,0,0,4,1,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LongestConsecutiveSequence.java,com.interview.tree.LongestConsecutiveSequence,"longestConsecutiveUtil/3[com.interview.tree.Node,int,int]",false,17,2,3,2,1,3,2,14,1,0,3,2,1,0,0,2,0,0,0,3,3,2,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PathSum.java,com.interview.tree.PathSum,"hasPathSum/2[com.interview.tree.Node,int]",false,43,2,2,1,1,4,1,9,3,0,2,1,1,0,0,4,0,0,0,0,0,2,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PathSum.java,com.interview.tree.PathSum,"pathSumUtil/4[com.interview.tree.Node,int,java.util.List<java.util.List<java.lang.Integer>>,java.util.List<java.lang.Integer>]",false,25,2,3,2,1,5,5,17,2,0,4,5,1,0,0,4,0,0,0,2,0,4,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PathSum.java,com.interview.tree.PathSum,"pathSum/2[com.interview.tree.Node,int]",false,18,2,1,0,1,1,1,6,1,2,2,1,1,1,0,0,0,0,0,0,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ExpressionEvaluation.java,com.interview.dynamic.ExpressionEvaluation$Holder,add/1[java.lang.Integer],false,86,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ExpressionEvaluation.java,com.interview.dynamic.ExpressionEvaluation$Holder,values/0,false,89,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkListIsPalindrome.java,com.interview.linklist.LinkListIsPalindrome,"isPalindrome/2[com.interview.linklist.NodeRef,com.interview.linklist.Node]",false,14,3,4,2,2,3,2,9,2,1,2,2,1,0,0,2,0,0,0,0,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkListIsPalindrome.java,com.interview.linklist.LinkListIsPalindrome,main/1[java.lang.String[]],false,24,4,5,0,5,1,3,15,0,4,1,3,1,1,0,0,0,0,0,7,12,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WeightedJobSchedulingMaximumProfit.java,com.interview.dynamic.WeightedJobSchedulingMaximumProfit,main/1[java.lang.String[]],false,69,2,3,0,3,1,2,11,0,2,1,2,1,1,0,0,0,0,0,25,8,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WeightedJobSchedulingMaximumProfit.java,com.interview.dynamic.WeightedJobSchedulingMaximumProfit,maximum/1[com.interview.dynamic.Job[]],false,45,3,2,1,1,6,2,22,1,5,1,2,0,0,3,0,0,0,0,6,9,3,3,0,0,0,37,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.NodeRef,next/0,false,5,0,2,2,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToCircularLinkList.java,com.interview.tree.BinaryTreeToCircularLinkList,print/1[com.interview.tree.Node],false,50,1,1,1,0,3,2,14,0,1,1,2,0,0,2,2,0,0,0,0,3,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToCircularLinkList.java,com.interview.tree.BinaryTreeToCircularLinkList,main/1[java.lang.String[]],false,64,3,5,0,5,1,3,13,0,3,1,3,2,2,0,0,0,0,0,6,10,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToCircularLinkList.java,com.interview.tree.BinaryTreeToCircularLinkList,convert/1[com.interview.tree.Node],false,11,2,4,2,2,4,2,17,3,2,1,2,2,1,0,3,0,0,0,0,8,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToCircularLinkList.java,com.interview.tree.BinaryTreeToCircularLinkList,"join/2[com.interview.tree.Node,com.interview.tree.Node]",false,33,1,1,1,0,3,0,14,3,1,2,0,0,0,0,2,0,0,0,0,5,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\graph\WallsAndGatesTest.java,com.interview.graph.WallsAndGatesTest,testDifferentScenarios/0,false,9,3,0,0,0,2,2,11,0,5,0,2,0,0,1,0,0,0,0,24,5,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\suffixprefix\TrieTest.java,com.interview.suffixprefix.TrieTest,testDifferentCases/0,false,9,2,5,0,5,1,6,26,0,1,0,6,0,0,0,0,0,0,23,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RegexMatching.java,com.interview.dynamic.RegexMatching,main/1[java.lang.String[]],false,78,1,3,0,3,1,4,13,0,1,1,4,2,2,0,0,0,0,20,0,1,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RegexMatching.java,com.interview.dynamic.RegexMatching,"matchRegexRecursive/4[char[],char[],int,int]",false,16,2,3,2,1,9,1,18,5,0,4,1,1,0,1,8,0,3,0,7,0,7,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RegexMatching.java,com.interview.dynamic.RegexMatching,"matchRegex/2[char[],char[]]",false,50,2,1,1,0,10,0,26,1,4,2,0,0,0,3,6,0,0,0,24,10,15,4,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RegexMatching.java,com.interview.dynamic.RegexMatching,"matchRegexRecursive/2[char[],char[]]",false,12,2,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SerializeDeserializeBinaryTree.java,com.interview.tree.SerializeDeserializeBinaryTree,main/1[java.lang.String[]],false,145,3,6,0,6,1,4,9,0,5,1,4,3,2,0,0,0,0,2,0,5,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SerializeDeserializeBinaryTree.java,com.interview.tree.SerializeDeserializeBinaryTree,serializeLevelOrder/1[com.interview.tree.Node],false,87,1,1,1,0,7,10,28,2,3,1,10,0,0,2,4,0,0,3,2,4,1,2,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SerializeDeserializeBinaryTree.java,com.interview.tree.SerializeDeserializeBinaryTree,serialize/1[com.interview.tree.Node],false,26,2,1,0,1,1,2,5,1,1,1,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SerializeDeserializeBinaryTree.java,com.interview.tree.SerializeDeserializeBinaryTree,"serializeUtil/2[com.interview.tree.Node,java.lang.StringBuffer]",false,32,2,3,2,1,4,3,15,2,0,2,3,1,0,0,3,0,0,3,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SerializeDeserializeBinaryTree.java,com.interview.tree.SerializeDeserializeBinaryTree,deserializeLevelOrder/1[java.lang.String],false,118,1,3,2,1,8,10,25,2,5,1,10,0,0,1,2,0,0,3,2,7,0,2,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SerializeDeserializeBinaryTree.java,com.interview.tree.SerializeDeserializeBinaryTree,deserialize/1[java.lang.String],false,55,2,2,1,1,1,2,5,1,1,1,2,1,1,0,0,0,0,1,1,2,0,0,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SerializeDeserializeBinaryTree.java,com.interview.tree.SerializeDeserializeBinaryTree,deserializeUtil/1[java.lang.String[]],false,61,2,4,2,2,5,3,22,3,1,1,3,1,0,0,1,0,0,2,3,5,2,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\KruskalMST.java,com.interview.graph.KruskalMST$EdgeComparator,"compare/2[com.interview.graph.Edge<java.lang.Integer>,com.interview.graph.Edge<java.lang.Integer>]",false,28,1,1,0,1,2,1,8,2,0,2,1,0,0,0,0,0,0,0,2,0,0,1,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountAs.java,com.interview.dynamic.CountAs,main/1[java.lang.String[]],false,45,1,3,0,3,1,3,5,0,1,1,3,2,2,0,0,0,0,0,2,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountAs.java,com.interview.dynamic.CountAs,countAsRec/1[int],false,12,1,2,1,1,4,1,14,2,3,1,1,1,1,1,0,0,1,0,5,5,3,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountAs.java,com.interview.dynamic.CountAs,countAs/1[int],false,28,1,2,2,0,5,1,15,2,4,1,1,0,0,3,0,0,1,0,8,6,4,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxNumberFromTwoArray.java,com.interview.array.MaxNumberFromTwoArray,"merge/2[int[],int[]]",false,37,2,2,1,1,8,1,29,1,4,2,1,1,1,1,2,0,0,0,3,10,1,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxNumberFromTwoArray.java,com.interview.array.MaxNumberFromTwoArray,"isGreater/4[int[],int[],int,int]",false,62,1,2,2,0,6,0,13,3,0,4,0,0,0,1,1,0,0,0,0,0,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxNumberFromTwoArray.java,com.interview.array.MaxNumberFromTwoArray,"findLargest1/2[int[],int]",false,75,1,1,1,0,7,0,16,2,3,2,0,0,0,2,1,0,1,0,7,4,3,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxNumberFromTwoArray.java,com.interview.array.MaxNumberFromTwoArray,"maxNumber/3[int[],int[],int]",false,23,2,4,1,3,5,3,13,1,3,3,3,3,2,1,0,0,0,0,3,4,2,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxNumberFromTwoArray.java,com.interview.array.MaxNumberFromTwoArray,main/1[java.lang.String[]],false,92,2,2,0,2,1,3,9,0,6,1,3,1,3,0,0,0,0,0,26,6,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\EulerianPathAndCircuit.java,com.interview.graph.EulerianPathAndCircuit,isEulerian/1[com.interview.graph.Graph<T>],false,50,5,3,0,3,7,3,15,3,1,1,3,0,0,1,3,0,0,0,6,1,1,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\EulerianPathAndCircuit.java,com.interview.graph.EulerianPathAndCircuit,"DFS/2[com.interview.graph.Vertex<T>,java.util.Map<com.interview.graph.Vertex<T>,java.lang.Boolean>]",false,41,3,2,0,2,3,4,8,0,0,2,4,0,0,1,0,0,0,0,0,0,0,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\EulerianPathAndCircuit.java,com.interview.graph.EulerianPathAndCircuit,main/1[java.lang.String[]],false,71,3,5,0,5,1,4,12,0,3,1,4,0,0,0,0,0,0,0,9,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\EulerianPathAndCircuit.java,com.interview.graph.EulerianPathAndCircuit,isConnected/1[com.interview.graph.Graph<T>],false,14,4,3,0,3,7,4,20,3,2,1,4,0,0,2,3,0,0,0,2,3,0,2,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\KClosestValueInBinaryTree.java,com.interview.tree.KClosestValueInBinaryTree,"successor/2[java.util.Stack<com.interview.tree.Node>,com.interview.tree.Node]",false,97,1,1,1,0,7,4,25,4,0,2,4,0,0,2,4,0,0,0,0,3,0,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\KClosestValueInBinaryTree.java,com.interview.tree.KClosestValueInBinaryTree,"predecessor/2[java.util.Stack<com.interview.tree.Node>,com.interview.tree.Node]",false,73,1,1,1,0,7,4,25,4,0,2,4,0,0,2,4,0,0,0,0,3,0,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\KClosestValueInBinaryTree.java,com.interview.tree.KClosestValueInBinaryTree,"closestKValues/3[com.interview.tree.Node,double,int]",false,19,2,3,1,2,12,7,51,2,7,3,7,2,1,3,7,0,1,0,2,15,4,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\WiggleSort.java,com.interview.array.WiggleSort,"next/2[int,int]",false,62,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,2,0,3,0,3,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\WiggleSort.java,com.interview.array.WiggleSort,"swap/3[int[],int,int]",false,66,1,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\WiggleSort.java,com.interview.array.WiggleSort,wiggleSort2/1[int[]],false,20,3,5,1,4,5,3,23,1,6,1,3,2,1,1,1,0,0,0,5,7,2,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\WiggleSort.java,com.interview.array.WiggleSort,main/1[java.lang.String[]],false,72,1,2,0,2,1,3,6,0,2,1,3,1,2,0,0,0,0,0,7,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\WiggleSort.java,com.interview.array.WiggleSort,wiggleSort1/1[int[]],false,46,2,1,0,1,5,1,16,0,2,1,1,1,1,1,0,0,0,0,6,3,5,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToSortedLinkList.java,com.interview.tree.BinaryTreeToSortedLinkList,"merge/2[com.interview.tree.Node,com.interview.tree.Node]",false,24,2,3,2,1,4,1,16,4,0,2,1,1,0,0,2,0,0,0,0,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToSortedLinkList.java,com.interview.tree.BinaryTreeToSortedLinkList,main/1[java.lang.String[]],false,47,3,5,0,5,1,3,9,0,5,1,3,2,2,0,0,0,0,0,14,6,0,0,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToSortedLinkList.java,com.interview.tree.BinaryTreeToSortedLinkList,toSortedLinkList/1[com.interview.tree.Node],false,10,2,4,2,2,2,2,11,2,2,1,2,2,1,0,1,0,0,0,0,5,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToSortedLinkList.java,com.interview.tree.BinaryTreeToSortedLinkList,print/1[com.interview.tree.Node],false,40,1,1,1,0,2,1,6,0,0,1,1,0,0,1,1,0,0,1,0,1,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SumTree.java,com.interview.tree.SumTree,isSumTree/1[com.interview.tree.Node],false,15,3,3,1,2,1,1,4,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SumTree.java,com.interview.tree.SumTree,main/1[java.lang.String[]],false,36,3,4,0,4,1,3,8,0,5,1,3,1,2,0,0,0,0,0,14,5,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SumTree.java,com.interview.tree.SumTree,"isSumTree/2[com.interview.tree.Node,com.interview.tree.Count]",false,20,3,4,2,2,5,1,15,3,4,2,1,1,0,0,4,0,1,0,0,6,2,1,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp$Index,hashCode/0,false,36,0,0,0,0,2,1,5,1,1,0,1,0,0,0,1,0,1,0,2,2,2,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp$Index,"createIndex/2[int,java.util.Set<java.lang.Integer>]",false,42,1,4,3,1,1,0,6,1,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp$Index,equals/1[java.lang.Object],false,25,1,0,0,0,6,2,7,4,1,1,2,0,0,0,6,0,1,0,0,1,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\IterativeQuickSort.java,com.interview.sort.IterativeQuickSort,main/1[java.lang.String[]],false,63,1,2,0,2,2,2,8,0,3,1,2,1,3,1,0,0,0,1,12,3,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\IterativeQuickSort.java,com.interview.sort.IterativeQuickSort,sort/1[int[]],false,13,2,2,1,1,6,4,26,0,4,1,4,1,2,1,0,0,0,0,10,6,9,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\IterativeQuickSort.java,com.interview.sort.IterativeQuickSort,"partition/3[int[],int,int]",false,41,2,2,1,1,3,1,14,1,3,3,1,1,1,1,0,0,0,0,4,3,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\IterativeQuickSort.java,com.interview.sort.IterativeQuickSort,"swap/3[int[],int,int]",false,57,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\CountingSort.java,com.interview.sort.CountingSort,main/1[java.lang.String[]],false,45,1,2,0,2,2,2,8,0,3,1,2,1,1,1,0,0,0,0,7,3,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\CountingSort.java,com.interview.sort.CountingSort,sort/1[int[]],false,7,1,0,0,0,4,0,13,0,4,1,0,0,0,3,0,0,0,0,4,5,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\CountingSort.java,com.interview.sort.CountingSort,sort1/1[int[]],false,23,1,1,1,0,5,0,17,0,6,1,0,0,0,4,0,0,0,0,6,9,2,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AlientDictionary.java,com.interview.graph.AlientDictionary,"topSortUtil/5[char,java.util.Deque<java.lang.Character>,java.util.Set<java.lang.Character>,java.util.Set<java.lang.Character>,java.util.Map<java.lang.Character,java.util.Set<java.lang.Character>>]",false,33,1,3,2,1,6,6,21,4,1,5,6,1,0,1,1,0,0,0,0,1,0,3,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AlientDictionary.java,com.interview.graph.AlientDictionary,main/1[java.lang.String[]],false,127,1,2,0,2,1,2,8,0,5,1,2,1,3,0,0,0,0,9,0,5,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AlientDictionary.java,com.interview.graph.AlientDictionary,alienOrder1/1[java.lang.String[]],false,93,1,2,1,1,8,14,30,1,7,1,14,1,2,3,3,0,0,1,3,7,0,4,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AlientDictionary.java,com.interview.graph.AlientDictionary,"buildGraph/3[java.lang.String[],java.util.Map<java.lang.Character,java.lang.Integer>,java.util.Set<java.lang.Character>]",false,58,1,3,2,1,6,9,25,1,8,3,9,1,1,3,2,0,1,0,5,7,3,4,0,0,1,21,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AlientDictionary.java,com.interview.graph.AlientDictionary,"getAllChars/3[java.lang.String[],java.util.Map<java.lang.Character,java.lang.Integer>,java.util.Set<java.lang.Character>]",false,84,0,1,1,0,3,3,8,0,1,3,3,0,0,2,0,0,0,0,1,0,0,2,0,0,1,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AlientDictionary.java,com.interview.graph.AlientDictionary,alienOrder/1[java.lang.String[]],false,13,1,2,0,2,4,6,17,2,6,1,6,2,2,2,0,0,0,1,0,6,0,2,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\PrintAllPathFromSourceToDestination.java,com.interview.graph.PrintAllPathFromSourceToDestination,"printPath/3[com.interview.graph.Graph<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>]",false,14,3,2,1,1,1,1,4,0,1,3,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\PrintAllPathFromSourceToDestination.java,com.interview.graph.PrintAllPathFromSourceToDestination,main/1[java.lang.String[]],false,38,3,5,0,5,1,3,19,0,4,1,3,1,2,0,0,0,0,0,26,4,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\PrintAllPathFromSourceToDestination.java,com.interview.graph.PrintAllPathFromSourceToDestination,"printPath/3[java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,com.interview.graph.Vertex<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>]",false,19,2,5,2,3,5,8,17,2,0,3,8,1,0,2,0,0,0,1,0,0,1,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedLLToBalancedBST.java,com.interview.linklist.SortedLLToBalancedBST,printTreeInOrder/1[com.interview.linklist.Node],false,32,2,3,2,1,2,2,8,1,0,1,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedLLToBalancedBST.java,com.interview.linklist.SortedLLToBalancedBST,toBalancedBST/1[com.interview.linklist.Node],false,11,4,5,1,4,1,2,7,1,3,1,2,1,1,0,0,0,0,0,0,4,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedLLToBalancedBST.java,com.interview.linklist.SortedLLToBalancedBST,main/1[java.lang.String[]],false,50,3,6,0,6,1,4,15,0,3,1,4,3,2,0,0,0,0,0,7,11,0,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedLLToBalancedBST.java,com.interview.linklist.SortedLLToBalancedBST,"toBalancedBST/2[com.interview.linklist.NodeRef,int]",false,19,3,4,2,2,2,2,12,2,3,2,2,1,0,0,0,0,0,0,4,5,4,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedLLToBalancedBST.java,com.interview.linklist.SortedLLToBalancedBST,printTreePreOrder/1[com.interview.linklist.Node],false,41,2,3,2,1,2,2,8,1,0,1,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CloneGraph.java,com.interview.graph.CloneGraph,"dfs/4[com.interview.graph.CloneGraph.UndirectedGraphNode,com.interview.graph.CloneGraph.UndirectedGraphNode,java.util.Map<java.lang.Integer,com.interview.graph.CloneGraph.UndirectedGraphNode>,java.util.Set<java.lang.Integer>]",false,29,2,4,2,2,5,6,20,1,1,4,6,1,0,1,2,0,0,0,0,2,0,3,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CloneGraph.java,com.interview.graph.CloneGraph,cloneGraph/1[com.interview.graph.CloneGraph.UndirectedGraphNode],false,17,2,2,0,2,2,2,11,2,3,1,2,1,1,0,1,0,0,0,0,3,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TugOfWar.java,com.interview.array.TugOfWar,main/1[java.lang.String[]],false,39,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,14,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TugOfWar.java,com.interview.array.TugOfWar,findMind/1[int[]],false,12,2,2,1,1,2,1,9,1,3,1,1,1,1,1,0,0,0,0,6,4,1,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TugOfWar.java,com.interview.array.TugOfWar,"combinationUtil/7[int[],int,int,int,int,int,java.util.List<java.lang.Integer>]",false,22,2,3,2,1,4,6,16,1,1,7,6,1,0,1,1,0,0,0,5,4,7,2,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\RearrangeNumberInArrayToFormLargestNumber.java,com.interview.number.RearrangeNumberInArrayToFormLargestNumber$IntegerComparator,"compare/2[java.lang.Integer,java.lang.Integer]",false,53,0,0,0,0,3,0,13,1,4,2,0,0,0,2,0,0,0,0,4,6,5,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\PrimeNumbersBeforeN.java,com.interview.misc.PrimeNumbersBeforeN,main/1[java.lang.String[]],false,33,1,2,0,2,1,3,5,0,3,1,3,1,1,0,0,0,0,1,1,2,1,0,0,0,1,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\PrimeNumbersBeforeN.java,com.interview.misc.PrimeNumbersBeforeN,primeNumbers/1[int],false,11,0,1,1,0,6,1,21,1,3,1,1,0,0,2,1,0,0,0,5,6,2,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\RomanNumberToDecimal.java,com.interview.misc.RomanNumberToDecimal,"literal/2[int,java.lang.StringBuffer]",false,35,0,1,1,0,13,1,67,13,0,2,1,0,0,0,0,0,0,13,25,13,0,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\RomanNumberToDecimal.java,com.interview.misc.RomanNumberToDecimal,literal/1[char],false,100,0,1,1,0,8,0,20,7,0,1,0,0,0,0,0,0,0,0,7,0,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\RomanNumberToDecimal.java,com.interview.misc.RomanNumberToDecimal,converToRoman/1[int],false,13,1,2,1,1,2,2,7,1,1,1,2,1,1,1,0,0,0,0,1,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\RomanNumberToDecimal.java,com.interview.misc.RomanNumberToDecimal,main/1[java.lang.String[]],false,121,1,3,0,3,1,5,11,0,1,1,5,2,3,0,0,0,0,4,4,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\RomanNumberToDecimal.java,com.interview.misc.RomanNumberToDecimal,convertToDecimal/1[char[]],false,21,2,2,1,1,4,1,14,1,2,1,1,1,1,1,0,0,0,0,6,5,4,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\MaxProductWordLength.java,com.interview.bits.MaxProductWordLength,maxProduct/1[java.lang.String[]],false,19,1,0,0,0,8,4,22,1,7,1,4,0,0,4,1,0,2,0,6,7,6,3,0,0,1,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\ByteAsStorage.java,com.interview.bits.ByteAsStorage,useByteAsBoolean/1[boolean[]],false,5,2,1,1,0,6,2,23,0,7,1,2,0,0,2,0,0,6,2,12,9,9,2,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\ByteAsStorage.java,com.interview.bits.ByteAsStorage,main/1[java.lang.String[]],false,27,1,2,0,2,1,1,5,0,2,1,1,1,1,0,0,0,0,0,0,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NestedIterator.java,com.interview.misc.NestedInteger,getInteger/0,false,66,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NestedIterator.java,com.interview.misc.NestedInteger,getList/0,false,67,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NestedIterator.java,com.interview.misc.NestedInteger,isInteger/0,false,65,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\WallsAndGates.java,com.interview.graph.WallsAndGates$Cell,"Cell/2[int,int]",true,61,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestSubstringWithKDistinctCharacters.java,com.interview.string.LongestSubstringWithKDistinctCharacters,"lengthOfLongestSubstringKDistinctUsingMap/2[java.lang.String,int]",false,49,0,1,1,0,10,6,39,6,9,2,6,0,0,2,4,0,0,0,11,6,4,5,0,0,2,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestSubstringWithKDistinctCharacters.java,com.interview.string.LongestSubstringWithKDistinctCharacters,"lengthOfLongestSubstringKDistinct/2[java.lang.String,int]",false,20,1,1,1,0,9,3,29,2,7,2,3,0,0,2,5,0,0,0,12,8,2,4,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.BoxStacking,maxHeight/1[com.interview.dynamic.Dimension[]],false,30,3,2,1,1,9,2,28,1,8,1,2,1,1,4,0,0,0,0,5,13,3,4,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.BoxStacking,"createAllRotation/2[com.interview.dynamic.Dimension[],com.interview.dynamic.Dimension[]]",false,75,1,2,1,1,2,1,8,0,2,2,1,0,0,1,0,0,0,0,2,5,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.BoxStacking,main/1[java.lang.String[]],false,88,2,3,0,3,2,2,7,0,3,1,2,1,2,0,1,0,0,1,7,3,1,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructBSTFromPreOrderArray.java,com.interview.tree.ConstructBSTFromPreOrderArray,toBST/1[int[]],false,14,4,3,1,2,1,1,4,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructBSTFromPreOrderArray.java,com.interview.tree.ConstructBSTFromPreOrderArray,main/1[java.lang.String[]],false,40,3,5,0,5,1,4,9,0,4,1,4,1,2,0,0,0,0,0,6,4,0,0,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructBSTFromPreOrderArray.java,com.interview.tree.ConstructBSTFromPreOrderArray,toBSTIterative/1[int[]],false,20,2,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructBSTFromPreOrderArray.java,com.interview.tree.ConstructBSTFromPreOrderArray,"toBST/4[int[],int,int,com.interview.tree.Index]",false,24,4,4,2,2,4,1,14,3,1,4,1,1,0,0,0,0,0,0,0,4,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCache.java,com.interview.linklist.LRUCache,printCache/0,false,65,1,1,1,0,2,2,8,0,1,0,2,0,0,1,1,0,0,1,0,2,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCache.java,com.interview.linklist.LRUCache,LRUCache/1[int],true,22,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCache.java,com.interview.linklist.LRUCache,addIntoCache/1[int],false,41,1,2,1,1,4,3,23,2,2,1,3,0,0,0,2,0,0,0,0,10,0,1,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCache.java,com.interview.linklist.LRUCache,deleteFromCache/1[int],false,79,1,2,2,0,6,2,28,1,3,1,2,0,0,0,5,0,0,0,1,12,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCache.java,com.interview.linklist.LRUCache,main/1[java.lang.String[]],false,106,1,4,0,4,1,3,24,0,1,1,3,3,2,0,0,0,0,0,12,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCache.java,com.interview.linklist.LRUCache,containsInCache/1[int],false,75,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCache.java,com.interview.linklist.LRUCache,used/1[int],false,26,2,4,1,3,3,5,15,0,1,1,5,3,1,0,1,0,0,0,0,4,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MinimumInSortedRotatedArray.java,com.interview.binarysearch.MinimumInSortedRotatedArray,findMin/1[int[]],false,7,1,0,0,0,7,0,17,2,3,1,0,0,0,1,1,0,3,0,9,5,7,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\RadixSort.java,com.interview.sort.RadixSort,radixSort/1[int[]],false,38,2,3,1,2,2,2,6,0,2,1,2,2,1,1,0,0,0,0,2,3,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\RadixSort.java,com.interview.sort.RadixSort,main/1[java.lang.String[]],false,46,1,2,0,2,2,2,8,0,3,1,2,1,2,1,0,0,0,0,8,3,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\RadixSort.java,com.interview.sort.RadixSort,max/1[int[]],false,28,1,1,1,0,3,0,9,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\RadixSort.java,com.interview.sort.RadixSort,"countSort/2[int[],int]",false,5,1,1,1,0,5,0,17,0,6,2,0,0,0,4,0,0,3,0,11,9,9,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\BulbSwitcher.java,com.interview.misc.BulbSwitcher,bulbSwitch/1[int],false,12,0,0,0,0,2,0,7,1,1,1,0,0,0,1,0,0,0,0,2,1,2,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberofTriangles.java,com.interview.graph.NumberofTriangles,"isNeighbor/2[com.interview.graph.Vertex<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>]",false,44,1,3,1,2,3,2,8,2,0,2,2,0,0,1,0,0,0,0,0,0,0,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberofTriangles.java,com.interview.graph.NumberofTriangles,main/1[java.lang.String[]],false,53,2,4,0,4,1,3,13,0,2,1,3,1,3,0,0,0,0,0,16,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberofTriangles.java,com.interview.graph.NumberofTriangles,countTriangles/1[com.interview.graph.Graph<java.lang.Integer>],false,15,3,3,1,2,2,2,8,1,2,1,2,1,2,1,0,0,0,0,1,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberofTriangles.java,com.interview.graph.NumberofTriangles,"DFS/3[com.interview.graph.Vertex<java.lang.Integer>,java.util.Map<com.interview.graph.Vertex<java.lang.Integer>,java.lang.Boolean>,com.interview.graph.Vertex<java.lang.Integer>]",false,24,2,6,2,4,6,6,19,2,1,3,6,2,1,1,0,0,0,0,4,3,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphTraversal.java,com.interview.graph.GraphTraversal,DFS/1[com.interview.graph.Graph<java.lang.Integer>],false,14,3,3,0,3,3,4,8,0,1,1,4,1,1,1,0,0,0,0,0,1,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphTraversal.java,com.interview.graph.GraphTraversal,"DFSUtil/2[com.interview.graph.Vertex<java.lang.Integer>,java.util.Set<java.lang.Long>]",false,24,2,5,2,3,3,6,7,0,0,2,6,1,0,1,0,0,0,1,0,0,1,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphTraversal.java,com.interview.graph.GraphTraversal,main/1[java.lang.String[]],false,57,2,4,0,4,1,2,12,0,2,1,2,1,1,0,0,0,0,0,14,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphTraversal.java,com.interview.graph.GraphTraversal,BFS/1[com.interview.graph.Graph<java.lang.Integer>],false,33,2,4,1,3,6,9,20,0,3,1,9,0,0,3,1,0,0,1,1,3,1,5,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixArray.java,com.interview.suffixprefix.SuffixArray$SuffixSort,SuffixSort/1[char[]],true,15,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixArray.java,com.interview.suffixprefix.SuffixArray$SuffixSort,"compare/2[java.lang.Integer,java.lang.Integer]",false,20,0,0,0,0,9,0,16,4,0,2,0,0,0,1,5,0,0,0,5,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\TwoStringInterleavingToFormThird.java,com.interview.dynamic.TwoStringInterleavingToFormThird,"isInterleavedRecursive/6[char[],char[],char[],int,int,int]",false,9,2,2,1,1,9,1,9,3,0,6,1,1,0,0,6,0,2,0,4,0,4,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\TwoStringInterleavingToFormThird.java,com.interview.dynamic.TwoStringInterleavingToFormThird,main/1[java.lang.String[]],false,54,1,2,0,2,1,3,7,0,4,1,3,1,1,0,0,0,0,3,0,4,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\TwoStringInterleavingToFormThird.java,com.interview.dynamic.TwoStringInterleavingToFormThird,"isInterleaved/3[char[],char[],char[]]",false,23,2,1,1,0,12,0,28,2,4,3,0,0,0,2,9,0,2,0,17,8,13,4,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReverseAlternateNodeAndAppendAtEnd.java,com.interview.linklist.ReverseAlternateNodeAndAppendAtEnd,act/1[com.interview.linklist.Node],false,10,2,3,1,2,4,1,15,0,3,1,1,0,0,1,3,0,0,0,0,8,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReverseAlternateNodeAndAppendAtEnd.java,com.interview.linklist.ReverseAlternateNodeAndAppendAtEnd,main/1[java.lang.String[]],false,27,3,5,0,5,1,3,13,0,3,1,3,1,1,0,0,0,0,0,6,9,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LowestCommonAncestoryBinarySearchTree.java,com.interview.tree.LowestCommonAncestoryBinarySearchTree,"lowestCommonAncestor/3[com.interview.tree.Node,int,int]",false,16,2,2,1,1,3,3,11,3,0,3,3,1,0,0,0,0,0,0,0,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\GetKthPermutation.java,com.interview.misc.GetKthPermutation,"getPermutation/2[int,int]",false,11,1,2,1,1,7,8,29,1,8,2,8,1,1,4,2,0,1,0,10,10,8,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\GetKthPermutation.java,com.interview.misc.GetKthPermutation,main/1[java.lang.String[]],false,50,1,2,0,2,1,2,4,0,1,1,2,1,2,0,0,0,0,0,2,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\GetKthPermutation.java,com.interview.misc.GetKthPermutation,factorial/1[int],false,42,0,1,1,0,2,0,7,1,2,1,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\SkylineDrawing.java,com.interview.geometry.SkylineDrawing,getSkyline/1[int[][]],false,43,2,2,1,1,7,5,46,5,10,1,5,0,0,2,3,0,0,0,18,16,7,4,0,0,2,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\SkylineDrawing.java,com.interview.geometry.SkylineDrawing,main/1[java.lang.String[]],false,103,2,2,0,2,1,3,6,0,4,1,3,1,1,0,0,0,0,1,20,3,1,0,0,0,1,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.MyRunnable,MyRunnable/1[int],true,133,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.MyRunnable,run/0,false,137,0,0,0,0,2,2,10,0,0,0,2,0,0,0,0,1,0,4,1,0,3,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestSubstringWithoutRepetingCharacter.java,com.interview.string.LongestSubstringWithoutRepetingCharacter,main/1[java.lang.String[]],false,34,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,1,0,1,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestSubstringWithoutRepetingCharacter.java,com.interview.string.LongestSubstringWithoutRepetingCharacter,lengthOfLongestSubstring/1[java.lang.String],false,13,0,1,1,0,5,6,21,1,4,1,6,0,0,2,1,0,0,0,3,5,0,3,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NodesAtDistanceK.java,com.interview.tree.NodesAtDistanceK,"printNodes/3[com.interview.tree.Node,int,int]",false,24,2,4,2,2,7,3,30,5,1,3,3,2,1,0,6,0,0,0,11,2,5,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NodesAtDistanceK.java,com.interview.tree.NodesAtDistanceK,"findInChild/2[com.interview.tree.Node,int]",false,13,2,3,2,1,3,2,10,1,0,2,2,1,0,0,2,0,0,0,3,0,2,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NodesAtDistanceK.java,com.interview.tree.NodesAtDistanceK,main/1[java.lang.String[]],false,56,3,4,0,4,1,2,17,0,3,1,2,1,2,0,0,0,0,0,13,14,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BSTSearch.java,com.interview.tree.BSTSearch,main/1[java.lang.String[]],false,40,3,4,0,4,4,2,18,0,4,1,2,1,1,0,3,0,0,0,12,13,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BSTSearch.java,com.interview.tree.BSTSearch,"search/2[com.interview.tree.Node,int]",false,27,2,3,2,1,4,1,14,4,0,2,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\array\MultiplyAllFieldsExceptOwnPositionTest.java,com.interview.array.MultiplyAllFieldsExceptOwnPositionTest,testDifferentCases/0,false,9,3,0,0,0,1,2,12,0,7,0,2,0,0,0,0,0,0,0,18,7,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubsquareSurrounedByXs.java,com.interview.dynamic.SubsquareSurrounedByXs,main/1[java.lang.String[]],false,96,2,2,0,2,1,2,9,0,4,1,2,1,1,0,0,0,0,0,0,4,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubsquareSurrounedByXs.java,com.interview.dynamic.SubsquareSurrounedByXs,findSubSquare/1[char[][]],false,36,2,2,1,1,21,3,55,1,12,1,3,0,0,9,8,0,0,2,39,23,15,4,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.Data,getUpdate/0,false,19,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.Data,getDomain/0,false,22,0,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromLevelOrderInOrder.java,com.interview.tree.ConstructTreeFromLevelOrderInOrder,"constructTree/4[int[],int[],int,int]",false,31,3,6,2,4,2,4,13,2,5,4,4,3,2,0,0,0,0,0,5,7,4,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromLevelOrderInOrder.java,com.interview.tree.ConstructTreeFromLevelOrderInOrder,"extractArray/4[int[],int[],int,int]",false,19,2,2,1,1,3,1,11,1,4,4,1,1,1,1,1,0,0,0,4,5,2,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromLevelOrderInOrder.java,com.interview.tree.ConstructTreeFromLevelOrderInOrder,"search/4[int[],int,int,int]",false,45,2,4,3,1,4,1,15,4,1,4,1,1,0,0,1,0,1,0,4,1,4,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromLevelOrderInOrder.java,com.interview.tree.ConstructTreeFromLevelOrderInOrder,"constructTree/2[int[],int[]]",false,15,3,2,1,1,1,1,3,1,0,2,1,1,3,0,0,0,0,0,2,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromLevelOrderInOrder.java,com.interview.tree.ConstructTreeFromLevelOrderInOrder,main/1[java.lang.String[]],false,59,4,6,0,6,1,3,10,0,6,1,3,1,4,0,0,0,0,0,14,6,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MonotonicallyIncreasingFunctionBecomesPositive.java,com.interview.binarysearch.MonotonicallyIncreasingFunctionBecomesPositive,"binarySearch/2[int,int]",false,20,1,2,1,1,7,1,19,3,1,2,1,1,1,1,0,0,2,0,12,4,9,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MonotonicallyIncreasingFunctionBecomesPositive.java,com.interview.binarysearch.MonotonicallyIncreasingFunctionBecomesPositive,findPoint/0,false,12,1,3,1,2,2,2,7,1,1,0,2,2,2,1,0,0,0,0,4,2,2,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MonotonicallyIncreasingFunctionBecomesPositive.java,com.interview.binarysearch.MonotonicallyIncreasingFunctionBecomesPositive,f/1[int],false,8,0,2,2,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,2,0,4,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MonotonicallyIncreasingFunctionBecomesPositive.java,com.interview.binarysearch.MonotonicallyIncreasingFunctionBecomesPositive,main/1[java.lang.String[]],false,39,1,2,0,2,1,2,4,0,1,1,2,1,3,0,0,0,0,0,0,1,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\FloorAndCeilingSortedArray.java,com.interview.binarysearch.FloorAndCeilingSortedArray,"ceiling/2[int[],int]",false,24,1,1,1,0,7,0,17,2,3,2,0,0,0,1,2,0,3,0,8,5,6,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\FloorAndCeilingSortedArray.java,com.interview.binarysearch.FloorAndCeilingSortedArray,"floor/2[int[],int]",false,8,1,1,1,0,7,0,17,2,3,2,0,0,0,1,2,0,3,0,8,5,7,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\FloorAndCeilingSortedArray.java,com.interview.binarysearch.FloorAndCeilingSortedArray,main/1[java.lang.String[]],false,40,1,3,0,3,1,3,6,0,2,1,3,2,1,0,0,0,0,0,8,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReverseKNodes.java,com.interview.linklist.ReverseKNodes,main/1[java.lang.String[]],false,31,3,5,0,5,1,3,15,0,3,1,3,1,1,0,0,0,0,0,9,12,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReverseKNodes.java,com.interview.linklist.ReverseKNodes,"reverse/2[com.interview.linklist.Node,int]",false,11,2,3,2,1,4,1,18,2,4,2,1,1,0,1,2,0,0,0,1,9,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\HammingDistanceBetweenPair.java,com.interview.misc.HammingDistanceBetweenPair,main/1[java.lang.String[]],false,29,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,4,0,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\HammingDistanceBetweenPair.java,com.interview.misc.HammingDistanceBetweenPair,hammingDistance/1[java.lang.String[]],false,11,0,1,1,0,4,2,18,1,5,1,2,0,0,2,1,0,0,0,5,6,1,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToDoubleLinkList.java,com.interview.tree.BinaryTreeToDoubleLinkList,toDoubleLL/1[com.interview.tree.Node],false,8,3,3,1,2,1,1,4,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToDoubleLinkList.java,com.interview.tree.BinaryTreeToDoubleLinkList,"toDoubleLL/2[com.interview.tree.Node,com.interview.tree.NodeRef]",false,13,3,3,2,1,3,1,15,1,0,2,1,1,0,0,2,0,0,0,0,4,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToDoubleLinkList.java,com.interview.tree.BinaryTreeToDoubleLinkList,print/1[com.interview.tree.Node],false,28,1,1,1,0,3,2,14,0,1,1,2,0,0,2,2,0,0,2,0,5,2,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeToDoubleLinkList.java,com.interview.tree.BinaryTreeToDoubleLinkList,main/1[java.lang.String[]],false,43,3,5,0,5,1,3,15,0,3,1,3,2,2,0,0,0,0,0,8,11,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeMaximumPathSum.java,com.interview.tree.BinaryTreeMaximumPathSum,maxPathSum/1[com.interview.tree.Node],false,18,2,1,0,1,1,1,5,1,0,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeMaximumPathSum.java,com.interview.tree.BinaryTreeMaximumPathSum,maxPathSumUtil/1[com.interview.tree.Node],false,24,2,3,2,1,4,2,15,2,2,1,2,1,0,0,1,0,0,0,5,5,2,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\MorrisTraversal.java,com.interview.tree.MorrisTraversal,inorder/1[com.interview.tree.Node],false,14,1,1,1,0,6,1,24,0,2,1,1,0,0,2,5,0,0,2,0,8,2,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\MorrisTraversal.java,com.interview.tree.MorrisTraversal,main/1[java.lang.String[]],false,66,3,5,0,5,1,4,15,0,3,1,4,2,1,0,0,0,0,0,7,10,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\MorrisTraversal.java,com.interview.tree.MorrisTraversal,preorder/1[com.interview.tree.Node],false,42,1,1,1,0,6,1,24,0,2,1,1,0,0,2,5,0,0,2,0,8,2,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\FancyShuffle.java,com.interview.recursion.FancyShuffle,"shuffleUtil/5[char[],int[],char[],int,char]",false,49,3,3,2,1,6,1,20,3,1,5,1,1,0,1,3,0,0,0,3,2,1,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\FancyShuffle.java,com.interview.recursion.FancyShuffle,main/1[java.lang.String[]],false,71,1,2,0,2,2,3,7,0,2,1,3,1,2,1,0,0,0,1,0,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\FancyShuffle.java,com.interview.recursion.FancyShuffle,shuffle/1[char[]],false,20,3,2,1,1,4,7,21,1,7,1,7,1,1,2,1,0,0,0,5,9,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\SmallestNumberGreaterThanGiveNumberIncreasingSequence.java,com.interview.number.SmallestNumberGreaterThanGiveNumberIncreasingSequence,"getNextInt/3[int[],int[],int]",false,27,2,5,2,3,9,3,40,8,4,3,3,3,1,0,5,0,1,0,17,6,13,2,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\SmallestNumberGreaterThanGiveNumberIncreasingSequence.java,com.interview.number.SmallestNumberGreaterThanGiveNumberIncreasingSequence,"fillRestOfArray/3[int[],int,int]",false,67,1,2,2,0,2,0,6,0,1,3,0,0,0,1,0,0,0,0,0,2,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\SmallestNumberGreaterThanGiveNumberIncreasingSequence.java,com.interview.number.SmallestNumberGreaterThanGiveNumberIncreasingSequence,main/1[java.lang.String[]],false,81,1,2,0,2,2,2,8,0,3,1,2,1,3,1,0,0,0,0,2,3,0,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\SmallestNumberGreaterThanGiveNumberIncreasingSequence.java,com.interview.number.SmallestNumberGreaterThanGiveNumberIncreasingSequence,"getHigherNumber/3[int,int,int]",false,74,0,1,1,0,2,0,6,2,0,3,0,0,0,0,0,0,0,0,3,0,3,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\SmallestNumberGreaterThanGiveNumberIncreasingSequence.java,com.interview.number.SmallestNumberGreaterThanGiveNumberIncreasingSequence,getNextInt/1[int[]],false,15,2,3,1,2,2,2,12,2,2,1,2,2,2,0,0,0,1,0,6,3,3,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.QueueHandle,getNextData/0,false,89,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\RandomCountrySelectionByPopluation.java,com.interview.random.RandomCountrySelectionByPopluation,main/1[java.lang.String[]],false,33,1,2,0,2,2,2,7,0,3,1,2,1,1,1,0,0,0,0,8,3,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\RandomCountrySelectionByPopluation.java,com.interview.random.RandomCountrySelectionByPopluation,getRandom/1[int[]],false,5,1,1,1,0,7,1,26,1,7,1,1,0,0,2,1,0,4,0,15,13,13,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeFromParentRepresentation.java,com.interview.tree.BinaryTreeFromParentRepresentation,create/1[int[]],false,15,2,2,1,1,5,0,23,1,6,1,0,0,0,2,2,0,0,0,3,11,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTreeFromParentRepresentation.java,com.interview.tree.BinaryTreeFromParentRepresentation,main/1[java.lang.String[]],false,40,3,5,0,5,1,4,9,0,4,1,4,1,1,0,0,0,0,0,7,4,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromInOrderPreOrder.java,com.interview.tree.ConstructTreeFromInOrderPreOrder,"createTree/2[int[],int[]]",false,17,3,8,7,1,1,1,5,1,1,2,1,1,1,0,0,0,0,0,3,2,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromInOrderPreOrder.java,com.interview.tree.ConstructTreeFromInOrderPreOrder,"createTree/4[int[],int[],int,int]",false,23,3,4,2,2,4,2,16,2,2,4,2,1,0,1,1,0,0,0,2,4,2,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"updateSegmentTreeRangeLazy/6[int[],int[],int[],int,int,int]",false,81,2,2,1,1,1,1,3,0,0,6,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"updateSegmentTreeRange/7[int[],int,int,int,int,int,int]",false,125,2,3,2,1,5,2,13,2,1,7,2,1,0,0,1,0,1,0,10,3,11,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"updateSegmentTreeRange/5[int[],int[],int,int,int]",false,64,2,2,1,1,2,1,6,0,1,5,1,1,1,1,0,0,0,0,3,2,1,1,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"rangeMinimumQueryLazy/7[int[],int[],int,int,int,int,int]",false,196,2,3,2,1,8,2,21,4,1,7,2,1,0,0,2,0,1,0,12,5,11,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,createSegmentTree/1[int[]],false,37,3,2,1,1,2,2,10,1,4,1,2,1,1,1,0,0,0,0,6,5,3,1,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,main/1[java.lang.String[]],false,232,2,7,0,7,8,6,19,0,6,1,6,6,7,0,7,0,0,0,47,6,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"rangeMinimumQuery/4[int[],int,int,int]",false,74,2,2,1,1,1,1,3,1,0,4,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,7,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"updateSegmentTreeRangeLazy/8[int[],int[],int,int,int,int,int,int]",false,155,2,3,2,1,9,2,28,3,1,8,2,1,0,0,3,0,1,0,20,9,19,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"constructMinSegmentTree/5[int[],int[],int,int,int]",false,92,2,3,2,1,2,2,10,1,1,5,2,1,0,0,1,0,1,0,10,3,11,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"updateSegmentTree/6[int[],int,int,int,int,int]",false,103,2,3,2,1,4,2,13,2,1,6,2,1,0,0,1,0,1,0,10,3,11,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"rangeMinimumQuery/6[int[],int,int,int,int,int]",false,141,2,3,2,1,5,2,10,3,1,6,2,1,0,0,0,0,1,0,6,1,7,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"rangeMinimumQueryLazy/5[int[],int[],int,int,int]",false,88,2,2,1,1,1,1,3,1,0,5,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,8,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTreeMinimumRangeQuery.java,com.interview.tree.SegmentTreeMinimumRangeQuery,"updateSegmentTree/4[int[],int[],int,int]",false,56,2,2,1,1,1,1,4,0,0,4,1,1,1,0,0,0,0,0,3,1,1,0,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MthNumberInNSizeArray.java,com.interview.number.MthNumberInNSizeArray,"nthUnused/2[boolean[],int]",false,62,1,1,1,0,4,0,12,1,2,2,0,0,0,1,1,0,0,0,2,2,0,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MthNumberInNSizeArray.java,com.interview.number.MthNumberInNSizeArray,"find/2[int,int]",false,14,3,2,1,1,1,1,6,1,2,2,1,1,2,0,0,0,0,0,1,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MthNumberInNSizeArray.java,com.interview.number.MthNumberInNSizeArray,main/1[java.lang.String[]],false,83,1,2,0,2,2,4,10,0,6,1,4,1,3,1,0,0,0,2,3,5,1,1,0,0,1,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MthNumberInNSizeArray.java,com.interview.number.MthNumberInNSizeArray,"binarySearch/4[int,int,int,int]",false,33,0,1,1,0,5,0,17,1,3,4,0,0,0,1,0,0,3,0,6,5,10,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MthNumberInNSizeArray.java,com.interview.number.MthNumberInNSizeArray,"find/5[int[],boolean[],int,int,int]",false,21,3,7,2,5,2,5,11,1,2,5,5,5,1,0,1,0,1,0,7,4,8,1,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MthNumberInNSizeArray.java,com.interview.number.MthNumberInNSizeArray,"fillupRemaining/3[int[],boolean[],int]",false,48,2,1,1,0,4,0,13,0,2,3,0,0,0,2,0,0,0,0,2,4,1,3,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MthNumberInNSizeArray.java,com.interview.number.MthNumberInNSizeArray,factorial/1[int],false,75,0,1,1,0,2,0,7,1,2,1,0,0,0,1,0,0,0,0,2,3,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.ThreadPoolManager,ThreadPoolManager/1[int],true,35,0,0,0,0,1,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MedianOfTwoSortedArrayOfDifferentLength.java,com.interview.binarysearch.MedianOfTwoSortedArrayOfDifferentLength,main/1[java.lang.String[]],false,62,2,2,0,2,1,1,6,0,3,1,1,1,1,0,0,0,0,0,11,3,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MedianOfTwoSortedArrayOfDifferentLength.java,com.interview.binarysearch.MedianOfTwoSortedArrayOfDifferentLength,"findMedianSortedArrays/2[int[],int[]]",false,20,2,3,2,1,11,3,32,3,10,2,3,1,0,1,5,0,8,0,13,12,13,3,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfBinaryWithoutConsecutive1s.java,com.interview.dynamic.CountNumberOfBinaryWithoutConsecutive1s,count/1[int],false,11,1,1,1,0,2,0,11,1,3,1,0,0,0,1,0,0,0,0,10,7,7,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfBinaryWithoutConsecutive1s.java,com.interview.dynamic.CountNumberOfBinaryWithoutConsecutive1s,countSimple/1[int],false,26,0,0,0,0,2,0,10,1,4,1,0,0,0,1,0,0,0,0,3,6,2,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfBinaryWithoutConsecutive1s.java,com.interview.dynamic.CountNumberOfBinaryWithoutConsecutive1s,main/1[java.lang.String[]],false,39,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestSameSumSpan.java,com.interview.array.LongestSameSumSpan,"longestSpan/2[int[],int[]]",false,20,1,1,1,0,4,4,21,1,6,2,4,0,0,1,1,0,0,1,6,9,2,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestSameSumSpan.java,com.interview.array.LongestSameSumSpan,main/1[java.lang.String[]],false,41,1,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,12,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ExpressionEvaluation.java,com.interview.dynamic.ExpressionEvaluation,"evaluate/2[char[],int]",false,19,4,5,1,4,14,5,42,2,14,2,5,1,1,10,3,0,1,1,21,18,13,6,0,0,1,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ExpressionEvaluation.java,com.interview.dynamic.ExpressionEvaluation,main/1[java.lang.String[]],false,94,1,2,0,2,1,3,4,0,1,1,3,1,2,0,0,0,0,1,1,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ExpressionEvaluation.java,com.interview.dynamic.ExpressionEvaluation,"operate/3[char,int,int]",false,70,0,1,1,0,5,0,14,4,0,3,0,0,0,0,0,0,0,0,0,0,4,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,pop/0,false,44,0,1,1,0,4,0,13,1,1,0,0,0,0,0,3,0,0,0,4,4,1,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,top/0,false,57,0,1,1,0,2,0,6,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,push/1[int],false,15,1,2,1,1,3,1,16,1,1,1,1,0,0,0,2,0,0,0,2,7,1,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,deleteMiddle/0,false,69,1,1,1,0,7,0,35,3,5,0,0,0,0,0,6,0,0,0,3,14,1,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,size/0,false,40,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,middle/0,false,63,0,1,1,0,2,0,6,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,hasMore/0,false,32,0,0,0,0,2,0,8,2,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\StackWithLinkListMiddleOperation.java,com.interview.linklist.StackWithLinkListMiddleOperation,main/1[java.lang.String[]],false,106,1,6,0,6,1,6,27,0,1,1,6,5,1,0,0,0,0,12,6,1,11,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\RotateImage.java,com.interview.multiarray.RotateImage,rotate/1[int[][]],false,14,1,1,1,0,3,0,14,0,4,1,0,0,0,2,0,0,0,0,3,8,11,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\RotateImage.java,com.interview.multiarray.RotateImage,main/1[java.lang.String[]],false,38,1,3,0,3,1,2,6,0,2,1,2,2,1,0,0,0,0,0,25,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\RotateImage.java,com.interview.multiarray.RotateImage,print/1[int[][]],false,29,1,1,1,0,3,1,8,0,2,1,1,0,0,2,0,0,0,2,2,2,1,2,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\VerticalOrder.java,com.interview.tree.VerticalOrder,verticalOrder/1[com.interview.tree.Node],false,12,1,1,1,0,7,13,39,2,10,1,13,0,0,2,4,0,0,0,5,14,2,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SmallestSubarrayWithAtleastKSum.java,com.interview.array.SmallestSubarrayWithAtleastKSum,main/1[java.lang.String[]],false,47,2,2,0,2,1,1,5,0,2,1,1,1,1,0,0,0,0,0,11,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SmallestSubarrayWithAtleastKSum.java,com.interview.array.SmallestSubarrayWithAtleastKSum,"shortestSubarray/2[int[],int]",false,8,1,1,1,0,9,1,36,1,7,2,1,0,0,4,1,0,0,0,18,21,10,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\FindNumberOccurringOnceOtherNumbers3Times.java,com.interview.bits.FindNumberOccurringOnceOtherNumbers3Times,main/1[java.lang.String[]],false,20,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,10,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\FindNumberOccurringOnceOtherNumbers3Times.java,com.interview.bits.FindNumberOccurringOnceOtherNumbers3Times,getNumberOccurringOnce/1[int[]],false,8,1,1,1,0,3,0,11,1,4,1,0,0,0,2,0,0,2,0,7,6,4,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NextHigherAndNextLowerWithSameNumberBits.java,com.interview.bits.NextHigherAndNextLowerWithSameNumberBits,nextHigher/1[int],false,8,0,1,1,0,5,0,20,1,4,1,0,0,0,2,1,0,7,0,12,10,8,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NextHigherAndNextLowerWithSameNumberBits.java,com.interview.bits.NextHigherAndNextLowerWithSameNumberBits,nextLower/1[int],false,32,0,1,1,0,6,0,23,2,4,1,0,0,0,2,2,0,5,0,12,10,6,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NextHigherAndNextLowerWithSameNumberBits.java,com.interview.bits.NextHigherAndNextLowerWithSameNumberBits,main/1[java.lang.String[]],false,57,1,3,0,3,1,3,5,0,1,1,3,2,1,0,0,0,0,0,2,1,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\NTMatch.java,com.interview.string.NTMatch,match/1[char[]],false,20,2,2,1,1,5,1,21,4,5,1,1,1,1,1,2,0,2,0,8,6,7,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\NTMatch.java,com.interview.string.NTMatch,buildKMP/1[char[]],false,46,2,1,1,0,4,0,24,1,3,1,0,0,0,1,2,0,0,0,8,8,1,3,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\NTMatch.java,com.interview.string.NTMatch,main/1[java.lang.String[]],false,71,1,2,0,2,1,3,4,0,1,1,3,1,2,0,0,0,0,1,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\UniquePartitionOfInteger.java,com.interview.number.UniquePartitionOfInteger,partition/1[int],false,13,1,2,1,1,1,1,4,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\UniquePartitionOfInteger.java,com.interview.number.UniquePartitionOfInteger,main/1[java.lang.String[]],false,34,1,2,0,2,1,1,4,0,1,1,1,1,2,0,0,0,0,0,1,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\UniquePartitionOfInteger.java,com.interview.number.UniquePartitionOfInteger,"partition/3[int,int,java.util.List<java.lang.Integer>]",false,18,1,3,2,1,5,8,15,2,2,3,8,1,0,1,1,0,0,1,4,1,3,1,0,0,1,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\SortArrayByFrequence.java,com.interview.sort.SortArrayByFrequence$FrequenceComparator,"compare/2[java.lang.Integer,java.lang.Integer]",false,24,1,0,0,0,4,1,13,3,2,2,1,0,0,0,0,0,0,0,4,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\SortArrayByFrequence.java,com.interview.sort.SortArrayByFrequence$FrequenceComparator,"FrequenceComparator/1[java.util.Map<java.lang.Integer,com.interview.sort.SortArrayByFrequence.SortNode>]",true,20,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Knapsack01.java,com.interview.dynamic.Knapsack01$Index,hashCode/0,false,67,0,0,0,0,1,0,5,1,1,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Knapsack01.java,com.interview.dynamic.Knapsack01$Index,equals/1[java.lang.Object],false,55,1,0,0,0,6,1,7,4,1,1,1,0,0,0,5,0,0,0,0,1,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.SimpleSleepTask,addDependency/1[com.interview.multithreaded.Task],false,86,1,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.SimpleSleepTask,"SimpleSleepTask/2[java.lang.String,int]",true,81,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.SimpleSleepTask,name/0,false,91,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.SimpleSleepTask,execute/0,false,101,0,0,0,0,2,3,10,0,0,0,3,0,0,0,0,1,0,2,0,0,2,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.SimpleSleepTask,dependencies/0,false,96,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountPathSum.java,com.interview.tree.CountPathSum,"countPathSum/4[com.interview.tree.Node,int,java.util.Map<java.lang.Integer,java.lang.Integer>,int]",false,16,2,3,2,1,2,3,11,2,1,4,3,1,0,0,1,0,0,0,6,3,4,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountPathSum.java,com.interview.tree.CountPathSum,"pathSum/2[com.interview.tree.Node,int]",false,10,2,1,0,1,1,2,5,1,1,2,2,1,1,0,0,0,0,0,3,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\DuplicateWithinkIndices.java,com.interview.array.DuplicateWithinkIndices,"duplicate/2[int[],int]",false,12,1,1,1,0,4,3,13,2,2,2,3,0,0,1,0,0,0,0,1,2,1,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\DuplicateWithinkIndices.java,com.interview.array.DuplicateWithinkIndices,main/1[java.lang.String[]],false,26,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,8,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\InsertionSortLinkList.java,com.interview.linklist.InsertionSortLinkList,"insert/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,15,1,1,1,0,5,0,20,2,2,2,0,0,0,1,3,0,0,0,0,8,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\InsertionSortLinkList.java,com.interview.linklist.InsertionSortLinkList,main/1[java.lang.String[]],false,48,3,5,0,5,1,3,13,0,3,1,3,1,2,0,0,0,0,0,6,10,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\InsertionSortLinkList.java,com.interview.linklist.InsertionSortLinkList,sort/1[com.interview.linklist.Node],false,35,2,2,1,1,2,1,12,1,3,1,1,1,1,1,1,0,0,0,0,7,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\LongestAbsolutePath.java,com.interview.recursion.LongestAbsolutePath,lengthLongestPath/1[java.lang.String],false,27,2,3,0,3,3,5,12,2,3,1,5,1,1,1,1,0,0,2,4,3,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\LongestAbsolutePath.java,com.interview.recursion.LongestAbsolutePath,"lengthLongestPath/3[java.util.Queue<com.interview.recursion.LongestAbsolutePath.Node>,com.interview.recursion.LongestAbsolutePath.Node,int]",false,40,2,3,2,1,5,6,20,3,2,3,6,1,0,1,0,0,0,0,2,3,2,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\LongestAbsolutePath.java,com.interview.recursion.LongestAbsolutePath,lengthLongestPathIterative/1[java.lang.String],false,84,0,0,0,0,8,12,37,2,8,1,12,0,0,3,2,0,0,2,8,12,3,3,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConnectNodesAtSameLevel.java,com.interview.tree.ConnectNodesAtSameLevel,connect/1[com.interview.tree.Node],false,16,1,1,1,0,10,0,33,1,2,1,0,0,0,2,9,0,0,0,0,12,0,4,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConnectNodesAtSameLevel.java,com.interview.tree.ConnectNodesAtSameLevel,main/1[java.lang.String[]],false,51,3,4,0,4,1,2,14,0,3,1,2,1,1,0,0,0,0,0,8,11,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RepeatedDnaSequence.java,com.interview.bits.RepeatedDnaSequence,main/1[java.lang.String[]],false,96,1,2,0,2,1,2,5,0,2,1,2,1,4,0,0,0,0,1,0,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RepeatedDnaSequence.java,com.interview.bits.RepeatedDnaSequence,createString/1[int],false,51,1,2,1,1,2,3,7,1,2,1,3,1,1,1,0,0,1,0,3,2,2,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RepeatedDnaSequence.java,com.interview.bits.RepeatedDnaSequence,findRepeatedDnaSequences/1[java.lang.String],false,21,1,3,1,2,6,8,25,2,6,1,8,2,3,2,0,0,0,0,5,8,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RepeatedDnaSequence.java,com.interview.bits.RepeatedDnaSequence,getVal/1[char],false,66,0,1,1,0,5,0,14,4,0,1,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RepeatedDnaSequence.java,com.interview.bits.RepeatedDnaSequence,"add/2[int,char]",false,59,1,2,1,1,1,1,6,1,1,2,1,1,1,0,0,0,0,0,1,3,1,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RepeatedDnaSequence.java,com.interview.bits.RepeatedDnaSequence,getChar/1[int],false,81,0,1,1,0,5,0,14,4,0,1,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\JarvisMarchConvexHull.java,com.interview.geometry.JarvisMarchConvexHull,"distance/3[com.interview.geometry.JarvisMarchConvexHull.Point,com.interview.geometry.JarvisMarchConvexHull.Point,com.interview.geometry.JarvisMarchConvexHull.Point]",false,97,1,1,1,0,1,1,7,1,4,3,1,0,0,0,0,0,0,0,0,4,10,0,0,0,0,17,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\JarvisMarchConvexHull.java,com.interview.geometry.JarvisMarchConvexHull,findConvexHull/1[com.interview.geometry.JarvisMarchConvexHull.Point[]],false,40,2,2,0,2,11,4,43,1,8,1,4,2,1,4,3,0,0,0,7,13,0,4,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\JarvisMarchConvexHull.java,com.interview.geometry.JarvisMarchConvexHull,"crossProduct/3[com.interview.geometry.JarvisMarchConvexHull.Point,com.interview.geometry.JarvisMarchConvexHull.Point,com.interview.geometry.JarvisMarchConvexHull.Point]",false,111,1,1,1,0,1,0,7,1,4,3,0,0,0,0,0,0,0,0,0,4,7,0,0,0,0,30,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NumberOfWaysToScorePoints.java,com.interview.dynamic.NumberOfWaysToScorePoints,"version1/2[int[],int]",false,13,1,1,1,0,4,0,12,1,3,2,0,0,0,2,0,0,0,0,5,5,2,3,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NumberOfWaysToScorePoints.java,com.interview.dynamic.NumberOfWaysToScorePoints,"version2/2[int[],int]",false,28,1,1,1,0,4,0,12,1,3,2,0,0,0,2,0,0,0,0,5,5,2,3,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NumberOfWaysToScorePoints.java,com.interview.dynamic.NumberOfWaysToScorePoints,main/1[java.lang.String[]],false,41,1,3,0,3,1,3,6,0,2,1,3,2,1,0,0,0,0,0,5,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LoopInLinkList.java,com.interview.linklist.LoopInLinkList,main/1[java.lang.String[]],false,36,3,5,0,5,1,4,22,0,5,1,4,1,1,0,0,0,0,0,11,17,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LoopInLinkList.java,com.interview.linklist.LoopInLinkList,hasCycle/1[com.interview.linklist.Node],false,16,1,1,1,0,6,0,20,3,2,1,0,0,0,1,5,0,0,0,0,4,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,Vertex/1[long],true,107,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,getAdjacentVertexes/0,false,132,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,setData/1[T],false,115,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,getData/0,false,119,1,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,toString/0,false,128,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,"addAdjacentVertex/2[com.interview.graph.Edge<T>,com.interview.graph.Vertex<T>]",false,123,3,0,0,0,1,2,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,hashCode/0,false,145,0,0,0,0,1,0,6,1,2,0,0,0,0,0,0,0,2,0,3,3,3,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,getId/0,false,111,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,getDegree/0,false,140,0,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,equals/1[java.lang.Object],false,153,1,0,0,0,5,1,8,5,1,1,1,0,0,0,4,0,0,0,0,1,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Vertex,getEdges/0,false,136,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SubtringWithConcatentationOfWords.java,com.interview.string.SubtringWithConcatentationOfWords,"set/2[java.util.Map<java.lang.String,java.lang.Integer>,java.lang.String[]]",false,58,0,1,1,0,3,3,10,0,0,2,3,0,0,1,0,0,0,0,2,0,1,2,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SubtringWithConcatentationOfWords.java,com.interview.string.SubtringWithConcatentationOfWords,"findSubstring/2[java.lang.String,java.lang.String[]]",false,13,1,1,0,1,9,7,45,1,12,2,7,1,1,2,4,0,0,0,5,14,6,4,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SortedOrderPrintCompleteTreeArray.java,com.interview.tree.SortedOrderPrintCompleteTreeArray,"print/2[int[],int]",false,12,2,3,2,1,2,2,8,1,0,2,2,1,0,0,0,0,0,0,4,0,4,1,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SortedOrderPrintCompleteTreeArray.java,com.interview.tree.SortedOrderPrintCompleteTreeArray,print/1[int[]],false,21,2,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SortedOrderPrintCompleteTreeArray.java,com.interview.tree.SortedOrderPrintCompleteTreeArray,main/1[java.lang.String[]],false,25,1,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,5,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RotationWithMaxSum.java,com.interview.array.RotationWithMaxSum,maxSum/1[int[]],false,15,1,1,1,0,3,1,14,1,5,1,1,0,0,2,0,0,0,0,5,9,4,1,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RotationWithMaxSum.java,com.interview.array.RotationWithMaxSum,main/1[java.lang.String[]],false,32,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,10,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp$SetSizeComparator,"compare/2[java.util.Set<java.lang.Integer>,java.util.Set<java.lang.Integer>]",false,52,0,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RealTimeCounterUsingCircularQueue.java,com.interview.stackqueue.RealTimeCounterUsingCircularQueue,main/1[java.lang.String[]],false,68,1,3,0,3,1,3,15,0,1,1,3,2,1,0,0,0,0,0,12,1,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RealTimeCounterUsingCircularQueue.java,com.interview.stackqueue.RealTimeCounterUsingCircularQueue,add/1[long],false,21,1,2,1,1,6,6,34,2,4,1,6,0,0,1,1,0,0,0,3,9,8,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RealTimeCounterUsingCircularQueue.java,com.interview.stackqueue.RealTimeCounterUsingCircularQueue,getCount/1[int],false,55,1,1,1,0,3,3,13,1,1,1,3,0,0,1,0,0,0,0,1,2,2,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PhoneDialNumberOfCombinationOfSizeK.java,com.interview.dynamic.PhoneDialNumberOfCombinationOfSizeK,"updateMap/7[int[][],int,int,int,int,java.util.Map<java.lang.Integer,java.lang.Integer>,java.util.Map<java.lang.Integer,java.lang.Integer>]",false,76,1,1,1,0,7,2,11,1,1,7,2,0,0,0,1,0,0,0,4,3,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PhoneDialNumberOfCombinationOfSizeK.java,com.interview.dynamic.PhoneDialNumberOfCombinationOfSizeK,"numberOfCombination/2[int,int[][]]",false,24,2,3,1,2,11,6,32,1,8,2,6,2,2,6,2,0,0,0,10,9,0,4,0,0,0,27,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PhoneDialNumberOfCombinationOfSizeK.java,com.interview.dynamic.PhoneDialNumberOfCombinationOfSizeK,"copyMap/2[java.util.Map<java.lang.Integer,java.lang.Integer>,java.util.Map<java.lang.Integer,java.lang.Integer>]",false,59,0,1,1,0,2,3,6,0,1,2,3,0,0,1,0,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PhoneDialNumberOfCombinationOfSizeK.java,com.interview.dynamic.PhoneDialNumberOfCombinationOfSizeK,"findNeighborsAndPopulateMap/5[int,int,int[][],java.util.Map<java.lang.Integer,java.lang.Integer>,java.util.Map<java.lang.Integer,java.lang.Integer>]",false,67,2,2,1,1,1,1,7,0,0,5,1,1,1,0,0,0,0,0,4,0,4,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PhoneDialNumberOfCombinationOfSizeK.java,com.interview.dynamic.PhoneDialNumberOfCombinationOfSizeK,main/1[java.lang.String[]],false,89,1,2,0,2,1,2,5,0,2,1,2,1,3,0,0,0,0,0,13,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CloneDirectedGraph.java,com.interview.graph.CloneDirectedGraph,clone/1[com.interview.graph.Graph<T>],false,18,4,4,0,4,6,5,20,2,2,1,5,0,0,2,2,0,0,2,1,2,0,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CloneDirectedGraph.java,com.interview.graph.CloneDirectedGraph,"clone/2[com.interview.graph.Vertex<T>,java.util.Map<com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>>]",false,39,4,7,0,7,4,9,20,0,3,2,9,0,0,1,0,0,0,0,1,5,1,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CloneDirectedGraph.java,com.interview.graph.CloneDirectedGraph,main/1[java.lang.String[]],false,71,2,4,0,4,1,3,14,0,3,1,3,0,0,0,0,0,0,0,16,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CloneDirectedGraph.java,com.interview.graph.CloneDirectedGraph,"updateMap/4[java.util.Map<com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>>,com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>,com.interview.graph.Edge<T>]",false,58,3,6,0,6,2,7,13,0,4,4,7,0,0,0,0,0,0,0,0,4,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PrintTwoBSTInSortedForm.java,com.interview.tree.PrintTwoBSTInSortedForm,"print/2[com.interview.tree.Node,com.interview.tree.Node]",false,18,1,1,1,0,15,5,49,0,2,2,5,0,0,1,8,0,0,0,0,16,0,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PrintTwoBSTInSortedForm.java,com.interview.tree.PrintTwoBSTInSortedForm,main/1[java.lang.String[]],false,68,3,4,0,4,1,2,20,0,4,1,2,1,1,0,0,0,0,0,13,17,0,0,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubRectangularMatrixWithMaximumSum.java,com.interview.dynamic.SubRectangularMatrixWithMaximumSum$KadaneResult,"KadaneResult/3[int,int,int]",true,69,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\ZAlgorithm.java,com.interview.string.ZAlgorithm,main/1[java.lang.String[]],false,78,1,2,0,2,1,3,7,0,4,1,3,1,2,0,0,0,0,2,0,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\ZAlgorithm.java,com.interview.string.ZAlgorithm,"matchPattern/2[char[],char[]]",false,54,2,2,1,1,5,2,22,1,4,2,2,1,1,3,1,0,0,0,4,8,2,2,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\ZAlgorithm.java,com.interview.string.ZAlgorithm,calculateZ/1[char[]],false,20,2,1,1,0,8,0,30,1,5,1,0,0,0,3,2,0,0,0,4,11,7,4,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NumberToWord.java,com.interview.misc.NumberToWord,hundredsPart/1[int],false,43,1,3,1,2,4,4,20,2,3,1,4,2,2,0,2,0,1,1,6,3,3,3,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NumberToWord.java,com.interview.misc.NumberToWord,toString/1[int],false,81,0,3,3,0,33,0,70,32,0,1,0,0,0,0,0,0,0,32,32,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NumberToWord.java,com.interview.misc.NumberToWord,numberToWords/1[int],false,15,1,3,1,2,6,5,27,2,4,1,5,2,3,0,1,0,0,1,3,8,7,1,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NumberToWord.java,com.interview.misc.NumberToWord,tenthPart/1[int],false,62,1,2,1,1,4,3,20,2,3,1,3,1,1,0,2,0,1,1,6,3,3,3,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NumberToWord.java,com.interview.misc.NumberToWord,main/1[java.lang.String[]],false,153,1,2,0,2,1,2,14,0,1,1,2,1,4,0,0,0,0,0,11,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NodesWithNoSibling.java,com.interview.tree.NodesWithNoSibling,main/1[java.lang.String[]],false,31,3,4,0,4,1,2,12,0,3,1,2,1,1,0,0,0,0,0,6,9,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NodesWithNoSibling.java,com.interview.tree.NodesWithNoSibling,printNodes/1[com.interview.tree.Node],false,15,2,3,2,1,6,2,15,1,0,1,2,1,0,0,5,0,0,2,0,0,2,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\DayDifferenceBetweenTwoDates.java,com.interview.misc.DayDifferenceBetweenTwoDates,isLeapYear/1[int],false,43,0,1,1,0,4,0,9,3,0,1,0,0,0,0,3,0,0,0,6,0,3,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\DayDifferenceBetweenTwoDates.java,com.interview.misc.DayDifferenceBetweenTwoDates,"diff/6[int,int,int,int,int,int]",false,12,1,2,1,1,7,1,19,1,4,6,1,1,1,2,0,0,6,0,20,8,27,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\DayDifferenceBetweenTwoDates.java,com.interview.misc.DayDifferenceBetweenTwoDates,main/1[java.lang.String[]],false,38,1,2,0,2,1,2,4,0,1,1,2,1,2,0,0,0,0,0,6,1,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\LuckyNumbers.java,com.interview.number.LuckyNumbers,main/1[java.lang.String[]],false,19,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\LuckyNumbers.java,com.interview.number.LuckyNumbers,"isLuck/2[int,int]",false,8,1,3,2,1,3,1,9,3,0,2,1,1,0,0,1,0,0,0,2,0,4,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\linklist\DeleteDuplicateNodesTest.java,com.interview.linklist.DeleteDuplicateNodesTest,testDifferentCases/0,false,8,4,0,0,0,1,2,9,0,3,0,2,0,0,0,0,0,0,0,3,6,0,0,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ChunkMerge.java,com.interview.array.ChunkMerge$Triplet,compareTo/1[com.interview.array.ChunkMerge.Triplet],false,22,1,0,0,0,2,0,8,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumProductCutting.java,com.interview.dynamic.MaximumProductCutting,maxProduct/1[int],false,8,1,1,1,0,4,1,13,1,4,1,1,0,0,3,0,0,0,0,6,7,3,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumProductCutting.java,com.interview.dynamic.MaximumProductCutting,main/1[java.lang.String[]],false,22,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\ValidPalindrome.java,com.interview.string.ValidPalindrome,isPalindrome/1[java.lang.String],false,15,1,2,1,1,5,4,18,2,2,1,4,1,1,1,1,0,0,0,2,2,1,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\ValidPalindrome.java,com.interview.string.ValidPalindrome,isAlphaNum/1[char],false,32,0,1,1,0,7,0,6,2,0,1,0,0,0,0,0,0,3,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,"search/2[com.interview.tree.BTree.BTreeNode,int]",false,31,2,3,2,1,6,1,13,3,1,2,1,1,0,1,1,0,0,0,1,1,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,main/1[java.lang.String[]],false,190,1,4,0,4,1,4,28,0,1,1,4,3,5,0,0,0,0,0,24,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,insert/1[int],false,10,3,4,1,3,3,3,16,1,2,1,3,1,2,0,2,0,0,0,4,9,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,search/1[int],false,27,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,"splitNode/4[com.interview.tree.BTree.BTreeNode,int,com.interview.tree.BTree.BTreeNode,com.interview.tree.BTree.BTreeNode]",false,90,2,4,1,3,5,2,35,1,6,4,2,0,0,2,0,0,0,0,9,20,8,1,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,"insert/2[com.interview.tree.BTree.BTreeNode,int]",false,45,3,6,2,4,10,4,50,9,6,2,4,2,1,1,3,0,0,0,1,6,0,5,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,traverse/1[com.interview.tree.BTree.BTreeNode],false,135,2,3,2,1,4,2,11,0,1,1,2,1,0,1,0,0,0,1,1,1,1,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree,traverse/0,false,131,1,2,1,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\CountNumbersNotIncluding4.java,com.interview.number.CountNumbersNotIncluding4,count/1[int],false,8,1,3,2,1,6,1,19,4,2,1,1,1,0,1,1,0,0,0,10,3,11,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\CountNumbersNotIncluding4.java,com.interview.number.CountNumbersNotIncluding4,main/1[java.lang.String[]],false,33,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,1,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\ContainsNumberWithinKDistance.java,com.interview.misc.ContainsNumberWithinKDistance,"containsNearbyAlmostDuplicate/3[int[],int,int]",false,25,1,0,0,0,11,5,39,8,10,3,5,0,0,1,7,0,0,0,9,6,5,4,0,0,2,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\MergeSort.java,com.interview.sort.MergeSort,main/1[java.lang.String[]],false,62,1,3,0,3,1,2,15,0,5,1,2,2,3,0,0,0,0,0,15,5,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\MergeSort.java,com.interview.sort.MergeSort,"sortedMerge/3[int[],int,int]",false,29,1,1,1,0,7,0,25,0,6,3,0,0,0,4,0,0,1,0,5,12,5,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\MergeSort.java,com.interview.sort.MergeSort,sort/1[int[]],false,14,2,2,1,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,2,0,1,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\MergeSort.java,com.interview.sort.MergeSort,"sort/3[int[],int,int]",false,18,2,4,2,2,2,2,9,1,1,3,2,2,1,0,0,0,1,0,2,1,3,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\MergeSort.java,com.interview.sort.MergeSort,printArray/1[int[]],false,55,1,1,1,0,2,2,6,0,0,1,2,0,0,1,0,0,0,1,0,0,1,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\JarvisMarchConvexHull.java,com.interview.geometry.JarvisMarchConvexHull$Point,"Point/2[int,int]",true,34,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4,read4/1[char[]],false,17,1,1,1,0,1,0,7,1,0,1,0,0,0,0,0,0,0,0,5,4,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\graph\CourseScheduleTest.java,com.interview.graph.CourseScheduleTest,testDifferentCases/0,false,9,3,0,0,0,1,2,11,0,7,0,2,0,0,0,0,0,0,0,24,7,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,getAllEdges/0,false,75,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,"addEdge/3[long,long,int]",false,50,3,3,0,3,4,5,24,0,3,3,5,0,0,0,0,0,0,0,0,7,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,"addEdge/2[long,long]",false,21,1,1,0,1,1,1,3,0,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,Graph/1[boolean],true,15,3,0,0,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,getAllVertex/0,false,79,2,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,toString/0,false,90,3,4,0,4,2,6,8,1,1,0,6,0,0,1,0,0,0,3,0,1,1,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,addVertex/1[com.interview.graph.Vertex<T>],false,27,3,2,0,2,3,5,9,1,0,1,5,0,0,1,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,addSingleVertex/1[long],false,37,2,1,0,1,2,3,8,2,1,1,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,getVertex/1[long],false,46,2,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Graph,"setDataForVertex/2[long,T]",false,82,2,1,0,1,2,3,6,0,1,2,3,0,0,0,0,0,0,0,0,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\SparseTableRangeMinimumQuery.java,com.interview.misc.SparseTableRangeMinimumQuery,main/1[java.lang.String[]],false,61,2,2,0,2,3,3,10,0,4,1,3,1,2,2,0,0,0,1,11,4,1,2,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\SparseTableRangeMinimumQuery.java,com.interview.misc.SparseTableRangeMinimumQuery,log2/1[int],false,56,0,2,2,0,2,1,4,1,0,1,1,0,0,0,0,0,0,0,2,0,1,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\SparseTableRangeMinimumQuery.java,com.interview.misc.SparseTableRangeMinimumQuery,"preprocess/2[int[],int]",false,28,2,2,1,1,5,1,17,1,4,2,1,1,1,3,0,0,5,0,16,7,15,3,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\SparseTableRangeMinimumQuery.java,com.interview.misc.SparseTableRangeMinimumQuery,SparseTableRangeMinimumQuery/1[int[]],true,22,2,2,1,1,1,1,5,0,0,1,1,1,2,0,0,0,0,0,0,3,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\SparseTableRangeMinimumQuery.java,com.interview.misc.SparseTableRangeMinimumQuery,"rangeMinimumQuery/2[int,int]",false,46,1,2,1,1,2,1,10,2,2,2,1,1,1,0,0,0,2,0,4,2,8,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SubarrayWithGivenSum.java,com.interview.array.SubarrayWithGivenSum$Pair,toString/0,false,12,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BitonicSequence.java,com.interview.dynamic.BitonicSequence,main/1[java.lang.String[]],false,39,2,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,10,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BitonicSequence.java,com.interview.dynamic.BitonicSequence,longestSequence/1[int[]],false,8,1,1,1,0,10,1,29,1,9,1,1,0,0,6,0,0,0,0,14,14,8,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NumberOfPathsInMxNMatrix.java,com.interview.dynamic.NumberOfPathsInMxNMatrix,main/1[java.lang.String[]],false,32,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NumberOfPathsInMxNMatrix.java,com.interview.dynamic.NumberOfPathsInMxNMatrix,"countPathsRecursive/2[int,int]",false,8,1,3,2,1,3,1,6,2,0,2,1,1,0,0,2,0,0,0,5,0,3,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NumberOfPathsInMxNMatrix.java,com.interview.dynamic.NumberOfPathsInMxNMatrix,"countPaths/2[int,int]",false,15,1,0,0,0,5,0,15,1,5,2,0,0,0,4,0,0,0,0,12,8,5,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructAllBinaryTreeFromInorderTraversal.java,com.interview.tree.ConstructAllBinaryTreeFromInorderTraversal,printAllTrees/1[java.util.List<com.interview.tree.Node>],false,48,2,4,1,3,2,6,10,0,1,1,6,0,0,1,0,0,0,2,0,1,1,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructAllBinaryTreeFromInorderTraversal.java,com.interview.tree.ConstructAllBinaryTreeFromInorderTraversal,"construct/2[int,int]",false,25,2,4,2,2,5,4,19,2,5,2,4,1,0,3,0,0,0,0,2,7,2,3,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructAllBinaryTreeFromInorderTraversal.java,com.interview.tree.ConstructAllBinaryTreeFromInorderTraversal,generateTrees/1[int],false,18,2,2,1,1,2,2,6,2,0,1,2,1,1,0,1,0,0,0,2,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructAllBinaryTreeFromInorderTraversal.java,com.interview.tree.ConstructAllBinaryTreeFromInorderTraversal,main/1[java.lang.String[]],false,59,2,3,0,3,1,2,5,0,2,1,2,2,2,0,0,0,0,0,1,2,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\BinomialCoefficient.java,com.interview.number.BinomialCoefficient,main/1[java.lang.String[]],false,24,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\BinomialCoefficient.java,com.interview.number.BinomialCoefficient,"calculate/2[int,int]",false,12,0,1,1,0,3,0,11,1,2,2,0,0,0,1,0,0,2,0,3,5,4,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\HeightBalanced.java,com.interview.tree.HeightBalanced,isBalanced/1[com.interview.tree.Node],false,15,2,1,0,1,2,1,3,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\HeightBalanced.java,com.interview.tree.HeightBalanced,isBalancedUtil/1[com.interview.tree.Node],false,19,2,3,2,1,5,3,15,4,3,1,3,1,0,0,1,0,1,0,8,3,2,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CommonThreeSortedArray.java,com.interview.array.CommonThreeSortedArray,"commonElements/3[int[],int[],int[]]",false,18,1,1,1,0,8,1,24,1,4,3,1,0,0,1,2,0,0,0,3,4,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CommonThreeSortedArray.java,com.interview.array.CommonThreeSortedArray,main/1[java.lang.String[]],false,40,1,2,0,2,1,3,8,0,6,1,3,1,1,0,0,0,0,1,19,5,1,0,0,0,1,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,"wordBreakUtil/5[java.lang.String,java.util.Set<java.lang.String>,java.util.Map<java.lang.Integer,java.util.List<java.lang.String>>,int,int]",false,122,1,3,2,1,8,9,22,3,5,5,9,1,0,2,2,0,0,3,3,5,4,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,"wordBreakTopDown/2[java.lang.String,java.util.Set<java.lang.String>]",false,113,1,1,0,1,2,3,8,1,2,2,3,1,1,1,0,0,0,0,2,3,0,1,0,0,0,21,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,"breakWordDP/2[java.lang.String,java.util.Set<java.lang.String>]",false,60,1,1,1,0,12,5,40,2,12,2,5,0,0,6,4,0,0,1,18,16,11,4,0,0,0,50,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,"wordBreakBottomUp/2[java.lang.String,java.util.List<java.lang.String>]",false,184,1,0,0,0,6,4,17,1,4,2,4,0,0,3,0,0,0,0,4,6,1,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,"wordBreakTopDownOneSolutionUtil/5[java.lang.String,java.util.Set<java.lang.String>,int,int,java.util.Map<java.lang.Integer,java.lang.Boolean>]",false,161,1,3,2,1,7,7,20,4,2,5,7,1,0,1,1,0,0,0,2,2,3,2,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,"wordBreakTopDownOneSolution/2[java.lang.String,java.util.Set<java.lang.String>]",false,151,1,1,0,1,2,3,8,1,2,2,3,1,1,1,0,0,0,0,2,3,0,1,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,main/1[java.lang.String[]],false,202,1,2,0,2,1,3,12,0,4,1,3,1,1,0,0,0,0,6,0,4,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BreakMultipleWordsWithNoSpaceIntoSpace.java,com.interview.dynamic.BreakMultipleWordsWithNoSpaceIntoSpace,"breakWord/3[char[],int,java.util.Set<java.lang.String>]",false,35,2,2,1,1,5,4,16,3,3,3,4,1,0,1,1,0,0,1,1,3,2,3,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,setSize/1[com.interview.tree.Node],false,50,1,3,3,0,4,1,6,2,0,1,1,0,0,0,3,0,2,0,4,0,1,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,count/1[int[]],false,94,3,2,1,1,2,1,8,1,3,1,1,1,4,1,0,0,0,0,3,4,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,leftRotate/1[com.interview.tree.Node],false,13,2,3,1,2,1,2,10,1,1,1,2,2,1,0,0,0,0,0,0,7,0,0,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,height/1[com.interview.tree.Node],false,42,1,1,1,0,2,0,8,2,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,"insert/5[com.interview.tree.Node,int,int[],int,int]",false,57,3,9,2,7,8,7,39,2,0,5,7,6,3,0,2,0,0,0,2,12,2,2,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,setHeight/1[com.interview.tree.Node],false,35,1,3,3,0,4,1,6,2,0,1,1,0,0,0,3,0,2,0,4,0,1,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,main/1[java.lang.String[]],false,103,1,2,0,2,4,3,20,0,7,1,3,1,5,3,0,0,0,3,17,7,3,1,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNumberOfSmallerElementOnRight.java,com.interview.tree.CountNumberOfSmallerElementOnRight,rightRotate/1[com.interview.tree.Node],false,24,2,3,1,2,1,2,10,1,1,1,2,2,1,0,0,0,0,0,0,7,0,0,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\NQueenProblem.java,com.interview.recursion.NQueenProblem,main/1[java.lang.String[]],false,110,2,2,0,2,1,4,5,0,3,1,4,1,2,0,0,0,0,1,1,2,1,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\NQueenProblem.java,com.interview.recursion.NQueenProblem,solveNQueenOneSolution/1[int],false,29,2,2,1,1,2,1,10,2,2,1,1,1,1,0,0,0,0,0,2,2,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\NQueenProblem.java,com.interview.recursion.NQueenProblem,"solveNQueenOneSolutionUtil/3[int,int,com.interview.recursion.NQueenProblem.Position[]]",false,39,2,4,2,2,9,1,22,3,3,3,1,1,0,2,4,0,0,0,3,5,5,3,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\NQueenProblem.java,com.interview.recursion.NQueenProblem,solveNQueens/1[int],false,68,2,1,0,1,1,1,6,1,2,1,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\NQueenProblem.java,com.interview.recursion.NQueenProblem,"solve/4[int,com.interview.recursion.NQueenProblem.Position[],java.util.List<java.util.List<java.lang.String>>,int]",false,75,2,4,2,2,11,5,33,1,6,4,5,1,0,4,5,0,0,2,4,9,5,4,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LargestIndependentSetInTree.java,com.interview.tree.LargestIndependentSetInTree,main/1[java.lang.String[]],false,34,3,4,0,4,1,3,8,0,5,1,3,1,1,0,0,0,0,0,14,5,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LargestIndependentSetInTree.java,com.interview.tree.LargestIndependentSetInTree,largestSet/1[com.interview.tree.Node],false,8,2,3,2,1,6,1,22,3,4,1,1,1,0,0,4,0,0,0,5,9,3,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\MinMaxKeeper.java,com.interview.multithreaded.MinMaxKeeper,getMax/0,false,66,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\MinMaxKeeper.java,com.interview.multithreaded.MinMaxKeeper,getMin/0,false,62,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\MinMaxKeeper.java,com.interview.multithreaded.MinMaxKeeper,main/1[java.lang.String[]],false,70,2,4,0,4,4,6,12,0,4,1,6,2,1,1,2,0,0,0,6,4,0,1,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\MinMaxKeeper.java,com.interview.multithreaded.MinMaxKeeper,updateMinMax/1[int],false,33,0,1,1,0,7,2,22,0,4,1,2,0,0,2,0,0,0,0,0,4,0,2,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,reverseRecursive/1[com.interview.linklist.NodeRef],false,84,3,3,1,2,3,1,16,2,3,1,1,1,0,0,2,0,0,0,0,7,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,size/1[com.interview.linklist.Node],false,124,1,2,2,0,2,0,8,1,1,1,0,0,0,1,1,0,0,0,1,2,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,reverse/1[com.interview.linklist.Node],false,60,1,1,1,0,2,0,12,1,3,1,0,0,0,1,1,0,0,0,0,7,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,reverseRecursiveEasy/1[com.interview.linklist.Node],false,73,2,3,2,1,3,1,9,2,1,1,1,1,0,0,2,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,main/1[java.lang.String[]],false,132,2,4,0,4,1,4,14,0,2,1,4,3,1,0,0,0,0,0,6,9,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,"addAtFront/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,52,1,5,5,0,2,0,7,2,0,2,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,"find/2[com.interview.linklist.Node,int]",false,113,1,2,2,0,3,0,9,2,0,2,0,0,0,1,2,0,0,0,0,1,0,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,"addNode/3[int,com.interview.linklist.Node,java.lang.Object[]]",false,32,1,24,23,1,4,1,18,2,2,3,1,0,0,1,2,0,0,0,2,6,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,"addAtFront/2[int,com.interview.linklist.Node]",false,101,2,2,0,2,1,2,4,1,1,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.LinkList,printList/1[com.interview.linklist.Node],false,106,1,17,17,0,2,1,6,0,0,1,1,0,0,1,1,0,0,0,0,1,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SwapTwoNodesInDoubleLL.java,com.interview.linklist.SwapTwoNodesInDoubleLL,"swap/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,13,1,1,1,0,13,0,61,0,2,2,0,0,0,0,12,0,0,0,0,26,0,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SwapTwoNodesInDoubleLL.java,com.interview.linklist.SwapTwoNodesInDoubleLL,main/1[java.lang.String[]],false,73,3,6,0,6,1,4,14,0,5,1,4,1,1,0,0,0,0,0,7,10,0,0,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\FindElementsOccurringNByKTimesTetris.java,com.interview.array.FindElementsOccurringNByKTimesTetris,"printElementsOccurringKTimes/2[int[],int]",false,19,2,2,1,1,15,1,43,0,9,2,1,0,0,7,5,0,0,0,13,14,1,4,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\FindElementsOccurringNByKTimesTetris.java,com.interview.array.FindElementsOccurringNByKTimesTetris,main/1[java.lang.String[]],false,66,1,2,0,2,1,1,5,0,2,1,1,1,1,0,0,0,0,0,13,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PaintHouse.java,com.interview.dynamic.PaintHouse,minCostTopDownPainHouse1or2/1[int[][]],false,10,2,1,0,1,2,1,7,2,1,1,1,1,1,0,1,0,0,0,6,1,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PaintHouse.java,com.interview.dynamic.PaintHouse,main/1[java.lang.String[]],false,95,2,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,0,12,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PaintHouse.java,com.interview.dynamic.PaintHouse,minCostBottomUpPaintHouse2/1[int[][]],false,39,3,2,1,1,8,2,26,2,7,1,2,1,1,4,3,0,0,0,18,12,4,3,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PaintHouse.java,com.interview.dynamic.PaintHouse,"minCostUtil/5[int[][],int,int,int,int[][]]",false,18,2,3,2,1,5,2,21,2,3,5,2,1,0,1,3,0,0,0,4,6,2,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PaintHouse.java,com.interview.dynamic.PaintHouse,findMinSecondMin/1[int[]],false,71,2,2,1,1,5,0,25,1,4,1,0,0,0,1,0,0,0,0,7,11,0,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LowestCommonAncestorInBinaryTree.java,com.interview.tree.LowestCommonAncestorInBinaryTree,"lca/3[com.interview.tree.Node,com.interview.tree.Node,com.interview.tree.Node]",false,14,2,2,1,1,7,1,14,4,2,3,1,1,0,0,6,0,0,0,0,2,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SymbolExpressionEvaluation.java,com.interview.dynamic.SymbolExpressionEvaluation,"evaluateExpression/4[char[][],java.util.Map<java.lang.Character,java.lang.Integer>,char[],char]",false,20,2,4,1,3,11,3,29,2,8,4,3,0,0,9,1,0,0,0,9,9,5,5,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SymbolExpressionEvaluation.java,com.interview.dynamic.SymbolExpressionEvaluation,main/1[java.lang.String[]],false,53,1,2,0,2,1,4,9,0,3,1,4,1,1,0,0,0,0,1,3,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway$CharCount,getOuterType/0,false,41,1,2,2,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway$CharCount,toString/0,false,47,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway$CharCount,compareTo/1[com.interview.string.RearrangeDuplicateCharsdDistanceAway.CharCount],false,51,1,0,0,0,2,0,8,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway$CharCount,hashCode/0,false,19,1,1,0,1,1,2,7,1,2,0,2,1,1,0,0,0,0,0,2,4,4,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway$CharCount,equals/1[java.lang.Object],false,27,1,1,0,1,6,3,9,6,1,1,3,1,1,0,4,0,0,0,0,1,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\array\ThreeSumSmallerThanTargetTest.java,com.interview.array.ThreeSumSmallerThanTargetTest,testDifferentCases/0,false,9,3,0,0,0,1,2,5,0,2,0,2,0,0,0,0,0,0,0,6,2,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixArray.java,com.interview.suffixprefix.SuffixArray,createSuffixArray/1[char[]],false,37,2,2,1,1,2,1,9,1,3,1,1,0,0,1,0,0,0,0,1,4,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixArray.java,com.interview.suffixprefix.SuffixArray,main/1[java.lang.String[]],false,81,1,3,0,3,1,4,6,0,3,1,4,2,2,0,0,0,0,2,0,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixArray.java,com.interview.suffixprefix.SuffixArray,"stringCompare/3[char[],char[],int]",false,48,1,1,1,0,7,0,14,3,1,3,0,0,0,1,3,0,0,0,5,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixArray.java,com.interview.suffixprefix.SuffixArray,"subStringSearch/3[char[],char[],java.lang.Integer[]]",false,63,2,2,1,1,4,1,18,2,4,3,1,1,1,1,1,0,1,0,8,6,5,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FordFulkerson.java,com.interview.graph.FordFulkerson,main/1[java.lang.String[]],false,125,2,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,1,51,2,1,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FordFulkerson.java,com.interview.graph.FordFulkerson,"BFS/4[int[][],java.util.Map<java.lang.Integer,java.lang.Integer>,int,int]",false,94,1,1,1,0,6,6,22,1,5,4,6,0,0,2,1,0,0,0,2,6,0,4,0,0,0,21,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FordFulkerson.java,com.interview.graph.FordFulkerson,"maxFlow/3[int[][],int,int]",false,24,2,3,1,2,7,6,37,1,11,3,6,2,1,5,2,0,0,0,5,19,0,3,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FordFulkerson.java,com.interview.graph.FordFulkerson,printAugmentedPaths/1[java.util.List<java.util.List<java.lang.Integer>>],false,82,0,1,1,0,1,5,8,0,2,1,5,0,0,0,0,0,0,2,0,0,1,1,0,0,2,14,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\QuickSortSingleLinkList.java,com.interview.linklist.QuickSortSingleLinkList,quickSortFaster/1[com.interview.linklist.Node],false,61,3,2,1,1,1,1,4,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\QuickSortSingleLinkList.java,com.interview.linklist.QuickSortSingleLinkList,main/1[java.lang.String[]],false,113,3,5,0,5,1,3,15,0,3,1,3,1,2,0,0,0,0,0,8,12,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\QuickSortSingleLinkList.java,com.interview.linklist.QuickSortSingleLinkList,quickSortUtil/1[com.interview.linklist.Node],false,71,4,6,2,4,7,2,40,2,9,1,2,1,0,1,5,0,0,0,0,24,0,2,0,0,0,31,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\QuickSortSingleLinkList.java,com.interview.linklist.QuickSortSingleLinkList,quickSort/1[com.interview.linklist.Node],false,20,3,4,1,3,8,2,37,3,7,1,2,1,0,2,6,0,0,0,0,18,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\MinimumHeightTree.java,com.interview.graph.MinimumHeightTree,"findMinHeightTrees/2[int,int[][]]",false,17,1,1,1,0,9,10,32,2,6,2,10,0,0,5,3,0,0,0,11,8,0,3,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\MinimumHeightTree.java,com.interview.graph.MinimumHeightTree,main/1[java.lang.String[]],false,53,1,2,0,2,1,3,6,0,4,1,3,1,1,0,0,0,0,1,7,3,1,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ScrambledString.java,com.interview.dynamic.ScrambledString,main/1[java.lang.String[]],false,129,2,2,0,2,1,4,8,0,5,1,4,1,1,0,0,0,0,2,4,5,2,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ScrambledString.java,com.interview.dynamic.ScrambledString,"isScrambled/7[char[],char[],int,int,int,int,java.util.Map<com.interview.dynamic.ScrambledString.Index,java.lang.Boolean>]",false,45,3,4,2,2,20,9,67,12,14,7,9,1,0,4,5,0,0,0,11,14,13,3,0,0,3,22,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LargestMountain.java,com.interview.array.LargestMountain,longestMountain/1[int[]],false,8,2,1,1,0,8,1,27,1,4,1,1,0,0,1,5,0,0,0,7,11,5,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LargestMountain.java,com.interview.array.LargestMountain,main/1[java.lang.String[]],false,40,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,7,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\NumberOfTrianglesInUnsortedArray.java,com.interview.array.NumberOfTrianglesInUnsortedArray,numberOfTriangles/1[int[]],false,10,1,1,1,0,5,1,14,1,4,1,1,0,0,3,0,0,0,0,6,5,5,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\NumberOfTrianglesInUnsortedArray.java,com.interview.array.NumberOfTrianglesInUnsortedArray,main/1[java.lang.String[]],false,27,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,7,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\LargestMultipleOf3inArray.java,com.interview.number.LargestMultipleOf3inArray,largestMultiple/1[int[]],false,23,2,2,1,1,18,5,90,4,11,1,5,1,2,8,5,0,0,0,28,23,6,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\LargestMultipleOf3inArray.java,com.interview.number.LargestMultipleOf3inArray,main/1[java.lang.String[]],false,111,1,2,0,2,2,2,8,0,3,1,2,1,3,1,0,0,0,1,6,3,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\LargestMultipleOf3inArray.java,com.interview.number.LargestMultipleOf3inArray,reverse/1[int[]],false,17,2,2,1,1,2,1,5,0,1,1,1,1,1,1,0,0,0,0,3,1,2,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\LargestMultipleOf3inArray.java,com.interview.number.LargestMultipleOf3inArray,"swap/3[int[],int,int]",false,12,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixInDiagonalOrder.java,com.interview.multiarray.MatrixInDiagonalOrder,main/1[java.lang.String[]],false,32,1,2,0,2,1,1,5,0,2,1,1,1,1,0,0,0,0,0,20,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixInDiagonalOrder.java,com.interview.multiarray.MatrixInDiagonalOrder,printMatrix/1[int[][]],false,8,1,1,1,0,7,1,22,0,6,1,1,0,0,4,0,0,0,4,9,6,3,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\ShuffleArray.java,com.interview.random.ShuffleArray,shuffle/1[int[]],false,9,2,2,1,1,2,3,7,0,2,1,3,1,1,1,0,0,2,1,3,2,4,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\ShuffleArray.java,com.interview.random.ShuffleArray,"swap/3[int[],int,int]",false,17,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\ShuffleArray.java,com.interview.random.ShuffleArray,main/1[java.lang.String[]],false,23,1,2,0,2,3,5,12,0,4,1,5,1,2,2,0,0,1,1,12,4,3,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MergeForLargestSum.java,com.interview.linklist.MergeForLargestSum,"maxChain/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,13,1,1,1,0,15,0,79,3,6,2,0,0,0,3,10,0,0,0,4,34,0,4,0,0,0,12,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MergeForLargestSum.java,com.interview.linklist.MergeForLargestSum,main/1[java.lang.String[]],false,87,3,5,0,5,1,3,27,0,5,1,3,1,1,0,0,0,0,0,19,24,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumSumSubsequence.java,com.interview.dynamic.MaximumSumSubsequence,maxSum/1[int[]],false,17,1,1,1,0,7,1,20,1,6,1,1,0,0,4,0,0,0,0,5,9,1,3,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumSumSubsequence.java,com.interview.dynamic.MaximumSumSubsequence,main/1[java.lang.String[]],false,41,1,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,7,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\bits\CountingBitsTillNumTest.java,com.interview.bits.CountingBitsTillNumTest,testDifferentCases/0,false,12,3,0,0,0,1,2,11,0,5,0,2,0,0,0,0,0,0,0,34,5,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\playground\TestInnerClass.java,com.interview.playground.Okay,next/0,false,35,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ReconstructItinerary.java,com.interview.recursion.ReconstructItinerary$Itinerary,compareTo/1[com.interview.recursion.ReconstructItinerary.Itinerary],false,60,1,0,0,0,2,2,8,2,0,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ReconstructItinerary.java,com.interview.recursion.ReconstructItinerary$Itinerary,"Itinerary/2[java.lang.String,java.lang.String]",true,54,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SuccinctTree.java,com.interview.tree.SuccinctTree,"decode/3[com.interview.tree.SuccinctTree.Result,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger]",false,47,3,4,2,2,2,4,12,2,1,3,4,1,0,0,1,0,0,0,1,4,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SuccinctTree.java,com.interview.tree.SuccinctTree,main/1[java.lang.String[]],false,61,5,8,0,8,1,7,25,0,5,1,7,2,3,0,0,0,0,2,8,14,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SuccinctTree.java,com.interview.tree.SuccinctTree,decode/1[com.interview.tree.SuccinctTree.Result],false,41,3,2,1,1,1,1,5,1,2,1,1,1,1,0,0,0,0,0,2,2,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SuccinctTree.java,com.interview.tree.SuccinctTree,"encode/2[com.interview.tree.Node,com.interview.tree.SuccinctTree.Result]",false,29,3,3,2,1,2,2,10,1,0,2,2,1,0,0,1,0,0,0,2,0,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SuccinctTree.java,com.interview.tree.SuccinctTree,encode/1[com.interview.tree.Node],false,23,3,3,1,2,1,1,5,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringInterleaving.java,com.interview.recursion.StringInterleaving,main/1[java.lang.String[]],false,29,2,2,0,2,1,3,7,0,4,1,3,1,2,0,0,0,0,2,3,4,1,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringInterleaving.java,com.interview.recursion.StringInterleaving,printArray/1[char[]],false,5,1,1,1,0,2,2,6,0,1,1,2,0,0,1,0,0,0,0,1,1,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringInterleaving.java,com.interview.recursion.StringInterleaving,"interleaving/6[char[],char[],int,int,int,char[]]",false,12,2,4,2,2,4,2,14,1,0,6,2,2,1,0,1,0,0,0,4,2,4,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NPotGold.java,com.interview.dynamic.NPotGold,findMoves/1[int[]],false,17,2,2,1,1,7,0,28,1,7,1,0,0,0,5,0,0,0,0,12,16,13,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NPotGold.java,com.interview.dynamic.NPotGold,main/1[java.lang.String[]],false,66,2,3,0,3,3,4,13,0,5,1,4,2,1,2,0,0,0,3,9,5,1,2,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NPotGold.java,com.interview.dynamic.NPotGold,"printSequence/2[int[],com.interview.dynamic.NPotGold.Pair[][]]",false,51,2,1,1,0,3,1,15,0,4,2,1,0,0,1,0,0,0,4,5,6,4,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\BinarySearch.java,com.interview.binarysearch.BinarySearch,"search/2[int[],int]",false,8,1,1,1,0,4,0,18,2,3,2,0,0,0,1,1,0,2,0,6,5,6,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\BinarySearch.java,com.interview.binarysearch.BinarySearch,main/1[java.lang.String[]],false,25,1,2,0,2,1,2,8,0,2,1,2,1,1,0,0,0,0,0,10,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\BitRotation.java,com.interview.bits.BitRotation,"rotateLeft/2[byte,int]",false,8,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,4,0,1,0,3,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\BitRotation.java,com.interview.bits.BitRotation,main/1[java.lang.String[]],false,12,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\BoundedBlockingQueue.java,com.interview.multithreaded.BoundedBlockingQueue,dequeue/0,false,118,1,0,0,0,2,0,9,1,1,0,0,0,0,0,1,0,0,1,1,3,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\BoundedBlockingQueue.java,com.interview.multithreaded.BoundedBlockingQueue,BoundedBlockingQueue/1[int],true,35,0,0,0,0,1,1,6,0,0,1,1,0,0,0,0,0,0,0,0,4,0,0,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\BoundedBlockingQueue.java,com.interview.multithreaded.BoundedBlockingQueue,main/1[java.lang.String[]],false,128,1,1,0,1,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\BoundedBlockingQueue.java,com.interview.multithreaded.BoundedBlockingQueue,verifyQueueWorks/0,false,132,1,3,0,3,11,14,51,0,11,0,14,0,0,5,1,2,2,4,15,12,4,5,0,0,2,28,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\BoundedBlockingQueue.java,com.interview.multithreaded.BoundedBlockingQueue,"poll/2[long,java.util.concurrent.TimeUnit]",false,46,2,1,0,1,3,8,19,2,2,2,8,0,0,1,1,1,0,0,2,3,0,3,0,0,0,28,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\BoundedBlockingQueue.java,com.interview.multithreaded.BoundedBlockingQueue,"offer/3[T,long,java.util.concurrent.TimeUnit]",false,81,2,1,0,1,4,6,21,2,1,3,6,0,0,1,2,1,0,0,1,2,0,3,0,0,0,34,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\BoundedBlockingQueue.java,com.interview.multithreaded.BoundedBlockingQueue,enqueue/1[T],false,109,1,0,0,0,2,0,7,0,0,1,0,0,0,0,1,0,0,0,1,2,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\RemoveInvalidParenthesis.java,com.interview.recursion.RemoveInvalidParenthesis,removeInvalidParentheses/1[java.lang.String],false,17,1,2,1,1,5,3,13,1,4,1,3,1,1,1,3,0,0,0,6,4,0,3,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\RemoveInvalidParenthesis.java,com.interview.recursion.RemoveInvalidParenthesis,"DFS/7[java.util.Set<java.lang.String>,java.lang.String,int,int,int,int,java.lang.StringBuilder]",false,31,1,3,2,1,11,8,21,2,2,7,8,1,0,0,7,0,0,0,15,2,9,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\RemoveInvalidParenthesis.java,com.interview.recursion.RemoveInvalidParenthesis,main/1[java.lang.String[]],false,56,1,2,0,2,1,3,6,0,4,1,3,1,2,0,0,0,0,1,0,3,0,0,0,0,1,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FindingCelebrity.java,com.interview.misc.FindingCelebrity,findCelebrity/1[int],false,15,1,1,0,1,7,1,17,2,3,1,1,0,0,2,1,0,0,0,4,4,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberOfIslandDynamic.java,com.interview.graph.NumberOfIslandDynamic,"numIslands2/3[int,int,int[][]]",false,14,2,4,1,3,16,6,41,2,9,3,6,0,0,1,2,0,4,0,28,9,18,3,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberOfIslandDynamic.java,com.interview.graph.NumberOfIslandDynamic,main/1[java.lang.String[]],false,58,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,16,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MinimumDistanceBetweenTwoNumbers.java,com.interview.array.MinimumDistanceBetweenTwoNumbers,"minDistance/3[int[],int,int]",false,8,1,1,1,0,10,0,36,1,4,3,0,0,0,1,6,0,0,0,6,16,4,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MinimumDistanceBetweenTwoNumbers.java,com.interview.array.MinimumDistanceBetweenTwoNumbers,main/1[java.lang.String[]],false,40,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,12,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PalindromePartition.java,com.interview.dynamic.PalindromePartition,"partitionUtil/3[java.lang.String,java.util.Map<java.lang.Integer,java.util.List<java.util.List<java.lang.String>>>,int]",false,55,1,4,2,2,6,11,25,3,6,3,11,2,1,2,1,0,0,0,2,6,2,2,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PalindromePartition.java,com.interview.dynamic.PalindromePartition,"isPalindrome/3[java.lang.String,int,int]",false,83,0,1,1,0,3,1,10,2,0,3,1,0,0,1,1,0,0,0,0,0,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PalindromePartition.java,com.interview.dynamic.PalindromePartition,minCut/1[java.lang.String],false,21,2,0,0,0,8,3,18,2,5,1,3,0,0,2,3,0,1,0,12,8,6,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\PalindromePartition.java,com.interview.dynamic.PalindromePartition,partition/1[java.lang.String],false,45,1,1,0,1,2,2,9,1,3,1,2,1,2,1,0,0,0,0,1,3,0,1,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\Trailing0sinFactorial.java,com.interview.number.Trailing0sinFactorial,main/1[java.lang.String[]],false,21,1,2,0,2,1,2,7,0,1,1,2,1,1,0,0,0,0,0,4,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\Trailing0sinFactorial.java,com.interview.number.Trailing0sinFactorial,trailing0s/1[int],false,11,0,1,1,0,2,0,9,1,2,1,0,0,0,1,0,0,0,0,3,4,1,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\LoadBalancers.java,com.interview.misc.LoadBalancers,main/1[java.lang.String[]],false,32,1,4,0,4,1,4,18,0,1,1,4,3,1,0,0,0,0,7,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\LoadBalancers.java,com.interview.misc.LoadBalancers,removeServer/1[java.lang.String],false,18,0,1,1,0,2,5,8,0,1,1,5,0,0,0,1,0,0,0,2,1,2,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\LoadBalancers.java,com.interview.misc.LoadBalancers,addServer/1[java.lang.String],false,13,0,1,1,0,1,3,4,0,0,1,3,0,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\LoadBalancers.java,com.interview.misc.LoadBalancers,getRandom/0,false,27,0,1,1,0,1,3,4,1,1,0,3,0,0,0,0,0,1,0,1,1,2,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\StringEncoderDecoder.java,com.interview.string.StringEncoderDecoder,decode/1[java.lang.String],false,50,1,2,1,1,2,5,9,1,2,1,5,1,1,1,1,0,0,0,6,3,2,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\StringEncoderDecoder.java,com.interview.string.StringEncoderDecoder,toFixedLength/1[int],false,29,0,1,1,0,2,2,9,1,3,1,2,0,0,1,0,0,0,0,3,4,1,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\StringEncoderDecoder.java,com.interview.string.StringEncoderDecoder,encode/1[java.util.List<java.lang.String>],false,19,1,2,1,1,2,4,9,1,2,1,4,1,1,1,0,0,0,0,0,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\StringEncoderDecoder.java,com.interview.string.StringEncoderDecoder,toSize/1[java.lang.String],false,39,0,1,1,0,2,2,9,1,2,1,2,0,0,1,0,0,0,0,5,5,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CheckIfArrayElementsAreConsecutive.java,com.interview.array.CheckIfArrayElementsAreConsecutive,main/1[java.lang.String[]],false,30,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,6,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CheckIfArrayElementsAreConsecutive.java,com.interview.array.CheckIfArrayElementsAreConsecutive,areConsecutive/1[int[]],false,8,1,1,1,0,7,1,21,3,4,1,1,0,0,3,0,0,0,0,4,7,4,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\OptimalTreeSearch.java,com.interview.dynamic.OptimalTreeSearch,main/1[java.lang.String[]],false,64,1,3,0,3,1,3,7,0,3,1,3,2,3,0,0,0,0,0,10,3,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\OptimalTreeSearch.java,com.interview.dynamic.OptimalTreeSearch,"getSum/3[int[],int,int]",false,55,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,1,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\OptimalTreeSearch.java,com.interview.dynamic.OptimalTreeSearch,"minCost/2[int[],int[]]",false,30,2,2,1,1,8,1,20,1,8,2,1,1,1,4,0,0,2,0,12,11,9,4,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\OptimalTreeSearch.java,com.interview.dynamic.OptimalTreeSearch,"minCostRec/2[int[],int[]]",false,8,2,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\OptimalTreeSearch.java,com.interview.dynamic.OptimalTreeSearch,"minCostRec/5[int[],int[],int,int,int]",false,13,2,3,2,1,4,1,13,2,3,5,1,1,0,1,0,0,0,0,5,4,6,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RealNumberToBinary.java,com.interview.bits.RealNumberToBinary,print/1[double],false,8,0,1,1,0,5,5,19,2,2,1,5,0,0,1,0,0,0,3,5,4,2,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\RealNumberToBinary.java,com.interview.bits.RealNumberToBinary,main/1[java.lang.String[]],false,28,1,2,0,2,1,1,5,0,1,1,1,1,1,0,0,0,0,0,2,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl$ExecutingRunnable,run/0,false,64,2,2,0,2,7,3,30,0,2,0,3,0,0,2,3,0,0,0,4,5,0,4,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\string\ValidPalindromeTest.java,com.interview.string.ValidPalindromeTest,testDifferentCases/0,false,9,2,2,0,2,1,3,5,0,1,0,3,0,0,0,0,0,0,2,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TrappingWater.java,com.interview.array.TrappingWater,trap/1[int[]],false,9,1,1,1,0,6,2,22,2,7,1,2,0,0,2,2,0,0,0,13,12,8,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TrappingWater.java,com.interview.array.TrappingWater,main/1[java.lang.String[]],false,33,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,12,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\UglyNumbers.java,com.interview.dynamic.UglyNumbers,main/1[java.lang.String[]],false,83,2,3,0,3,1,4,7,0,3,1,4,2,2,0,0,0,0,0,6,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\UglyNumbers.java,com.interview.dynamic.UglyNumbers,"nthSuperUglyNumber1/2[int,int[]]",false,33,2,2,1,1,4,2,19,1,5,2,2,0,0,2,1,0,0,0,8,9,4,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\UglyNumbers.java,com.interview.dynamic.UglyNumbers,ugly/1[int],false,54,2,2,1,1,5,1,22,1,6,1,1,1,1,1,3,0,0,0,13,8,7,2,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\UglyNumbers.java,com.interview.dynamic.UglyNumbers,"min/3[int,int,int]",false,78,0,1,1,0,1,1,4,1,1,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SummaryRanges.java,com.interview.array.SummaryRanges,summaryRanges/1[int[]],false,23,2,1,0,1,6,4,21,3,3,1,4,1,1,1,4,0,2,0,14,5,9,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SummaryRanges.java,com.interview.array.SummaryRanges,"makeRange/2[int,int]",false,45,0,1,1,0,2,1,6,2,0,2,1,0,0,0,1,0,0,1,0,0,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ClosestValueBinaryTree.java,com.interview.tree.ClosestValueBinaryTree,"closestValue/2[com.interview.tree.Node,double]",false,8,2,1,0,1,2,1,4,1,1,2,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ClosestValueBinaryTree.java,com.interview.tree.ClosestValueBinaryTree,"closestValueUtil/3[com.interview.tree.Node,double,int]",false,13,2,3,2,1,5,2,17,4,0,3,2,1,0,0,2,0,0,0,0,1,2,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\dynamic\PalindromePartitionTest.java,com.interview.dynamic.PalindromePartitionTest,palindromePartitionMinCuts/0,false,34,2,0,0,0,1,2,6,0,1,0,2,0,0,0,0,0,0,3,3,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\dynamic\PalindromePartitionTest.java,com.interview.dynamic.PalindromePartitionTest,testAllPartitions/0,false,12,2,0,0,0,2,5,18,0,5,0,5,0,0,1,0,0,0,6,1,6,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CutRodToMinimizeCost.java,com.interview.dynamic.CutRodToMinimizeCost,main/1[java.lang.String[]],false,78,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,5,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CutRodToMinimizeCost.java,com.interview.dynamic.CutRodToMinimizeCost,"cutRodToMinimizeCost/4[int[],int,int,int[][]]",false,27,2,3,2,1,14,1,47,6,7,4,1,1,0,3,7,0,0,0,9,13,8,2,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CutRodToMinimizeCost.java,com.interview.dynamic.CutRodToMinimizeCost,"cutRodToMinimizeCost/2[int[],int]",false,17,2,2,1,1,3,1,9,1,3,2,1,1,1,2,0,0,0,0,6,4,2,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\MaximumHistogram.java,com.interview.stackqueue.MaximumHistogram,maxHistogram/1[int[]],false,40,1,2,2,0,9,4,36,1,6,1,4,0,0,2,0,0,2,0,5,12,6,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\MaximumHistogram.java,com.interview.stackqueue.MaximumHistogram,main/1[java.lang.String[]],false,88,1,2,0,2,2,1,6,0,3,1,1,1,1,0,1,0,0,0,12,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthLargestInTwoSortedArray.java,com.interview.array.KthLargestInTwoSortedArray,"kthLargest/7[int[],int[],int,int,int,int,int]",false,49,2,4,3,1,16,3,58,14,4,7,3,1,0,0,6,0,4,0,19,4,36,3,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthLargestInTwoSortedArray.java,com.interview.array.KthLargestInTwoSortedArray,"kthLargest1/7[int[],int[],int,int,int,int,int]",false,10,2,1,0,1,5,2,28,4,4,7,2,1,1,0,3,0,1,0,10,12,20,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthLargestInTwoSortedArray.java,com.interview.array.KthLargestInTwoSortedArray,main/1[java.lang.String[]],false,113,1,2,0,2,2,2,8,0,4,1,2,1,2,1,0,0,0,0,18,4,2,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthLargestInTwoSortedArray.java,com.interview.array.KthLargestInTwoSortedArray,"kthLargest/3[int[],int[],int]",false,45,2,2,1,1,1,1,3,1,0,3,1,1,1,0,0,0,0,0,4,0,2,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ShortestPalindrome.java,com.interview.array.ShortestPalindrome,main/1[java.lang.String[]],false,77,1,2,0,2,1,2,4,0,1,1,2,1,2,0,0,0,0,1,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ShortestPalindrome.java,com.interview.array.ShortestPalindrome,shortestPalindrome/1[java.lang.String],false,19,2,3,1,2,2,7,14,1,5,1,7,2,1,1,0,0,0,0,2,5,2,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ShortestPalindrome.java,com.interview.array.ShortestPalindrome,kmp/1[char[]],false,36,2,1,1,0,5,0,24,1,3,1,0,0,0,2,3,0,0,0,9,7,4,4,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ShortestPalindrome.java,com.interview.array.ShortestPalindrome,createInput/1[java.lang.String],false,63,1,1,1,0,3,3,12,1,3,1,3,0,0,2,0,0,0,0,5,6,3,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinimumNumberOfPerfectSquares.java,com.interview.dynamic.MinimumNumberOfPerfectSquares,numSquaresUsingDP/1[int],false,19,1,0,0,0,4,3,15,1,4,1,3,0,0,2,0,0,0,0,6,7,5,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinimumNumberOfPerfectSquares.java,com.interview.dynamic.MinimumNumberOfPerfectSquares,numSquaresUsingBFS/1[int],false,38,0,0,0,0,10,8,41,3,10,1,8,0,0,4,2,0,0,0,4,10,2,4,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\string\ValidWordAbbreviationTest.java,com.interview.string.ValidWordAbbreviationTest,testDifferentCases/0,false,9,2,2,0,2,1,2,5,0,2,0,2,0,0,0,0,0,0,129,0,2,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EditDistance.java,com.interview.dynamic.EditDistance,"printActualEdits/3[int[][],char[],char[]]",false,65,2,1,1,0,8,1,29,0,2,3,1,0,0,1,6,0,0,6,24,8,24,2,0,0,0,24,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EditDistance.java,com.interview.dynamic.EditDistance,main/1[java.lang.String[]],false,97,1,2,0,2,1,3,7,0,4,1,3,1,2,0,0,0,0,2,0,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EditDistance.java,com.interview.dynamic.EditDistance,"dynamicEditDistance/2[char[],char[]]",false,37,3,3,1,2,6,2,21,1,5,2,2,2,1,4,1,0,0,0,18,9,11,3,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EditDistance.java,com.interview.dynamic.EditDistance,"recEditDistance/4[char[],char[],int,int]",false,23,2,3,1,2,4,2,9,3,0,4,2,2,1,0,3,0,0,0,8,0,9,1,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EditDistance.java,com.interview.dynamic.EditDistance,"min/3[int,int,int]",false,92,0,2,2,0,1,1,4,1,1,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SortedAndRotatedArraySearch.java,com.interview.binarysearch.SortedAndRotatedArraySearch,main/1[java.lang.String[]],false,80,1,2,0,2,1,3,21,0,4,1,3,1,1,0,0,0,0,0,41,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SortedAndRotatedArraySearch.java,com.interview.binarysearch.SortedAndRotatedArraySearch,"search/2[int[],int]",false,21,1,1,1,0,8,0,27,2,3,2,0,0,0,1,1,0,1,0,8,7,7,3,0,0,0,9,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SortedAndRotatedArraySearch.java,com.interview.binarysearch.SortedAndRotatedArraySearch,"searchWithDuplicates/2[int[],int]",false,50,1,0,0,0,10,0,33,2,3,2,0,0,0,1,3,0,1,0,7,7,7,3,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OptimalDivision.java,com.interview.recursion.OptimalDivision$Result,"Result/2[double,java.lang.String]",true,58,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\GroupAnagramsTogether.java,com.interview.string.GroupAnagramsTogether,groupAnagrams/1[java.lang.String[]],false,9,1,0,0,0,5,8,24,2,8,1,8,0,0,1,2,0,0,0,2,8,0,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\MinimumEditForReversePolishNotation.java,com.interview.recursion.MinimumEditForReversePolishNotation,minimum/1[char[]],false,8,2,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,2,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\MinimumEditForReversePolishNotation.java,com.interview.recursion.MinimumEditForReversePolishNotation,"minimum/3[char[],int,int]",false,12,2,3,2,1,10,2,31,5,5,3,2,1,0,0,6,0,4,0,18,10,14,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\MinimumEditForReversePolishNotation.java,com.interview.recursion.MinimumEditForReversePolishNotation,main/1[java.lang.String[]],false,48,1,2,0,2,1,3,4,0,1,1,3,1,2,0,0,0,0,1,0,1,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MatrixMultiplicationCost.java,com.interview.dynamic.MatrixMultiplicationCost,findCost/1[int[]],false,8,1,1,1,0,5,0,17,1,6,1,0,0,0,3,0,0,0,0,7,9,6,4,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MatrixMultiplicationCost.java,com.interview.dynamic.MatrixMultiplicationCost,main/1[java.lang.String[]],false,26,1,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,5,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\DifferentWaysToAddParentheses.java,com.interview.recursion.DifferentWaysToAddParentheses,diffWaysToCompute/1[java.lang.String],false,9,1,2,1,1,5,8,14,1,4,1,8,1,2,1,3,0,0,0,6,5,3,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\DifferentWaysToAddParentheses.java,com.interview.recursion.DifferentWaysToAddParentheses,"diffWaysToComputeUtil/4[java.util.List<java.lang.Integer>,java.util.List<java.lang.Character>,int,int]",false,24,1,4,2,2,6,6,21,3,4,4,6,2,1,3,0,0,0,0,3,4,2,3,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\DifferentWaysToAddParentheses.java,com.interview.recursion.DifferentWaysToAddParentheses,"operate/3[int,int,char]",false,46,0,1,1,0,4,0,11,3,0,3,0,0,0,0,0,0,0,0,0,0,3,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\DifferentWaysToAddParentheses.java,com.interview.recursion.DifferentWaysToAddParentheses,main/1[java.lang.String[]],false,58,1,2,0,2,1,3,5,0,3,1,3,1,3,0,0,0,0,1,0,2,0,0,0,0,1,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\RestoreIPAddresses.java,com.interview.recursion.RestoreIPAddresses,restoreIpAddresses/1[java.lang.String],false,15,1,1,0,1,1,1,6,1,2,1,1,1,1,0,0,0,0,0,2,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\RestoreIPAddresses.java,com.interview.recursion.RestoreIPAddresses,"restoreIpAddressesUtil/5[java.lang.String,int,int,java.util.List<java.lang.String>,java.util.List<java.lang.String>]",false,22,1,3,2,1,11,11,25,2,4,5,11,1,0,2,6,0,0,1,10,4,5,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LevelOrderTraversalInReverse.java,com.interview.tree.LevelOrderTraversalInReverse,main/1[java.lang.String[]],false,54,3,4,0,4,1,2,15,0,3,1,2,1,1,0,0,0,0,0,9,12,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LevelOrderTraversalInReverse.java,com.interview.tree.LevelOrderTraversalInReverse,reverseLevelOrderTraversal/1[com.interview.tree.Node],false,31,1,1,1,0,6,7,21,1,2,1,7,0,0,2,3,0,0,1,0,3,1,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumLengthChainPair.java,com.interview.dynamic.MaximumLengthChainPair$Pair,"Pair/2[int,int]",true,11,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumLengthChainPair.java,com.interview.dynamic.MaximumLengthChainPair$Pair,compareTo/1[com.interview.dynamic.MaximumLengthChainPair.Pair],false,18,1,0,0,0,2,0,8,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\FillupMatrix.java,com.interview.multithreaded.FillupMatrix,updateMatrix/1[long],false,43,0,1,1,0,2,0,6,0,0,1,0,0,0,0,0,0,2,1,0,1,3,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\FillupMatrix.java,com.interview.multithreaded.FillupMatrix,updateMatrix/0,false,38,1,3,1,2,1,2,4,0,1,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\FillupMatrix.java,com.interview.multithreaded.FillupMatrix,next/0,false,50,0,1,1,0,1,1,4,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\FillupMatrix.java,com.interview.multithreaded.FillupMatrix,FillupMatrix/1[int],true,32,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\FillupMatrix.java,com.interview.multithreaded.FillupMatrix,"getVal/2[int,int]",false,55,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\FillupMatrix.java,com.interview.multithreaded.FillupMatrix,main/1[java.lang.String[]],false,59,1,3,0,3,4,6,15,0,6,1,6,2,2,3,0,0,0,0,6,6,1,2,0,0,1,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructFullTreeFromPreOrderPostOrder.java,com.interview.tree.ConstructFullTreeFromPreOrderPostOrder,"constructTree/5[int[],int[],int,int,int]",false,19,3,4,2,2,5,1,18,2,3,5,1,1,0,1,1,0,0,0,8,8,9,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructFullTreeFromPreOrderPostOrder.java,com.interview.tree.ConstructFullTreeFromPreOrderPostOrder,main/1[java.lang.String[]],false,40,3,6,0,6,1,4,10,0,5,1,4,1,2,0,0,0,0,0,14,5,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructFullTreeFromPreOrderPostOrder.java,com.interview.tree.ConstructFullTreeFromPreOrderPostOrder,"constructTree/2[int[],int[]]",false,13,3,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ScrambledString.java,com.interview.dynamic.ScrambledString$Index,equals/1[java.lang.Object],false,20,1,0,0,0,8,1,9,6,1,1,1,0,0,0,7,0,0,0,0,1,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\ScrambledString.java,com.interview.dynamic.ScrambledString$Index,hashCode/0,false,34,0,0,0,0,1,0,7,1,1,0,0,0,0,0,0,0,0,0,3,4,6,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LevelOrderTraversal.java,com.interview.tree.LevelOrderTraversal,levelOrder/1[com.interview.tree.Node],false,20,1,3,3,0,5,7,19,1,1,1,7,0,0,1,3,0,0,2,1,2,1,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LevelOrderTraversal.java,com.interview.tree.LevelOrderTraversal,main/1[java.lang.String[]],false,40,3,4,0,4,1,2,13,0,3,1,2,1,1,0,0,0,0,0,7,10,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.Operation,"perform/2[int,int]",false,108,0,2,2,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SymbolExpressionEvaluation.java,com.interview.dynamic.Holder,values/0,false,71,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SymbolExpressionEvaluation.java,com.interview.dynamic.Holder,add/1[java.lang.Character],false,68,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MoveAllZerosToEnd.java,com.interview.array.MoveAllZerosToEnd,main/1[java.lang.String[]],false,22,1,2,0,2,2,2,8,0,3,1,2,1,1,1,0,0,0,0,10,3,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MoveAllZerosToEnd.java,com.interview.array.MoveAllZerosToEnd,moveZeros/1[int[]],false,5,1,1,1,0,4,0,16,0,2,1,0,0,0,2,1,0,0,0,4,4,0,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\SelectMRandomNumbersInStream.java,com.interview.random.SelectMRandomNumbersInStream,"selectRandom/2[int[],int]",false,9,1,1,1,0,4,1,13,1,4,2,1,0,0,2,0,0,1,0,3,6,3,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\SelectMRandomNumbersInStream.java,com.interview.random.SelectMRandomNumbersInStream,main/1[java.lang.String[]],false,24,1,2,0,2,2,2,8,0,4,1,2,1,1,1,0,0,0,1,15,4,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.Point,"Point/2[int,int]",true,32,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RepeatingAndMissingNumber.java,com.interview.array.RepeatingAndMissingNumber,findNumbers/1[int[]],false,16,2,2,1,1,5,1,20,1,3,1,1,0,0,2,0,0,0,0,8,7,4,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RepeatingAndMissingNumber.java,com.interview.array.RepeatingAndMissingNumber,main/1[java.lang.String[]],false,36,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,8,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FloodFillAlgorithm.java,com.interview.graph.FloodFillAlgorithm,"fillUtil/5[int[][],int,int,int,int]",false,13,2,3,2,1,6,1,13,2,0,5,1,1,0,0,1,0,0,0,6,1,4,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FloodFillAlgorithm.java,com.interview.graph.FloodFillAlgorithm,"fillDFS/5[int[][],int,int,int,int]",false,9,2,2,1,1,1,1,3,0,0,5,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FloodFillAlgorithm.java,com.interview.graph.FloodFillAlgorithm,main/1[java.lang.String[]],false,28,1,2,0,2,3,3,11,0,4,1,3,1,2,2,0,0,0,1,42,4,1,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\CombinationWithStar.java,com.interview.recursion.CombinationWithStar,"combine/3[char[],int,boolean[]]",false,18,3,4,2,2,2,2,8,0,1,3,2,2,1,1,0,0,0,0,1,3,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\CombinationWithStar.java,com.interview.recursion.CombinationWithStar,"printArray/2[char[],boolean[]]",false,27,2,1,1,0,3,2,11,0,1,2,2,0,0,1,0,0,0,2,1,1,1,2,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\CombinationWithStar.java,com.interview.recursion.CombinationWithStar,main/1[java.lang.String[]],false,38,2,2,0,2,1,1,6,0,3,1,1,1,2,0,0,0,0,0,1,3,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorOfTwoTree.java,com.interview.tree.NextInorderSuccessorOfTwoTree,hasNext/0,false,24,0,1,1,0,5,1,6,2,0,0,1,0,0,0,2,0,0,0,2,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorOfTwoTree.java,com.interview.tree.NextInorderSuccessorOfTwoTree,next/0,false,32,1,1,1,0,7,4,30,1,1,0,4,0,0,2,2,0,0,0,0,11,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorOfTwoTree.java,com.interview.tree.NextInorderSuccessorOfTwoTree,"NextInorderSuccessorOfTwoTree/2[com.interview.tree.Node,com.interview.tree.Node]",true,19,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorOfTwoTree.java,com.interview.tree.NextInorderSuccessorOfTwoTree,main/1[java.lang.String[]],false,60,3,5,0,5,2,4,20,0,4,1,4,2,1,1,0,0,0,0,11,15,0,1,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ChunkMerge.java,com.interview.array.ChunkMerge,"mergeSort/4[java.util.List<java.lang.Integer>,int,int,int[]]",false,73,2,4,2,2,2,2,9,1,1,4,2,2,1,0,0,0,1,0,2,1,3,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ChunkMerge.java,com.interview.array.ChunkMerge,"sortedMerge/4[java.util.List<java.lang.Integer>,int,int,int[]]",false,83,1,1,1,0,7,3,29,0,5,4,3,0,0,4,0,0,1,0,6,5,7,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ChunkMerge.java,com.interview.array.ChunkMerge,main/1[java.lang.String[]],false,118,1,3,0,3,3,8,35,0,17,1,8,2,3,2,0,0,0,2,33,18,2,1,0,0,0,22,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ChunkMerge.java,com.interview.array.ChunkMerge,mergeUsingHeap/1[java.util.List<java.util.List<java.lang.Integer>>],false,31,1,2,1,1,4,8,21,1,5,1,8,0,0,2,0,0,0,0,4,10,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ChunkMerge.java,com.interview.array.ChunkMerge,mergeChunksOfDifferentSize/1[java.util.List<java.util.List<java.lang.Integer>>],false,55,2,2,1,1,4,5,15,1,3,1,5,1,2,3,0,0,0,0,8,5,5,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumGap.java,com.interview.array.MaximumGap$Bucket,update/1[int],false,21,0,1,1,0,2,2,11,0,0,1,2,0,0,0,0,0,0,0,0,5,0,1,0,0,0,7,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixFindAllSubSquareRectangleMatrix.java,com.interview.multiarray.MatrixFindAllSubSquareRectangleMatrix,printSumOfAllRectangleMatrix/1[int[][]],false,25,1,1,1,0,7,1,17,0,7,1,1,0,0,6,0,0,2,5,10,8,11,6,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixFindAllSubSquareRectangleMatrix.java,com.interview.multiarray.MatrixFindAllSubSquareRectangleMatrix,printSumOfAllSquareMatrix/1[int[][]],false,8,1,0,0,0,6,1,15,0,6,1,1,0,0,5,0,0,0,4,6,7,7,5,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixFindAllSubSquareRectangleMatrix.java,com.interview.multiarray.MatrixFindAllSubSquareRectangleMatrix,main/1[java.lang.String[]],false,42,1,2,0,2,1,1,5,0,2,1,1,1,1,0,0,0,0,0,9,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Immutable2DSumRangeQuery.java,com.interview.dynamic.Immutable2DSumRangeQuery,Immutable2DSumRangeQuery/1[int[][]],true,19,1,1,1,0,4,0,14,0,4,1,0,0,0,2,1,0,0,0,15,8,10,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Immutable2DSumRangeQuery.java,com.interview.dynamic.Immutable2DSumRangeQuery,"sumQuery/4[int,int,int,int]",false,34,0,1,1,0,1,0,7,1,0,4,0,0,0,0,0,0,0,0,4,0,6,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Immutable2DSumRangeQuery.java,com.interview.dynamic.Immutable2DSumRangeQuery,main/1[java.lang.String[]],false,42,2,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,45,3,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MinimumNumberFromSequence.java,com.interview.array.MinimumNumberFromSequence,find/1[char[]],false,17,2,1,1,0,5,0,22,1,5,1,0,0,0,2,2,0,0,0,14,11,9,4,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MinimumNumberFromSequence.java,com.interview.array.MinimumNumberFromSequence,main/1[java.lang.String[]],false,39,1,2,0,2,1,4,9,0,2,1,4,1,1,0,0,0,0,3,0,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\FactorialOfLargeNumber.java,com.interview.number.FactorialOfLargeNumber,"calculate/2[int[],int]",false,25,2,2,1,1,3,1,9,1,2,2,1,1,1,1,0,0,0,0,5,4,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\FactorialOfLargeNumber.java,com.interview.number.FactorialOfLargeNumber,main/1[java.lang.String[]],false,55,2,2,0,2,2,2,8,0,4,1,2,1,2,1,0,0,0,0,4,4,1,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\FactorialOfLargeNumber.java,com.interview.number.FactorialOfLargeNumber,"multiply/3[int[],int,int]",false,35,1,1,1,0,3,0,16,1,3,3,0,0,0,2,1,0,0,0,8,8,6,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle,"findWords/2[char[][],java.lang.String[]]",false,20,3,4,1,3,4,2,15,1,6,2,2,1,1,3,0,0,0,0,3,6,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle,"findWordsUtil/8[char[][],com.interview.graph.Boggle.Trie,int,int,java.lang.StringBuffer,java.util.Set<java.lang.Integer>,java.util.Set<java.lang.String>,int]",false,36,3,5,2,3,8,11,25,3,2,8,11,1,0,0,0,0,0,0,8,2,8,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle,main/1[java.lang.String[]],false,140,2,2,0,2,1,4,7,0,5,1,4,1,2,0,0,0,0,4,0,4,0,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\Rand7UsingRand5.java,com.interview.random.Rand7UsingRand5,rand7/0,false,5,1,2,1,1,2,1,7,1,1,0,1,1,1,1,0,0,3,0,7,2,8,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\Rand7UsingRand5.java,com.interview.random.Rand7UsingRand5,main/1[java.lang.String[]],false,17,1,2,0,2,2,2,6,0,2,1,2,1,2,1,0,0,0,0,2,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\random\Rand7UsingRand5.java,com.interview.random.Rand7UsingRand5,rand5/0,false,13,0,1,1,0,1,2,3,1,0,0,2,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\TernaryTree.java,com.interview.suffixprefix.TernaryTree,"search/3[com.interview.suffixprefix.TernaryTree.Node,java.lang.String,int]",false,25,2,3,2,1,6,3,21,6,1,3,3,1,0,0,4,0,0,0,2,1,2,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\TernaryTree.java,com.interview.suffixprefix.TernaryTree,insert/1[java.lang.String],false,16,2,2,1,1,1,1,4,0,1,1,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\TernaryTree.java,com.interview.suffixprefix.TernaryTree,main/1[java.lang.String[]],false,71,1,3,0,3,1,3,16,0,1,1,3,2,3,0,0,0,0,13,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\TernaryTree.java,com.interview.suffixprefix.TernaryTree,search/1[java.lang.String],false,21,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\TernaryTree.java,com.interview.suffixprefix.TernaryTree,"insert/3[com.interview.suffixprefix.TernaryTree.Node,java.lang.String,int]",false,44,2,4,2,2,7,3,28,2,0,3,3,1,0,0,5,0,2,0,4,8,4,3,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\FibonacciSeries.java,com.interview.dynamic.FibonacciSeries,fibonacciSeriesRecursive/1[int],false,51,1,3,2,1,3,1,6,2,0,1,1,1,0,0,2,0,0,0,4,0,3,1,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\FibonacciSeries.java,com.interview.dynamic.FibonacciSeries,fibonacciSeries/1[int],false,30,0,1,1,0,4,0,13,2,4,1,0,0,0,1,2,0,0,0,3,6,1,1,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\FibonacciSeries.java,com.interview.dynamic.FibonacciSeries,main/1[java.lang.String[]],false,58,1,3,0,3,1,3,5,0,1,1,3,2,1,0,0,0,0,0,2,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RepeatingAndMissingNumber.java,com.interview.array.RepeatingAndMissingNumber$Pair,toString/0,false,11,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\ShortestDistanceFromAllBuildings.java,com.interview.multiarray.ShortestDistanceFromAllBuildings,main/1[java.lang.String[]],false,78,2,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,46,3,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\ShortestDistanceFromAllBuildings.java,com.interview.multiarray.ShortestDistanceFromAllBuildings,"getNeighbors/5[com.interview.multiarray.ShortestDistanceFromAllBuildings.Point,int[][],boolean[][],int,int]",false,64,3,2,1,1,13,1,8,1,1,5,1,0,0,0,4,0,0,0,24,1,18,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\ShortestDistanceFromAllBuildings.java,com.interview.multiarray.ShortestDistanceFromAllBuildings,shortestDistance/1[int[][]],false,28,4,3,1,2,10,5,33,1,11,1,5,1,1,6,3,0,0,0,14,14,0,5,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Bridge.java,com.interview.graph.Bridge,getBridge/1[com.interview.graph.Graph<T>],false,15,5,2,0,2,3,3,13,1,5,1,3,0,0,1,0,0,0,0,0,5,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Bridge.java,com.interview.graph.Bridge,main/1[java.lang.String[]],false,54,3,4,0,4,1,3,11,0,3,1,3,0,0,0,0,0,0,0,10,3,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Bridge.java,com.interview.graph.Bridge,"BridgeUtil/6[com.interview.graph.Vertex<T>,java.util.Set<com.interview.graph.Edge<T>>,java.util.Map<com.interview.graph.Vertex<T>,java.lang.Integer>,java.util.Map<com.interview.graph.Vertex<T>,java.lang.Integer>,java.util.Map<com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>>,java.util.Map<com.interview.graph.Vertex<T>,java.lang.Boolean>]",false,32,4,4,0,4,5,11,21,0,0,6,11,0,0,1,0,0,0,0,0,0,0,3,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\JumpGame.java,com.interview.array.JumpGame,main/1[java.lang.String[]],false,50,2,3,0,3,1,4,7,0,3,1,4,2,1,0,0,0,0,0,12,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\JumpGame.java,com.interview.array.JumpGame,jump/1[int[]],false,36,1,1,1,0,3,1,13,1,4,1,1,0,0,1,1,0,0,0,5,6,2,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\JumpGame.java,com.interview.array.JumpGame,canJump/1[int[]],false,27,1,1,1,0,4,1,8,1,2,1,1,0,0,1,1,0,0,0,2,3,1,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DiceThrowWays.java,com.interview.dynamic.DiceThrowWays,main/1[java.lang.String[]],false,38,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,3,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DiceThrowWays.java,com.interview.dynamic.DiceThrowWays,"numberOfWays/3[int,int,int]",false,11,1,1,1,0,8,0,21,1,4,3,0,0,0,3,1,0,0,0,10,7,5,4,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\DiameterOfTree.java,com.interview.tree.DiameterOfTree,main/1[java.lang.String[]],false,34,3,4,0,4,1,3,18,0,3,1,3,1,2,0,0,0,0,0,12,15,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\DiameterOfTree.java,com.interview.tree.DiameterOfTree,diameter/1[com.interview.tree.Node],false,15,3,3,1,2,1,1,4,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\DiameterOfTree.java,com.interview.tree.DiameterOfTree,"diameter/2[com.interview.tree.Node,com.interview.tree.Height]",false,20,3,4,2,2,2,2,11,2,4,2,2,1,0,0,1,0,1,0,3,5,2,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\FourSum.java,com.interview.array.FourSum,"fourSum/2[int[],int]",false,23,1,1,1,0,19,3,59,2,7,2,3,0,0,3,9,0,0,0,25,7,27,4,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\FourSum.java,com.interview.array.FourSum,main/1[java.lang.String[]],false,82,2,2,0,2,1,2,8,0,5,1,2,1,1,0,0,0,0,0,13,5,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DeleteNAfterMNodes.java,com.interview.linklist.DeleteNAfterMNodes,"deleteNAfterMNodes/3[com.interview.linklist.Node,int,int]",false,15,1,1,1,0,8,0,23,1,2,3,0,0,0,3,5,0,0,0,3,7,1,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DeleteNAfterMNodes.java,com.interview.linklist.DeleteNAfterMNodes,main/1[java.lang.String[]],false,38,3,5,0,5,1,3,13,0,3,1,3,1,1,0,0,0,0,0,8,9,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TarjanStronglyConnectedComponent.java,com.interview.graph.TarjanStronglyConnectedComponent,sccUtil/1[com.interview.graph.Vertex<java.lang.Integer>],false,59,2,5,2,3,6,13,28,0,6,1,13,1,0,2,1,0,0,0,0,2,0,2,0,0,2,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TarjanStronglyConnectedComponent.java,com.interview.graph.TarjanStronglyConnectedComponent,main/1[java.lang.String[]],false,100,3,4,0,4,1,6,20,0,5,1,6,1,2,0,0,0,0,1,20,3,1,1,0,0,2,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TarjanStronglyConnectedComponent.java,com.interview.graph.TarjanStronglyConnectedComponent,scc/1[com.interview.graph.Graph<java.lang.Integer>],false,26,3,4,2,2,3,3,16,1,0,1,3,1,1,1,0,0,0,0,1,7,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\array\NumberOfTriangledInUnsortedArrayTest.java,com.interview.array.NumberOfTriangledInUnsortedArrayTest,testSimpleCase/0,false,9,3,0,0,0,1,2,6,0,3,0,2,0,0,0,0,0,0,0,8,3,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SmallestWindowContaingAllCharacters.java,com.interview.string.SmallestWindowContaingAllCharacters,"minWindow/2[java.lang.String,java.lang.String]",false,13,0,1,1,0,11,6,46,1,9,2,6,0,0,3,6,0,0,1,10,12,6,4,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SmallestWindowContaingAllCharacters.java,com.interview.string.SmallestWindowContaingAllCharacters,main/1[java.lang.String[]],false,60,1,2,0,2,1,2,7,0,4,1,2,1,1,0,0,0,0,2,0,4,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleUndirectedGraph.java,com.interview.graph.CycleUndirectedGraph,main/1[java.lang.String[]],false,70,2,5,0,5,1,5,14,0,3,1,5,0,0,0,0,0,0,0,12,4,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleUndirectedGraph.java,com.interview.graph.CycleUndirectedGraph,hasCycleDFS/1[com.interview.graph.Graph<T>],false,39,4,2,0,2,4,3,13,2,2,1,3,0,0,1,0,0,0,0,0,2,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleUndirectedGraph.java,com.interview.graph.CycleUndirectedGraph,"hasCycleDFSUtil/3[com.interview.graph.Vertex<T>,java.util.Set<com.interview.graph.Vertex<T>>,com.interview.graph.Vertex<T>]",false,53,3,3,0,3,5,5,16,3,1,3,5,0,0,1,0,0,0,0,0,1,0,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleUndirectedGraph.java,com.interview.graph.CycleUndirectedGraph,hasCycleUsingDisjointSets/1[com.interview.graph.Graph<T>],false,21,5,9,0,9,4,8,15,2,3,1,8,0,0,2,1,0,0,0,0,3,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FindingCelebrity.java,com.interview.misc.Relation,"knows/2[int,int]",false,8,0,1,1,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinCostPath.java,com.interview.dynamic.MinCostPath,"minCost/3[int[][],int,int]",false,8,2,2,1,1,5,1,19,1,6,3,1,1,1,4,0,0,0,0,18,12,9,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinCostPath.java,com.interview.dynamic.MinCostPath,"min/3[int,int,int]",false,49,0,2,2,0,1,1,4,1,1,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinCostPath.java,com.interview.dynamic.MinCostPath,main/1[java.lang.String[]],false,54,1,3,0,3,1,3,8,0,4,1,3,2,4,0,0,0,0,0,16,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinCostPath.java,com.interview.dynamic.MinCostPath,"minCostRec/3[int[][],int,int]",false,30,2,2,1,1,1,1,3,1,0,3,1,1,2,0,0,0,0,0,2,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinCostPath.java,com.interview.dynamic.MinCostPath,"minCostRec/5[int[][],int,int,int,int]",false,34,2,4,2,2,5,2,12,3,3,5,2,2,1,0,2,0,0,0,4,3,5,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInAdjacentWay.java,com.interview.recursion.PrintArrayInAdjacentWay,"printArray/2[int,int]",false,26,1,1,0,1,1,1,4,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInAdjacentWay.java,com.interview.recursion.PrintArrayInAdjacentWay,"printArray/4[int,int,java.util.List<java.lang.Integer>,int]",false,31,1,3,2,1,5,6,17,2,1,4,6,1,0,2,1,0,0,1,4,1,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInAdjacentWay.java,com.interview.recursion.PrintArrayInAdjacentWay,"numberOfWaysPossible/2[int[],int]",false,50,2,3,2,1,5,1,16,3,2,2,1,1,0,0,1,0,0,0,8,3,6,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInAdjacentWay.java,com.interview.recursion.PrintArrayInAdjacentWay,numberOfWaysPossibleFaster/1[int[]],false,76,1,1,1,0,3,0,16,1,4,1,0,0,0,1,0,0,0,0,7,8,4,2,0,0,0,43,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInAdjacentWay.java,com.interview.recursion.PrintArrayInAdjacentWay,main/1[java.lang.String[]],false,92,1,3,0,3,1,3,6,0,2,1,3,2,1,0,0,0,0,0,10,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EggDropping.java,com.interview.dynamic.EggDropping,"calculate/2[int,int]",false,8,1,1,1,0,6,1,19,1,6,2,1,0,0,4,0,0,0,0,11,10,6,4,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EggDropping.java,com.interview.dynamic.EggDropping,main/1[java.lang.String[]],false,47,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,2,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\EggDropping.java,com.interview.dynamic.EggDropping,"calculateRecursive/2[int,int]",false,30,1,2,1,1,5,2,16,3,3,2,2,1,0,1,2,0,0,0,8,4,4,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MissingRanges.java,com.interview.array.MissingRanges,"findMissingRanges/3[int[],int,int]",false,16,2,1,0,1,7,3,21,2,2,3,3,1,1,1,3,0,1,0,15,2,11,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MissingRanges.java,com.interview.array.MissingRanges,"makeRange/2[int,int]",false,38,0,1,1,0,2,1,8,2,0,2,1,0,0,0,1,0,0,1,0,0,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestCommonSubstring.java,com.interview.dynamic.LongestCommonSubstring,"longestCommonSubstring/2[char[],char[]]",false,11,2,1,1,0,5,0,15,1,4,2,0,0,0,2,1,0,0,0,10,6,7,4,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestCommonSubstring.java,com.interview.dynamic.LongestCommonSubstring,main/1[java.lang.String[]],false,49,1,3,0,3,1,4,7,0,3,1,4,2,1,0,0,0,0,2,2,3,2,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestCommonSubstring.java,com.interview.dynamic.LongestCommonSubstring,"longestCommonSubstringRec/5[char[],char[],int,int,boolean]",false,31,2,3,2,1,6,2,18,4,1,5,2,1,0,0,4,0,0,0,13,2,8,2,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FloatPointConversion.java,com.interview.misc.FloatPointConversion,main/1[java.lang.String[]],false,55,1,2,0,2,1,2,6,0,1,1,2,1,2,0,0,0,0,3,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FloatPointConversion.java,com.interview.misc.FloatPointConversion,convert/1[java.lang.String],false,13,1,2,1,1,3,5,15,1,8,1,5,1,1,0,0,0,0,2,3,10,2,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FloatPointConversion.java,com.interview.misc.FloatPointConversion,toDouble/1[java.lang.String],false,29,0,1,1,0,6,3,23,1,5,1,3,0,0,1,1,0,2,1,7,11,5,2,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DijkstraShortestPath.java,com.interview.graph.DijkstraShortestPath,"getVertexForEdge/2[com.interview.graph.Vertex<java.lang.Integer>,com.interview.graph.Edge<java.lang.Integer>]",false,79,2,4,1,3,2,3,3,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DijkstraShortestPath.java,com.interview.graph.DijkstraShortestPath,main/1[java.lang.String[]],false,83,3,5,0,5,1,4,14,0,4,1,4,1,2,0,0,0,0,0,22,4,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DijkstraShortestPath.java,com.interview.graph.DijkstraShortestPath,"shortestPath/2[com.interview.graph.Graph<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>]",false,20,5,12,1,11,6,13,28,1,7,2,13,1,1,3,0,0,0,0,2,7,1,3,0,0,0,19,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MeetingRooms.java,com.interview.array.MeetingRooms$Interval,"Interval/2[int,int]",true,24,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MeetingRooms.java,com.interview.array.MeetingRooms$Interval,Interval/0,true,23,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ShortestDistanceFromExit.java,com.interview.graph.Point,"Point/2[int,int]",true,15,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\string\PalindromePairTest.java,com.interview.string.PalindromePairTest,testDifferentCases/0,false,12,4,5,0,5,1,3,19,0,8,0,3,1,1,0,0,0,0,19,32,12,0,0,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\string\PalindromePairTest.java,com.interview.string.PalindromePairTest,createList/1[int[]],false,32,1,1,1,0,2,2,10,1,3,1,2,0,0,1,0,0,1,0,3,4,1,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolExample.java,com.interview.multithreaded.ThreadPoolExample,main/1[java.lang.String[]],false,30,1,2,0,2,1,1,4,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolExample.java,com.interview.multithreaded.ThreadPoolExample,doWork/0,false,18,1,2,1,1,3,5,11,0,5,0,5,0,0,2,0,0,0,0,4,5,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\InsertInterval.java,com.interview.misc.InsertInterval$Interval,toString/0,false,25,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\InsertInterval.java,com.interview.misc.InsertInterval$Interval,"Interval/2[int,int]",true,32,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\array\ArrayAdditionTest.java,com.interview.array.ArrayAdditionTest,testAddSimple/0,false,9,3,0,0,0,1,2,8,0,5,0,2,0,0,0,0,0,0,0,21,5,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RabinKarpSearch.java,com.interview.string.RabinKarpSearch,"patternSearch/2[char[],char[]]",false,19,2,4,1,3,5,3,15,2,5,2,3,3,1,1,1,0,0,0,13,6,14,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RabinKarpSearch.java,com.interview.string.RabinKarpSearch,main/1[java.lang.String[]],false,64,1,2,0,2,1,3,8,0,1,1,3,1,2,0,0,0,0,10,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RabinKarpSearch.java,com.interview.string.RabinKarpSearch,"recalculateHash/5[char[],int,int,long,int]",false,35,1,1,1,0,1,1,6,1,1,5,1,0,0,0,0,0,0,0,1,3,4,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RabinKarpSearch.java,com.interview.string.RabinKarpSearch,"checkEqual/6[char[],int,int,char[],int,int]",false,50,1,1,1,0,5,0,13,3,0,6,0,0,0,1,2,0,0,0,0,0,2,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RabinKarpSearch.java,com.interview.string.RabinKarpSearch,"createHash/2[char[],int]",false,42,1,1,1,0,2,1,7,1,2,2,1,0,0,1,0,0,0,0,2,3,1,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\NthElementOfCountNumberSequence.java,com.interview.array.NthElementOfCountNumberSequence,main/1[java.lang.String[]],false,43,1,2,0,2,2,3,8,0,3,1,3,1,1,1,0,0,0,0,2,3,0,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\NthElementOfCountNumberSequence.java,com.interview.array.NthElementOfCountNumberSequence,nthElement/1[int],false,16,0,1,1,0,4,3,27,1,6,1,3,0,0,2,1,0,0,0,6,10,0,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MoveCellPerCellValue.java,com.interview.multiarray.MoveCellPerCellValue,isAllCellTraversed/1[com.interview.multiarray.Cell[][]],false,19,2,1,1,0,5,0,23,4,7,1,0,0,0,1,3,0,0,0,8,10,2,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MoveCellPerCellValue.java,com.interview.multiarray.MoveCellPerCellValue,main/1[java.lang.String[]],false,44,2,3,0,3,1,2,11,0,2,1,2,1,1,0,0,0,0,0,24,8,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInCustomizedFormat.java,com.interview.recursion.PrintArrayInCustomizedFormat,"DFS/4[char[][],int,int,java.util.Map<java.lang.Character,java.lang.Boolean>]",false,26,2,3,2,1,5,4,16,0,3,4,4,1,0,2,2,0,0,1,6,3,2,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInCustomizedFormat.java,com.interview.recursion.PrintArrayInCustomizedFormat,print/1[char[][]],false,11,2,2,1,1,6,5,13,0,3,1,5,1,1,1,0,0,0,0,8,3,0,3,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintArrayInCustomizedFormat.java,com.interview.recursion.PrintArrayInCustomizedFormat,main/1[java.lang.String[]],false,43,1,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,0,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\TripletToSumInLinkList.java,com.interview.linklist.TripletToSumInLinkList,"printTriplet/4[com.interview.linklist.Node,com.interview.linklist.Node,com.interview.linklist.Node,int]",false,14,2,3,1,2,9,2,26,1,4,4,2,0,0,2,7,0,0,2,0,9,4,3,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\TripletToSumInLinkList.java,com.interview.linklist.TripletToSumInLinkList,main/1[java.lang.String[]],false,42,3,4,0,4,1,2,20,0,5,1,2,1,1,0,0,0,0,0,13,17,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ZigZagArrangement.java,com.interview.array.ZigZagArrangement,rearrange/1[int[]],false,18,2,2,1,1,5,1,16,0,2,1,1,1,1,1,0,0,0,0,6,3,5,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ZigZagArrangement.java,com.interview.array.ZigZagArrangement,"swap/3[int[],int,int]",false,34,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ZigZagArrangement.java,com.interview.array.ZigZagArrangement,main/1[java.lang.String[]],false,40,1,2,0,2,1,4,6,0,3,1,4,1,2,0,0,0,0,1,7,2,1,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaxSumForNonAdjacentElements.java,com.interview.dynamic.MaxSumForNonAdjacentElements,maxSum/1[int[]],false,22,1,1,1,0,2,1,10,1,4,1,1,0,0,1,0,0,0,0,3,6,1,1,0,0,0,9,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaxSumForNonAdjacentElements.java,com.interview.dynamic.MaxSumForNonAdjacentElements,maxSumCircularArray/1[int[]],false,51,1,0,0,0,5,1,23,3,8,1,1,0,0,2,2,0,0,0,11,12,4,1,0,0,0,37,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaxSumForNonAdjacentElements.java,com.interview.dynamic.MaxSumForNonAdjacentElements,"maxSum/2[int[],int]",false,36,2,3,2,1,3,2,9,3,0,2,2,1,0,0,2,0,0,0,7,0,3,1,0,0,0,5,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaxSumForNonAdjacentElements.java,com.interview.dynamic.MaxSumForNonAdjacentElements,main/1[java.lang.String[]],false,76,1,3,0,3,1,3,6,0,2,1,3,2,1,0,0,0,0,0,8,2,1,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumRectangularSubmatrixOf1s.java,com.interview.dynamic.MaximumRectangularSubmatrixOf1s,main/1[java.lang.String[]],false,51,1,2,0,2,2,1,6,0,3,1,1,1,1,0,1,0,0,0,25,3,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumRectangularSubmatrixOf1s.java,com.interview.dynamic.MaximumRectangularSubmatrixOf1s,maximum/1[int[][]],false,30,2,3,1,2,5,1,21,1,6,1,1,0,0,2,1,0,0,0,7,10,0,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\WordLadder.java,com.interview.graph.WordLadder,"setParent/5[java.util.Map<java.lang.String,java.util.List<java.lang.String>>,java.lang.String,java.util.List<java.lang.String>,java.lang.String,java.util.List<java.util.List<java.lang.String>>]",false,79,1,3,2,1,3,7,12,1,0,5,7,1,0,1,0,0,0,0,2,0,2,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\WordLadder.java,com.interview.graph.WordLadder,"findLadders/3[java.lang.String,java.lang.String,java.util.Set<java.lang.String>]",false,19,1,2,1,1,15,14,58,3,13,3,14,1,1,5,3,0,1,0,2,18,0,5,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\WordLadder.java,com.interview.graph.WordLadder,main/1[java.lang.String[]],false,92,1,2,0,2,1,4,8,0,4,1,4,1,2,0,0,0,0,7,0,4,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationBiggerThanNumber.java,com.interview.number.PermutationBiggerThanNumber,main/1[java.lang.String[]],false,61,1,2,0,2,2,2,8,0,3,1,2,1,2,1,0,0,0,1,6,3,1,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationBiggerThanNumber.java,com.interview.number.PermutationBiggerThanNumber,nextPermutation/1[int[]],false,20,2,3,1,2,4,2,15,0,3,1,2,2,1,1,1,0,0,0,8,5,6,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationBiggerThanNumber.java,com.interview.number.PermutationBiggerThanNumber,"reverse/3[int[],int,int]",false,37,1,1,1,0,2,0,9,0,1,3,0,0,0,1,0,0,0,0,0,3,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationBiggerThanNumber.java,com.interview.number.PermutationBiggerThanNumber,"ceiling/4[int,int,int,int[]]",false,47,1,1,1,0,6,0,15,1,1,4,0,0,0,1,1,0,2,0,5,3,6,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PrintPostOrderFromPreOrderInOrder.java,com.interview.tree.PrintPostOrderFromPreOrderInOrder,"postOrder/2[int[],int[]]",false,20,2,2,1,1,1,1,6,1,2,2,1,1,1,0,0,0,0,0,4,2,2,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PrintPostOrderFromPreOrderInOrder.java,com.interview.tree.PrintPostOrderFromPreOrderInOrder,"postOrder/7[int[],int[],int[],int,int,int,java.util.concurrent.atomic.AtomicInteger]",false,27,2,3,2,1,4,2,14,1,1,7,2,1,0,1,1,0,1,0,5,2,5,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PrintPostOrderFromPreOrderInOrder.java,com.interview.tree.PrintPostOrderFromPreOrderInOrder,main/1[java.lang.String[]],false,42,1,2,0,2,2,2,9,0,4,1,2,1,2,1,0,0,0,1,16,4,1,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NumberOfCombinationsForStairs.java,com.interview.number.NumberOfCombinationsForStairs,main/1[java.lang.String[]],false,47,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NumberOfCombinationsForStairs.java,com.interview.number.NumberOfCombinationsForStairs,"numberOfWays/2[int,int]",false,19,0,1,1,0,6,7,27,1,6,2,7,0,0,4,0,0,0,0,7,10,0,2,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ArrayAddition.java,com.interview.array.ArrayAddition,"add/2[int[],int[]]",false,5,1,2,2,0,7,1,33,2,8,2,1,0,0,4,1,0,0,0,20,19,14,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ArrayAddition.java,com.interview.array.ArrayAddition,main/1[java.lang.String[]],false,39,1,2,0,2,2,2,9,0,5,1,2,1,1,1,0,0,0,1,14,5,1,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\WinnerWithBeautifulNumber.java,com.interview.bits.WinnerWithBeautifulNumber,winner/1[int],false,16,0,1,1,0,6,0,24,2,3,1,0,0,0,2,2,0,1,0,12,7,4,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\WinnerWithBeautifulNumber.java,com.interview.bits.WinnerWithBeautifulNumber,main/1[java.lang.String[]],false,39,1,2,0,2,1,2,5,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree$BTreeNode,newNode/1[int],false,170,1,2,1,1,1,0,7,1,1,1,0,0,0,0,0,0,0,0,2,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree$BTreeNode,isFull/0,false,185,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,2,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree$BTreeNode,newNode/0,false,178,1,3,2,1,1,0,6,1,1,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BTree.java,com.interview.tree.BTree$BTreeNode,"insertKey/3[int,com.interview.tree.BTree.BTreeNode,com.interview.tree.BTree.BTreeNode]",false,153,1,2,2,0,4,0,16,0,2,3,0,0,0,2,0,0,0,0,7,7,6,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubsetSum.java,com.interview.dynamic.SubsetSum,main/1[java.lang.String[]],false,65,1,3,0,3,1,4,7,0,3,1,4,2,1,0,0,0,0,0,13,3,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubsetSum.java,com.interview.dynamic.SubsetSum,"subsetSum/2[int[],int]",false,17,2,1,1,0,5,0,17,1,4,2,0,0,0,3,0,0,0,0,12,7,9,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubsetSum.java,com.interview.dynamic.SubsetSum,partition/1[int[]],false,37,2,1,1,0,7,0,25,2,6,1,0,0,0,4,1,0,0,0,17,11,11,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\SortArrayByFrequence.java,com.interview.sort.SortArrayByFrequence,sortByFrequence/1[java.lang.Integer[]],false,38,2,3,1,2,3,4,19,0,5,1,4,0,0,1,0,0,0,0,2,7,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\SortArrayByFrequence.java,com.interview.sort.SortArrayByFrequence,main/1[java.lang.String[]],false,58,1,2,0,2,2,2,8,0,2,1,2,1,1,1,0,0,0,1,7,2,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\InsertInterval.java,com.interview.misc.InsertInterval,main/1[java.lang.String[]],false,62,2,3,0,3,1,3,13,0,6,1,3,1,1,0,0,0,0,0,10,6,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\InsertInterval.java,com.interview.misc.InsertInterval,"insert/2[java.util.List<com.interview.misc.InsertInterval.Interval>,com.interview.misc.InsertInterval.Interval]",false,35,1,1,1,0,7,5,28,1,3,2,5,0,0,1,0,0,1,0,1,7,0,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\SetPairTogether.java,com.interview.recursion.SetPairTogether,"swap/4[java.util.Map<java.lang.Integer,java.lang.Integer>,int[],int,int]",false,57,1,1,1,0,1,1,7,0,5,4,1,0,0,0,0,0,0,0,0,3,0,0,0,0,2,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\SetPairTogether.java,com.interview.recursion.SetPairTogether,"findMinimumSwapsUtil/4[int[],java.util.Map<java.lang.Integer,java.lang.Integer>,java.util.Map<java.lang.Integer,java.lang.Integer>,int]",false,27,2,4,2,2,3,4,24,3,9,4,4,2,1,0,2,0,0,0,6,9,5,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\SetPairTogether.java,com.interview.recursion.SetPairTogether,main/1[java.lang.String[]],false,66,1,2,0,2,1,3,12,0,3,1,3,1,3,0,0,0,0,0,18,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\SetPairTogether.java,com.interview.recursion.SetPairTogether,"findMinimumSwaps/2[int[],java.util.Map<java.lang.Integer,java.lang.Integer>]",false,19,2,2,1,1,2,2,7,1,2,2,2,1,2,1,0,0,0,0,2,2,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LargestSubArrayWithEqual0sAnd1s.java,com.interview.array.LargestSubArrayWithEqual0sAnd1s,main/1[java.lang.String[]],false,40,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,12,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LargestSubArrayWithEqual0sAnd1s.java,com.interview.array.LargestSubArrayWithEqual0sAnd1s,equalNumber/1[int[]],false,15,1,1,1,0,7,4,23,1,5,1,4,0,0,2,3,0,1,0,14,9,4,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LeetCodeCandy.java,com.interview.array.LeetCodeCandy,candy/1[int[]],false,8,1,0,0,0,7,0,37,1,7,1,0,0,0,1,3,0,1,0,14,18,6,5,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DirectedGraphConnectivity.java,com.interview.graph.DirectedGraphConnectivity,"DFSUtil1/2[com.interview.graph.Vertex<java.lang.Integer>,java.util.Map<com.interview.graph.Vertex<java.lang.Integer>,java.lang.Boolean>]",false,58,2,4,2,2,3,4,9,0,0,2,4,1,0,1,0,0,0,0,0,0,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DirectedGraphConnectivity.java,com.interview.graph.DirectedGraphConnectivity,"DFSUtil/3[com.interview.graph.Vertex<java.lang.Integer>,java.util.Map<com.interview.graph.Vertex<java.lang.Integer>,java.lang.Boolean>,java.util.Deque<com.interview.graph.Vertex<java.lang.Integer>>]",false,46,2,4,2,2,3,5,10,0,0,3,5,1,0,1,0,0,0,0,0,0,0,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DirectedGraphConnectivity.java,com.interview.graph.DirectedGraphConnectivity,main/1[java.lang.String[]],false,68,2,4,0,4,1,3,12,0,3,1,3,1,2,0,0,0,0,0,12,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DirectedGraphConnectivity.java,com.interview.graph.DirectedGraphConnectivity,scc/1[com.interview.graph.Graph<java.lang.Integer>],false,10,4,11,1,10,7,15,28,2,5,1,15,2,1,4,0,0,0,0,0,5,0,2,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WeightedJobSchedulingMaximumProfit.java,com.interview.dynamic.FinishTimeComparator,"compare/2[com.interview.dynamic.Job,com.interview.dynamic.Job]",false,20,1,0,0,0,2,0,8,2,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\PrintAnagramTogether.java,com.interview.string.PrintAnagramTogether,main/1[java.lang.String[]],false,34,1,2,0,2,1,1,5,0,2,1,1,1,1,0,0,0,0,5,0,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\PrintAnagramTogether.java,com.interview.string.PrintAnagramTogether,print/1[java.lang.String[]],false,10,1,1,1,0,5,8,24,0,6,1,8,0,0,3,0,0,0,0,1,6,0,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\HeapSort.java,com.interview.sort.HeapSort,main/1[java.lang.String[]],false,82,1,2,0,2,2,2,8,0,2,1,2,1,4,1,0,0,0,0,8,2,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\HeapSort.java,com.interview.sort.HeapSort,"heapify/2[int[],int]",false,38,2,2,1,1,6,2,26,0,3,2,2,1,1,1,0,0,0,0,5,6,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\HeapSort.java,com.interview.sort.HeapSort,"heapAdd/2[int[],int]",false,70,2,2,1,1,3,1,12,0,1,2,1,1,1,1,0,0,3,0,7,2,6,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\HeapSort.java,com.interview.sort.HeapSort,"swap/3[int[],int,int]",false,64,1,3,3,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\HeapSort.java,com.interview.sort.HeapSort,sort/1[int[]],false,27,2,4,1,3,3,3,9,0,2,1,3,3,3,2,0,0,0,0,5,2,2,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\FlattenLinkList.java,com.interview.linklist.FlattenLinkList,getTail/1[com.interview.linklist.Node],false,25,1,1,1,0,3,0,9,2,0,1,0,0,0,1,2,0,0,0,0,1,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\FlattenLinkList.java,com.interview.linklist.FlattenLinkList,main/1[java.lang.String[]],false,35,3,6,0,6,1,4,34,0,8,1,4,1,2,0,0,0,0,0,19,30,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\FlattenLinkList.java,com.interview.linklist.FlattenLinkList,flatten/1[com.interview.linklist.Node],false,13,2,2,1,1,3,1,11,0,1,1,1,1,1,1,2,0,0,0,0,5,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SquareOfNumber.java,com.interview.bits.SquareOfNumber,fastSquare/1[int],false,34,1,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SquareOfNumber.java,com.interview.bits.SquareOfNumber,square/1[int],false,14,0,1,1,0,5,0,16,1,2,1,0,0,0,2,1,0,2,0,7,6,4,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SquareOfNumber.java,com.interview.bits.SquareOfNumber,main/1[java.lang.String[]],false,57,1,3,0,3,1,3,7,0,1,1,3,2,2,0,0,0,0,4,8,1,4,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SquareOfNumber.java,com.interview.bits.SquareOfNumber,"fastSquareRec/2[int,int]",false,42,1,3,2,1,3,1,14,2,2,2,1,1,0,1,0,0,1,0,6,4,5,1,0,0,0,36,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNodesCompleteTree.java,com.interview.tree.CountNodesCompleteTree,leftHeight/1[com.interview.tree.Node],false,35,1,1,1,0,2,0,8,1,1,1,0,0,0,1,1,0,0,0,1,2,0,1,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNodesCompleteTree.java,com.interview.tree.CountNodesCompleteTree,rightHeight/1[com.interview.tree.Node],false,43,1,1,1,0,2,0,8,1,1,1,0,0,0,1,1,0,0,0,1,2,0,1,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountNodesCompleteTree.java,com.interview.tree.CountNodesCompleteTree,countNodes/1[com.interview.tree.Node],false,16,2,4,1,3,4,3,19,4,3,1,3,3,1,0,3,0,3,0,10,3,9,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BSTOneChildPreOrderTraversal.java,com.interview.tree.BSTOneChildPreOrderTraversal,main/1[java.lang.String[]],false,29,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,5,2,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BSTOneChildPreOrderTraversal.java,com.interview.tree.BSTOneChildPreOrderTraversal,isBST/1[int[]],false,8,1,1,1,0,7,0,23,3,3,1,0,0,0,1,0,0,0,0,5,5,4,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumIminusJSuchThatAiGTAj.java,com.interview.array.MaximumIminusJSuchThatAiGTAj,maximumGeeks/1[int[]],false,16,1,1,1,0,7,1,35,1,7,1,1,0,0,3,0,0,0,0,14,14,8,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumIminusJSuchThatAiGTAj.java,com.interview.array.MaximumIminusJSuchThatAiGTAj,main/1[java.lang.String[]],false,50,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,8,2,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\KruskalMST.java,com.interview.graph.KruskalMST,getMST/1[com.interview.graph.Graph<java.lang.Integer>],false,37,5,11,1,10,4,10,22,1,6,1,10,0,0,2,1,0,0,0,0,6,0,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\KruskalMST.java,com.interview.graph.KruskalMST,main/1[java.lang.String[]],false,71,3,6,0,6,2,5,18,0,3,1,5,1,1,1,0,0,0,1,30,3,1,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\AnagramOfFirstAsSubstring.java,com.interview.string.AnagramOfFirstAsSubstring,main/1[java.lang.String[]],false,79,1,2,0,2,1,3,6,0,3,1,3,1,2,0,0,0,0,2,0,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\AnagramOfFirstAsSubstring.java,com.interview.string.AnagramOfFirstAsSubstring,"isSubString/2[char[],char[]]",false,18,2,3,1,2,6,4,32,2,7,2,4,2,1,2,2,0,0,0,3,9,1,3,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\AnagramOfFirstAsSubstring.java,com.interview.string.AnagramOfFirstAsSubstring,"incrementCount/2[java.lang.Character,java.util.Map<java.lang.Character,java.lang.Integer>]",false,70,0,1,1,0,2,3,9,0,1,2,3,0,0,0,0,0,0,0,2,1,1,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\AnagramOfFirstAsSubstring.java,com.interview.string.AnagramOfFirstAsSubstring,"containsAndUpdate/5[java.util.Map<java.lang.Character,java.lang.Integer>,java.util.Map<java.lang.Character,java.lang.Integer>,java.lang.Character,java.util.Map<java.lang.Character,java.lang.Integer>,int]",false,51,0,1,1,0,5,3,19,3,0,5,3,0,0,0,1,0,0,0,3,0,1,4,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\ConvertNumberIntoBase26.java,com.interview.misc.ConvertNumberIntoBase26,main/1[java.lang.String[]],false,31,1,3,0,3,1,4,11,0,1,1,4,2,1,0,0,0,0,4,4,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\ConvertNumberIntoBase26.java,com.interview.misc.ConvertNumberIntoBase26,base26ToNumber/1[java.lang.String],false,19,0,1,1,0,2,2,11,1,4,1,2,0,0,1,0,0,1,0,6,7,4,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\ConvertNumberIntoBase26.java,com.interview.misc.ConvertNumberIntoBase26,numberToBase26/1[int],false,9,0,1,1,0,2,3,9,1,1,1,3,0,0,1,0,0,1,0,3,2,3,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CountSmallerOnRight.java,com.interview.array.CountSmallerOnRight,countSmaller/1[int[]],false,27,3,3,1,2,4,2,16,2,4,1,2,1,1,2,1,0,0,0,4,5,1,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CountSmallerOnRight.java,com.interview.array.CountSmallerOnRight,"mergeUtil/4[com.interview.array.CountSmallerOnRight.NumberIndex[],int[],int,int]",false,47,3,3,2,1,8,1,36,1,7,4,1,1,0,4,1,0,1,0,9,18,14,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CountSmallerOnRight.java,com.interview.array.CountSmallerOnRight,main/1[java.lang.String[]],false,86,1,2,0,2,1,3,6,0,4,1,3,1,2,0,0,0,0,1,6,3,1,0,0,0,1,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\SquareRoot.java,com.interview.number.SquareRoot,findRoot/1[int],false,8,0,1,1,0,2,1,9,1,2,1,1,0,0,1,0,0,1,0,3,4,4,1,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\SquareRoot.java,com.interview.number.SquareRoot,main/1[java.lang.String[]],false,19,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SegmentTree,"rangeQuery/7[int[],int,int,int,int,int,com.interview.tree.Operation]",false,49,3,4,2,2,5,2,10,3,1,7,2,1,0,0,0,0,1,0,7,1,7,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SegmentTree,main/1[java.lang.String[]],false,80,4,5,0,5,4,4,20,0,10,1,4,2,3,3,0,0,0,3,17,10,3,1,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SegmentTree,"rangeQuery/5[int[],int,int,int,com.interview.tree.Operation]",false,45,3,1,0,1,1,1,3,1,0,5,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SegmentTree,"constructTree/6[int[],int[],int,int,int,com.interview.tree.Operation]",false,34,3,4,2,2,2,2,10,1,1,6,2,1,0,0,1,0,1,0,10,3,11,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SegmentTree,"updateVal/6[int[],int,int,int,int,int]",false,67,2,3,2,1,4,1,12,2,1,6,1,1,0,0,0,0,1,0,6,2,7,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SegmentTree,"createTree/2[int[],com.interview.tree.Operation]",false,27,3,2,1,1,1,4,6,1,2,2,4,1,1,0,0,0,1,0,7,2,4,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SegmentTree,"updateValueForSumOperation/4[int[],int[],int,int]",false,61,2,2,1,1,1,1,5,0,1,4,1,1,1,0,0,0,0,0,3,2,2,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\GameOfLife.java,com.interview.multiarray.GameOfLife,"doesLive/3[int,int,int[][]]",false,48,1,1,1,0,10,0,23,2,3,3,0,0,0,2,6,0,0,0,12,4,4,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\GameOfLife.java,com.interview.multiarray.GameOfLife,"copyRow/2[int[],int[]]",false,42,1,1,1,0,2,0,5,0,1,2,0,0,0,1,0,0,0,0,1,2,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\GameOfLife.java,com.interview.multiarray.GameOfLife,gameOfLife/1[int[][]],false,19,2,2,0,2,8,2,21,1,6,1,2,2,1,2,4,0,0,0,12,7,3,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\StronglyConnectedComponent.java,com.interview.graph.StronglyConnectedComponent,main/1[java.lang.String[]],false,98,3,5,0,5,1,7,18,0,5,1,7,1,2,0,0,0,0,1,16,3,1,1,0,0,2,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\StronglyConnectedComponent.java,com.interview.graph.StronglyConnectedComponent,"DFSUtilForReverseGraph/3[com.interview.graph.Vertex<java.lang.Integer>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>]",false,87,2,4,2,2,3,4,10,0,0,3,4,1,0,1,0,0,0,0,0,0,0,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\StronglyConnectedComponent.java,com.interview.graph.StronglyConnectedComponent,scc/1[com.interview.graph.Graph<java.lang.Integer>],false,32,3,7,1,6,5,11,23,1,6,1,11,3,1,2,0,0,0,0,0,6,0,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\StronglyConnectedComponent.java,com.interview.graph.StronglyConnectedComponent,"DFSUtil/3[com.interview.graph.Vertex<java.lang.Integer>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,java.util.Deque<com.interview.graph.Vertex<java.lang.Integer>>]",false,75,2,4,2,2,3,5,10,0,0,3,5,1,0,1,0,0,0,0,0,0,0,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\StronglyConnectedComponent.java,com.interview.graph.StronglyConnectedComponent,reverseGraph/1[com.interview.graph.Graph<java.lang.Integer>],false,65,3,8,1,7,2,6,7,1,1,1,6,0,0,1,0,0,0,0,0,1,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\tree\KClosestValueInBinaryTreeTest.java,com.interview.tree.KClosestValueInBinaryTreeTest,testDifferentCases/0,false,12,5,6,0,6,1,4,18,0,5,0,4,0,0,0,0,0,0,0,18,14,0,0,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\DivideNumbersInEqualGroupWithClosestSum.java,com.interview.array.DivideNumbersInEqualGroupWithClosestSum,main/1[java.lang.String[]],false,33,1,2,0,2,1,3,15,0,5,1,3,1,1,0,0,0,0,0,20,5,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\DivideNumbersInEqualGroupWithClosestSum.java,com.interview.array.DivideNumbersInEqualGroupWithClosestSum,"divide/3[int[],java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>]",false,17,1,1,1,0,5,3,16,0,4,3,3,0,0,1,0,0,2,0,6,6,5,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\WordPattern.java,com.interview.recursion.WordPattern,"wordPatternMatch/2[java.lang.String,java.lang.String]",false,15,1,2,1,1,1,1,5,1,2,2,1,1,1,0,0,0,0,0,2,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\WordPattern.java,com.interview.recursion.WordPattern,main/1[java.lang.String[]],false,48,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,2,0,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\WordPattern.java,com.interview.recursion.WordPattern,"wordPatternMatch/6[java.lang.String,java.lang.String,int,int,java.util.Map<java.lang.Character,java.lang.String>,java.util.Set<java.lang.String>]",false,21,1,3,2,1,6,11,26,4,4,6,11,1,0,1,3,0,1,0,5,4,9,3,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalLevelByLevel.java,com.interview.tree.TreeTraversalLevelByLevel,levelByLevelTwoQueue/1[com.interview.tree.Node],false,42,1,1,1,0,10,6,32,1,2,1,6,0,0,3,5,0,0,2,0,4,2,3,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalLevelByLevel.java,com.interview.tree.TreeTraversalLevelByLevel,levelByLevelOneQueueUsingDelimiter/1[com.interview.tree.Node],false,78,1,1,1,0,7,5,26,1,1,1,5,0,0,1,4,0,0,1,0,2,1,3,0,0,0,19,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalLevelByLevel.java,com.interview.tree.TreeTraversalLevelByLevel,levelByLevelOneQueueUsingCount/1[com.interview.tree.Node],false,107,1,1,1,0,6,5,27,1,3,1,5,0,0,2,3,0,0,1,4,6,1,3,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalLevelByLevel.java,com.interview.tree.TreeTraversalLevelByLevel,main/1[java.lang.String[]],false,135,3,6,0,6,1,5,22,0,3,1,5,3,1,0,0,0,0,3,11,14,0,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\CombinationOfSizeK.java,com.interview.recursion.CombinationOfSizeK,"combination/2[int[],int]",false,8,2,2,1,1,1,1,4,0,1,2,1,1,1,0,0,0,0,0,2,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\CombinationOfSizeK.java,com.interview.recursion.CombinationOfSizeK,"combinationUtil/5[int[],int,int,int[],int]",false,13,2,3,2,1,4,2,13,1,2,5,2,1,0,2,1,0,0,2,3,3,3,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\CombinationOfSizeK.java,com.interview.recursion.CombinationOfSizeK,main/1[java.lang.String[]],false,27,1,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,5,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintSumCombination.java,com.interview.recursion.PrintSumCombination,main/1[java.lang.String[]],false,61,1,2,0,2,1,5,10,0,5,1,5,1,2,0,0,0,0,1,4,3,1,1,0,0,2,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintSumCombination.java,com.interview.recursion.PrintSumCombination,"combinationSumUtil/5[int[],int,java.util.List<java.lang.Integer>,java.util.List<java.util.List<java.lang.Integer>>,int]",false,38,2,3,2,1,4,6,18,3,1,5,6,1,0,0,2,0,0,0,4,1,3,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintSumCombination.java,com.interview.recursion.PrintSumCombination,"combinationSum/2[int[],int]",false,27,2,2,1,1,2,2,10,2,2,2,2,1,1,0,1,0,0,0,2,2,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\string\LongestSubstringWithKDistinctCharactersTest.java,com.interview.string.LongestSubstringWithKDistinctCharactersTest,testDifferenceCases/0,false,9,2,3,0,3,1,3,11,0,1,0,3,0,0,0,0,0,0,8,16,1,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.TilingProblem,"fit/2[int,com.interview.multiarray.Position]",false,47,3,3,1,2,1,1,6,1,1,2,1,1,2,0,0,0,0,0,2,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.TilingProblem,"determineQuadrant/3[com.interview.multiarray.Position,int,com.interview.multiarray.Position]",false,74,1,2,1,1,7,0,10,1,2,3,0,0,0,2,0,0,0,1,16,2,26,3,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.TilingProblem,main/1[java.lang.String[]],false,98,2,3,0,3,3,3,11,0,5,1,3,1,3,2,0,0,0,1,6,5,1,2,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.TilingProblem,"updateMatrix/3[char[][],com.interview.multiarray.Position,com.interview.multiarray.Position]",false,86,2,1,1,0,5,0,11,0,2,3,0,0,0,2,2,0,0,0,2,3,2,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.TilingProblem,"fit/4[char[][],com.interview.multiarray.Position,int,com.interview.multiarray.Position]",false,55,3,7,2,5,5,4,19,1,4,4,4,3,1,2,1,0,0,0,19,4,28,3,0,0,0,14,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\GrayCode.java,com.interview.bits.GrayCode,grayCode/1[int],false,15,0,1,1,0,2,1,7,1,2,1,1,0,0,1,0,0,0,0,3,2,2,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\GrayCode.java,com.interview.bits.GrayCode,main/1[java.lang.String[]],false,23,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\DivisionWithoutDivisionOperator.java,com.interview.number.DivisionWithoutDivisionOperator,"divide/2[int,int]",false,10,1,1,0,1,2,0,11,1,2,2,0,0,0,1,0,0,0,0,1,5,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\DivisionWithoutDivisionOperator.java,com.interview.number.DivisionWithoutDivisionOperator,main/1[java.lang.String[]],false,69,2,3,0,3,1,4,6,0,2,1,4,2,1,0,0,0,0,1,4,2,1,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\DivisionWithoutDivisionOperator.java,com.interview.number.DivisionWithoutDivisionOperator,"efficientDivideRec/2[int,int]",false,54,1,3,2,1,3,1,14,2,2,2,1,1,0,1,0,0,0,0,6,6,5,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\DivisionWithoutDivisionOperator.java,com.interview.number.DivisionWithoutDivisionOperator,"divideRec/2[int,int]",false,22,1,2,1,1,2,1,6,2,0,2,1,1,0,0,0,0,0,0,2,0,2,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\DivisionWithoutDivisionOperator.java,com.interview.number.DivisionWithoutDivisionOperator,"efficientDivide/2[int,int]",false,30,1,2,1,1,3,0,23,1,5,2,0,0,0,2,0,0,0,0,7,16,3,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RemoveConsecutiveDuplicate.java,com.interview.string.RemoveConsecutiveDuplicate,main/1[java.lang.String[]],false,30,1,2,0,2,2,3,9,0,5,1,3,1,1,1,0,0,0,2,1,5,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RemoveConsecutiveDuplicate.java,com.interview.string.RemoveConsecutiveDuplicate,removeDuplicates/1[char[]],false,16,1,1,1,0,4,0,13,1,3,1,0,0,0,2,1,0,0,0,3,5,0,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ShortestDistanceFromExit.java,com.interview.graph.ShortestDistanceFromExit,"setDistanceUtil/6[java.util.Queue<com.interview.graph.Point>,com.interview.graph.Cell[][],com.interview.graph.Point,com.interview.graph.Point,int[][],boolean[][]]",false,74,4,1,1,0,5,2,9,0,0,6,2,0,0,0,3,0,0,0,1,2,1,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ShortestDistanceFromExit.java,com.interview.graph.ShortestDistanceFromExit,findShortest/1[com.interview.graph.Cell[][]],false,38,3,2,1,1,6,1,17,1,5,1,1,1,2,4,1,0,0,0,7,7,0,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ShortestDistanceFromExit.java,com.interview.graph.ShortestDistanceFromExit,"getNeighbor/3[com.interview.graph.Cell[][],int,int]",false,84,2,2,1,1,5,0,6,2,0,3,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ShortestDistanceFromExit.java,com.interview.graph.ShortestDistanceFromExit,"setDistance/4[com.interview.graph.Cell[][],int,int,int[][]]",false,59,5,4,1,3,2,5,12,0,3,4,5,2,1,1,0,0,0,0,5,3,4,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ShortestDistanceFromExit.java,com.interview.graph.ShortestDistanceFromExit,main/1[java.lang.String[]],false,90,2,2,0,2,3,3,11,0,5,1,3,1,3,2,0,0,0,1,3,5,1,2,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SquareRootOfNumber.java,com.interview.binarysearch.SquareRootOfNumber,mySqrt/1[int],false,8,0,0,0,0,5,0,14,2,3,1,0,0,0,1,1,0,2,0,8,5,9,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SwapOddEvenBits.java,com.interview.bits.SwapOddEvenBits,main/1[java.lang.String[]],false,14,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SwapOddEvenBits.java,com.interview.bits.SwapOddEvenBits,swap/1[int],false,8,0,1,1,0,1,0,5,1,2,1,0,0,0,0,0,0,2,0,4,2,2,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RealTimeCounter.java,com.interview.stackqueue.RealTimeCounter,main/1[java.lang.String[]],false,29,1,3,0,3,1,3,12,0,1,1,3,2,1,0,0,0,0,0,9,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RealTimeCounter.java,com.interview.stackqueue.RealTimeCounter,add/1[long],false,11,0,1,1,0,3,4,8,0,0,1,4,0,0,1,0,0,0,0,2,0,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RealTimeCounter.java,com.interview.stackqueue.RealTimeCounter,getCallsInLastSec/1[long],false,21,0,1,1,0,3,3,7,1,0,1,3,0,0,1,0,0,0,0,2,0,1,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MeetingRooms.java,com.interview.array.MeetingRooms,minMeetingRooms/1[com.interview.array.MeetingRooms.Interval[]],false,51,1,1,0,1,4,3,21,2,8,1,3,0,0,1,1,0,0,0,5,5,2,2,0,0,2,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MeetingRooms.java,com.interview.array.MeetingRooms,minMeetingRooms1/1[com.interview.array.MeetingRooms.Interval[]],false,27,2,0,0,0,4,1,21,1,6,1,1,0,0,2,0,0,0,0,4,8,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\SkylineDrawing.java,com.interview.geometry.SkylineDrawing$BuildingPoint,compareTo/1[com.interview.geometry.SkylineDrawing.BuildingPoint],false,29,1,0,0,0,4,0,8,2,0,1,0,0,0,0,1,0,2,0,0,0,2,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NestedIterator.java,com.interview.misc.NestedIterator,hasNext/0,false,39,1,4,1,3,6,10,24,3,3,0,10,0,0,1,1,0,0,0,0,5,0,3,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NestedIterator.java,com.interview.misc.NestedIterator,NestedIterator/1[java.util.List<com.interview.misc.NestedInteger>],true,24,1,0,0,0,1,2,3,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\NestedIterator.java,com.interview.misc.NestedIterator,next/0,false,29,1,1,0,1,2,1,8,1,1,0,1,1,1,0,0,0,0,0,0,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArrayMultiplication.java,com.interview.number.ArrayMultiplication,"simpleMultiplication/6[int[],int[],int,int,int,int]",false,47,2,2,1,1,4,2,25,1,10,6,2,1,1,3,0,0,0,0,14,17,15,2,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArrayMultiplication.java,com.interview.number.ArrayMultiplication,"addToResult/3[int[],int[],int]",false,75,1,1,1,0,3,0,11,0,3,3,0,0,0,1,1,0,0,0,6,5,4,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArrayMultiplication.java,com.interview.number.ArrayMultiplication,"multiplicationImproved/3[int,int,int]",false,87,1,4,2,2,2,2,11,2,4,3,2,2,1,0,1,0,2,0,4,5,19,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArrayMultiplication.java,com.interview.number.ArrayMultiplication,power/1[int],false,102,0,1,1,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArrayMultiplication.java,com.interview.number.ArrayMultiplication,"multiplyDivideAndConquer/6[int[],int[],int,int,int,int]",false,7,3,7,2,5,3,4,22,2,8,6,4,3,2,0,2,0,2,0,6,16,13,1,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArrayMultiplication.java,com.interview.number.ArrayMultiplication,"shift/2[int[],int]",false,38,1,1,1,0,2,0,8,1,2,2,0,0,0,1,0,0,0,0,2,4,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArrayMultiplication.java,com.interview.number.ArrayMultiplication,main/1[java.lang.String[]],false,107,1,3,0,3,2,3,10,0,5,1,3,2,4,1,0,0,0,2,21,5,4,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GroupElementsInSizeM.java,com.interview.array.GroupElementsInSizeM,"group/2[int[],int]",false,39,3,3,1,2,8,9,35,2,8,2,9,0,0,4,0,0,0,0,5,12,3,3,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GroupElementsInSizeM.java,com.interview.array.GroupElementsInSizeM,main/1[java.lang.String[]],false,77,1,2,0,2,2,3,10,0,5,1,3,1,1,1,0,0,0,0,19,5,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\StockSpanProblem.java,com.interview.stackqueue.StockSpanProblem,stockSpan/1[int[]],false,20,1,1,1,0,5,4,19,1,3,1,4,0,0,2,0,0,0,0,5,6,2,2,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\StockSpanProblem.java,com.interview.stackqueue.StockSpanProblem,main/1[java.lang.String[]],false,39,2,1,0,1,1,3,5,0,2,1,3,1,1,0,0,0,0,0,7,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LargestBSTInBinaryTree.java,com.interview.tree.MinMax,MinMax/0,true,94,0,1,1,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,1,4,0,0,0,0,0,10,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorIterator.java,com.interview.tree.NextInorderSuccessorIterator,NextInorderSuccessorIterator/1[com.interview.tree.Node],true,16,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorIterator.java,com.interview.tree.NextInorderSuccessorIterator,next/0,false,20,1,1,1,0,2,2,11,1,1,0,2,0,0,1,1,0,0,0,0,5,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorIterator.java,com.interview.tree.NextInorderSuccessorIterator,hasNext/0,false,32,0,1,1,0,3,1,6,2,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\NextInorderSuccessorIterator.java,com.interview.tree.NextInorderSuccessorIterator,main/1[java.lang.String[]],false,39,3,5,0,5,2,4,14,0,3,1,4,2,1,1,0,0,0,0,6,9,0,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphTarjan.java,com.interview.graph.AllCyclesInDirectedGraphTarjan,findAllSimpleCycles/1[com.interview.graph.Graph<java.lang.Integer>],false,32,3,4,1,3,3,7,12,1,1,1,7,2,1,2,0,0,0,0,0,1,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphTarjan.java,com.interview.graph.AllCyclesInDirectedGraphTarjan,main/1[java.lang.String[]],false,80,3,5,0,5,1,7,28,0,5,1,7,1,2,0,0,0,0,1,36,3,1,1,0,0,2,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphTarjan.java,com.interview.graph.AllCyclesInDirectedGraphTarjan,reset/0,false,25,1,2,2,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphTarjan.java,com.interview.graph.AllCyclesInDirectedGraphTarjan,"findAllSimpleCycles/3[com.interview.graph.Vertex,com.interview.graph.Vertex<java.lang.Integer>,java.util.List<java.util.List<com.interview.graph.Vertex<java.lang.Integer>>>]",false,45,2,5,2,3,8,14,33,1,3,3,14,1,0,3,0,0,0,0,0,5,0,3,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphTarjan.java,com.interview.graph.AllCyclesInDirectedGraphTarjan,AllCyclesInDirectedGraphTarjan/0,true,21,1,2,1,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestPalindromeSubstring.java,com.interview.string.LongestPalindromeSubstring,main/1[java.lang.String[]],false,161,1,2,0,2,1,3,7,0,1,1,3,1,1,0,0,0,0,4,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestPalindromeSubstring.java,com.interview.string.LongestPalindromeSubstring,longestPalindromeDynamic/1[char[]],false,129,2,0,0,0,9,0,30,1,7,1,0,0,0,3,3,0,0,0,13,14,8,4,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestPalindromeSubstring.java,com.interview.string.LongestPalindromeSubstring,longestPalindromeSubstringEasy/1[char[]],false,18,1,0,0,0,8,1,26,1,5,1,1,0,0,3,2,0,0,0,11,12,3,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LongestPalindromeSubstring.java,com.interview.string.LongestPalindromeSubstring,longestPalindromicSubstringLinear/1[char[]],false,60,2,1,1,0,13,1,45,1,12,1,1,0,0,5,5,0,4,0,27,21,26,3,0,0,0,81,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TripletInArray.java,com.interview.array.TripletInArray$Triplet,toString/0,false,17,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FloydWarshallAllPairShortestPath.java,com.interview.graph.FloydWarshallAllPairShortestPath,main/1[java.lang.String[]],false,97,2,2,0,2,3,3,12,0,5,1,3,1,2,2,0,0,0,3,12,5,1,2,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FloydWarshallAllPairShortestPath.java,com.interview.graph.FloydWarshallAllPairShortestPath,"printPath/3[int[][],int,int]",false,71,1,1,1,0,9,6,22,1,1,3,6,0,0,2,2,0,0,3,3,2,2,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FloydWarshallAllPairShortestPath.java,com.interview.graph.FloydWarshallAllPairShortestPath,allPairShortestPath/1[int[][]],false,28,3,3,1,2,13,1,35,1,8,1,1,1,1,6,4,0,0,0,10,13,2,4,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PowerFunction.java,com.interview.number.PowerFunction,"powerUsingBit/2[double,int]",false,30,0,0,0,0,6,0,22,2,4,2,0,0,0,1,2,0,1,0,9,10,5,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PowerFunction.java,com.interview.number.PowerFunction,"power/2[int,int]",false,17,1,3,2,1,3,1,12,3,1,2,1,1,0,0,2,0,0,0,5,1,4,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PowerFunction.java,com.interview.number.PowerFunction,main/1[java.lang.String[]],false,53,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,2,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ConvertOneWordToAnother.java,com.interview.graph.ConvertOneWordToAnother,"convert/3[java.lang.String,java.lang.String,java.util.Set<java.lang.String>]",false,17,1,2,1,1,8,11,30,0,8,3,11,1,1,4,2,0,0,0,2,9,0,5,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ConvertOneWordToAnother.java,com.interview.graph.ConvertOneWordToAnother,"replace/3[java.lang.String,int,char]",false,50,0,1,1,0,1,5,7,1,1,3,5,0,0,0,0,0,0,0,2,1,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ConvertOneWordToAnother.java,com.interview.graph.ConvertOneWordToAnother,main/1[java.lang.String[]],false,59,1,2,0,2,1,2,10,0,2,1,2,1,2,0,0,0,0,7,0,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\AllStrobogrammaticNumber.java,com.interview.number.AllStrobogrammaticNumber,"strobogrammaticInRangeUtil/5[java.lang.String,java.lang.String,int,int,char[]]",false,24,2,3,2,1,12,3,21,3,2,5,3,1,0,1,6,0,4,0,13,5,2,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\AllStrobogrammaticNumber.java,com.interview.number.AllStrobogrammaticNumber,"strobogrammaticInRange/2[java.lang.String,java.lang.String]",false,15,2,1,0,1,2,2,8,1,3,2,2,1,1,1,0,0,0,0,3,4,1,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.Active,Active/1[com.interview.suffixprefix.SuffixNode],true,420,1,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,7,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.Active,toString/0,false,427,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\NQueenProblem.java,com.interview.recursion.NQueenProblem$Position,"Position/2[int,int]",true,23,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\AddingTwoSetOfIntervals.java,com.interview.misc.AddingTwoSetOfIntervals$Pair,"Pair/2[int,int]",true,12,0,2,2,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\AddingTwoSetOfIntervals.java,com.interview.misc.AddingTwoSetOfIntervals$Pair,compareTo/1[com.interview.misc.AddingTwoSetOfIntervals.Pair],false,17,1,0,0,0,2,0,8,2,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\AddingTwoSetOfIntervals.java,com.interview.misc.AddingTwoSetOfIntervals$Pair,toString/0,false,25,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SortedArrayToBST.java,com.interview.tree.SortedArrayToBST,"toBST/3[int[],int,int]",false,19,3,4,2,2,2,2,10,2,2,3,2,1,0,0,0,0,1,0,3,4,4,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SortedArrayToBST.java,com.interview.tree.SortedArrayToBST,sortedArrayToBST/1[int[]],false,15,3,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DisjointSet.java,com.interview.graph.DisjointSet,makeSet/1[long],false,35,1,5,4,1,1,1,7,0,1,1,1,0,0,0,0,0,0,0,1,4,0,0,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DisjointSet.java,com.interview.graph.DisjointSet,findSet/1[long],false,75,1,4,3,1,1,2,3,1,0,1,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DisjointSet.java,com.interview.graph.DisjointSet,findSet/1[com.interview.graph.DisjointSet.Node],false,83,2,4,3,1,2,1,8,2,1,1,1,1,0,0,1,0,0,0,0,2,0,1,0,0,0,14,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DisjointSet.java,com.interview.graph.DisjointSet,"union/2[long,long]",false,49,2,5,4,1,4,2,17,2,4,2,2,1,1,0,2,0,1,0,1,7,1,1,0,0,0,26,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DisjointSet.java,com.interview.graph.DisjointSet,main/1[java.lang.String[]],false,92,1,4,0,4,1,4,23,0,1,1,4,3,3,0,0,0,0,0,26,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortNearlySortedList.java,com.interview.linklist.SortNearlySortedList,main/1[java.lang.String[]],false,51,3,5,0,5,1,3,16,0,3,1,3,1,2,0,0,0,0,0,9,13,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortNearlySortedList.java,com.interview.linklist.SortNearlySortedList,sort/1[com.interview.linklist.Node],false,17,2,2,1,1,4,1,18,1,3,1,1,1,1,1,2,0,0,0,0,9,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortNearlySortedList.java,com.interview.linklist.SortNearlySortedList,"mergeSort/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,35,2,3,2,1,4,1,16,4,0,2,1,1,0,0,2,0,0,0,0,2,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ShuffleMerge.java,com.interview.linklist.ShuffleMerge,"shuffleMergeRecursive/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,20,2,2,1,1,3,1,13,3,1,2,1,1,0,0,2,0,0,0,0,4,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ShuffleMerge.java,com.interview.linklist.ShuffleMerge,main/1[java.lang.String[]],false,62,3,5,0,5,1,3,20,0,5,1,3,1,1,0,0,0,0,0,12,17,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ShuffleMerge.java,com.interview.linklist.ShuffleMerge,"shuffleMerge/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,39,1,1,1,0,6,0,20,2,4,2,0,0,0,1,5,0,0,0,0,10,0,1,0,0,0,18,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NumberOfBitsFlipToConvertNToM.java,com.interview.bits.NumberOfBitsFlipToConvertNToM,"number/2[int,int]",false,8,0,1,1,0,2,0,9,1,2,2,0,0,0,1,1,0,1,0,3,3,1,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NumberOfBitsFlipToConvertNToM.java,com.interview.bits.NumberOfBitsFlipToConvertNToM,main/1[java.lang.String[]],false,17,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCacheLeetCode.java,com.interview.linklist.LRUCacheLeetCode,"set/2[int,int]",false,27,0,0,0,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCacheLeetCode.java,com.interview.linklist.LRUCacheLeetCode,LRUCacheLeetCode/1[int],true,17,1,1,0,1,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCacheLeetCode.java,com.interview.linklist.LRUCacheLeetCode,get/1[int],false,22,0,0,0,0,2,1,4,1,1,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\misc\IntegerListParserTest.java,com.interview.misc.IntegerListParserTest,testDifferentCases/0,false,9,2,0,0,0,1,3,30,0,3,0,3,0,0,0,0,0,0,18,0,19,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\EvaluateDivison.java,com.interview.graph.EvaluateDivison,"calcEquation/3[java.lang.String[][],double[],java.lang.String[][]]",false,24,1,0,0,0,17,3,59,2,22,3,3,0,0,8,4,0,0,0,24,30,2,4,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinimumCostTrainTicket.java,com.interview.dynamic.MinimumCostTrainTicket,minCost/1[int[][]],false,8,1,1,1,0,9,2,25,1,6,1,2,0,0,4,3,0,0,1,12,12,7,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinimumCostTrainTicket.java,com.interview.dynamic.MinimumCostTrainTicket,main/1[java.lang.String[]],false,37,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,16,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.DomainLock,acquireLock/1[java.lang.String],false,28,0,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.DomainLock,releaseLock/1[java.lang.String],false,29,0,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.DomainLock,isLocked/1[java.lang.String],false,30,0,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NBy2PairSumToK.java,com.interview.number.NBy2PairSumToK,main/1[java.lang.String[]],false,34,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,9,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NBy2PairSumToK.java,com.interview.number.NBy2PairSumToK,"pair/2[int[],int]",false,12,1,1,1,0,7,0,20,4,3,2,0,0,0,2,4,0,0,0,11,3,7,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubRectangularMatrixWithMaximumSum.java,com.interview.dynamic.SubRectangularMatrixWithMaximumSum,kadane/1[int[]],false,76,2,2,1,1,4,0,20,1,6,1,0,0,0,1,0,0,0,0,9,12,1,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubRectangularMatrixWithMaximumSum.java,com.interview.dynamic.SubRectangularMatrixWithMaximumSum,main/1[java.lang.String[]],false,98,1,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,0,20,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubRectangularMatrixWithMaximumSum.java,com.interview.dynamic.SubRectangularMatrixWithMaximumSum,maxSum/1[int[][]],false,39,4,3,1,2,6,1,25,1,9,1,1,1,1,4,0,0,0,0,5,16,0,3,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\StableMarriageProblem.java,com.interview.array.StableMarriageProblem,findPair/1[int[][]],false,18,2,2,1,1,9,1,40,1,9,1,1,1,1,5,2,0,0,0,10,16,5,5,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\StableMarriageProblem.java,com.interview.array.StableMarriageProblem,"checkIfNewIsBetter/4[int[][],int,int,int]",false,6,1,1,1,0,4,0,11,3,0,4,0,0,0,1,2,0,0,0,0,0,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\StableMarriageProblem.java,com.interview.array.StableMarriageProblem,main/1[java.lang.String[]],false,59,2,2,0,2,2,2,8,0,4,1,2,1,2,1,0,0,0,1,33,4,1,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\Mutable2DSumRangeQuery.java,com.interview.multiarray.Mutable2DSumRangeQuery,Mutable2DSumRangeQuery/1[int[][]],true,16,1,0,0,0,4,0,14,1,2,1,0,0,0,2,1,0,0,0,8,7,4,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\Mutable2DSumRangeQuery.java,com.interview.multiarray.Mutable2DSumRangeQuery,"update/3[int,int,int]",false,32,0,0,0,0,2,0,7,0,2,3,0,0,0,1,0,0,0,0,1,4,2,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\Mutable2DSumRangeQuery.java,com.interview.multiarray.Mutable2DSumRangeQuery,"sumRegion/4[int,int,int,int]",false,40,0,0,0,0,2,0,7,1,2,4,0,0,0,1,0,0,0,0,2,3,2,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BoundaryTraversal.java,com.interview.tree.BoundaryTraversal,printLeftSide/1[com.interview.tree.Node],false,40,2,4,2,2,5,3,12,1,0,1,3,2,1,0,4,0,1,0,0,0,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BoundaryTraversal.java,com.interview.tree.BoundaryTraversal,printLeaves/1[com.interview.tree.Node],false,52,2,3,2,1,4,2,10,1,0,1,2,1,0,0,3,0,0,0,0,0,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BoundaryTraversal.java,com.interview.tree.BoundaryTraversal,main/1[java.lang.String[]],false,63,3,4,0,4,1,2,14,0,3,1,2,1,3,0,0,0,0,0,8,11,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BoundaryTraversal.java,com.interview.tree.BoundaryTraversal,printRightSide/1[com.interview.tree.Node],false,28,2,4,3,1,5,2,12,1,0,1,2,1,0,0,4,0,1,0,0,0,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BoundaryTraversal.java,com.interview.tree.BoundaryTraversal,traversal/1[com.interview.tree.Node],false,13,2,4,1,3,5,3,13,0,1,1,3,3,2,1,4,0,0,0,0,3,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\bits\MaxProductWordLengthTest.java,com.interview.bits.MaxProductWordLengthTest,testDifferentCases/0,false,9,2,0,0,0,1,2,7,0,3,0,2,0,0,0,0,0,0,13,2,3,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\NumberOfPairWithXPowerYGreaterThanYPowerX.java,com.interview.binarysearch.NumberOfPairWithXPowerYGreaterThanYPowerX,"upperBound/2[int,int[]]",false,52,1,1,1,0,6,0,17,2,3,2,0,0,0,1,0,0,2,0,9,5,7,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\NumberOfPairWithXPowerYGreaterThanYPowerX.java,com.interview.binarysearch.NumberOfPairWithXPowerYGreaterThanYPowerX,"countPairs/2[int[],int[]]",false,12,2,2,1,1,5,4,20,1,5,2,4,1,2,2,1,0,0,0,5,6,0,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\NumberOfPairWithXPowerYGreaterThanYPowerX.java,com.interview.binarysearch.NumberOfPairWithXPowerYGreaterThanYPowerX,main/1[java.lang.String[]],false,69,1,2,0,2,1,2,6,0,3,1,2,1,3,0,0,0,0,0,21,3,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\NumberOfPairWithXPowerYGreaterThanYPowerX.java,com.interview.binarysearch.NumberOfPairWithXPowerYGreaterThanYPowerX,"count/3[int,int[],java.util.Map<java.lang.Integer,java.lang.Integer>]",false,32,2,2,1,1,9,3,17,3,1,3,3,1,1,0,4,0,4,0,18,4,2,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AddGreaterValueNodeToEveryNode.java,com.interview.tree.AddGreaterValueNodeToEveryNode,"add/2[com.interview.tree.Node,com.interview.tree.IntegerRef]",false,17,3,3,2,1,2,1,9,1,0,2,1,1,0,0,1,0,0,0,0,2,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AddGreaterValueNodeToEveryNode.java,com.interview.tree.AddGreaterValueNodeToEveryNode,main/1[java.lang.String[]],false,27,5,7,0,7,1,3,15,0,5,1,3,1,1,0,0,0,0,0,6,11,0,0,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SinkNegativeToBottom.java,com.interview.tree.SinkNegativeToBottom,sinkZero/1[com.interview.tree.Node],false,8,2,4,2,2,3,2,10,1,0,1,2,2,1,0,1,0,0,0,1,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SinkNegativeToBottom.java,com.interview.tree.SinkNegativeToBottom,main/1[java.lang.String[]],false,46,5,8,0,8,1,4,12,0,7,1,4,1,2,0,0,0,0,0,22,7,0,0,0,0,0,20,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SinkNegativeToBottom.java,com.interview.tree.SinkNegativeToBottom,pushDown/1[com.interview.tree.Node],false,21,2,3,2,1,8,1,20,2,2,1,1,1,0,0,5,0,0,0,2,6,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MinimumSortedWhichSortsEntireArray.java,com.interview.array.MinimumSortedWhichSortsEntireArray,main/1[java.lang.String[]],false,49,1,2,0,2,1,2,7,0,4,1,2,1,1,0,0,0,0,0,23,4,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MinimumSortedWhichSortsEntireArray.java,com.interview.array.MinimumSortedWhichSortsEntireArray,minLength/1[int[]],false,8,1,1,1,0,13,0,38,2,7,1,0,0,0,5,1,0,0,0,13,9,9,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\MissingNumbers.java,com.interview.bits.MissingNumbers,main/1[java.lang.String[]],false,80,2,2,0,2,1,2,9,0,4,1,2,1,1,0,0,0,0,2,11,5,2,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\MissingNumbers.java,com.interview.bits.MissingNumbers,"findMissingAndRepeated/2[int[],int]",false,14,2,2,1,1,9,0,32,1,8,2,0,0,0,4,0,0,3,0,10,17,1,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\MissingNumbers.java,com.interview.bits.MissingNumbers,"findTwoMissingNumber/2[int[],int]",false,47,2,1,0,1,9,0,32,1,8,2,0,0,0,4,0,0,3,0,10,17,1,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\VerticalTreePrinting.java,com.interview.tree.VerticalTreePrinting,printVertical/1[com.interview.tree.Node],false,13,2,3,1,2,1,2,5,0,1,1,2,2,1,0,0,0,0,0,1,1,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\VerticalTreePrinting.java,com.interview.tree.VerticalTreePrinting,main/1[java.lang.String[]],false,45,3,4,0,4,1,2,15,0,3,1,2,1,2,0,0,0,0,0,9,12,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\VerticalTreePrinting.java,com.interview.tree.VerticalTreePrinting,"printLevel/1[java.util.Map<java.lang.Integer,java.util.List<com.interview.tree.Node>>]",false,19,1,1,1,0,3,4,9,0,1,1,4,0,0,2,0,0,0,1,0,1,1,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\VerticalTreePrinting.java,com.interview.tree.VerticalTreePrinting,"populateMap/3[com.interview.tree.Node,java.util.Map<java.lang.Integer,java.util.List<com.interview.tree.Node>>,int]",false,29,2,3,2,1,3,5,16,1,1,3,5,1,0,0,1,0,0,0,2,3,2,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.Dimension,Dimension/0,true,113,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.Dimension,"createDimension/3[int,int,int]",false,116,1,2,1,1,2,0,13,1,1,3,0,0,0,0,0,0,0,0,0,6,0,1,0,0,0,6,8,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.Dimension,toString/0,false,142,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.Dimension,compareTo/1[com.interview.dynamic.Dimension],false,133,1,0,0,0,2,0,8,2,0,1,0,0,0,0,0,0,0,0,2,0,2,1,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BoxStacking.java,com.interview.dynamic.Dimension,"Dimension/3[int,int,int]",true,107,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\SudokuSolver.java,com.interview.recursion.SudokuSolver,"solveSudokuUtil/6[char[][],boolean[][],boolean[][],boolean[][],int,int]",false,33,3,3,2,1,9,1,29,4,2,6,1,1,0,1,6,0,2,0,20,12,17,3,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\SudokuSolver.java,com.interview.recursion.SudokuSolver,main/1[java.lang.String[]],false,65,2,2,0,2,5,4,25,0,6,1,4,1,2,4,0,0,0,10,15,16,1,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\SudokuSolver.java,com.interview.recursion.SudokuSolver,solveSudoku/1[char[][]],false,15,3,2,1,1,4,1,17,0,6,1,1,1,1,2,1,0,1,0,14,9,7,3,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser,"serialize/2[com.interview.misc.IntegerListParser.NestedInteger,java.lang.StringBuffer]",false,61,2,6,2,4,5,6,21,1,1,2,6,1,0,1,0,0,0,3,0,2,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser,deserialize/1[java.lang.String],false,18,1,4,1,3,10,10,38,2,5,1,10,0,0,1,4,0,0,0,4,10,0,3,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser,serialize/1[com.interview.misc.IntegerListParser.NestedInteger],false,55,2,2,1,1,1,2,5,1,1,1,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser,main/1[java.lang.String[]],false,82,2,3,0,3,1,3,30,0,3,1,3,2,2,0,0,0,0,9,0,19,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.ComparatorVertex,"compare/2[com.interview.graph.Vertex<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>]",false,157,1,1,0,1,2,1,8,2,0,2,1,0,0,0,0,0,0,0,2,0,0,1,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ThreeSumSmallerThanTarget.java,com.interview.array.ThreeSumSmallerThanTarget,"threeSumSmaller/2[int[],int]",false,12,1,0,0,0,5,1,21,2,4,2,1,0,0,2,0,0,0,0,6,5,4,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixCalculation.java,com.interview.multiarray.MatrixCalculation,crossMultiply/1[java.lang.String[][]],false,7,1,2,1,1,3,2,14,1,5,1,2,1,1,2,0,0,0,0,8,7,1,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixCalculation.java,com.interview.multiarray.MatrixCalculation,"recur/5[java.lang.StringBuffer,java.lang.String[][],java.lang.String[][],int,int]",false,25,1,3,2,1,3,3,12,1,2,5,3,1,0,1,1,0,0,0,2,4,1,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixCalculation.java,com.interview.multiarray.MatrixCalculation,main/1[java.lang.String[]],false,40,1,2,0,2,3,3,11,0,5,1,3,1,2,2,0,0,0,11,2,5,1,2,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SpinLockMutex.java,com.interview.multithreaded.Mutex,"ice/2[int,int]",false,18,0,2,2,0,2,0,9,2,0,2,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,19,34,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SpinLockMutex.java,com.interview.multithreaded.Mutex,acquireLock/0,false,27,1,2,1,1,2,1,3,0,0,0,1,1,1,1,1,0,0,0,3,0,0,1,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SpinLockMutex.java,com.interview.multithreaded.Mutex,releaseLock/0,false,31,1,2,1,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,2,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SortedArrayTransformation.java,com.interview.array.SortedArrayTransformation,"apply/4[int,int,int,int]",false,36,0,1,1,0,1,0,3,1,0,4,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SortedArrayTransformation.java,com.interview.array.SortedArrayTransformation,"sortTransformedArray/4[int[],int,int,int]",false,15,2,1,0,1,6,1,21,1,7,4,1,1,1,1,0,0,3,0,9,10,3,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.YCoordinatorSorter,"compare/2[com.interview.geometry.Point,com.interview.geometry.Point]",false,51,1,0,0,0,2,0,8,2,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.ClosestPairOfPoints,"closestPairOfPoints/4[com.interview.geometry.Point[],com.interview.geometry.Point[],int,int]",false,85,2,6,2,4,6,7,28,2,10,4,7,4,2,2,0,0,1,0,6,12,7,2,0,0,0,24,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.ClosestPairOfPoints,closest/1[java.util.List<com.interview.geometry.Point>],false,115,2,2,1,1,5,3,12,1,4,1,3,1,1,2,0,0,0,0,2,5,2,3,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.ClosestPairOfPoints,"computeMinDistance/3[com.interview.geometry.Point[],int,int]",false,132,1,1,1,0,3,1,16,2,5,3,1,0,0,0,2,0,16,0,3,5,31,1,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.ClosestPairOfPoints,"distance/2[com.interview.geometry.Point,com.interview.geometry.Point]",false,128,1,2,2,0,1,0,3,1,0,2,0,0,0,0,0,0,4,0,0,0,7,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.ClosestPairOfPoints,closestPairOfPoints/1[com.interview.geometry.Point[]],false,63,4,4,1,3,4,3,21,1,6,1,3,1,3,2,0,0,0,0,5,9,1,1,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.ClosestPairOfPoints,main/1[java.lang.String[]],false,149,2,3,0,3,1,2,6,0,3,1,2,1,4,0,0,0,0,0,10,3,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser$NestedInteger,NestedInteger/0,true,116,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser$NestedInteger,getInteger/0,false,128,0,1,1,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser$NestedInteger,NestedInteger/1[int],true,120,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser$NestedInteger,setInteger/1[int],false,132,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser$NestedInteger,add/1[com.interview.misc.IntegerListParser.NestedInteger],false,136,1,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser$NestedInteger,getList/0,false,140,1,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\IntegerListParser.java,com.interview.misc.IntegerListParser$NestedInteger,isInteger/0,false,124,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumSizeSubMatrix.java,com.interview.dynamic.MaximumSizeSubMatrix,"min/3[int,int,int]",false,8,0,1,1,0,1,1,4,1,1,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumSizeSubMatrix.java,com.interview.dynamic.MaximumSizeSubMatrix,maxSize/1[int[][]],false,13,2,2,1,1,9,1,29,1,7,1,1,1,1,4,3,0,0,0,23,13,5,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumSizeSubMatrix.java,com.interview.dynamic.MaximumSizeSubMatrix,main/1[java.lang.String[]],false,51,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,20,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LexicographicRankInPermutation.java,com.interview.string.LexicographicRankInPermutation,"findNumberOfSmallerCharactersOnRight/2[int,char[]]",false,9,1,1,1,0,3,0,9,1,2,2,0,0,0,1,0,0,0,0,2,2,1,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LexicographicRankInPermutation.java,com.interview.string.LexicographicRankInPermutation,factorial/1[int],false,19,0,1,1,0,2,0,7,1,2,1,0,0,0,1,0,0,0,0,2,3,1,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LexicographicRankInPermutation.java,com.interview.string.LexicographicRankInPermutation,main/1[java.lang.String[]],false,38,1,2,0,2,1,3,5,0,2,1,3,1,2,0,0,0,0,1,0,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\LexicographicRankInPermutation.java,com.interview.string.LexicographicRankInPermutation,rank/1[char[]],false,27,2,3,1,2,2,2,8,1,3,1,2,2,1,1,0,0,0,0,4,4,3,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SwapTwoBits.java,com.interview.bits.SwapTwoBits,"swap/3[int,int,int]",false,8,0,0,0,0,5,0,9,1,2,3,0,0,0,0,2,0,4,0,10,6,6,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SwapTwoBits.java,com.interview.bits.SwapTwoBits,"betterSwap/3[int,int,int]",false,18,0,1,1,0,4,0,7,1,0,3,0,0,0,0,1,0,3,0,5,2,6,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\SwapTwoBits.java,com.interview.bits.SwapTwoBits,main/1[java.lang.String[]],false,26,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,3,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestCommonSubsequence.java,com.interview.dynamic.LongestCommonSubsequence,"lcsDynamic/2[char[],char[]]",false,21,2,1,1,0,5,1,18,1,4,2,1,0,0,2,1,0,0,0,12,7,9,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestCommonSubsequence.java,com.interview.dynamic.LongestCommonSubsequence,"lcs/4[char[],char[],int,int]",false,8,2,2,1,1,4,2,11,3,0,4,2,1,0,0,3,0,0,0,6,0,5,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestCommonSubsequence.java,com.interview.dynamic.LongestCommonSubsequence,main/1[java.lang.String[]],false,43,1,2,0,2,1,3,7,0,4,1,3,1,1,0,0,0,0,2,0,4,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\DegenerateBinaryTreeToSortedLL.java,com.interview.tree.DegenerateBinaryTreeToSortedLL,degenerate/1[com.interview.tree.Node],false,32,2,4,2,2,2,2,13,2,2,1,2,2,1,0,1,0,0,0,0,7,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\DegenerateBinaryTreeToSortedLL.java,com.interview.tree.DegenerateBinaryTreeToSortedLL,"merge/2[com.interview.tree.Node,com.interview.tree.Node]",false,47,2,3,2,1,4,1,16,4,0,2,1,1,0,0,2,0,0,0,0,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\DegenerateBinaryTreeToSortedLL.java,com.interview.tree.DegenerateBinaryTreeToSortedLL,printList/1[com.interview.tree.Node],false,64,1,1,1,0,2,1,6,0,0,1,1,0,0,1,1,0,0,1,0,1,1,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\DegenerateBinaryTreeToSortedLL.java,com.interview.tree.DegenerateBinaryTreeToSortedLL,main/1[java.lang.String[]],false,71,3,5,0,5,1,3,9,0,5,1,3,2,2,0,0,0,0,0,16,6,0,0,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.End,End/1[int],true,413,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\AggregateNumber.java,com.interview.number.AggregateNumber,isAggregate/1[int[]],false,10,2,2,1,1,9,1,35,3,9,1,1,1,1,3,2,0,0,0,8,15,6,4,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\AggregateNumber.java,com.interview.number.AggregateNumber,main/1[java.lang.String[]],false,54,1,2,0,2,1,2,11,0,5,1,2,1,2,0,0,0,0,0,45,5,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\AggregateNumber.java,com.interview.number.AggregateNumber,"getNumber/3[int[],int,int]",false,45,1,1,1,0,2,0,8,1,2,3,0,0,0,1,0,0,0,0,2,4,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestPalindromicSubsequence.java,com.interview.dynamic.LongestPalindromicSubsequence,"calculateRecursive/3[char[],int,int]",false,40,2,3,2,1,4,2,14,4,0,3,2,1,0,0,3,0,0,0,11,0,8,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestPalindromicSubsequence.java,com.interview.dynamic.LongestPalindromicSubsequence,calculate1/1[char[]],false,19,2,1,1,0,7,1,21,1,5,1,1,0,0,3,3,0,0,0,15,9,10,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestPalindromicSubsequence.java,com.interview.dynamic.LongestPalindromicSubsequence,main/1[java.lang.String[]],false,54,1,3,0,3,1,5,7,0,4,1,5,2,1,0,0,0,0,2,1,4,1,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\IncreasingTripletSubsequence.java,com.interview.array.IncreasingTripletSubsequence,increasingTriplet/1[int[]],false,16,1,1,1,0,6,0,21,2,5,1,0,0,0,2,1,0,0,0,5,8,0,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\IncreasingTripletSubsequence.java,com.interview.array.IncreasingTripletSubsequence,main/1[java.lang.String[]],false,38,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,7,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NextPowerOf2.java,com.interview.bits.NextPowerOf2,nextPowerOf2/1[int],false,8,0,1,1,0,7,0,12,3,0,1,0,0,0,1,2,0,5,0,9,1,4,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NextPowerOf2.java,com.interview.bits.NextPowerOf2,main/1[java.lang.String[]],false,20,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\MinMaxKeeper.java,com.interview.multithreaded.MinMaxKeeper$GenerateRand,run/0,false,94,1,1,0,1,3,3,10,0,1,0,3,0,0,0,2,0,0,0,5,3,0,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\MinMaxKeeper.java,com.interview.multithreaded.MinMaxKeeper$GenerateRand,"GenerateRand/2[com.interview.multithreaded.MinMaxKeeper,int]",true,89,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\RearrangeNumberInArrayToFormLargestNumber.java,com.interview.number.RearrangeNumberInArrayToFormLargestNumber,largestNumber/1[int[]],false,14,2,2,1,1,6,3,22,2,4,1,3,0,0,3,2,0,0,1,3,6,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\RearrangeNumberInArrayToFormLargestNumber.java,com.interview.number.RearrangeNumberInArrayToFormLargestNumber,main/1[java.lang.String[]],false,41,2,2,0,2,1,2,8,0,5,1,2,1,1,0,0,0,0,0,8,5,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RunLengthEncoding.java,com.interview.string.RunLengthEncoding,"encoding/2[char[],char[]]",false,23,2,2,1,1,3,1,19,1,4,2,1,1,1,1,1,0,0,0,5,10,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RunLengthEncoding.java,com.interview.string.RunLengthEncoding,"updateCounter/3[char[],int,int]",false,5,1,1,1,0,3,0,15,1,2,3,0,0,0,2,0,0,2,0,7,8,5,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RunLengthEncoding.java,com.interview.string.RunLengthEncoding,main/1[java.lang.String[]],false,44,2,2,0,2,2,4,9,0,5,1,4,1,2,1,0,0,0,1,2,5,1,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChanging.java,com.interview.dynamic.CoinChanging,main/1[java.lang.String[]],false,78,1,4,0,4,1,4,8,0,3,1,4,3,2,0,0,0,0,0,6,3,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChanging.java,com.interview.dynamic.CoinChanging,"numberOfSolutionsOnSpace/2[int,int[]]",false,39,1,1,1,0,4,0,12,1,3,2,0,0,0,2,0,0,0,0,5,5,2,3,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChanging.java,com.interview.dynamic.CoinChanging,"printActualSolution/4[java.util.List<java.lang.Integer>,int,int[],int]",false,62,2,3,2,1,5,5,15,0,1,4,5,1,0,2,1,0,0,2,2,1,3,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChanging.java,com.interview.dynamic.CoinChanging,"printCoinChangingSolution/2[int,int[]]",false,57,2,2,1,1,1,1,4,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,15,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChanging.java,com.interview.dynamic.CoinChanging,"numberOfSolutions/2[int,int[]]",false,18,1,1,1,0,5,0,17,1,4,2,0,0,0,3,0,0,0,0,11,7,8,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\CopyLinkListWIthArbitPointer.java,com.interview.linklist.CopyLinkListWIthArbitPointer$RandomListNode,RandomListNode/1[int],true,20,0,2,2,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.SumOperation,"perform/2[int,int]",false,114,0,0,0,0,1,0,3,1,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FlattenLinkListToBinaryTreePreorder.java,com.interview.tree.FlattenLinkListToBinaryTreePreorder,flatten1/1[com.interview.tree.Node],false,40,2,1,0,1,3,1,11,1,2,1,1,1,1,1,2,0,0,0,0,6,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FlattenLinkListToBinaryTreePreorder.java,com.interview.tree.FlattenLinkListToBinaryTreePreorder,flatten/1[com.interview.tree.Node],false,16,1,1,1,0,6,3,23,1,3,1,3,0,0,1,4,0,0,0,0,7,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IdenticalTrees.java,com.interview.tree.IdenticalTrees,main/1[java.lang.String[]],false,158,1,3,0,3,1,3,7,0,3,1,3,2,5,0,0,0,0,0,18,3,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IdenticalTrees.java,com.interview.tree.IdenticalTrees,"sameBST1/2[java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>]",false,98,1,4,2,2,13,5,46,5,6,2,5,2,1,2,5,0,0,0,8,9,0,2,0,0,0,36,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IdenticalTrees.java,com.interview.tree.IdenticalTrees,"compare/2[java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>]",false,145,0,1,1,0,4,2,12,2,1,2,2,0,0,2,0,0,0,0,0,1,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IdenticalTrees.java,com.interview.tree.IdenticalTrees,"nextBigSmall/4[int[],int,int,int]",false,53,2,2,1,1,10,0,18,1,4,4,0,0,0,1,0,0,1,0,1,8,1,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IdenticalTrees.java,com.interview.tree.IdenticalTrees,"sameBST1/2[int[],int[]]",false,81,2,2,1,1,3,2,11,1,2,2,2,1,2,2,0,0,0,0,0,2,0,1,0,0,0,42,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IdenticalTrees.java,com.interview.tree.IdenticalTrees,"sameBST/2[int[],int[]]",false,20,2,2,1,1,1,1,3,1,0,2,1,1,2,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IdenticalTrees.java,com.interview.tree.IdenticalTrees,"sameBST/5[int[],int[],int,int,int]",false,24,3,4,2,2,9,2,25,3,6,5,2,2,1,1,7,0,0,0,4,9,0,2,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MedianOf3Number.java,com.interview.number.MedianOf3Number,main/1[java.lang.String[]],false,47,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,3,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MedianOf3Number.java,com.interview.number.MedianOf3Number,medianXORMethod/1[int[]],false,40,1,1,1,0,4,0,6,1,3,1,0,0,0,0,0,0,0,0,12,3,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MedianOf3Number.java,com.interview.number.MedianOf3Number,median/1[int[]],false,5,1,0,0,0,6,0,22,5,3,1,0,0,0,0,0,0,0,0,3,3,0,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\MedianOf3Number.java,com.interview.number.MedianOf3Number,median2Comparison/1[int[]],false,26,1,0,0,0,3,0,14,3,3,1,0,0,0,0,0,0,4,0,5,3,6,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ReorderArrayByIndex.java,com.interview.array.ReorderArrayByIndex,main/1[java.lang.String[]],false,36,1,2,0,2,1,5,9,0,5,1,5,1,1,0,0,0,0,2,10,3,2,0,0,0,2,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ReorderArrayByIndex.java,com.interview.array.ReorderArrayByIndex,"reorder/2[int[],int[]]",false,18,1,1,1,0,4,0,15,0,3,2,0,0,0,2,2,0,0,0,1,7,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\WallsAndGates.java,com.interview.graph.WallsAndGates,"addNeighbors/4[int[][],int,int,java.util.Deque<com.interview.graph.WallsAndGates.Cell>]",false,35,2,2,1,1,7,1,11,0,2,4,1,0,0,1,1,0,0,0,6,3,3,2,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\WallsAndGates.java,com.interview.graph.WallsAndGates,wallsAndGates/1[int[][]],false,24,3,2,0,2,2,4,8,0,2,1,4,2,1,1,0,0,0,0,0,2,0,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\WallsAndGates.java,com.interview.graph.WallsAndGates,"gates/2[int[][],java.util.Deque<com.interview.graph.WallsAndGates.Cell>]",false,47,2,2,1,1,4,1,9,0,2,2,1,0,0,2,1,0,0,0,4,2,0,3,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\AngleBetweenHourAndMinuteHand.java,com.interview.misc.AngleBetweenHourAndMinuteHand,main/1[java.lang.String[]],false,16,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\AngleBetweenHourAndMinuteHand.java,com.interview.misc.AngleBetweenHourAndMinuteHand,"angle/2[int,int]",false,8,0,1,1,0,2,1,6,1,3,2,1,0,0,0,0,0,3,0,10,3,12,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.Position,"Position/2[int,int]",true,14,0,4,4,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.Position,hashCode/0,false,19,0,0,0,0,1,0,7,1,2,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\TilingProblem.java,com.interview.multiarray.Position,equals/1[java.lang.Object],false,27,1,1,1,0,6,1,9,6,1,1,1,0,0,0,5,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RemoveFromEndToMake2IntoMinGreaterThanMax.java,com.interview.dynamic.RemoveFromEndToMake2IntoMinGreaterThanMax,removeFromEnd/1[int[]],false,8,2,2,1,1,1,1,3,1,0,1,1,1,2,0,0,0,0,0,2,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RemoveFromEndToMake2IntoMinGreaterThanMax.java,com.interview.dynamic.RemoveFromEndToMake2IntoMinGreaterThanMax,"min/3[int[],int,int]",false,25,1,2,2,0,3,0,9,1,2,3,0,0,0,1,0,0,0,0,0,3,0,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RemoveFromEndToMake2IntoMinGreaterThanMax.java,com.interview.dynamic.RemoveFromEndToMake2IntoMinGreaterThanMax,"removeFromEnd/3[int[],int,int]",false,12,2,5,2,3,3,4,11,3,2,3,4,3,1,0,0,0,0,0,5,2,4,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RemoveFromEndToMake2IntoMinGreaterThanMax.java,com.interview.dynamic.RemoveFromEndToMake2IntoMinGreaterThanMax,"max/3[int[],int,int]",false,34,1,2,2,0,3,0,9,1,2,3,0,0,0,1,0,0,0,0,0,3,0,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RemoveFromEndToMake2IntoMinGreaterThanMax.java,com.interview.dynamic.RemoveFromEndToMake2IntoMinGreaterThanMax,main/1[java.lang.String[]],false,59,1,3,0,3,1,3,6,0,2,1,3,2,4,0,0,0,0,0,7,2,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\RemoveFromEndToMake2IntoMinGreaterThanMax.java,com.interview.dynamic.RemoveFromEndToMake2IntoMinGreaterThanMax,removeFromEndDynamic/1[int[]],false,44,2,3,1,2,4,3,16,1,6,1,3,2,1,2,0,0,0,0,11,8,9,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\SimplyPath.java,com.interview.stackqueue.SimplyPath,main/1[java.lang.String[]],false,46,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,1,0,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\SimplyPath.java,com.interview.stackqueue.SimplyPath,simplifyPath/1[java.lang.String],false,23,0,1,1,0,6,9,24,1,4,1,9,0,0,2,0,0,0,5,0,4,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixNode,toString/0,false,399,0,0,0,0,3,2,11,1,2,0,2,0,0,1,1,0,0,4,1,2,2,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixNode,SuffixNode/0,true,379,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixNode,"createNode/2[int,com.interview.suffixprefix.End]",false,391,2,3,2,1,1,0,6,1,1,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\HamiltonianCycle.java,com.interview.graph.HamiltonianCycle,"getHamiltonianCycle/2[com.interview.graph.Graph<T>,java.util.List<com.interview.graph.Vertex<T>>]",false,10,4,2,0,2,1,5,5,1,2,2,5,0,0,0,0,0,0,0,0,2,0,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\HamiltonianCycle.java,com.interview.graph.HamiltonianCycle,"hamiltonianUtil/5[com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>,java.util.List<com.interview.graph.Vertex<T>>,java.util.Set<com.interview.graph.Vertex<T>>,int]",false,19,3,3,0,3,6,9,19,3,1,5,9,0,0,1,1,0,0,0,1,1,1,3,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\HamiltonianCycle.java,com.interview.graph.HamiltonianCycle,main/1[java.lang.String[]],false,40,3,4,0,4,2,4,17,0,4,1,4,0,0,0,0,0,0,0,14,4,0,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\DuplicateNumberDetection.java,com.interview.array.DuplicateNumberDetection,main/1[java.lang.String[]],false,34,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,5,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\DuplicateNumberDetection.java,com.interview.array.DuplicateNumberDetection,findDuplicate/1[int[]],false,14,1,1,1,0,5,0,17,2,2,1,0,0,0,2,4,0,0,0,6,7,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCacheLeetCode.java,com.interview.linklist.LRUCacheLeetCode$MyMap,MyMap/1[int],true,33,0,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LRUCacheLeetCode.java,com.interview.linklist.LRUCacheLeetCode$MyMap,"removeEldestEntry/1[java.util.Map.Entry<java.lang.Integer,java.lang.Integer>]",false,38,0,0,0,0,2,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,4,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,toString/0,false,239,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,5,0,0,1,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,getVertex2/0,false,195,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,"Edge/4[com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>,boolean,int]",true,178,2,0,0,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,getVertex1/0,false,191,2,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,"Edge/3[com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>,boolean]",true,185,2,0,0,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,"Edge/2[com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>]",true,173,2,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,hashCode/0,false,208,1,1,0,1,3,1,7,1,2,0,1,0,0,0,2,0,4,0,4,4,4,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,isDirected/0,false,203,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,getWeight/0,false,199,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Graph.java,com.interview.graph.Edge,equals/1[java.lang.Object],false,217,2,1,0,1,10,2,15,8,1,1,2,0,0,0,7,0,0,0,0,1,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,validateRedBlackTree/1[com.interview.tree.RedBlackTree.Node],false,97,2,3,1,2,3,3,11,3,1,1,3,2,1,0,2,0,0,1,2,1,0,1,0,0,0,24,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"deleteOneChild/2[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,330,2,3,1,2,4,2,12,0,1,2,2,2,9,0,2,0,0,0,0,2,0,2,0,0,0,20,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"replaceNode/3[com.interview.tree.RedBlackTree.Node,com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,453,2,2,1,1,3,2,14,0,0,3,2,1,1,0,1,0,0,0,0,3,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"insert/2[com.interview.tree.RedBlackTree.Node,int]",false,70,2,2,1,1,1,1,3,1,0,2,1,1,5,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"deleteCase4/2[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,402,2,3,1,2,5,3,11,1,1,2,3,2,4,0,4,0,0,0,0,3,0,1,0,0,0,39,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"delete/3[com.interview.tree.RedBlackTree.Node,int,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,292,2,5,2,3,7,3,21,1,1,3,3,3,10,0,2,0,0,0,0,2,0,2,0,0,0,24,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"deleteCase6/2[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,437,2,5,1,4,3,6,16,0,1,2,6,4,2,0,1,0,0,0,0,5,0,1,0,0,0,44,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,createNullLeafNode/1[com.interview.tree.RedBlackTree.Node],false,49,1,3,2,1,1,0,7,1,1,1,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"createRedNode/2[com.interview.tree.RedBlackTree.Node,int]",false,57,2,3,1,2,1,1,9,1,1,2,1,1,1,0,0,0,0,0,0,6,0,0,0,0,0,8,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,isLeftChild/1[com.interview.tree.RedBlackTree.Node],false,168,1,6,6,0,2,0,9,2,1,1,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,createBlackNode/1[int],false,40,2,3,1,2,1,1,8,1,1,1,1,1,1,0,0,0,0,0,0,5,0,0,0,0,0,7,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"leftRotate/2[com.interview.tree.RedBlackTree.Node,boolean]",false,136,1,4,4,0,5,0,23,0,2,2,0,0,0,0,3,0,0,0,0,11,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,printRedBlackTree/1[com.interview.tree.RedBlackTree.Node],false,90,2,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"noRedRedParentChild/2[com.interview.tree.RedBlackTree.Node,com.interview.tree.RedBlackTree.Color]",false,479,3,3,2,1,4,1,9,3,0,2,1,1,0,0,3,0,0,0,0,0,0,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,findSmallest/1[com.interview.tree.RedBlackTree.Node],false,318,1,1,1,0,4,0,8,1,1,1,0,0,0,1,2,0,0,0,0,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"deleteCase2/2[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,364,2,6,1,5,4,7,15,0,1,2,7,5,6,0,2,0,0,0,0,1,0,2,0,0,0,37,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"deleteCase5/2[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,419,2,6,1,5,8,6,12,0,1,2,6,5,3,0,5,0,0,0,0,1,0,2,0,0,0,40,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,findSiblingNode/1[com.interview.tree.RedBlackTree.Node],false,159,2,7,6,1,4,2,9,2,1,1,2,1,1,0,0,0,0,0,0,1,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"deleteCase1/2[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,351,2,3,2,1,2,2,7,1,0,2,2,1,7,0,1,0,0,0,0,0,0,1,0,0,0,25,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"rightRotate/2[com.interview.tree.RedBlackTree.Node,boolean]",false,113,1,4,4,0,5,0,23,0,2,2,0,0,0,0,3,0,0,0,0,11,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"printRedBlackTree/2[com.interview.tree.RedBlackTree.Node,int]",false,467,2,3,2,1,5,3,11,1,1,2,3,1,0,1,2,0,1,4,3,1,3,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"deleteCase3/2[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicReference<com.interview.tree.RedBlackTree.Node>]",false,384,2,4,1,3,5,4,10,0,1,2,4,3,7,0,4,0,0,0,0,2,0,1,0,0,0,39,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"delete/2[com.interview.tree.RedBlackTree.Node,int]",false,77,2,2,1,1,2,2,10,2,1,2,2,1,11,0,1,0,0,0,0,1,0,1,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"checkBlackNodesCount/3[com.interview.tree.RedBlackTree.Node,java.util.concurrent.atomic.AtomicInteger,int]",false,490,2,3,2,1,5,3,15,3,0,3,3,1,0,0,5,0,0,0,1,0,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,"insert/3[com.interview.tree.RedBlackTree.Node,com.interview.tree.RedBlackTree.Node,int]",false,177,2,9,2,7,21,9,75,5,5,3,9,7,4,0,13,0,0,1,0,16,1,4,0,0,0,24,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RedBlackTree.java,com.interview.tree.RedBlackTree,main/1[java.lang.String[]],false,507,2,5,0,5,1,5,61,0,2,1,5,4,18,0,0,0,0,0,37,39,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4Function$Queue,Queue/1[int],true,34,1,1,1,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4Function$Queue,poll/0,false,49,0,1,1,0,1,0,6,1,1,0,0,0,0,0,0,0,1,0,1,2,2,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4Function$Queue,isEmpty/0,false,39,0,1,1,0,2,0,3,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4Function$Queue,offer/1[char],false,43,0,1,1,0,1,0,5,0,0,1,0,0,0,0,0,0,1,0,1,2,2,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\GrahamScanConvexHull.java,com.interview.geometry.GrahamScanConvexHull$Point,"Point/2[int,int]",true,31,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TripletSumLessThanTotal.java,com.interview.array.TripletSumLessThanTotal,main/1[java.lang.String[]],false,34,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,6,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TripletSumLessThanTotal.java,com.interview.array.TripletSumLessThanTotal,"findAllTriplets/2[int[],int]",false,15,1,1,1,0,4,1,18,1,4,2,1,0,0,2,0,0,0,0,5,5,5,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\AddNumberRepresentedByLinkList.java,com.interview.linklist.AddNumberRepresentedByLinkList,main/1[java.lang.String[]],false,78,3,5,0,5,1,3,13,0,5,1,3,1,2,0,0,0,0,0,5,10,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\AddNumberRepresentedByLinkList.java,com.interview.linklist.AddNumberRepresentedByLinkList,"addRemaining/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,27,2,4,2,2,2,2,12,2,1,2,2,1,0,0,1,0,2,0,3,4,4,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\AddNumberRepresentedByLinkList.java,com.interview.linklist.AddNumberRepresentedByLinkList,"addWithCarry/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,15,2,4,2,2,2,2,11,2,2,2,2,1,0,0,1,0,0,0,3,5,3,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\AddNumberRepresentedByLinkList.java,com.interview.linklist.AddNumberRepresentedByLinkList,"add/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,39,3,7,1,6,8,6,39,2,11,2,6,2,1,2,5,0,0,0,2,19,1,2,0,0,0,25,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\IncreasingSubsequnceOfLength3WithMaxProduct.java,com.interview.array.IncreasingSubsequnceOfLength3WithMaxProduct,"getLGN/3[int[],int,int[]]",false,47,1,1,1,0,4,0,13,0,2,3,0,0,0,1,0,0,0,0,2,4,0,3,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\IncreasingSubsequnceOfLength3WithMaxProduct.java,com.interview.array.IncreasingSubsequnceOfLength3WithMaxProduct,main/1[java.lang.String[]],false,61,1,2,0,2,1,2,7,0,3,1,2,1,2,0,0,0,0,0,13,3,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\IncreasingSubsequnceOfLength3WithMaxProduct.java,com.interview.array.IncreasingSubsequnceOfLength3WithMaxProduct,maxProduct/1[int[]],false,15,2,2,1,1,7,1,29,1,8,1,1,1,1,3,0,0,0,0,12,14,6,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\MaximumPointsOnSameLine.java,com.interview.geometry.MaximumPointsOnSameLine$Point,Point/0,true,22,0,0,0,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\MaximumPointsOnSameLine.java,com.interview.geometry.MaximumPointsOnSameLine$Point,"Point/2[int,int]",true,23,0,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumMinimumArrangement.java,com.interview.array.MaximumMinimumArrangement,rearrange/1[int[]],false,17,1,0,0,0,8,1,25,0,6,1,1,0,0,3,1,0,1,0,9,10,5,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\FirstOccurrenceOfNumberInSortedArray.java,com.interview.binarysearch.FirstOccurrenceOfNumberInSortedArray,"firstOccurrence/2[int[],int]",false,8,1,1,1,0,6,0,17,2,3,2,0,0,0,1,2,0,2,0,8,5,6,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\FirstOccurrenceOfNumberInSortedArray.java,com.interview.binarysearch.FirstOccurrenceOfNumberInSortedArray,main/1[java.lang.String[]],false,25,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,10,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsCompleteBinaryTree.java,com.interview.tree.IsCompleteBinaryTree,isComplete/1[com.interview.tree.Node],false,15,1,1,1,0,9,3,29,3,2,1,3,0,0,1,6,0,0,0,0,5,0,3,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsCompleteBinaryTree.java,com.interview.tree.IsCompleteBinaryTree,main/1[java.lang.String[]],false,42,3,4,0,4,1,3,15,0,3,1,3,1,1,0,0,0,0,0,9,12,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\InsertMintoNiTojBits.java,com.interview.bits.InsertMintoNiTojBits,main/1[java.lang.String[]],false,18,1,2,0,2,1,2,7,0,4,1,2,1,1,0,0,0,0,0,4,4,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\InsertMintoNiTojBits.java,com.interview.bits.InsertMintoNiTojBits,"insert/4[int,int,int,int]",false,8,0,1,1,0,1,0,8,1,1,4,0,0,0,0,0,0,1,0,3,5,5,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.GraphColoring,"getUnusedColor/1[java.util.Map<java.lang.String,java.lang.Boolean>]",false,114,0,2,2,0,3,3,8,1,0,1,3,0,0,1,0,0,0,0,0,0,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.GraphColoring,"assignColor/2[java.lang.String,java.util.Map<java.lang.String,java.lang.Boolean>]",false,134,0,1,1,0,1,2,4,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.GraphColoring,main/1[java.lang.String[]],false,147,1,2,0,2,1,1,4,0,1,1,1,1,2,0,0,0,0,0,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.GraphColoring,colorGraph/0,false,73,3,8,0,8,4,11,34,0,7,0,11,3,1,2,1,0,0,4,22,7,0,3,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.GraphColoring,"allAdjacentUnColored/2[java.util.Collection<com.interview.graph.Vertex<java.lang.Integer>>,java.util.Map<java.lang.Long,java.lang.String>]",false,139,1,2,1,1,3,2,8,2,0,2,2,0,0,1,0,0,0,0,0,0,0,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.GraphColoring,"resetColor/1[java.util.Map<java.lang.String,java.lang.Boolean>]",false,123,0,1,1,0,3,4,10,0,1,1,4,0,0,2,0,0,0,0,0,1,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\GraphColoring.java,com.interview.graph.GraphColoring,WelshPowell/0,false,18,4,9,1,8,6,14,47,0,9,0,14,2,1,3,1,0,0,5,24,10,0,3,0,0,0,26,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WeightedJobSchedulingMaximumProfit.java,com.interview.dynamic.Job,"Job/3[int,int,int]",true,10,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\CycleLeaderIteration.java,com.interview.string.CycleLeaderIteration,main/1[java.lang.String[]],false,29,2,2,0,2,2,3,9,0,3,1,3,1,1,1,0,0,0,2,1,3,1,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\CycleLeaderIteration.java,com.interview.string.CycleLeaderIteration,"iterate/3[char[],int,int]",false,6,1,2,2,0,4,0,23,0,6,3,0,0,0,2,2,0,0,0,9,12,11,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintAllSubsequence.java,com.interview.recursion.PrintAllSubsequence,print/1[int[]],false,13,2,2,1,1,2,1,7,0,2,1,1,1,1,1,0,0,0,0,4,3,1,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintAllSubsequence.java,com.interview.recursion.PrintAllSubsequence,main/1[java.lang.String[]],false,39,2,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,4,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintAllSubsequence.java,com.interview.recursion.PrintAllSubsequence,"print/5[int[],int[],int,int,boolean]",false,21,2,3,2,1,4,3,14,1,1,5,3,1,0,1,1,0,0,1,4,2,4,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTree.java,com.interview.tree.BinaryTree,height/1[com.interview.tree.Node],false,73,2,3,2,1,2,2,8,2,2,1,2,1,0,0,1,0,0,0,2,2,1,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTree.java,com.interview.tree.BinaryTree,"addNode/2[int,com.interview.tree.Node]",false,45,1,32,31,1,5,1,25,2,3,2,1,0,0,1,2,0,0,0,0,9,0,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTree.java,com.interview.tree.BinaryTree,main/1[java.lang.String[]],false,82,2,3,0,3,1,3,13,0,2,1,3,2,1,0,0,0,0,0,8,10,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LargerElementOnRight.java,com.interview.array.LargerElementOnRight,larger/1[int[]],false,17,1,1,1,0,5,4,22,1,5,1,4,0,0,3,0,0,0,0,5,7,0,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LargerElementOnRight.java,com.interview.array.LargerElementOnRight,main/1[java.lang.String[]],false,40,1,2,0,2,3,2,13,0,4,1,2,1,1,1,1,0,0,2,11,4,1,2,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BiparteGraph.java,com.interview.graph.BiparteGraph,isBiparteDFS/1[com.interview.graph.Graph<java.lang.Integer>],false,54,3,3,1,2,5,3,14,2,3,1,3,1,1,1,0,0,0,0,0,3,0,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BiparteGraph.java,com.interview.graph.BiparteGraph,main/1[java.lang.String[]],false,101,2,4,0,4,1,3,14,0,3,1,3,1,2,0,0,0,0,0,16,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BiparteGraph.java,com.interview.graph.BiparteGraph,isBiparte/1[com.interview.graph.Graph<java.lang.Integer>],false,14,2,2,0,2,12,8,38,3,3,1,8,0,0,3,0,0,0,0,0,4,0,6,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BiparteGraph.java,com.interview.graph.BiparteGraph,"isBiparteDFS/4[com.interview.graph.Vertex<java.lang.Integer>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,boolean]",false,69,2,4,2,2,9,4,27,6,1,4,4,1,0,1,0,0,0,0,0,1,0,2,0,0,0,12,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\HuffmanEncoding.java,com.interview.tree.HuffmanNodeComparator,"compare/2[com.interview.tree.HuffmanNode,com.interview.tree.HuffmanNode]",false,22,1,0,0,0,2,0,8,2,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.PositionUpdater,PositionUpdater/1[com.interview.multithreaded.RealTimeCounter],true,103,1,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.PositionUpdater,start/0,false,107,0,1,1,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.PositionUpdater,run/0,false,111,1,1,0,1,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MultiplyAllFieldsExceptOwnPosition.java,com.interview.array.MultiplyAllFieldsExceptOwnPosition,multiply/1[int[]],false,8,1,0,0,0,4,0,16,2,4,1,0,0,0,2,1,0,0,0,10,8,4,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\UglyNumbers.java,com.interview.dynamic.UglyNumbers$Node,"Node/3[int,int,int]",true,21,0,1,1,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\UglyNumbers.java,com.interview.dynamic.UglyNumbers$Node,compareTo/1[com.interview.dynamic.UglyNumbers.Node],false,28,1,0,0,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SubarrayWithGivenSum.java,com.interview.array.SubarrayWithGivenSum,"findSubArray/2[int[],int]",false,16,2,2,1,1,6,0,24,3,4,2,0,0,0,2,2,0,0,0,3,9,0,3,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SubarrayWithGivenSum.java,com.interview.array.SubarrayWithGivenSum,main/1[java.lang.String[]],false,40,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,8,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\CircularQueue.java,com.interview.stackqueue.CircularQueue,CircularQueue/1[int],true,7,1,0,0,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\CircularQueue.java,com.interview.stackqueue.CircularQueue,isEmpty/0,false,50,0,0,0,0,2,0,6,2,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\CircularQueue.java,com.interview.stackqueue.CircularQueue,main/1[java.lang.String[]],false,64,1,5,0,5,2,6,15,0,1,1,6,0,0,1,0,0,0,0,7,1,0,1,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\CircularQueue.java,com.interview.stackqueue.CircularQueue,top/0,false,26,1,0,0,0,2,0,8,1,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\CircularQueue.java,com.interview.stackqueue.CircularQueue,poll/0,false,34,1,0,0,0,3,0,16,2,2,0,0,0,0,0,2,0,1,0,4,5,2,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\CircularQueue.java,com.interview.stackqueue.CircularQueue,offer/1[T],false,13,1,0,0,0,3,0,14,0,0,1,0,0,0,0,2,0,2,0,6,5,4,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\CircularQueue.java,com.interview.stackqueue.CircularQueue,isFull/0,false,57,0,0,0,0,2,0,6,2,0,0,0,0,0,0,1,0,1,0,1,0,2,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\KthLargestInRowiseColumnWiseSorted2DArray.java,com.interview.misc.KthLargestInRowiseColumnWiseSorted2DArray,"kthLargest/2[int[][],int]",false,11,2,5,1,4,7,3,27,1,10,2,3,0,0,1,1,0,3,0,10,11,14,2,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\KthLargestInRowiseColumnWiseSorted2DArray.java,com.interview.misc.KthLargestInRowiseColumnWiseSorted2DArray,main/1[java.lang.String[]],false,42,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,17,2,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximizeSkiGates.java,com.interview.dynamic.MaximizeSkiGates,"solution/2[int[],int]",false,57,3,2,1,1,1,1,4,1,1,2,1,1,1,0,0,0,0,0,2,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximizeSkiGates.java,com.interview.dynamic.MaximizeSkiGates,"solution/6[int[],int,int,boolean,int,java.util.Map<com.interview.dynamic.MaximizeSkiGates.Index,java.lang.Integer>]",false,62,3,4,2,2,8,5,20,3,5,6,5,1,0,0,0,0,2,0,10,7,6,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximizeSkiGates.java,com.interview.dynamic.MaximizeSkiGates,main/1[java.lang.String[]],false,92,1,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,0,14,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestIncreasingSubsequence.java,com.interview.dynamic.LongestIncreasingSubsequence,main/1[java.lang.String[]],false,95,1,3,0,3,1,3,8,0,4,1,3,2,2,0,0,0,0,0,19,4,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestIncreasingSubsequence.java,com.interview.dynamic.LongestIncreasingSubsequence,"longestSubsequenceRecursive/3[int[],int,int]",false,83,2,3,2,1,3,2,11,2,2,3,2,1,0,0,1,0,0,0,5,3,3,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestIncreasingSubsequence.java,com.interview.dynamic.LongestIncreasingSubsequence,longestSubsequenceWithActualSolution/1[int[]],false,28,1,1,1,0,9,2,34,1,9,1,2,0,0,5,1,0,0,1,8,16,3,4,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestIncreasingSubsequence.java,com.interview.dynamic.LongestIncreasingSubsequence,longestSubsequenceRecursive/1[int[]],false,72,2,2,1,1,3,1,10,1,3,1,1,1,1,1,0,0,0,0,5,4,3,2,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\TextJustification.java,com.interview.dynamic.TextJustification,main/1[java.lang.String[]],false,98,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,8,1,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\TextJustification.java,com.interview.dynamic.TextJustification,"justify/2[java.lang.String[],int]",false,36,1,1,1,0,12,5,49,1,13,2,5,0,0,8,1,0,0,4,16,22,14,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.Task,execute/0,false,74,0,2,2,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.Task,name/0,false,72,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.Task,dependencies/0,false,73,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\QuickSort.java,com.interview.sort.QuickSort,"split/3[int[],int,int]",false,12,2,1,0,1,9,1,20,1,3,3,1,1,1,3,0,0,0,0,1,3,1,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\QuickSort.java,com.interview.sort.QuickSort,main/1[java.lang.String[]],false,78,1,3,0,3,1,2,6,0,2,1,2,2,3,0,0,0,0,0,19,2,1,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\QuickSort.java,com.interview.sort.QuickSort,"swap/3[int[],int,int]",false,6,1,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\QuickSort.java,com.interview.sort.QuickSort,"split1/3[int[],int,int]",false,37,2,2,1,1,5,1,21,2,3,3,1,1,1,1,0,0,0,0,1,3,1,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\QuickSort.java,com.interview.sort.QuickSort,printArray/1[int[]],false,73,1,1,1,0,2,1,5,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\QuickSort.java,com.interview.sort.QuickSort,"sort/3[int[],int,int]",false,63,2,4,2,2,2,2,8,1,1,3,2,2,2,0,0,0,0,0,2,1,2,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestSubstringWithAtMost2Char.java,com.interview.array.LongestSubstringWithAtMost2Char,main/1[java.lang.String[]],false,51,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,1,0,1,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestSubstringWithAtMost2Char.java,com.interview.array.LongestSubstringWithAtMost2Char,lengthOfLongestSubstringTwoDistinct/1[java.lang.String],false,8,0,1,1,0,13,3,46,1,7,1,3,0,0,2,10,0,0,0,15,12,2,5,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphJohnson.java,com.interview.graph.AllCyclesInDirectedGraphJohnson,"leastIndexSCC/2[java.util.List<java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>>,com.interview.graph.Graph<java.lang.Integer>]",false,56,3,8,1,7,9,10,27,2,4,2,10,0,0,3,2,0,0,0,1,7,0,3,0,0,0,16,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphJohnson.java,com.interview.graph.AllCyclesInDirectedGraphJohnson,simpleCyles/1[com.interview.graph.Graph<java.lang.Integer>],false,28,4,8,1,7,3,11,24,1,6,1,11,3,2,1,0,0,0,0,2,11,1,2,0,0,0,34,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphJohnson.java,com.interview.graph.AllCyclesInDirectedGraphJohnson,"findCyclesInSCG/2[com.interview.graph.Vertex<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>]",false,99,3,7,2,5,6,12,33,1,6,2,12,3,1,2,1,0,0,0,0,8,0,2,0,0,0,24,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphJohnson.java,com.interview.graph.AllCyclesInDirectedGraphJohnson,"createSubGraph/2[long,com.interview.graph.Graph<java.lang.Integer>]",false,146,3,7,1,6,4,5,9,1,1,2,5,0,0,1,0,0,0,0,0,1,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphJohnson.java,com.interview.graph.AllCyclesInDirectedGraphJohnson,getBSet/1[com.interview.graph.Vertex<java.lang.Integer>],false,141,1,1,1,0,1,1,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphJohnson.java,com.interview.graph.AllCyclesInDirectedGraphJohnson,unblock/1[com.interview.graph.Vertex<java.lang.Integer>],false,85,2,3,2,1,3,6,12,0,1,1,6,1,0,0,1,0,0,0,0,0,0,3,0,0,1,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\AllCyclesInDirectedGraphJohnson.java,com.interview.graph.AllCyclesInDirectedGraphJohnson,main/1[java.lang.String[]],false,156,3,5,0,5,1,8,26,0,6,1,8,1,3,0,0,0,0,1,30,4,0,1,0,0,2,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\MaximumBiparteMatching.java,com.interview.graph.MaximumBiparteMatching,main/1[java.lang.String[]],false,47,1,2,0,2,1,4,26,0,7,1,4,1,2,0,0,0,0,0,16,7,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\MaximumBiparteMatching.java,com.interview.graph.MaximumBiparteMatching,"findMaxMatching/2[java.util.Map<java.lang.Integer,java.util.List<java.lang.Integer>>,java.util.List<java.lang.Integer>]",false,15,1,2,1,1,3,2,9,1,3,2,2,1,1,1,1,0,0,0,3,4,0,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\MaximumBiparteMatching.java,com.interview.graph.MaximumBiparteMatching,"matchJobs/4[java.lang.Integer,java.util.Map<java.lang.Integer,java.util.List<java.lang.Integer>>,java.util.Map<java.lang.Integer,java.lang.Integer>,java.util.Set<java.lang.Integer>]",false,26,1,3,2,1,5,6,18,3,1,4,6,1,0,1,1,0,0,0,0,1,0,2,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsPreOrderArrayBST.java,com.interview.tree.IsPreOrderArrayBST,verifyPreorderConstantSpace/1[int[]],false,37,2,2,1,1,4,1,15,2,4,1,1,1,1,1,0,0,0,0,4,6,2,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsPreOrderArrayBST.java,com.interview.tree.IsPreOrderArrayBST,"binarySearch/4[int[],int,int,int]",false,53,1,1,1,0,6,0,17,2,3,4,0,0,0,1,1,0,2,0,5,5,5,2,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsPreOrderArrayBST.java,com.interview.tree.IsPreOrderArrayBST,verifyPreorder/1[int[]],false,21,1,1,1,0,5,4,15,2,3,1,4,0,0,2,0,0,0,0,2,4,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsPreOrderArrayBST.java,com.interview.tree.IsPreOrderArrayBST,main/1[java.lang.String[]],false,69,2,3,0,3,1,3,6,0,2,1,3,2,2,0,0,0,0,0,8,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CourseSchedule.java,com.interview.graph.CourseSchedule,"findOrder/2[int,int[][]]",false,23,4,2,0,2,6,4,23,2,8,2,4,1,1,4,0,0,0,0,6,10,0,2,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CourseSchedule.java,com.interview.graph.CourseSchedule,"topSort/5[int,com.interview.graph.CourseSchedule.Neighbors[],boolean[],java.util.Deque<java.lang.Integer>,boolean[]]",false,56,3,3,2,1,5,2,18,4,0,5,2,1,0,1,0,0,0,0,0,3,0,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChangingMinimumCoin.java,com.interview.dynamic.CoinChangingMinimumCoin,"minimumCoinTopDown/3[int,int[],java.util.Map<java.lang.Integer,java.lang.Integer>]",false,27,2,3,2,1,7,4,21,3,3,3,4,1,0,1,2,0,1,0,4,5,2,2,0,0,0,22,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChangingMinimumCoin.java,com.interview.dynamic.CoinChangingMinimumCoin,"minimumCoinBottomUp/2[int,int[]]",false,70,2,2,1,1,6,1,21,1,5,2,1,1,1,3,0,0,0,0,11,10,7,4,0,0,0,28,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChangingMinimumCoin.java,com.interview.dynamic.CoinChangingMinimumCoin,"printCoinCombination/2[int[],int[]]",false,92,1,1,1,0,3,1,14,1,2,2,1,0,0,1,2,0,0,4,4,3,4,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CoinChangingMinimumCoin.java,com.interview.dynamic.CoinChangingMinimumCoin,main/1[java.lang.String[]],false,107,1,3,0,3,1,4,9,0,6,1,4,2,2,0,0,0,0,1,5,6,0,0,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\InPlaceTransformationOfString.java,com.interview.string.InPlaceTransformationOfString,inPlaceTransformationImproved/1[char[]],false,47,3,5,1,4,3,3,21,0,6,1,3,2,2,2,0,0,0,0,13,11,17,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\InPlaceTransformationOfString.java,com.interview.string.InPlaceTransformationOfString,get3PowerK1/1[int],false,70,0,1,1,0,2,0,7,1,1,1,0,0,0,1,0,0,1,0,5,2,4,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\InPlaceTransformationOfString.java,com.interview.string.InPlaceTransformationOfString,main/1[java.lang.String[]],false,78,1,2,0,2,2,2,8,0,3,1,2,1,3,1,0,0,0,0,1,3,0,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\InPlaceTransformationOfString.java,com.interview.string.InPlaceTransformationOfString,"reverse/3[char[],int,int]",false,8,2,2,1,1,2,1,7,0,0,3,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\InPlaceTransformationOfString.java,com.interview.string.InPlaceTransformationOfString,"swap/3[char[],int,int]",false,16,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\InPlaceTransformationOfString.java,com.interview.string.InPlaceTransformationOfString,"cycleLeaderIteration/3[char[],int,int]",false,22,1,0,0,0,4,0,24,0,6,3,0,0,0,2,2,0,2,0,8,13,11,3,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SegmentTree.java,com.interview.tree.MinOperation,"perform/2[int,int]",false,121,0,0,0,0,1,1,3,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixOf0sAnd1s.java,com.interview.multiarray.MatrixOf0sAnd1s,main/1[java.lang.String[]],false,47,1,2,0,2,3,3,10,0,4,1,3,1,1,2,0,0,0,1,4,4,1,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MatrixOf0sAnd1s.java,com.interview.multiarray.MatrixOf0sAnd1s,"create/2[int,int]",false,9,1,1,1,0,7,2,29,1,8,2,2,0,0,5,1,0,0,0,7,15,8,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SpiralGeneration.java,com.interview.multiarray.SpiralGeneration,generateMatrix/1[int],false,12,1,1,1,0,7,0,27,1,10,1,0,0,0,5,0,0,0,0,5,14,2,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SpiralGeneration.java,com.interview.multiarray.SpiralGeneration,main/1[java.lang.String[]],false,43,2,2,0,2,3,3,10,0,4,1,3,1,1,2,0,0,0,1,3,4,1,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\WordAbbreviationCombination.java,com.interview.string.WordAbbreviationCombination,generateAbbreviations/1[java.lang.String],false,18,1,2,1,1,1,1,5,1,1,1,1,1,1,0,0,0,0,1,2,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\WordAbbreviationCombination.java,com.interview.string.WordAbbreviationCombination,"generateAbbreviationsUtil/5[java.lang.String,java.util.List<java.lang.String>,java.lang.String,int,int]",false,24,1,3,2,1,4,4,13,1,0,5,4,1,0,0,1,0,1,1,6,0,5,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\WordAbbreviationCombination.java,com.interview.string.WordAbbreviationCombination,main/1[java.lang.String[]],false,38,1,2,0,2,1,3,5,0,3,1,3,1,2,0,0,0,0,1,0,2,0,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SmallestIntegerNotRepresentedBySubsetSum.java,com.interview.array.SmallestIntegerNotRepresentedBySubsetSum,main/1[java.lang.String[]],false,48,1,3,0,3,1,3,7,0,3,1,3,2,1,0,0,0,0,0,5,3,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SmallestIntegerNotRepresentedBySubsetSum.java,com.interview.array.SmallestIntegerNotRepresentedBySubsetSum,"minPatches/2[int[],int]",false,31,1,1,1,0,4,0,16,1,3,2,0,0,0,1,1,0,0,0,3,5,1,2,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SmallestIntegerNotRepresentedBySubsetSum.java,com.interview.array.SmallestIntegerNotRepresentedBySubsetSum,findSmallestInteger/1[int[]],false,16,1,1,1,0,3,0,12,1,2,1,0,0,0,1,0,0,0,0,2,3,0,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\PrimMST.java,com.interview.graph.PrimMST,primMST/1[com.interview.graph.Graph<java.lang.Integer>],false,23,5,12,1,11,7,15,25,1,7,1,15,1,1,3,1,0,0,0,1,7,0,3,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\PrimMST.java,com.interview.graph.PrimMST,"getVertexForEdge/2[com.interview.graph.Vertex<java.lang.Integer>,com.interview.graph.Edge<java.lang.Integer>]",false,72,2,4,1,3,2,3,3,1,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\PrimMST.java,com.interview.graph.PrimMST,main/1[java.lang.String[]],false,76,3,4,0,4,2,3,17,0,3,1,3,1,2,1,0,0,0,0,27,3,0,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\StockBuySellKTransactions.java,com.interview.dynamic.StockBuySellKTransactions,main/1[java.lang.String[]],false,142,1,3,0,3,1,3,6,0,2,1,3,2,3,0,0,0,0,2,10,2,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\StockBuySellKTransactions.java,com.interview.dynamic.StockBuySellKTransactions,"maxProfitSlowSolution/2[int[],int]",false,91,2,2,1,1,6,2,17,2,5,2,2,1,1,3,2,0,0,0,12,7,6,3,0,0,0,26,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\StockBuySellKTransactions.java,com.interview.dynamic.StockBuySellKTransactions,"printActualSolution/2[int[][],int[]]",false,110,1,2,2,0,8,4,29,0,5,2,4,0,0,3,4,0,0,2,11,8,11,4,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\StockBuySellKTransactions.java,com.interview.dynamic.StockBuySellKTransactions,"maxProfit/2[int[],int]",false,69,2,2,1,1,5,2,15,2,4,2,2,1,1,2,2,0,0,0,11,6,6,2,0,0,0,26,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\StockBuySellKTransactions.java,com.interview.dynamic.StockBuySellKTransactions,"maxProfitLinearSpace/2[int,int[]]",false,23,2,1,0,1,7,2,21,3,6,2,2,1,1,3,2,0,0,0,9,9,4,2,0,0,0,25,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\StockBuySellKTransactions.java,com.interview.dynamic.StockBuySellKTransactions,allTimeProfit/1[int[]],false,46,1,1,1,0,3,0,14,1,3,1,0,0,0,1,0,0,0,0,4,6,2,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutation.java,com.interview.recursion.StringPermutation,main/1[java.lang.String[]],false,66,1,2,0,2,1,4,4,0,2,1,4,1,2,0,0,0,0,1,0,1,0,0,0,0,1,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutation.java,com.interview.recursion.StringPermutation,"permuteUtil/5[char[],int[],char[],int,java.util.List<java.lang.String>]",false,42,3,3,2,1,4,2,15,1,1,5,2,1,0,1,2,0,0,0,3,2,1,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutation.java,com.interview.recursion.StringPermutation,printArray/1[char[]],false,59,1,0,0,0,2,2,6,0,0,1,2,0,0,1,0,0,0,0,0,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\StringPermutation.java,com.interview.recursion.StringPermutation,permute/1[char[]],false,17,3,2,1,1,4,6,26,3,8,1,6,1,1,2,1,0,0,0,4,8,1,3,0,0,1,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\array\MeetingRoomsTest.java,com.interview.array.MeetingRoomsTest,testDifferentCases/0,false,11,3,0,0,0,1,3,10,0,2,0,3,0,0,0,0,0,0,0,15,6,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GreedyTextJustification.java,com.interview.array.GreedyTextJustification,"padSpace/2[java.lang.StringBuffer,int]",false,61,0,2,2,0,2,1,5,0,1,2,1,0,0,1,0,0,0,1,1,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GreedyTextJustification.java,com.interview.array.GreedyTextJustification,main/1[java.lang.String[]],false,131,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,5,1,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GreedyTextJustification.java,com.interview.array.GreedyTextJustification,"fullJustify1/2[java.lang.String[],int]",false,67,1,1,0,1,9,7,47,1,12,2,7,1,1,3,1,0,2,1,16,17,16,5,0,0,0,21,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GreedyTextJustification.java,com.interview.array.GreedyTextJustification,"fullJustify/2[java.lang.String[],int]",false,20,1,2,1,1,9,5,41,1,11,2,5,1,1,4,2,0,0,3,9,13,9,5,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberOfIsland.java,com.interview.graph.NumberOfIsland,"DFS/4[int[][],boolean[][],int,int]",false,23,3,3,2,1,6,1,13,2,0,4,1,1,0,0,3,0,0,0,9,1,6,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberOfIsland.java,com.interview.graph.NumberOfIsland,main/1[java.lang.String[]],false,39,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,25,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\NumberOfIsland.java,com.interview.graph.NumberOfIsland,numberOfIsland/1[int[][]],false,8,3,2,1,1,5,1,13,1,4,1,1,1,1,2,2,0,0,0,4,4,0,3,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumSumThreeNonOverlappingSubarray.java,com.interview.array.MaximumSumThreeNonOverlappingSubarray,"maxSumOfThreeSubarrays/2[int[],int]",false,13,1,1,1,0,10,0,49,1,9,2,0,0,0,4,1,0,0,0,27,20,25,4,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumSumThreeNonOverlappingSubarray.java,com.interview.array.MaximumSumThreeNonOverlappingSubarray,main/1[java.lang.String[]],false,60,2,2,0,2,2,2,9,0,4,1,2,1,1,1,0,0,0,0,16,4,0,1,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\MaximumPointsOnSameLine.java,com.interview.geometry.MaximumPointsOnSameLine,maxPoints/1[com.interview.geometry.MaximumPointsOnSameLine.Point[]],false,50,3,2,0,2,7,5,36,1,10,1,5,1,1,2,3,0,2,0,7,16,8,4,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\MaximumPointsOnSameLine.java,com.interview.geometry.MaximumPointsOnSameLine,"gcd/2[int,int]",false,85,1,3,2,1,2,1,4,2,0,2,1,1,0,0,1,0,0,0,1,0,1,1,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\RemoveMiddleElementsOfLineSegment.java,com.interview.linklist.Point,"Point/2[int,int]",true,16,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\AdditiveNumber.java,com.interview.array.AdditiveNumber,isAdditiveNumber/1[java.lang.String],false,17,1,1,0,1,9,5,21,3,4,1,5,1,1,2,2,0,1,0,16,4,12,3,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\AdditiveNumber.java,com.interview.array.AdditiveNumber,"isValid/4[java.lang.String,int,java.math.BigInteger,java.math.BigInteger]",false,40,1,3,2,1,2,5,7,2,1,4,5,1,0,0,1,0,0,0,0,1,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxRepeatingNumber.java,com.interview.array.MaxRepeatingNumber,main/1[java.lang.String[]],false,30,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,18,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxRepeatingNumber.java,com.interview.array.MaxRepeatingNumber,"maxRepeatingNumber/2[int[],int]",false,11,1,1,1,0,5,0,18,1,6,2,0,0,0,3,0,0,0,0,5,10,2,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumOfSubarrayOfSizeK.java,com.interview.array.MaximumOfSubarrayOfSizeK,"maxSubArray/2[int[],int]",false,16,1,1,1,0,10,6,33,1,6,2,6,0,0,4,0,0,0,0,5,9,4,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumOfSubarrayOfSizeK.java,com.interview.array.MaximumOfSubarrayOfSizeK,main/1[java.lang.String[]],false,56,1,2,0,2,2,2,8,0,3,1,2,1,1,1,0,0,0,1,11,3,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BurstBalloons.java,com.interview.dynamic.BurstBalloons,maxCoinsRec/1[int[]],false,66,2,1,0,1,2,1,9,1,2,1,1,1,2,1,0,0,0,0,7,5,3,1,0,0,0,7,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BurstBalloons.java,com.interview.dynamic.BurstBalloons,maxCoinsRecUtil/1[int[]],false,76,2,4,2,2,4,2,13,2,3,1,2,2,1,1,1,0,0,0,7,4,5,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BurstBalloons.java,com.interview.dynamic.BurstBalloons,"formNewArray/2[int[],int]",false,92,1,1,1,0,3,0,11,1,3,2,0,0,0,1,1,0,0,0,3,4,1,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BurstBalloons.java,com.interview.dynamic.BurstBalloons,main/1[java.lang.String[]],false,105,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,4,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\BurstBalloons.java,com.interview.dynamic.BurstBalloons,maxCoinsBottomUpDp/1[int[]],false,24,1,1,1,0,8,1,28,1,9,1,1,0,0,3,4,0,0,0,15,14,12,4,0,0,0,17,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\RotateList.java,com.interview.linklist.RotateList,"rotateRight/2[com.interview.linklist.Node,int]",false,13,2,2,1,1,7,1,23,3,4,2,1,1,0,2,5,0,0,0,2,9,1,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NotIncluding4.java,com.interview.number.NotIncluding4,number/1[int],false,12,0,1,1,0,4,0,17,1,3,1,0,0,0,1,1,0,0,0,8,6,3,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NotIncluding4.java,com.interview.number.NotIncluding4,main/1[java.lang.String[]],false,31,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SpiralPrinting.java,com.interview.multiarray.SpiralPrinting,spiralOrder/1[int[][]],false,29,1,1,1,0,12,1,33,2,9,1,1,0,0,5,3,0,0,0,8,9,2,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SpiralPrinting.java,com.interview.multiarray.SpiralPrinting,main/1[java.lang.String[]],false,68,2,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,6,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\WaterContainer.java,com.interview.array.WaterContainer,maxArea/1[int[]],false,11,1,0,0,0,3,1,16,1,3,1,1,0,0,1,0,0,3,0,3,5,5,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MiddleElementOfLinkList.java,com.interview.linklist.MiddleElementOfLinkList,middle/1[com.interview.linklist.Node],false,13,1,1,1,0,5,0,12,2,2,1,0,0,0,1,4,0,0,0,0,4,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MiddleElementOfLinkList.java,com.interview.linklist.MiddleElementOfLinkList,main/1[java.lang.String[]],false,27,3,4,0,4,1,3,15,0,3,1,3,1,1,0,0,0,0,0,5,8,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\BestMeetingPoint.java,com.interview.array.BestMeetingPoint,minTotalDistance/1[int[][]],false,22,1,1,1,0,9,5,29,2,10,1,5,0,0,4,4,0,0,0,14,11,4,3,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\BestMeetingPoint.java,com.interview.array.BestMeetingPoint,main/1[java.lang.String[]],false,56,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,15,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthElementInArray.java,com.interview.array.KthElementInArray,"kthElement/2[int[],int]",false,14,2,4,3,1,4,1,18,1,3,2,1,1,2,1,1,0,2,0,6,7,8,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthElementInArray.java,com.interview.array.KthElementInArray,"quickSelect/3[int[],int,int]",false,32,2,2,1,1,5,1,19,1,1,3,1,1,1,1,0,0,0,0,0,1,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthElementInArray.java,com.interview.array.KthElementInArray,"swap/3[int[],int,int]",false,52,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KthElementInArray.java,com.interview.array.KthElementInArray,main/1[java.lang.String[]],false,58,1,2,0,2,1,4,6,0,2,1,4,1,3,0,0,0,0,0,8,2,1,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MedianOfTwoSortedArray.java,com.interview.binarysearch.MedianOfTwoSortedArray,"median/2[int[],int[]]",false,8,2,2,1,1,7,3,36,2,6,2,3,1,1,1,4,0,12,0,23,14,31,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MedianOfTwoSortedArray.java,com.interview.binarysearch.MedianOfTwoSortedArray,"getMedian/3[int[],int,int]",false,48,1,1,1,0,2,0,9,2,1,3,0,0,0,0,1,0,1,0,8,1,12,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MedianOfTwoSortedArray.java,com.interview.binarysearch.MedianOfTwoSortedArray,main/1[java.lang.String[]],false,57,1,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,10,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BellmanFordShortestPath.java,com.interview.graph.BellmanFordShortestPath,"getShortestPath/2[com.interview.graph.Graph<java.lang.Integer>,com.interview.graph.Vertex<java.lang.Integer>]",false,32,4,7,1,6,7,9,28,1,8,2,9,0,0,4,0,0,0,0,3,8,4,3,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BellmanFordShortestPath.java,com.interview.graph.BellmanFordShortestPath,main/1[java.lang.String[]],false,76,3,5,0,5,1,6,14,0,4,1,6,1,1,0,0,0,0,0,21,4,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\MedianFinder.java,com.interview.stackqueue.MedianFinder,addNum/1[int],false,25,0,1,1,0,5,5,26,1,1,1,5,0,0,0,2,0,0,0,2,3,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\MedianFinder.java,com.interview.stackqueue.MedianFinder,findMedian/0,false,49,0,1,1,0,2,2,8,2,0,0,2,0,0,0,1,0,1,0,1,0,2,1,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\MedianFinder.java,com.interview.stackqueue.MedianFinder,MedianFinder/0,true,19,0,1,1,0,1,1,4,0,0,0,1,0,0,0,0,0,0,0,1,2,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\MedianFinder.java,com.interview.stackqueue.MedianFinder,main/1[java.lang.String[]],false,57,1,3,0,3,1,3,17,0,1,1,3,2,1,0,0,0,0,0,7,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SubstringSearch.java,com.interview.string.SubstringSearch,computeTemporaryArray/1[char[]],false,41,2,1,1,0,4,0,21,1,3,1,0,0,0,1,2,0,0,0,6,6,2,3,0,0,0,24,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SubstringSearch.java,com.interview.string.SubstringSearch,"KMP/2[char[],char[]]",false,64,2,2,1,1,6,1,23,2,3,2,1,1,1,1,3,0,0,0,4,4,1,3,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SubstringSearch.java,com.interview.string.SubstringSearch,main/1[java.lang.String[]],false,87,1,2,0,2,1,3,7,0,4,1,3,1,2,0,0,0,0,2,0,4,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\SubstringSearch.java,com.interview.string.SubstringSearch,"hasSubstring/2[char[],char[]]",false,17,1,0,0,0,5,0,20,2,3,2,0,0,0,1,2,0,0,0,4,5,0,2,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ContructTreeFromInOrderTraversalRootGreaterThanChild.java,com.interview.tree.ContructTreeFromInOrderTraversalRootGreaterThanChild,main/1[java.lang.String[]],false,33,3,4,0,4,1,2,7,0,4,1,2,1,2,0,0,0,0,0,8,4,0,0,0,0,0,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ContructTreeFromInOrderTraversalRootGreaterThanChild.java,com.interview.tree.ContructTreeFromInOrderTraversalRootGreaterThanChild,createTree/1[int[]],false,12,3,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ContructTreeFromInOrderTraversalRootGreaterThanChild.java,com.interview.tree.ContructTreeFromInOrderTraversalRootGreaterThanChild,"createTree/3[int[],int,int]",false,16,3,4,2,2,4,2,16,2,3,3,2,1,0,1,0,0,0,0,2,6,2,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsBST.java,com.interview.tree.IsBST,"isBST/3[com.interview.tree.Node,int,int]",false,33,2,3,2,1,4,1,9,3,0,3,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsBST.java,com.interview.tree.IsBST,isBSTIterative/1[com.interview.tree.Node],false,44,1,1,1,0,6,3,28,3,4,1,3,0,0,1,2,0,0,0,0,8,0,3,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsBST.java,com.interview.tree.IsBST,isBST/1[com.interview.tree.Node],false,29,2,2,1,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IsBST.java,com.interview.tree.IsBST,main/1[java.lang.String[]],false,73,3,5,0,5,1,3,13,0,3,1,3,2,2,0,0,0,0,0,6,9,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ArticulationPoint.java,com.interview.graph.ArticulationPoint,findarticulationPoints/1[com.interview.graph.Graph<T>],false,38,4,2,0,2,1,4,11,1,6,1,4,0,0,0,0,0,0,0,1,7,0,0,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ArticulationPoint.java,com.interview.graph.ArticulationPoint,main/1[java.lang.String[]],false,97,3,4,0,4,1,4,15,0,4,1,4,0,0,0,0,0,0,0,18,3,0,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ArticulationPoint.java,com.interview.graph.ArticulationPoint,"DFS/6[java.util.Set<com.interview.graph.Vertex<T>>,java.util.Set<com.interview.graph.Vertex<T>>,com.interview.graph.Vertex<T>,java.util.Map<com.interview.graph.Vertex<T>,java.lang.Integer>,java.util.Map<com.interview.graph.Vertex<T>,java.lang.Integer>,java.util.Map<com.interview.graph.Vertex<T>,com.interview.graph.Vertex<T>>]",false,55,3,3,0,3,9,11,30,0,6,6,11,0,0,1,2,0,1,0,2,3,0,3,0,0,2,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\BuySellStockProfit.java,com.interview.array.BuySellStockProfit,oneProfit/1[int[]],false,19,1,1,1,0,4,0,13,1,3,1,0,0,0,1,0,0,0,0,3,5,2,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\BuySellStockProfit.java,com.interview.array.BuySellStockProfit,allTimeProfit/1[int[]],false,33,1,1,1,0,3,0,9,1,2,1,0,0,0,1,0,0,0,0,4,3,3,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\BuySellStockProfit.java,com.interview.array.BuySellStockProfit,main/1[java.lang.String[]],false,43,1,3,0,3,1,4,7,0,3,1,4,2,1,0,0,0,0,0,27,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\PeakElement.java,com.interview.binarysearch.PeakElement,findPeakElement/1[int[]],false,15,1,1,1,0,7,0,26,2,5,1,0,0,0,1,0,0,1,0,10,10,8,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\PeakElement.java,com.interview.binarysearch.PeakElement,main/1[java.lang.String[]],false,40,1,2,0,2,1,2,9,0,4,1,2,1,1,0,0,0,0,0,17,4,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\GrahamScanConvexHull.java,com.interview.geometry.GrahamScanConvexHull,findConvexHull/1[com.interview.geometry.GrahamScanConvexHull.Point[]],false,37,2,3,1,2,8,6,27,2,5,1,6,2,2,3,1,0,0,0,7,8,0,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\GrahamScanConvexHull.java,com.interview.geometry.GrahamScanConvexHull,main/1[java.lang.String[]],false,128,3,3,0,3,2,2,10,0,4,1,2,1,3,1,0,0,0,0,15,5,0,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\GrahamScanConvexHull.java,com.interview.geometry.GrahamScanConvexHull,"distance/3[com.interview.geometry.GrahamScanConvexHull.Point,com.interview.geometry.GrahamScanConvexHull.Point,com.interview.geometry.GrahamScanConvexHull.Point]",false,106,1,1,1,0,1,1,7,1,4,3,1,0,0,0,0,0,0,0,0,4,10,0,0,0,0,17,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\GrahamScanConvexHull.java,com.interview.geometry.GrahamScanConvexHull,"sortToHandleCollinear/2[com.interview.geometry.GrahamScanConvexHull.Point[],com.interview.geometry.GrahamScanConvexHull.Point]",false,71,2,3,1,2,7,3,28,4,9,2,3,2,1,2,4,0,0,0,10,9,4,2,0,0,1,18,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\GrahamScanConvexHull.java,com.interview.geometry.GrahamScanConvexHull,"crossProduct/3[com.interview.geometry.GrahamScanConvexHull.Point,com.interview.geometry.GrahamScanConvexHull.Point,com.interview.geometry.GrahamScanConvexHull.Point]",false,120,1,2,2,0,1,0,7,1,4,3,0,0,0,0,0,0,0,0,0,4,7,0,0,0,0,30,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\NPotGold.java,com.interview.dynamic.NPotGold$Pair,toString/0,false,13,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestIncreasingSubSequenceOlogNMethod.java,com.interview.array.LongestIncreasingSubSequenceOlogNMethod,"ceilIndex/4[int[],int[],int,int]",false,20,1,1,1,0,6,0,18,2,3,4,0,0,0,1,0,0,1,0,7,5,6,2,0,0,0,13,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestIncreasingSubSequenceOlogNMethod.java,com.interview.array.LongestIncreasingSubSequenceOlogNMethod,longestIncreasingSubSequence/1[int[]],false,37,2,2,1,1,6,3,32,1,7,1,3,1,1,3,1,0,0,2,12,15,4,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestIncreasingSubSequenceOlogNMethod.java,com.interview.array.LongestIncreasingSubSequenceOlogNMethod,main/1[java.lang.String[]],false,71,1,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,1,11,2,1,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CuttingRod.java,com.interview.dynamic.CuttingRod,"recursiveMaxValue/2[int[],int]",false,31,2,3,2,1,4,1,13,2,3,2,1,1,0,1,0,0,0,0,5,4,2,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CuttingRod.java,com.interview.dynamic.CuttingRod,maxValue1/1[int[]],false,18,1,0,0,0,4,1,12,1,4,1,1,0,0,3,0,0,0,0,5,6,4,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CuttingRod.java,com.interview.dynamic.CuttingRod,maxValue/1[int[]],false,8,1,0,0,0,3,1,9,1,3,1,1,0,0,2,0,0,0,0,3,4,4,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CuttingRod.java,com.interview.dynamic.CuttingRod,main/1[java.lang.String[]],false,44,2,2,0,2,1,4,9,0,5,1,4,1,1,0,0,0,0,0,9,5,1,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CousinNodes.java,com.interview.tree.CousinNodes,"checkSameParent/3[com.interview.tree.Node,int,int]",false,107,1,1,1,0,7,0,8,2,0,3,0,0,0,0,6,0,2,0,0,0,0,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CousinNodes.java,com.interview.tree.CousinNodes,"areCousins1/3[com.interview.tree.Node,int,int]",false,19,1,0,0,0,14,3,53,3,7,3,3,0,0,2,7,0,0,0,4,18,0,4,0,0,0,37,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CousinNodes.java,com.interview.tree.CousinNodes,main/1[java.lang.String[]],false,117,3,4,0,4,1,3,20,0,3,1,3,1,2,0,0,0,0,0,21,12,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CousinNodes.java,com.interview.tree.CousinNodes,"areCousins/3[com.interview.tree.Node,int,int]",false,68,2,2,1,1,10,4,36,4,5,3,4,1,1,2,4,0,0,0,4,8,0,4,0,0,0,20,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumGap.java,com.interview.array.MaximumGap,main/1[java.lang.String[]],false,73,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,6,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumGap.java,com.interview.array.MaximumGap,maximumGap/1[int[]],false,33,2,3,1,2,10,4,32,2,10,1,4,0,0,4,3,0,3,0,9,15,8,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReorderList.java,com.interview.linklist.ReorderList,"alternateMerge/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,18,1,2,1,1,3,0,14,1,2,2,0,0,0,1,2,0,0,0,0,9,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReorderList.java,com.interview.linklist.ReorderList,frontBackSplit/1[com.interview.linklist.Node],false,49,1,1,1,0,4,0,14,2,2,1,0,0,0,1,3,0,0,0,0,6,0,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReorderList.java,com.interview.linklist.ReorderList,reorderList/1[com.interview.linklist.Node],false,11,2,3,0,3,1,3,5,0,1,1,3,3,1,0,0,0,0,0,0,2,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReorderList.java,com.interview.linklist.ReorderList,reverse/1[com.interview.linklist.Node],false,33,1,1,1,0,3,0,15,2,3,1,0,0,0,1,2,0,0,0,0,7,0,1,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DeleteDuplicateNodes.java,com.interview.linklist.DeleteDuplicateNodes,deleteDuplicates/1[com.interview.linklist.Node],false,17,1,1,0,1,5,0,19,1,3,1,0,0,0,2,4,0,0,0,0,8,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MergeSortLinkList.java,com.interview.linklist.MergeSortLinkList,frontBackSplit/1[com.interview.linklist.Node],false,52,1,1,1,0,4,0,14,2,3,1,0,0,0,1,3,0,0,0,0,6,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MergeSortLinkList.java,com.interview.linklist.MergeSortLinkList,main/1[java.lang.String[]],false,67,3,5,0,5,1,3,12,0,3,1,3,1,2,0,0,0,0,0,5,9,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MergeSortLinkList.java,com.interview.linklist.MergeSortLinkList,"sortedMerge/3[com.interview.linklist.Node,com.interview.linklist.Node,boolean]",false,26,2,3,2,1,6,1,28,6,0,3,1,1,0,0,2,0,0,0,0,4,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MergeSortLinkList.java,com.interview.linklist.MergeSortLinkList,"sort/2[com.interview.linklist.Node,boolean]",false,15,2,6,3,3,3,3,9,2,1,2,3,3,1,0,2,0,0,0,0,3,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Combination.java,com.interview.recursion.Combination,combination/1[char[]],false,7,3,2,1,1,4,6,24,2,7,1,6,1,2,2,1,0,0,0,5,7,1,3,0,0,1,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Combination.java,com.interview.recursion.Combination,"combination/5[char[],int[],int,char[],int]",false,30,3,4,2,2,3,2,12,0,1,5,2,2,1,1,1,0,0,0,2,2,1,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Combination.java,com.interview.recursion.Combination,main/1[java.lang.String[]],false,70,1,3,0,3,1,3,5,0,1,1,3,2,4,0,0,0,0,2,0,1,0,0,0,0,0,3,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Combination.java,com.interview.recursion.Combination,"print/2[char[],int]",false,43,1,1,1,0,2,2,6,0,1,2,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Combination.java,com.interview.recursion.Combination,"combinationEasy/3[char[],int,java.util.List<java.lang.Character>]",false,56,2,3,2,1,4,7,12,0,2,3,7,1,0,1,2,0,0,1,3,1,4,2,0,0,1,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Combination.java,com.interview.recursion.Combination,combinationEasy/1[char[]],false,50,2,2,1,1,1,2,5,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.RealTimeCounter,addEvent/0,false,60,0,1,1,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.RealTimeCounter,getInstance/0,false,41,1,1,0,1,3,0,10,1,0,0,0,0,0,0,2,0,0,0,0,1,0,3,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.RealTimeCounter,getTotalEvents/0,false,52,0,1,1,0,2,1,7,1,2,0,1,0,0,1,0,0,0,0,2,3,0,1,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.RealTimeCounter,RealTimeCounter/0,true,34,1,4,2,2,1,1,4,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.RealTimeCounter,main/1[java.lang.String[]],false,70,1,3,0,3,4,11,27,0,6,1,11,2,1,1,0,2,0,0,4,6,0,3,0,0,1,26,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\RealTimeCounter.java,com.interview.multithreaded.RealTimeCounter,incrementPosition/0,false,64,0,1,1,0,1,1,4,0,0,0,1,0,0,0,0,0,2,0,3,1,4,0,0,0,0,12,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\tree\VerticalOrderTest.java,com.interview.tree.VerticalOrderTest,testDifferentCases/0,false,13,5,6,0,6,3,6,26,0,7,0,6,0,0,2,0,0,0,2,13,11,0,1,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\CountNDistinctPairsWithDifferenceK.java,com.interview.binarysearch.CountNDistinctPairsWithDifferenceK,"binarySearch/4[int[],int,int,int]",false,22,2,3,2,1,4,1,15,4,1,4,1,1,0,0,1,0,1,0,3,1,4,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\CountNDistinctPairsWithDifferenceK.java,com.interview.binarysearch.CountNDistinctPairsWithDifferenceK,main/1[java.lang.String[]],false,37,1,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,0,8,2,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\CountNDistinctPairsWithDifferenceK.java,com.interview.binarysearch.CountNDistinctPairsWithDifferenceK,"count/2[int[],int]",false,10,2,2,1,1,3,2,11,1,3,2,2,1,1,1,0,0,0,0,4,3,3,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\KeyPadPermutation.java,com.interview.recursion.KeyPadPermutation,permute/1[int[]],false,8,3,2,1,1,1,1,4,0,1,1,1,1,2,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\KeyPadPermutation.java,com.interview.recursion.KeyPadPermutation,"permute/3[int[],int,char[]]",false,13,3,4,2,2,4,4,14,1,2,3,4,2,1,2,1,0,0,0,2,3,1,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\KeyPadPermutation.java,com.interview.recursion.KeyPadPermutation,getCharSetForNumber/1[int],false,29,1,1,1,0,9,1,21,8,0,1,1,0,0,0,0,0,0,8,8,0,0,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\KeyPadPermutation.java,com.interview.recursion.KeyPadPermutation,main/1[java.lang.String[]],false,43,1,2,0,2,1,1,5,0,2,1,1,1,3,0,0,0,0,0,4,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FillOsWIthXsIfSurroundedByXs.java,com.interview.graph.FillOsWIthXsIfSurroundedByXs,solve/1[char[][]],false,15,2,2,1,1,9,1,23,1,4,1,1,1,1,4,4,0,0,0,14,6,2,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FillOsWIthXsIfSurroundedByXs.java,com.interview.graph.FillOsWIthXsIfSurroundedByXs,main/1[java.lang.String[]],false,65,1,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,0,2,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\FillOsWIthXsIfSurroundedByXs.java,com.interview.graph.FillOsWIthXsIfSurroundedByXs,"dfs/3[char[][],int,int]",false,41,2,3,2,1,10,1,21,2,0,3,1,1,0,0,1,0,0,0,12,1,6,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,postOrderItrOneStack/1[com.interview.tree.Node],false,98,1,1,1,0,7,5,24,0,3,1,5,0,0,2,4,0,0,2,0,7,2,4,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,preOrder/1[com.interview.tree.Node],false,27,2,9,8,1,2,2,8,1,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,preOrderItr/1[com.interview.tree.Node],false,64,1,0,0,0,4,4,14,0,1,1,4,0,0,1,2,0,0,1,0,2,1,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,postOrderItr/1[com.interview.tree.Node],false,79,1,1,1,0,5,4,18,0,2,1,4,0,0,2,2,0,0,1,0,3,1,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,postOrder/1[com.interview.tree.Node],false,36,2,4,3,1,2,2,8,1,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,inorderItr/1[com.interview.tree.Node],false,45,1,0,0,0,4,4,18,0,2,1,4,0,0,1,1,0,0,0,0,5,0,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,main/1[java.lang.String[]],false,121,3,6,0,6,1,5,16,0,3,1,5,3,1,0,0,0,0,0,6,9,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversals.java,com.interview.tree.TreeTraversals,inOrder/1[com.interview.tree.Node],false,18,2,15,14,1,2,2,8,1,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DeleteNodeWithGreaterValueOnRight.java,com.interview.linklist.DeleteNodeWithGreaterValueOnRight,main/1[java.lang.String[]],false,29,3,5,0,5,1,3,15,0,3,1,3,1,1,0,0,0,0,0,8,12,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DeleteNodeWithGreaterValueOnRight.java,com.interview.linklist.DeleteNodeWithGreaterValueOnRight,deleteNodes/1[com.interview.linklist.Node],false,14,2,3,2,1,4,1,14,3,1,1,1,1,0,0,1,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ChainWordsToFormCircle.java,com.interview.recursion.ChainWordsToFormCircle,main/1[java.lang.String[]],false,61,1,2,0,2,3,4,14,0,4,1,4,1,2,1,1,0,0,13,1,4,1,2,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ChainWordsToFormCircle.java,com.interview.recursion.ChainWordsToFormCircle,formCircle/1[java.lang.String[]],false,17,2,2,1,1,2,4,10,2,3,1,4,1,1,0,0,0,0,0,3,3,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ChainWordsToFormCircle.java,com.interview.recursion.ChainWordsToFormCircle,"formCircle/4[java.lang.String[],java.util.List<java.lang.String>,boolean[],char]",false,31,2,3,2,1,7,7,27,4,5,4,7,1,0,1,3,0,0,0,7,7,5,3,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\PalindromePair.java,com.interview.string.PalindromePair,isPalindrome/1[java.lang.String],false,59,0,1,1,0,3,2,12,2,2,1,2,0,0,1,1,0,0,0,2,2,1,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\PalindromePair.java,com.interview.string.PalindromePair,"createList/3[int,int,java.util.List<java.util.List<java.lang.Integer>>]",false,72,0,1,1,0,2,2,9,1,1,3,2,0,0,0,1,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\PalindromePair.java,com.interview.string.PalindromePair,main/1[java.lang.String[]],false,82,1,2,0,2,1,2,18,0,7,1,2,1,2,0,0,0,0,19,0,11,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\PalindromePair.java,com.interview.string.PalindromePair,palindromePairs/1[java.lang.String[]],false,22,1,4,2,2,11,9,34,2,11,1,9,2,1,3,3,0,0,1,7,11,2,5,0,0,0,22,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\TestUtil.java,com.interview.TestUtil,"compareListOfList/2[java.util.List<java.util.List<T>>,java.util.List<java.util.List<T>>]",false,15,2,1,0,1,2,4,8,0,3,2,4,0,0,1,0,0,0,0,1,3,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\TestUtil.java,com.interview.TestUtil,"compareList/2[java.util.List<T>,java.util.List<T>]",false,8,1,0,0,0,2,2,6,0,1,2,2,0,0,1,0,0,0,1,1,1,1,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\number\BasicCalculatorTest.java,com.interview.number.BasicCalculatorTest,testDifferentCases/0,false,9,2,0,0,0,1,2,8,0,1,0,2,0,0,0,0,0,0,5,5,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinJumpToReachEnd.java,com.interview.dynamic.MinJumpToReachEnd,"minJump/2[int[],int[]]",false,25,1,1,1,0,6,0,18,1,4,2,0,0,0,3,0,0,0,0,9,8,5,4,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinJumpToReachEnd.java,com.interview.dynamic.MinJumpToReachEnd,jump/1[int[]],false,50,1,1,1,0,5,0,20,2,5,1,0,0,0,2,1,0,0,0,9,8,8,3,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinJumpToReachEnd.java,com.interview.dynamic.MinJumpToReachEnd,main/1[java.lang.String[]],false,71,2,3,0,3,1,5,11,0,6,1,5,2,1,0,0,0,0,0,17,6,1,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MissingNumberInConsecutiveNumbers.java,com.interview.binarysearch.MissingNumberInConsecutiveNumbers,findMissing/1[int[]],false,8,1,1,1,0,6,0,19,2,4,1,0,0,0,1,3,0,5,0,12,7,14,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\MissingNumberInConsecutiveNumbers.java,com.interview.binarysearch.MissingNumberInConsecutiveNumbers,main/1[java.lang.String[]],false,28,1,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,18,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\dynamic\DecodeWaysTest.java,com.interview.dynamic.DecodeWaysTest,testDifferentCases/0,false,7,2,0,0,0,1,2,4,0,1,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl,main/1[java.lang.String[]],false,112,3,5,0,5,3,3,17,0,5,1,3,2,3,2,0,0,0,0,8,5,0,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl,execute/0,false,54,2,4,2,2,2,1,7,0,1,0,1,0,0,0,0,0,0,0,0,2,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl,"ThreadPoolImpl/2[int,com.interview.multithreaded.ThreadPool]",true,27,1,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl,setMax/1[int],false,32,1,2,1,1,2,2,10,0,0,1,2,1,1,0,1,0,0,1,1,2,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl,run/1[java.lang.Runnable],false,47,1,2,1,1,1,2,6,0,0,1,2,1,1,0,0,0,0,0,0,0,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SearchInsertPosition.java,com.interview.binarysearch.SearchInsertPosition,"searchInsert/2[int[],int]",false,7,1,0,0,0,7,0,20,3,3,2,0,0,0,1,2,0,2,0,9,5,8,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway,main/1[java.lang.String[]],false,145,1,2,0,2,3,4,14,0,4,1,4,1,3,1,0,0,0,3,1,4,1,2,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway,"rearrangeAtleastkDistanceAway/2[char[],int]",false,105,2,2,1,1,3,4,13,1,3,2,4,1,2,1,0,0,0,0,4,5,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway,"rearrangeAtleastkDistanceAway/4[java.util.Map<java.lang.Character,java.lang.Integer>,char[],int,int]",false,119,2,4,2,2,7,8,26,3,3,4,8,2,1,2,3,0,0,0,5,4,3,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway,"rearrangeExactKDistanceAway/2[char[],int]",false,61,2,1,0,1,11,7,36,3,7,2,7,0,0,5,2,0,0,0,8,13,1,2,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\string\RearrangeDuplicateCharsdDistanceAway.java,com.interview.string.RearrangeDuplicateCharsdDistanceAway,"getAllFeasibleCharacters/4[char[],int,int,java.util.Set<java.lang.Character>]",false,99,1,1,1,0,3,1,5,0,1,4,1,0,0,1,0,0,0,0,2,1,2,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumSumPathTwoArrays.java,com.interview.array.MaximumSumPathTwoArrays,"maxSum/2[int[],int[]]",false,18,1,1,1,0,9,0,39,1,5,2,0,0,0,3,1,0,0,0,7,15,2,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaximumSumPathTwoArrays.java,com.interview.array.MaximumSumPathTwoArrays,main/1[java.lang.String[]],false,55,1,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,16,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\Flip0sMaximum1s.java,com.interview.array.Flip0sMaximum1s,"flip0sToMaximizeConsecutive1s/2[int[],int]",false,17,1,1,1,0,6,1,26,1,4,2,1,0,0,2,2,0,0,0,8,6,4,5,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\Flip0sMaximum1s.java,com.interview.array.Flip0sMaximum1s,main/1[java.lang.String[]],false,43,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,13,2,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TripletInArray.java,com.interview.array.TripletInArray,threeSum/1[int[]],false,50,1,0,0,0,11,3,35,1,5,1,3,0,0,4,5,0,0,0,11,5,8,4,0,0,0,10,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TripletInArray.java,com.interview.array.TripletInArray,main/1[java.lang.String[]],false,84,1,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,0,9,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\TripletInArray.java,com.interview.array.TripletInArray,"findTriplet/2[int[],int]",false,22,2,2,1,1,5,1,24,2,5,2,1,0,0,2,1,0,0,0,4,8,6,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfTreePreorder.java,com.interview.dynamic.CountNumberOfTreePreorder,countRec/1[int],false,40,1,3,2,1,4,1,10,2,2,1,1,1,0,1,2,0,0,0,6,3,3,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfTreePreorder.java,com.interview.dynamic.CountNumberOfTreePreorder,count/1[int],false,23,1,1,1,0,4,0,16,2,4,1,0,0,0,2,1,0,0,0,11,8,3,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfTreePreorder.java,com.interview.dynamic.CountNumberOfTreePreorder,main/1[java.lang.String[]],false,51,1,3,0,3,1,3,9,0,1,1,3,2,1,0,0,0,0,0,6,1,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\MoveCellPerCellValue.java,com.interview.multiarray.Cell,"Cell/2[int,int]",true,11,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Bracketology.java,com.interview.recursion.Bracketology,getOpeningCharacter/1[char],false,74,0,1,1,0,4,0,12,4,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Bracketology.java,com.interview.recursion.Bracketology,"matchBracket/3[char[],int,int]",false,8,2,2,1,1,5,1,18,4,0,3,1,1,0,0,3,0,0,0,3,0,1,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Bracketology.java,com.interview.recursion.Bracketology,"bracketPermutation/5[char[],int,int,int,int]",false,37,2,3,1,2,4,2,14,1,0,5,2,2,1,0,1,0,0,0,5,2,5,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Bracketology.java,com.interview.recursion.Bracketology,main/1[java.lang.String[]],false,85,2,2,0,2,1,3,6,0,3,1,3,1,2,0,0,0,0,1,2,3,1,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Bracketology.java,com.interview.recursion.Bracketology,matchBracket/1[char[]],false,52,2,2,1,1,6,5,21,3,2,1,5,1,1,1,3,0,0,0,3,2,0,3,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\Bracketology.java,com.interview.recursion.Bracketology,printArray/1[char[]],false,30,1,1,1,0,2,2,6,0,1,1,2,0,0,1,0,0,0,0,1,1,0,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4Function,"read/2[char[],int]",false,62,3,5,1,4,9,4,25,2,4,2,4,0,0,4,2,0,0,0,6,9,0,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4Function,main/1[java.lang.String[]],false,89,2,2,0,2,1,4,13,0,3,1,4,1,1,0,0,0,0,0,4,5,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\Read4Function.java,com.interview.misc.Read4Function,Read4Function/0,true,58,1,2,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PopulateInOrderSuccessor.java,com.interview.tree.PopulateInOrderSuccessor,"populate/2[com.interview.tree.Node,com.interview.tree.NodeRef]",false,8,3,3,2,1,2,1,9,1,0,2,1,1,0,0,1,0,0,0,0,2,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PopulateInOrderSuccessor.java,com.interview.tree.PopulateInOrderSuccessor,main/1[java.lang.String[]],false,31,3,5,0,5,2,3,18,0,3,1,3,2,2,1,1,0,0,0,8,12,0,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PopulateInOrderSuccessor.java,com.interview.tree.PopulateInOrderSuccessor,print/1[com.interview.tree.Node],false,23,2,3,2,1,2,2,7,1,0,1,2,1,0,0,1,0,0,0,0,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\PopulateInOrderSuccessor.java,com.interview.tree.PopulateInOrderSuccessor,populate/1[com.interview.tree.Node],false,18,3,3,1,2,1,1,4,0,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountUnivalueTree.java,com.interview.tree.CountUnivalueTree,"countUnivalSubtreesUtil/2[com.interview.tree.Node,int]",false,19,2,3,2,1,4,1,14,3,2,2,1,1,0,0,3,0,0,0,0,2,0,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\CountUnivalueTree.java,com.interview.tree.CountUnivalueTree,countUnivalSubtrees/1[com.interview.tree.Node],false,14,2,1,0,1,1,1,4,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximizeSkiGates.java,com.interview.dynamic.MaximizeSkiGates$Index,equals/1[java.lang.Object],false,34,1,0,0,0,8,1,9,6,1,1,1,0,0,0,7,0,0,0,0,1,0,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximizeSkiGates.java,com.interview.dynamic.MaximizeSkiGates$Index,"Index/4[int,int,boolean,int]",true,26,0,1,1,0,1,0,6,0,0,4,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximizeSkiGates.java,com.interview.dynamic.MaximizeSkiGates$Index,hashCode/0,false,48,0,0,0,0,2,0,7,1,1,0,0,0,0,0,0,0,1,0,5,4,6,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GasStationCircle.java,com.interview.array.GasStationCircle,main/1[java.lang.String[]],false,78,2,3,0,3,1,3,7,0,3,1,3,2,1,0,0,0,0,0,6,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GasStationCircle.java,com.interview.array.GasStationCircle,"startTour1/2[int[],int[]]",false,44,3,3,1,2,7,1,29,3,8,2,1,0,0,3,1,0,1,0,8,12,3,2,0,0,0,47,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GasStationCircle.java,com.interview.array.GasStationCircle,"startTour/2[int[],int[]]",false,14,1,1,1,0,8,0,24,2,4,2,0,0,0,1,6,0,1,0,11,10,5,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMaxHeap.java,com.interview.graph.BinaryMaxHeap,max/0,false,50,1,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMaxHeap.java,com.interview.graph.BinaryMaxHeap,extractMap/0,false,59,2,1,0,1,6,4,29,1,7,0,4,0,0,1,0,0,0,0,9,11,5,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMaxHeap.java,com.interview.graph.BinaryMaxHeap,main/1[java.lang.String[]],false,95,1,3,0,3,1,2,10,0,1,1,2,0,0,0,0,0,0,6,6,1,0,0,0,0,0,2,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMaxHeap.java,com.interview.graph.BinaryMaxHeap,printHeap/0,false,89,0,0,0,0,2,1,5,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMaxHeap.java,com.interview.graph.BinaryMaxHeap,"swap/2[com.interview.graph.BinaryMaxHeap<T>.Node,com.interview.graph.BinaryMaxHeap<T>.Node]",false,39,2,0,0,0,1,0,8,0,2,2,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMaxHeap.java,com.interview.graph.BinaryMaxHeap,"add/2[int,T]",false,15,2,2,0,2,3,4,21,0,6,2,4,0,0,1,0,0,2,0,6,10,5,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMaxHeap.java,com.interview.graph.BinaryMaxHeap,empty/0,false,54,0,0,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RearrangeSuchThatArriBecomesArrArri.java,com.interview.array.RearrangeSuchThatArriBecomesArrArri,main/1[java.lang.String[]],false,24,1,2,0,2,2,2,8,0,3,1,2,1,1,1,0,0,0,0,6,3,0,1,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RearrangeSuchThatArriBecomesArrArri.java,com.interview.array.RearrangeSuchThatArriBecomesArrArri,rearrange/1[int[]],false,8,1,1,1,0,4,0,15,0,3,1,0,0,0,2,0,0,1,0,5,6,7,2,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\string\StringEncoderDecoderTest.java,com.interview.string.StringEncoderDecoderTest,testDifferentCases/0,false,12,3,5,0,5,1,4,11,0,5,0,4,0,0,0,0,0,0,3,0,5,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternatively.java,com.interview.array.PositiveAndNegativeNumberAlternatively,arrange/1[int[]],false,8,2,3,1,2,3,2,9,0,2,1,2,2,2,1,0,0,0,0,2,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternatively.java,com.interview.array.PositiveAndNegativeNumberAlternatively,segregate/1[int[]],false,19,2,2,1,1,4,1,16,1,2,1,1,1,1,1,0,0,0,0,4,2,1,2,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternatively.java,com.interview.array.PositiveAndNegativeNumberAlternatively,"swap/3[int[],int,int]",false,34,1,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternatively.java,com.interview.array.PositiveAndNegativeNumberAlternatively,main/1[java.lang.String[]],false,40,1,2,0,2,2,2,8,0,3,1,2,1,3,1,0,0,0,1,11,3,1,1,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalInSpiralOrder.java,com.interview.tree.TreeTraversalInSpiralOrder,main/1[java.lang.String[]],false,158,3,6,0,6,1,5,20,0,3,1,5,3,1,0,0,0,0,3,9,12,0,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalInSpiralOrder.java,com.interview.tree.TreeTraversalInSpiralOrder,spiralWithTwoStack/1[com.interview.tree.Node],false,43,1,1,1,0,10,4,30,1,2,1,4,0,0,3,5,0,0,2,0,4,2,3,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalInSpiralOrder.java,com.interview.tree.TreeTraversalInSpiralOrder,spiralWithOneDeque/1[com.interview.tree.Node],false,78,1,1,1,0,9,6,41,1,4,1,6,0,0,2,5,0,0,2,3,8,2,4,0,0,0,20,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeTraversalInSpiralOrder.java,com.interview.tree.TreeTraversalInSpiralOrder,spiralWithOneDequeDelimiter/1[com.interview.tree.Node],false,123,1,1,1,0,9,9,34,1,1,1,9,0,0,3,7,0,0,2,1,7,2,3,0,0,0,17,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArithemeticProgressionExists.java,com.interview.number.ArithemeticProgressionExists,exists/1[int[]],false,8,1,1,1,0,6,0,18,2,3,1,0,0,0,2,1,0,0,0,8,3,8,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ArithemeticProgressionExists.java,com.interview.number.ArithemeticProgressionExists,main/1[java.lang.String[]],false,25,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,7,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OptimalDivision.java,com.interview.recursion.OptimalDivision,"optimalDivison/4[int[],int,int,boolean]",false,16,3,4,2,2,8,2,39,2,10,4,2,1,0,1,1,0,0,6,3,20,5,3,0,0,0,17,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OptimalDivision.java,com.interview.recursion.OptimalDivision,main/1[java.lang.String[]],false,64,2,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,0,5,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OptimalDivision.java,com.interview.recursion.OptimalDivision,optimalDivision/1[int[]],false,10,3,2,1,1,1,2,5,1,1,1,2,1,1,0,0,0,0,0,2,1,1,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CloneGraph.java,com.interview.graph.CloneGraph$UndirectedGraphNode,UndirectedGraphNode/1[int],true,14,1,2,2,0,1,0,4,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\AddingTwoSetOfIntervals.java,com.interview.misc.AddingTwoSetOfIntervals,main/1[java.lang.String[]],false,80,2,3,0,3,1,2,14,0,11,1,2,1,1,0,0,0,0,0,14,11,0,0,0,0,0,18,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\AddingTwoSetOfIntervals.java,com.interview.misc.AddingTwoSetOfIntervals,"combineInterval/2[com.interview.misc.AddingTwoSetOfIntervals.Pair[],com.interview.misc.AddingTwoSetOfIntervals.Pair[]]",false,30,1,2,1,1,10,3,51,1,4,2,3,0,0,3,0,0,0,0,3,12,1,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\ArithmeticProgressionSearch.java,com.interview.binarysearch.ArithmeticProgressionSearch,search/1[int[]],false,8,1,1,1,0,5,0,19,2,4,1,0,0,0,1,2,0,8,0,13,7,17,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\ArithmeticProgressionSearch.java,com.interview.binarysearch.ArithmeticProgressionSearch,main/1[java.lang.String[]],false,26,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,7,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl$RunnableThreads,RunnableThreads/1[java.lang.Runnable],true,101,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPoolImpl$RunnableThreads,run/0,false,106,0,0,0,0,1,1,4,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\InorderSuccessor.java,com.interview.tree.InorderSuccessor,"inorderSuccessor/2[com.interview.tree.Node,com.interview.tree.Node]",false,15,2,1,0,1,3,1,12,2,0,2,1,1,1,1,2,0,0,0,0,2,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\InorderSuccessor.java,com.interview.tree.InorderSuccessor,"succ/2[com.interview.tree.Node,int]",false,27,2,3,2,1,4,1,12,3,1,2,1,1,0,0,2,0,0,0,0,1,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RearrangeArrayPerIndex.java,com.interview.array.RearrangeArrayPerIndex,main/1[java.lang.String[]],false,46,1,2,0,2,1,4,6,0,3,1,4,1,2,0,0,0,0,1,6,2,1,0,0,0,1,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RearrangeArrayPerIndex.java,com.interview.array.RearrangeArrayPerIndex,rearrange/1[int[]],false,18,2,2,1,1,5,1,13,0,3,1,1,1,1,3,0,0,0,0,5,4,1,2,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\RearrangeArrayPerIndex.java,com.interview.array.RearrangeArrayPerIndex,"rearrangeUtil/2[int[],int]",false,35,1,1,1,0,2,0,10,0,3,2,0,0,0,1,0,0,0,0,4,6,3,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\RemoveMiddleElementsOfLineSegment.java,com.interview.linklist.RemoveMiddleElementsOfLineSegment,main/1[java.lang.String[]],false,48,4,6,0,6,1,3,15,0,3,1,3,1,1,0,0,0,0,0,24,11,0,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\RemoveMiddleElementsOfLineSegment.java,com.interview.linklist.RemoveMiddleElementsOfLineSegment,remove/1[com.interview.linklist.Node],false,24,2,1,1,0,6,0,22,1,5,1,0,0,0,1,5,0,0,0,0,11,0,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IntervalTree.java,com.interview.tree.IntervalTree,main/1[java.lang.String[]],false,67,2,3,0,3,1,3,15,0,2,1,3,2,1,0,0,0,0,0,22,7,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IntervalTree.java,com.interview.tree.IntervalTree,"insert/3[com.interview.tree.InternalNode,int,int]",false,32,2,4,2,2,3,2,17,2,1,3,2,1,0,0,1,0,0,0,0,7,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IntervalTree.java,com.interview.tree.IntervalTree,"isOverlap/3[com.interview.tree.InternalNode,int,int]",false,51,2,3,2,1,6,1,14,4,0,3,1,1,0,0,2,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\MaximumPointsOnSameLine.java,com.interview.geometry.MaximumPointsOnSameLine$Pair,equals/1[java.lang.Object],false,31,1,0,0,0,6,1,7,4,1,1,1,0,0,0,5,0,0,0,0,1,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\MaximumPointsOnSameLine.java,com.interview.geometry.MaximumPointsOnSameLine$Pair,hashCode/0,false,43,0,0,0,0,1,0,5,1,1,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\HIndex.java,com.interview.array.HIndex,hIndex/1[int[]],false,9,1,1,1,0,5,0,21,1,5,1,0,0,0,2,0,0,0,0,4,7,3,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\HIndex.java,com.interview.array.HIndex,main/1[java.lang.String[]],false,35,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,8,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\DrawHorizontalLine.java,com.interview.bits.DrawHorizontalLine,"printScreen/2[byte[],int]",false,47,1,2,2,0,6,2,16,0,3,2,2,0,0,2,2,0,1,2,7,3,3,3,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\DrawHorizontalLine.java,com.interview.bits.DrawHorizontalLine,main/1[java.lang.String[]],false,64,2,2,0,2,1,1,5,0,2,1,1,1,2,0,0,0,0,0,13,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\DrawHorizontalLine.java,com.interview.bits.DrawHorizontalLine,"draw/5[byte[],int,int,int,int]",false,8,2,1,0,1,2,1,12,0,5,5,1,1,1,1,0,0,1,0,3,6,7,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\DrawHorizontalLine.java,com.interview.bits.DrawHorizontalLine,"drawFaster/5[byte[],int,int,int,int]",false,23,2,2,1,1,2,1,17,0,7,5,1,1,1,1,0,0,8,0,13,11,16,1,0,0,0,17,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NumberOccuringOddTimes.java,com.interview.bits.NumberOccuringOddTimes,main/1[java.lang.String[]],false,45,2,2,0,2,1,2,6,0,3,1,2,1,1,0,0,0,0,1,12,3,1,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NumberOccuringOddTimes.java,com.interview.bits.NumberOccuringOddTimes,oneNumberOccuringOddTimes/1[int[]],false,9,1,0,0,0,2,0,7,1,2,1,0,0,0,1,0,0,0,0,2,3,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\NumberOccuringOddTimes.java,com.interview.bits.NumberOccuringOddTimes,twoNumbersOccuringOddTimes/1[int[]],false,23,2,2,1,1,5,0,21,1,6,1,0,0,0,2,1,0,2,0,7,12,1,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\Sort0toN3.java,com.interview.sort.Sort0toN3,"sort/2[int[],int]",false,8,2,2,1,1,1,1,5,0,0,2,1,1,1,0,0,0,0,0,1,0,1,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\Sort0toN3.java,com.interview.sort.Sort0toN3,main/1[java.lang.String[]],false,36,1,2,0,2,2,2,8,0,3,1,2,1,2,1,0,0,0,1,6,3,1,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\Sort0toN3.java,com.interview.sort.Sort0toN3,"sort/3[int[],int,int]",false,15,1,1,1,0,5,0,17,0,6,3,0,0,0,4,0,0,3,0,7,9,9,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\CountBits.java,com.interview.bits.CountBits,countBits/1[int],false,11,0,2,2,0,2,0,8,1,1,1,0,0,0,1,0,0,0,0,3,2,1,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\CountBits.java,com.interview.bits.CountBits,countBitsEvenFaster/1[int],false,40,0,1,1,0,1,0,7,1,0,1,0,0,0,0,0,0,7,0,9,4,8,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\CountBits.java,com.interview.bits.CountBits,main/1[java.lang.String[]],false,53,1,4,0,4,1,4,6,0,1,1,4,3,1,0,0,0,0,0,3,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\CountBits.java,com.interview.bits.CountBits,CountBits/0,true,8,1,2,1,1,1,1,3,0,0,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\CountBits.java,com.interview.bits.CountBits,preCalculate/0,false,22,1,2,1,1,2,1,5,0,1,0,1,1,1,1,0,0,0,0,2,2,0,1,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\CountBits.java,com.interview.bits.CountBits,countBitsFaster/1[int],false,28,0,1,1,0,2,0,9,1,3,1,0,0,0,1,0,0,1,0,7,5,3,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CountSmallerOnRight.java,com.interview.array.CountSmallerOnRight$NumberIndex,"NumberIndex/2[int,int]",true,21,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkListToCompleteBinaryTree.java,com.interview.linklist.LinkListToCompleteBinaryTree,main/1[java.lang.String[]],false,48,3,5,0,5,1,3,15,0,3,1,3,2,1,0,0,0,0,0,8,11,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkListToCompleteBinaryTree.java,com.interview.linklist.LinkListToCompleteBinaryTree,inorder/1[com.interview.linklist.Node],false,39,2,3,2,1,2,2,8,1,0,1,2,1,0,0,1,0,0,1,0,0,1,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkListToCompleteBinaryTree.java,com.interview.linklist.LinkListToCompleteBinaryTree,convert/1[com.interview.linklist.Node],false,13,1,1,1,0,4,2,24,1,2,1,2,0,0,1,3,0,0,0,0,9,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleInDirectedGraph.java,com.interview.graph.CycleInDirectedGraph,hasCycle/1[com.interview.graph.Graph<java.lang.Integer>],false,11,3,3,1,2,4,6,15,2,4,1,6,1,2,2,0,0,0,0,1,4,0,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleInDirectedGraph.java,com.interview.graph.CycleInDirectedGraph,main/1[java.lang.String[]],false,57,2,4,0,4,1,3,12,0,2,1,3,1,3,0,0,0,0,0,14,2,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleInDirectedGraph.java,com.interview.graph.CycleInDirectedGraph,"moveVertex/3[com.interview.graph.Vertex<java.lang.Integer>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>]",false,52,1,1,1,0,1,2,4,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\CycleInDirectedGraph.java,com.interview.graph.CycleInDirectedGraph,"dfs/4[com.interview.graph.Vertex<java.lang.Integer>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>,java.util.Set<com.interview.graph.Vertex<java.lang.Integer>>]",false,30,2,5,2,3,5,4,16,3,0,4,4,2,1,1,0,0,0,0,0,0,0,2,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReverseAlternateKNodes.java,com.interview.linklist.ReverseAlternateKNodes,main/1[java.lang.String[]],false,48,3,5,0,5,1,3,15,0,3,1,3,1,1,0,0,0,0,0,9,12,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\ReverseAlternateKNodes.java,com.interview.linklist.ReverseAlternateKNodes,"reverse/3[com.interview.linklist.Node,int,boolean]",false,12,2,3,2,1,9,1,36,3,6,3,1,1,0,2,4,0,0,0,4,15,1,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\AllAdjacentCombination.java,com.interview.recursion.AllAdjacentCombination,"combination/5[int[],int[],int,int,int]",false,16,2,4,2,2,5,4,13,1,2,5,4,2,1,2,1,0,0,1,3,3,4,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\AllAdjacentCombination.java,com.interview.recursion.AllAdjacentCombination,"formNumber/3[int[],int,int]",false,31,1,1,1,0,2,0,7,1,2,3,0,0,0,1,0,0,0,0,2,3,2,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\AllAdjacentCombination.java,com.interview.recursion.AllAdjacentCombination,main/1[java.lang.String[]],false,39,2,2,0,2,1,1,6,0,3,1,1,1,2,0,0,0,0,0,8,3,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\IntervalTree.java,com.interview.tree.InternalNode,toString/0,false,21,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,4,0,0,2,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\CopyLinkListWIthArbitPointer.java,com.interview.linklist.CopyLinkListWIthArbitPointer,copyRandomList/1[com.interview.linklist.CopyLinkListWIthArbitPointer.RandomListNode],false,23,1,2,1,1,6,0,31,2,5,1,0,0,0,3,5,0,0,0,1,17,0,2,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\CopyLinkListWIthArbitPointer.java,com.interview.linklist.CopyLinkListWIthArbitPointer,main/1[java.lang.String[]],false,59,2,3,0,3,1,1,16,0,6,1,1,1,1,0,0,0,0,0,5,13,0,0,0,0,0,16,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\number\AllStrobogrammaticNumberTest.java,com.interview.number.AllStrobogrammaticNumberTest,testDifferentCases/0,false,9,2,0,0,0,1,2,5,0,1,0,2,0,0,0,0,0,0,4,2,1,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\SubRectangularMatrixWithMaximumSum.java,com.interview.dynamic.SubRectangularMatrixWithMaximumSum$Result,toString/0,false,31,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,6,0,0,1,0,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\graph\TravelingSalesmanHeldKarpTest.java,com.interview.graph.TravelingSalesmanHeldKarpTest,testDifferentCases/0,false,9,3,0,0,0,1,2,9,0,4,0,2,0,0,0,0,0,0,0,67,5,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FourPointsFormSquare.java,com.interview.misc.FourPointsFormSquare,main/1[java.lang.String[]],false,51,2,3,0,3,1,2,21,0,6,1,2,1,3,0,0,0,0,0,13,18,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FourPointsFormSquare.java,com.interview.misc.FourPointsFormSquare,"compare/5[com.interview.misc.Cordinate,com.interview.misc.Cordinate,com.interview.misc.Cordinate,int,int]",false,34,2,2,1,1,4,1,11,3,2,5,1,1,1,0,3,0,0,0,1,2,1,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FourPointsFormSquare.java,com.interview.misc.FourPointsFormSquare,"distanceSquare/2[com.interview.misc.Cordinate,com.interview.misc.Cordinate]",false,46,1,2,2,0,1,2,3,1,0,2,2,0,0,0,0,0,1,0,2,0,3,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\FourPointsFormSquare.java,com.interview.misc.FourPointsFormSquare,isSquare/1[com.interview.misc.Cordinate[]],false,16,2,3,1,2,4,2,18,4,4,1,2,2,2,0,3,0,0,0,13,4,0,1,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.FutureTask,run/0,false,122,2,2,0,2,2,2,6,0,0,0,2,1,1,1,0,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.FutureTask,"FutureTask/2[com.interview.multithreaded.Task,java.util.concurrent.Executor]",true,117,1,0,0,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,4,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.FutureTask,addChain/1[com.interview.multithreaded.FutureTask],false,133,1,2,1,1,1,1,3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.FutureTask,"supplyAsync/2[com.interview.multithreaded.FutureTask,java.util.concurrent.Executor]",false,129,1,1,1,0,1,1,3,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolExample.java,com.interview.multithreaded.Count10,call/0,false,44,0,0,0,0,2,3,12,1,1,0,3,0,0,0,0,1,0,3,2,1,4,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolExample.java,com.interview.multithreaded.Count10,Count10/1[int],true,40,0,1,1,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\UpsidedownBinaryTree.java,com.interview.tree.UpsidedownBinaryTree,"upsideDownBinaryTree/3[com.interview.tree.Node,com.interview.tree.Node,com.interview.tree.Node]",false,18,2,3,2,1,2,1,10,2,2,3,1,1,0,0,1,0,0,0,0,4,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\UpsidedownBinaryTree.java,com.interview.tree.UpsidedownBinaryTree,upsideDownBinaryTree/1[com.interview.tree.Node],false,11,2,1,0,1,2,1,6,2,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\StrobogrammaticNumber.java,com.interview.number.StrobogrammaticNumber,isStrobogrammatic/1[java.lang.String],false,8,0,0,0,0,10,2,17,3,3,1,2,0,0,1,8,0,2,0,3,3,2,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,diff/1[com.interview.suffixprefix.SuffixNode],false,267,1,2,2,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,selectNode/0,false,258,1,3,3,0,1,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,"setIndexUsingDfs/3[com.interview.suffixprefix.SuffixNode,int,int]",false,271,2,3,2,1,4,1,13,2,0,3,1,1,0,1,2,0,0,0,2,2,3,1,0,0,0,11,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,SuffixTree/1[char[]],true,89,1,1,1,0,2,0,7,0,1,1,0,0,0,1,0,0,0,0,2,4,1,1,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,dfsTraversal/0,false,290,1,2,1,1,2,1,6,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,validate/0,false,366,1,2,1,1,3,2,9,2,1,0,2,1,1,1,0,0,0,1,1,1,0,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,build/0,false,97,4,6,1,5,3,4,13,0,1,0,4,2,4,1,1,0,0,1,7,5,0,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,selectNode/1[int],false,262,1,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,main/1[java.lang.String[]],false,75,1,4,0,4,1,5,6,0,1,1,5,3,7,0,0,0,0,1,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,startPhase/1[int],false,114,3,7,1,6,11,5,70,0,7,1,5,4,3,1,8,1,0,0,6,25,6,5,0,0,0,28,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,"dfsTraversal/2[com.interview.suffixprefix.SuffixNode,java.util.List<java.lang.Character>]",false,297,2,3,2,1,8,7,25,2,4,2,7,1,0,5,2,0,0,1,3,4,3,2,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,"validate/4[com.interview.suffixprefix.SuffixNode,char[],int,int]",false,330,3,3,2,1,8,2,34,7,3,4,2,1,0,1,5,0,0,10,3,4,9,2,0,0,0,28,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,walkDown/1[int],false,219,2,3,1,2,2,2,11,0,1,1,2,2,1,0,0,0,0,0,0,4,1,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\SuffixTree.java,com.interview.suffixprefix.SuffixTree,nextChar/1[int],false,234,3,6,2,4,4,3,18,3,1,1,3,3,1,0,2,0,0,0,3,4,4,2,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DungeonGame.java,com.interview.dynamic.DungeonGame,calculateMinimumHP/1[int[][]],false,15,1,1,1,0,7,2,21,2,7,1,2,0,0,4,2,0,0,0,28,11,15,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DungeonGame.java,com.interview.dynamic.DungeonGame,main/1[java.lang.String[]],false,43,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,9,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\bits\CountingBitsTillNum.java,com.interview.bits.CountingBitsTillNum,countBits/1[int],false,16,1,0,0,0,5,0,20,2,4,1,0,0,0,2,1,0,0,0,10,9,5,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\LinkList.java,com.interview.linklist.Node,"newNode/2[int,java.lang.Object[]]",false,17,1,12,11,1,2,0,10,1,1,2,0,0,0,0,0,0,0,0,2,5,0,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ConvertToBaseN.java,com.interview.number.ConvertToBaseN,"baseN/2[int,int]",false,5,0,1,1,0,3,0,13,1,2,2,0,0,0,1,0,0,1,0,5,5,3,1,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\ConvertToBaseN.java,com.interview.number.ConvertToBaseN,main/1[java.lang.String[]],false,19,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestIncreasingPath.java,com.interview.dynamic.LongestIncreasingPath,longestIncreasingPath/1[int[][]],false,17,2,2,1,1,6,1,16,2,5,1,1,1,1,2,2,0,0,0,9,6,0,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestIncreasingPath.java,com.interview.dynamic.LongestIncreasingPath,"dfs/5[int[][],int,int,int[][],int]",false,34,2,3,2,1,7,2,17,4,4,5,2,1,0,0,1,0,0,0,10,5,5,1,0,0,0,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestIncreasingPath.java,com.interview.dynamic.LongestIncreasingPath,main/1[java.lang.String[]],false,55,2,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,18,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,insert/1[java.lang.String],false,34,1,2,1,1,3,4,13,0,4,1,4,0,0,1,1,0,0,0,1,7,0,2,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,"insertRecursive/3[com.interview.suffixprefix.Trie.TrieNode,java.lang.String,int]",false,57,2,4,2,2,3,5,13,1,2,3,5,1,0,0,2,0,0,0,1,4,1,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,search/1[java.lang.String],false,77,1,1,1,0,3,3,12,2,4,1,3,0,0,1,1,0,0,0,1,5,0,2,0,0,0,15,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,delete/1[java.lang.String],false,115,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,4,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,insertRecursive/1[java.lang.String],false,52,1,2,1,1,1,1,3,0,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,7,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,Trie/0,true,27,1,2,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,searchRecursive/1[java.lang.String],false,95,1,1,0,1,1,1,3,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,6,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,"searchRecursive/3[com.interview.suffixprefix.Trie.TrieNode,java.lang.String,int]",false,98,2,3,2,1,3,4,11,3,2,3,4,1,0,0,2,0,0,0,1,2,1,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie,"delete/3[com.interview.suffixprefix.Trie.TrieNode,java.lang.String,int]",false,122,2,3,2,1,5,6,20,5,3,3,6,1,0,0,4,0,0,0,3,4,1,2,0,0,0,16,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RemoveDuplicateMaintainingOrder.java,com.interview.stackqueue.RemoveDuplicateMaintainingOrder,removeDuplicateLetters/1[java.lang.String],false,16,0,1,1,0,9,15,34,3,9,1,15,0,0,4,1,0,0,0,6,7,2,3,0,0,1,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\RemoveDuplicateMaintainingOrder.java,com.interview.stackqueue.RemoveDuplicateMaintainingOrder,main/1[java.lang.String[]],false,52,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,1,0,1,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SelfCrossing.java,com.interview.array.SelfCrossing,isSelfCrossing/1[int[]],false,8,1,1,1,0,11,0,33,3,3,1,0,0,0,1,4,0,3,0,17,7,5,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\SelfCrossing.java,com.interview.array.SelfCrossing,main/1[java.lang.String[]],false,40,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,5,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\suffixprefix\Trie.java,com.interview.suffixprefix.Trie$TrieNode,TrieNode/0,true,20,1,3,3,0,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\HuffmanEncoding.java,com.interview.tree.HuffmanEncoding,"huffman/2[char[],int[]]",false,34,5,4,1,3,3,4,23,1,9,2,4,1,1,2,0,0,0,0,2,14,1,1,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\HuffmanEncoding.java,com.interview.tree.HuffmanEncoding,main/1[java.lang.String[]],false,79,1,2,0,2,1,2,7,0,4,1,2,1,2,0,0,0,0,0,6,4,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\HuffmanEncoding.java,com.interview.tree.HuffmanEncoding,"createCode/3[com.interview.tree.HuffmanNode,java.util.Map<java.lang.Character,java.lang.String>,java.lang.StringBuffer]",false,61,2,3,2,1,4,6,15,2,0,3,6,1,0,0,3,0,0,2,2,0,2,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SmallestRectangleBlackPixel.java,com.interview.multiarray.SmallestRectangleBlackPixel,"searchRows/6[char[][],int,int,int,int,boolean]",false,45,1,1,1,0,6,0,20,1,3,6,0,0,0,2,4,0,2,0,6,6,6,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SmallestRectangleBlackPixel.java,com.interview.multiarray.SmallestRectangleBlackPixel,"searchColumns/6[char[][],int,int,int,int,boolean]",false,25,1,1,1,0,6,0,20,1,3,6,0,0,0,2,4,0,2,0,6,6,6,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SmallestRectangleBlackPixel.java,com.interview.multiarray.SmallestRectangleBlackPixel,main/1[java.lang.String[]],false,65,2,2,0,2,1,2,6,0,3,1,2,1,2,0,0,0,0,0,2,3,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\SmallestRectangleBlackPixel.java,com.interview.multiarray.SmallestRectangleBlackPixel,"minArea/3[char[][],int,int]",false,11,2,3,1,2,1,2,9,1,6,3,2,2,1,0,0,0,2,0,11,6,9,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\LongestAbsolutePath.java,com.interview.recursion.LongestAbsolutePath$Node,"Node/2[java.lang.String,int]",true,64,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\LongestAbsolutePath.java,com.interview.recursion.LongestAbsolutePath$Node,Node/1[java.lang.String],true,68,0,1,1,0,3,4,15,0,2,1,4,0,0,1,1,0,0,1,2,5,0,2,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromPreOrderTraversalWith0or2Child.java,com.interview.tree.ConstructTreeFromPreOrderTraversalWith0or2Child,main/1[java.lang.String[]],false,36,3,5,0,5,1,4,10,0,5,1,4,1,2,0,0,0,0,0,9,5,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromPreOrderTraversalWith0or2Child.java,com.interview.tree.ConstructTreeFromPreOrderTraversalWith0or2Child,"createTree/2[int[],char[]]",false,14,5,3,1,2,1,1,5,1,1,2,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ConstructTreeFromPreOrderTraversalWith0or2Child.java,com.interview.tree.ConstructTreeFromPreOrderTraversalWith0or2Child,"createTree/3[int[],char[],com.interview.tree.PreIndex]",false,20,5,4,2,2,3,2,15,2,1,3,2,1,0,0,1,0,0,0,0,3,0,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle$TrieNode,TrieNode/0,true,71,0,2,2,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\DifferenceBetweenTwoTime.java,com.interview.misc.DifferenceBetweenTwoTime,"diff/2[int,int]",false,12,0,1,1,0,3,0,12,1,2,2,0,0,0,0,0,0,1,0,9,3,11,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\DifferenceBetweenTwoTime.java,com.interview.misc.DifferenceBetweenTwoTime,main/1[java.lang.String[]],false,26,1,2,0,2,1,2,13,0,2,1,2,1,1,0,0,0,0,0,10,6,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumLengthChainPair.java,com.interview.dynamic.MaximumLengthChainPair,maxLength/1[com.interview.dynamic.MaximumLengthChainPair.Pair[]],false,27,2,1,1,0,7,2,21,1,6,1,2,0,0,4,0,0,0,0,10,9,4,3,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MaximumLengthChainPair.java,com.interview.dynamic.MaximumLengthChainPair,main/1[java.lang.String[]],false,51,2,3,0,3,1,2,12,0,9,1,2,1,1,0,0,0,0,0,12,9,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\VertexCoverBinaryTreeDP.java,com.interview.tree.VertexCoverBinaryTreeDP,cover/1[com.interview.tree.Node],false,15,2,3,2,1,7,2,21,4,2,1,2,1,0,0,6,0,2,0,7,5,3,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\VertexCoverBinaryTreeDP.java,com.interview.tree.VertexCoverBinaryTreeDP,main/1[java.lang.String[]],false,41,3,4,0,4,1,3,20,0,3,1,3,1,1,0,0,0,0,0,14,17,0,0,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DecodeWays.java,com.interview.dynamic.DecodeWays,"numDecodingsUtil/3[java.lang.String,int,java.util.Map<java.lang.Integer,java.lang.Integer>]",false,26,1,3,2,1,6,8,23,4,3,3,8,1,0,0,1,0,0,1,10,5,7,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DecodeWays.java,com.interview.dynamic.DecodeWays,numDecodings/1[java.lang.String],false,18,1,1,0,1,2,2,7,2,1,1,2,1,1,0,1,0,0,0,3,1,0,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ReconstructItinerary.java,com.interview.recursion.ReconstructItinerary,findItinerary/1[java.lang.String[][]],false,16,3,3,1,2,2,4,11,1,3,1,4,1,1,1,0,0,0,1,3,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ReconstructItinerary.java,com.interview.recursion.ReconstructItinerary,"findItineraryUtil/5[java.util.List<com.interview.recursion.ReconstructItinerary.Itinerary>,boolean[],java.lang.String,java.util.List<java.lang.String>,int]",false,28,3,3,2,1,6,7,22,3,2,5,7,1,0,1,1,0,0,0,3,4,2,3,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\ReconstructItinerary.java,com.interview.recursion.ReconstructItinerary,main/1[java.lang.String[]],false,69,1,2,0,2,1,3,6,0,4,1,3,1,2,0,0,0,0,9,0,3,1,0,0,0,1,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ArbitaryTreeToChildSumTree.java,com.interview.tree.ArbitaryTreeToChildSumTree,main/1[java.lang.String[]],false,49,4,6,0,6,1,3,15,0,4,1,3,1,3,0,0,0,0,0,7,11,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ArbitaryTreeToChildSumTree.java,com.interview.tree.ArbitaryTreeToChildSumTree,"incrementChild/2[com.interview.tree.Node,int]",false,17,2,3,2,1,5,1,13,1,0,2,1,1,0,0,4,0,1,0,0,2,2,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ArbitaryTreeToChildSumTree.java,com.interview.tree.ArbitaryTreeToChildSumTree,childSumTree/1[com.interview.tree.Node],false,13,2,2,1,1,1,1,3,0,0,1,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ArbitaryTreeToChildSumTree.java,com.interview.tree.ArbitaryTreeToChildSumTree,toChildSumTree/1[com.interview.tree.Node],false,30,2,4,2,2,6,2,17,3,2,1,2,2,1,0,3,0,0,0,1,3,4,1,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SearchForRange.java,com.interview.binarysearch.SearchForRange,"lastOccurence/2[int[],int]",false,40,1,1,1,0,6,0,17,2,3,2,0,0,0,1,2,0,2,0,8,5,8,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SearchForRange.java,com.interview.binarysearch.SearchForRange,main/1[java.lang.String[]],false,56,2,2,0,2,1,2,8,0,3,1,2,1,2,0,0,0,0,2,13,4,2,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SearchForRange.java,com.interview.binarysearch.SearchForRange,"searchRange/2[int[],int]",false,15,2,3,1,2,2,2,8,2,2,2,2,2,1,0,1,0,0,0,3,2,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\SearchForRange.java,com.interview.binarysearch.SearchForRange,"firstOccurence/2[int[],int]",false,24,1,1,1,0,6,0,17,2,3,2,0,0,0,1,2,0,2,0,8,5,7,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\EuclideanAlgoForGCD.java,com.interview.number.EuclideanAlgoForGCD,main/1[java.lang.String[]],false,33,1,2,0,2,2,2,10,0,2,1,2,1,1,0,1,0,0,2,3,2,1,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\EuclideanAlgoForGCD.java,com.interview.number.EuclideanAlgoForGCD,"gcd/2[int,int]",false,9,0,1,1,0,3,0,13,1,2,2,0,0,0,1,1,0,0,0,1,6,1,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\EuclideanAlgoForGCD.java,com.interview.number.EuclideanAlgoForGCD,"gcdRec/2[int,int]",false,26,1,2,1,1,2,1,6,2,0,2,1,1,0,0,1,0,0,0,1,0,1,1,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\BinaryTree.java,com.interview.tree.Node,newNode/1[int],false,31,1,12,11,1,1,0,11,1,1,1,0,0,0,0,0,0,0,0,3,8,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OneEditApart.java,com.interview.recursion.OneEditApart,"isOneEditDistance/2[java.lang.String,java.lang.String]",false,16,0,1,1,0,8,3,38,3,5,2,3,0,0,1,2,0,0,0,3,8,1,4,0,0,0,14,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\OneEditApart.java,com.interview.recursion.OneEditApart,main/1[java.lang.String[]],false,52,1,2,0,2,1,2,8,0,1,1,2,1,1,0,0,0,0,10,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SpinLockMutex.java,com.interview.multithreaded.SpinLockMutex,changeBuffer/1[java.lang.String],false,42,0,1,1,0,1,1,3,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SpinLockMutex.java,com.interview.multithreaded.SpinLockMutex,main/1[java.lang.String[]],false,50,2,6,0,6,4,7,30,0,6,1,7,2,1,2,0,1,0,2,4,6,2,2,0,0,2,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SpinLockMutex.java,com.interview.multithreaded.SpinLockMutex,getBuffer/0,false,46,0,1,1,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MultiplyTwoNumbersLinkList.java,com.interview.linklist.MultiplyTwoNumbersLinkList,"multiply/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,11,4,6,1,5,7,3,47,1,9,2,3,1,1,3,6,0,0,0,4,28,3,3,0,0,0,18,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MultiplyTwoNumbersLinkList.java,com.interview.linklist.MultiplyTwoNumbersLinkList,"add/2[com.interview.linklist.Node,com.interview.linklist.Node]",false,58,1,2,1,1,12,1,66,3,10,2,1,0,0,4,11,0,0,0,8,35,9,2,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\MultiplyTwoNumbersLinkList.java,com.interview.linklist.MultiplyTwoNumbersLinkList,main/1[java.lang.String[]],false,124,3,5,0,5,1,3,16,0,5,1,3,1,2,0,0,0,0,0,8,13,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ValidTree.java,com.interview.graph.ValidTree,"validTree/2[int,int[][]]",false,14,3,1,0,1,8,4,31,4,5,2,4,1,1,2,2,0,0,0,10,8,0,2,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\ValidTree.java,com.interview.graph.ValidTree,"isCycle/4[int,java.util.Map<java.lang.Integer,java.util.List<java.lang.Integer>>,int,boolean[]]",false,49,2,3,2,1,6,2,18,4,0,4,2,1,0,1,2,0,0,0,0,1,0,2,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ConvertAnArrayIntoDecreaseIncreaseFashion.java,com.interview.array.ConvertAnArrayIntoDecreaseIncreaseFashion,main/1[java.lang.String[]],false,52,1,3,0,3,3,4,14,0,5,1,4,2,3,2,0,0,0,2,24,5,2,1,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ConvertAnArrayIntoDecreaseIncreaseFashion.java,com.interview.array.ConvertAnArrayIntoDecreaseIncreaseFashion,convert/1[int[]],false,12,3,4,1,3,4,2,18,0,4,1,2,1,1,1,1,0,0,0,8,7,4,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ConvertAnArrayIntoDecreaseIncreaseFashion.java,com.interview.array.ConvertAnArrayIntoDecreaseIncreaseFashion,"swap/3[int[],int,int]",false,46,1,2,2,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\ConvertAnArrayIntoDecreaseIncreaseFashion.java,com.interview.array.ConvertAnArrayIntoDecreaseIncreaseFashion,convert1/1[int[]],false,37,2,2,1,1,3,2,8,0,1,1,2,1,1,1,0,0,0,0,4,2,2,2,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SizeOfBinaryTree.java,com.interview.tree.SizeOfBinaryTree,main/1[java.lang.String[]],false,29,3,4,0,4,1,3,13,0,3,1,3,1,1,0,0,0,0,0,7,10,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SizeOfBinaryTree.java,com.interview.tree.SizeOfBinaryTree,size/1[com.interview.tree.Node],false,22,2,3,2,1,2,1,6,2,0,1,1,1,0,0,1,0,0,0,2,0,1,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KadaneWrapArray.java,com.interview.array.KadaneWrapArray,kadane/1[int[]],false,49,2,2,1,1,4,0,26,1,7,1,0,0,0,1,0,0,0,0,8,16,1,3,0,0,0,27,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KadaneWrapArray.java,com.interview.array.KadaneWrapArray,kadaneWrap/1[int[]],false,24,3,3,2,1,4,1,18,1,5,1,1,1,1,2,0,0,0,0,5,11,4,1,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KadaneWrapArray.java,com.interview.array.KadaneWrapArray,main/1[java.lang.String[]],false,75,1,2,0,2,1,2,7,0,3,1,2,1,2,0,0,0,0,0,14,3,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\GenerateSignature.java,com.interview.number.GenerateSignature,"reverse/3[int[],int,int]",false,41,1,1,1,0,2,0,9,0,1,3,0,0,0,1,0,0,0,0,0,3,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\GenerateSignature.java,com.interview.number.GenerateSignature,main/1[java.lang.String[]],false,52,1,2,0,2,2,3,8,0,4,1,3,1,2,1,0,0,0,2,1,4,1,1,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\GenerateSignature.java,com.interview.number.GenerateSignature,generate/1[char[]],false,16,3,2,1,1,7,1,24,1,5,1,1,1,1,3,3,0,0,0,11,9,5,3,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedCircularLinkList.java,com.interview.linklist.SortedCircularLinkList,"add/2[com.interview.linklist.Node,int]",false,14,2,3,1,2,6,2,29,3,4,2,2,1,1,1,2,0,0,0,0,14,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedCircularLinkList.java,com.interview.linklist.SortedCircularLinkList,getTail/1[com.interview.linklist.Node],false,44,1,1,1,0,2,0,7,1,1,1,0,0,0,1,1,0,0,0,0,2,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedCircularLinkList.java,com.interview.linklist.SortedCircularLinkList,main/1[java.lang.String[]],false,64,2,3,0,3,1,2,11,0,2,1,2,2,2,0,0,0,0,0,6,8,0,0,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\SortedCircularLinkList.java,com.interview.linklist.SortedCircularLinkList,printList/1[com.interview.linklist.Node],false,52,1,1,1,0,3,1,11,1,1,1,1,0,0,1,2,0,0,0,0,2,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.DatabaseLayer,"applyUpdates/2[java.lang.String,java.lang.String]",false,41,0,1,1,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NextLargestPalindrome.java,com.interview.number.NextLargestPalindrome,nextPalindrome/1[int[]],false,8,1,1,1,0,11,0,42,0,5,1,0,0,0,3,3,0,0,0,21,18,14,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NextLargestPalindrome.java,com.interview.number.NextLargestPalindrome,printArray/1[int[]],false,54,1,1,1,0,2,1,5,0,1,1,1,0,0,1,0,0,0,1,1,1,1,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\NextLargestPalindrome.java,com.interview.number.NextLargestPalindrome,main/1[java.lang.String[]],false,60,1,3,0,3,1,2,6,0,2,1,2,2,1,0,0,0,0,0,6,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeIsomorphism.java,com.interview.tree.TreeIsomorphism,main/1[java.lang.String[]],false,29,3,4,0,4,1,3,11,0,8,1,3,1,1,0,0,0,0,0,28,8,0,0,0,0,0,13,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\TreeIsomorphism.java,com.interview.tree.TreeIsomorphism,"areIsomorphicTrees/2[com.interview.tree.Node,com.interview.tree.Node]",false,12,2,3,2,1,6,1,9,3,0,2,1,1,0,0,5,0,3,0,0,0,0,1,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle$Trie,startsWith/1[java.lang.String],false,111,1,1,1,0,3,2,11,2,3,1,2,0,0,1,1,0,1,0,1,4,1,2,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle$Trie,insert/1[java.lang.String],false,83,1,2,1,1,3,2,11,0,3,1,2,0,0,1,1,0,1,0,1,6,1,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle$Trie,search/1[java.lang.String],false,97,1,1,1,0,3,2,11,2,3,1,2,0,0,1,1,0,1,0,1,4,1,2,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle$Trie,printTrieUtil/1[com.interview.graph.Boggle.TrieNode],false,127,2,3,2,1,4,2,11,1,1,1,2,1,0,1,2,0,1,0,1,1,1,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle$Trie,printTrie/0,false,123,1,1,0,1,1,1,3,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\Boggle.java,com.interview.graph.Boggle$Trie,Trie/0,true,78,1,2,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TopologicalSort.java,com.interview.graph.TopologicalSort,main/1[java.lang.String[]],false,48,3,4,0,4,2,5,15,0,3,1,5,0,0,1,0,0,0,0,14,3,0,1,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TopologicalSort.java,com.interview.graph.TopologicalSort,"topSortUtil/3[com.interview.graph.Vertex<T>,java.util.Deque<com.interview.graph.Vertex<T>>,java.util.Set<com.interview.graph.Vertex<T>>]",false,37,3,2,0,2,3,5,10,0,0,3,5,0,0,1,0,0,0,0,0,0,0,2,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TopologicalSort.java,com.interview.graph.TopologicalSort,topSort/1[com.interview.graph.Graph<T>],false,24,4,2,0,2,3,3,11,1,2,1,3,0,0,1,0,0,0,0,0,2,0,2,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestConsecutiveSubsequence.java,com.interview.array.LongestConsecutiveSubsequence,longestConsecutive/1[int[]],false,19,1,1,1,0,5,4,17,1,5,1,4,0,0,1,0,0,0,0,8,6,7,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\LongestConsecutiveSubsequence.java,com.interview.array.LongestConsecutiveSubsequence,main/1[java.lang.String[]],false,38,2,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,6,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\playground\TestInnerClass.java,com.interview.playground.TestInnerClass,test1/0,false,19,2,3,1,2,1,3,8,0,2,0,3,1,1,0,0,0,0,0,0,4,0,0,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\playground\TestInnerClass.java,com.interview.playground.TestInnerClass,test/0,false,12,1,1,1,0,1,0,4,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\playground\TestInnerClass.java,com.interview.playground.TestInnerClass,main/1[java.lang.String[]],false,28,1,2,0,2,1,1,4,0,1,1,1,1,2,0,0,0,0,0,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RootToLeafToSum.java,com.interview.tree.RootToLeafToSum,main/1[java.lang.String[]],false,49,3,4,0,4,2,5,21,0,6,1,5,1,1,0,0,0,0,2,10,13,2,1,0,0,1,17,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\RootToLeafToSum.java,com.interview.tree.RootToLeafToSum,"printPath/3[com.interview.tree.Node,int,java.util.List<com.interview.tree.Node>]",false,29,2,3,2,1,7,2,19,5,0,3,2,1,0,0,4,0,0,0,0,0,2,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DoubleLinkList.java,com.interview.linklist.DoubleLinkList,main/1[java.lang.String[]],false,62,2,3,0,3,1,2,10,0,2,1,2,2,1,0,0,0,0,0,5,7,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DoubleLinkList.java,com.interview.linklist.DoubleLinkList,"addNode/2[com.interview.linklist.Node,int]",false,5,1,3,2,1,3,1,14,2,2,2,1,0,0,1,2,0,0,0,0,6,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DoubleLinkList.java,com.interview.linklist.DoubleLinkList,"find/2[com.interview.linklist.Node,int]",false,52,1,1,1,0,3,0,9,2,0,2,0,0,0,1,2,0,0,0,0,1,0,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DoubleLinkList.java,com.interview.linklist.DoubleLinkList,printFrontBack/1[com.interview.linklist.Node],false,38,1,1,1,0,3,2,13,0,1,1,2,0,0,2,2,0,0,2,0,4,2,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DoubleLinkList.java,com.interview.linklist.DoubleLinkList,"addAtFront/2[com.interview.linklist.Node,int]",false,20,1,2,1,1,2,1,9,2,1,2,1,0,0,0,1,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\DoubleLinkList.java,com.interview.linklist.DoubleLinkList,print/1[com.interview.linklist.Node],false,30,1,1,1,0,2,1,6,0,0,1,1,0,0,1,1,0,0,1,0,1,1,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\recursion\RestoreIPAddressesTest.java,com.interview.recursion.RestoreIPAddressesTest,testDifferenceCases/0,false,12,3,2,0,2,1,3,13,0,5,0,3,0,0,0,0,0,0,5,0,6,0,0,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CountInversionOfSize3.java,com.interview.array.CountInversionOfSize3,main/1[java.lang.String[]],false,37,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,5,2,0,0,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\CountInversionOfSize3.java,com.interview.array.CountInversionOfSize3,findInversions/1[int[]],false,17,1,1,1,0,6,0,19,1,6,1,0,0,0,3,0,0,0,0,7,7,3,3,0,0,0,14,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TransitiveClosure.java,com.interview.graph.TransitiveClosure,main/1[java.lang.String[]],false,30,2,2,0,2,3,3,11,0,5,1,3,1,1,2,0,0,0,1,27,5,1,2,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TransitiveClosure.java,com.interview.graph.TransitiveClosure,getTransitiveClosure/1[int[][]],false,8,2,1,1,0,7,0,20,1,8,1,0,0,0,5,1,0,1,0,7,10,0,3,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WildCardMatching.java,com.interview.dynamic.WildCardMatching,"isMatch/2[java.lang.String,java.lang.String]",false,13,2,1,1,0,11,1,34,1,8,2,1,0,0,3,5,0,0,0,21,16,10,3,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WildCardMatching.java,com.interview.dynamic.WildCardMatching,"isMatchRecursiveUtil/4[char[],char[],int,int]",false,62,2,3,2,1,10,1,26,5,0,4,1,1,0,2,6,0,1,0,6,0,6,3,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WildCardMatching.java,com.interview.dynamic.WildCardMatching,main/1[java.lang.String[]],false,89,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,2,0,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\WildCardMatching.java,com.interview.dynamic.WildCardMatching,"isMatchRecursive/2[java.lang.String,java.lang.String]",false,58,1,1,0,1,1,2,3,1,0,2,2,1,1,0,0,0,0,0,2,0,0,0,0,0,0,11,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\ReverseStackUsingRecursion.java,com.interview.stackqueue.ReverseStackUsingRecursion,"pushAtBottom/2[java.util.Deque<java.lang.Integer>,int]",false,22,1,3,2,1,2,4,9,1,1,2,4,1,0,0,1,0,0,0,1,1,0,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\ReverseStackUsingRecursion.java,com.interview.stackqueue.ReverseStackUsingRecursion,main/1[java.lang.String[]],false,32,1,2,0,2,3,6,19,0,3,1,6,1,2,2,0,0,0,0,6,4,0,1,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\stackqueue\ReverseStackUsingRecursion.java,com.interview.stackqueue.ReverseStackUsingRecursion,reverse/1[java.util.Deque<java.lang.Integer>],false,12,1,4,2,2,2,4,8,1,1,1,4,2,1,0,1,0,0,0,1,1,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\ThreadPoolImpl.java,com.interview.multithreaded.ThreadPool,run/1[java.lang.Runnable],false,8,0,2,2,0,1,1,5,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp,minCost/1[int[][]],false,57,3,4,0,4,10,8,45,1,15,1,8,3,3,5,1,0,0,0,9,20,3,4,0,0,0,30,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp,generateCombination/1[int],false,141,3,3,1,2,2,2,11,1,4,1,2,1,2,1,0,0,0,0,4,5,1,1,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp,"generateCombination/5[int[],int,int,java.util.List<java.util.Set<java.lang.Integer>>,int[]]",false,153,2,4,2,2,3,3,11,1,2,5,3,2,1,1,1,0,0,0,2,3,2,1,0,0,0,8,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp,"printTour/2[java.util.Map<com.interview.graph.TravelingSalesmanHeldKarp.Index,java.lang.Integer>,int]",false,112,1,2,1,1,4,10,20,0,6,2,10,0,0,2,1,0,0,2,2,6,0,2,0,0,1,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp,"getCost/3[java.util.Set<java.lang.Integer>,int,java.util.Map<com.interview.graph.TravelingSalesmanHeldKarp.Index,java.lang.Integer>]",false,133,1,2,1,1,1,4,7,1,2,3,4,0,0,0,0,0,0,0,0,2,0,0,0,0,0,10,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\TravelingSalesmanHeldKarp.java,com.interview.graph.TravelingSalesmanHeldKarp,"createSet/2[int[],int]",false,165,1,1,1,0,3,1,10,2,2,2,1,0,0,1,1,0,0,0,2,2,0,1,0,0,0,5,10,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\Fill2DMatrixWith1.java,com.interview.multiarray.Fill2DMatrixWith1,fill/1[int[][]],false,8,2,1,1,0,8,0,19,0,6,1,0,0,0,4,1,0,0,0,7,9,0,3,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\Fill2DMatrixWith1.java,com.interview.multiarray.Fill2DMatrixWith1,main/1[java.lang.String[]],false,28,1,2,0,2,3,3,11,0,4,1,3,1,1,2,0,0,0,1,20,4,1,2,0,0,0,9,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\CountingWord.java,com.interview.multithreaded.CountingWord,getCount/1[java.lang.String],false,46,0,1,1,0,2,2,7,2,1,1,2,0,0,0,1,0,0,0,1,1,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\CountingWord.java,com.interview.multithreaded.CountingWord,main/1[java.lang.String[]],false,54,1,3,0,3,8,7,35,0,12,1,7,2,1,3,3,1,0,6,8,12,1,1,0,0,3,22,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\CountingWord.java,com.interview.multithreaded.CountingWord,addWord/1[java.lang.String],false,33,0,1,1,0,3,3,13,0,1,1,3,0,0,0,2,0,0,0,1,3,0,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,leftRotate/1[com.interview.tree.Node],false,34,2,3,1,2,1,2,10,1,1,1,2,2,1,0,0,0,0,0,0,7,0,0,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,setHeight/1[com.interview.tree.Node],false,56,1,3,3,0,4,1,6,2,0,1,1,0,0,0,3,0,2,0,4,0,1,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,"insert/2[com.interview.tree.Node,int]",false,78,2,10,2,8,7,8,35,2,1,2,8,7,4,0,1,0,0,0,2,11,0,2,0,0,0,13,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,setSize/1[com.interview.tree.Node],false,71,1,3,3,0,4,1,6,2,0,1,1,0,0,0,3,0,2,0,4,0,1,1,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,main/1[java.lang.String[]],false,115,3,5,0,5,1,4,16,0,3,1,4,1,5,0,0,0,0,0,8,11,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,"balance/2[com.interview.tree.Node,com.interview.tree.Node]",false,111,2,2,1,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,height/1[com.interview.tree.Node],false,63,1,2,2,0,2,0,8,2,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\AVLTree.java,com.interview.tree.AVLTree,rightRotate/1[com.interview.tree.Node],false,45,2,3,1,2,1,2,10,1,1,1,2,2,1,0,0,0,0,0,0,7,0,0,0,0,0,9,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternativelyMaintainingOrder.java,com.interview.array.PositiveAndNegativeNumberAlternativelyMaintainingOrder,"findNext/3[int[],int,boolean]",false,40,1,1,1,0,6,0,8,2,1,3,0,0,0,1,0,0,2,0,3,1,0,2,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternativelyMaintainingOrder.java,com.interview.array.PositiveAndNegativeNumberAlternativelyMaintainingOrder,"rightRotate/3[int[],int,int]",false,49,1,1,1,0,2,0,7,0,2,3,0,0,0,1,0,0,0,0,1,4,1,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternativelyMaintainingOrder.java,com.interview.array.PositiveAndNegativeNumberAlternativelyMaintainingOrder,rearrange/1[int[]],false,19,2,3,1,2,8,2,22,2,3,1,2,2,1,1,4,0,0,0,11,3,4,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\PositiveAndNegativeNumberAlternativelyMaintainingOrder.java,com.interview.array.PositiveAndNegativeNumberAlternativelyMaintainingOrder,main/1[java.lang.String[]],false,57,1,2,0,2,1,4,6,0,3,1,4,1,2,0,0,0,0,1,10,2,1,0,0,0,1,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\RussianPeasantMultiplication.java,com.interview.number.RussianPeasantMultiplication,main/1[java.lang.String[]],false,23,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\RussianPeasantMultiplication.java,com.interview.number.RussianPeasantMultiplication,"multiply/2[int,int]",false,11,0,1,1,0,3,0,11,1,1,2,0,0,0,1,1,0,0,0,6,4,3,2,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DistinctSubsequence.java,com.interview.dynamic.DistinctSubsequence,main/1[java.lang.String[]],false,35,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,2,0,1,0,0,0,0,0,4,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\DistinctSubsequence.java,com.interview.dynamic.DistinctSubsequence,"numDistinct/2[java.lang.String,java.lang.String]",false,15,1,1,1,0,7,2,20,2,4,2,2,0,0,3,3,0,0,0,18,7,9,3,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\CountNoOf2s.java,com.interview.number.CountNoOf2s,main/1[java.lang.String[]],false,29,1,2,0,2,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\CountNoOf2s.java,com.interview.number.CountNoOf2s,count2s/1[int],false,8,1,3,2,1,5,1,19,4,1,1,1,1,0,1,1,0,2,0,11,3,18,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\ShortestDistanceFromAllBuildings.java,com.interview.multiarray.ShortestDistanceFromAllBuildings$Point,"Point/3[int,int,int]",true,21,0,2,2,0,1,0,5,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,printPositionMap/0,false,158,0,0,0,0,1,1,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,containsData/1[T],false,35,1,0,0,0,1,1,3,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,empty/0,false,76,0,0,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,7,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,extractMinNode/0,false,114,1,3,0,3,6,7,35,1,7,0,7,0,0,1,0,0,0,0,13,13,5,2,0,0,0,22,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,min/0,false,69,1,0,0,0,1,1,3,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,8,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,extractMin/0,false,153,2,1,0,1,1,1,4,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,"add/2[int,T]",false,42,2,3,0,3,3,6,23,0,6,2,6,0,0,1,0,0,2,0,6,10,5,2,0,0,0,19,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,"swap/2[com.interview.graph.BinaryMinHeap<T>.Node,com.interview.graph.BinaryMinHeap<T>.Node]",false,162,2,0,0,0,1,0,8,0,2,2,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,getWeight/1[T],false,102,1,0,0,0,2,2,9,2,1,1,2,0,0,0,1,0,0,0,0,1,0,1,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,"updatePositionMap/4[T,T,int,int]",false,173,1,0,0,0,1,2,6,0,0,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,"decrease/2[T,int]",false,83,2,2,0,2,3,4,16,0,2,2,4,0,0,1,0,0,2,0,5,5,4,2,0,0,0,19,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,main/1[java.lang.String[]],false,186,1,5,0,5,1,4,13,0,1,1,4,0,0,0,0,0,0,8,8,1,0,0,0,0,0,2,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\BinaryMinHeap.java,com.interview.graph.BinaryMinHeap,printHeap/0,false,180,0,0,0,0,2,1,5,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\array\MaximumMinimumArrangementTest.java,com.interview.array.MaximumMinimumArrangementTest,differentCases/0,false,8,3,0,0,0,1,2,11,0,5,0,2,0,0,0,0,0,0,0,34,5,0,0,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestEvenLengthSubstringOfEqualHalf.java,com.interview.dynamic.LongestEvenLengthSubstringOfEqualHalf,findMaxLength/1[int[]],false,12,1,1,1,0,8,0,23,1,7,1,0,0,0,3,3,0,1,0,11,10,10,5,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\LongestEvenLengthSubstringOfEqualHalf.java,com.interview.dynamic.LongestEvenLengthSubstringOfEqualHalf,main/1[java.lang.String[]],false,39,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,8,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\WordCombination.java,com.interview.recursion.WordCombination,printCombinations/1[java.util.List<java.util.List<java.lang.String>>],false,20,2,2,1,1,1,2,4,0,1,1,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\WordCombination.java,com.interview.recursion.WordCombination,"print/3[java.util.List<java.util.List<java.lang.String>>,int[],int]",false,25,2,3,2,1,4,7,13,1,2,3,7,1,0,2,1,0,0,1,3,3,2,2,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\WordCombination.java,com.interview.recursion.WordCombination,main/1[java.lang.String[]],false,42,1,2,0,2,1,3,17,0,5,1,3,1,2,0,0,0,0,6,0,5,0,0,0,0,0,8,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\PrintInSequence.java,com.interview.multithreaded.PrintInSequence,decrement/0,false,28,0,1,1,0,4,2,11,0,0,0,2,0,0,0,1,0,0,0,2,3,1,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\PrintInSequence.java,com.interview.multithreaded.PrintInSequence,main/1[java.lang.String[]],false,48,1,1,0,1,1,1,13,0,6,1,1,0,0,0,0,0,0,0,0,6,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\PrintInSequence.java,com.interview.multithreaded.PrintInSequence,runPrint/0,false,68,1,1,0,1,2,1,5,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\PrintInSequence.java,com.interview.multithreaded.PrintInSequence,runDecrement/0,false,74,1,1,0,1,2,1,5,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\PrintInSequence.java,com.interview.multithreaded.PrintInSequence,printVar/0,false,41,0,1,1,0,2,1,6,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\PrintInSequence.java,com.interview.multithreaded.PrintInSequence,increment/0,false,16,0,1,1,0,4,2,11,0,0,0,2,0,0,0,1,0,0,0,2,3,1,2,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\PrintInSequence.java,com.interview.multithreaded.PrintInSequence,runIncrement/0,false,62,1,1,0,1,2,1,5,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ContructTreeFromInorderPostOrder.java,com.interview.tree.ContructTreeFromInorderPostOrder,"buildTree/5[int[],int[],int,int,int]",false,13,3,4,2,2,4,2,15,2,2,5,2,1,0,1,1,0,1,0,4,4,6,2,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\ContructTreeFromInorderPostOrder.java,com.interview.tree.ContructTreeFromInorderPostOrder,"buildTree/2[int[],int[]]",false,9,3,1,0,1,1,1,3,1,0,2,1,1,1,0,0,0,0,0,3,0,2,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\MinimumTriangleSum.java,com.interview.dynamic.MinimumTriangleSum,minimumTotal/1[java.util.List<java.util.List<java.lang.Integer>>],false,11,1,0,0,0,4,5,13,1,5,1,5,0,0,3,0,0,0,0,8,7,5,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\BasicCalculator.java,com.interview.number.BasicCalculator,calculate/1[java.lang.String],false,19,0,0,0,0,10,6,32,1,6,1,6,0,0,2,5,0,1,0,6,10,6,3,0,0,0,9,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintAllPathFromTopLeftToBottomRight.java,com.interview.recursion.PrintAllPathFromTopLeftToBottomRight,"print/5[int[][],int,int,int[],int]",false,11,2,3,2,1,5,3,13,2,0,5,3,1,0,0,2,0,0,0,8,2,6,1,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\PrintAllPathFromTopLeftToBottomRight.java,com.interview.recursion.PrintAllPathFromTopLeftToBottomRight,main/1[java.lang.String[]],false,26,2,2,0,2,1,1,6,0,3,1,1,1,1,0,0,0,0,0,17,3,2,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\CircularBinarySearch.java,com.interview.binarysearch.CircularBinarySearch,search/1[int[]],false,18,1,1,1,0,9,0,28,2,3,1,0,0,0,1,1,0,3,0,12,8,11,3,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\binarysearch\CircularBinarySearch.java,com.interview.binarysearch.CircularBinarySearch,main/1[java.lang.String[]],false,45,1,2,0,2,1,2,23,0,11,1,2,1,1,0,0,0,0,0,78,11,0,0,0,0,0,15,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\Flatten2DList.java,com.interview.linklist.Flatten2DList,next/0,false,24,1,1,0,1,3,4,12,1,1,0,4,1,1,0,1,0,0,0,1,2,0,1,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\Flatten2DList.java,com.interview.linklist.Flatten2DList,hasNext/0,false,38,0,1,1,0,4,3,6,1,0,0,3,0,0,1,1,0,0,0,1,0,0,1,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\Flatten2DList.java,com.interview.linklist.Flatten2DList,Flatten2DList/1[java.util.List<java.util.List<java.lang.Integer>>],true,19,0,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\KadaneWrapArray.java,com.interview.array.Triplet,toString/0,false,16,0,0,0,0,1,0,3,1,0,0,0,0,0,0,0,0,0,4,0,0,1,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\CandiesProblem.java,com.interview.misc.CandiesProblem,main/1[java.lang.String[]],false,77,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,6,2,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\misc\CandiesProblem.java,com.interview.misc.CandiesProblem,minCandies/1[int[]],false,25,1,1,1,0,7,0,37,1,7,1,0,0,0,1,3,0,1,0,14,18,6,5,0,0,0,16,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxProductSubarray.java,com.interview.array.MaxProductSubarray,main/1[java.lang.String[]],false,48,1,2,0,2,1,2,5,0,2,1,2,1,1,0,0,0,0,0,12,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\MaxProductSubarray.java,com.interview.array.MaxProductSubarray,maxProduct/1[int[]],false,17,1,1,1,0,6,1,31,1,5,1,1,0,0,1,1,0,0,0,12,15,2,3,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.QueueManager,QueueManager/1[com.interview.multithreaded.QueueHandle],true,99,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,4,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.QueueManager,getDataFromFrontOfQueue/1[com.interview.multithreaded.DomainLock],false,103,4,6,1,5,2,4,12,1,3,1,4,0,0,0,0,0,0,0,0,6,0,1,0,0,0,15,33,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\PanCakeSorting.java,com.interview.sort.PanCakeSorting,sort/1[int[]],false,19,2,3,1,2,2,2,7,0,2,1,2,2,2,1,0,0,0,0,2,2,1,1,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\PanCakeSorting.java,com.interview.sort.PanCakeSorting,main/1[java.lang.String[]],false,49,1,2,0,2,2,2,8,0,3,1,2,1,3,1,0,0,0,1,10,3,1,1,0,0,0,7,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\PanCakeSorting.java,com.interview.sort.PanCakeSorting,"findMax/2[int[],int]",false,27,1,1,1,0,3,0,9,1,2,2,0,0,0,1,0,0,0,0,2,3,1,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\PanCakeSorting.java,com.interview.sort.PanCakeSorting,"flip/2[int[],int]",false,37,2,2,1,1,2,1,5,0,1,2,1,1,1,1,0,0,0,0,2,1,2,1,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\sort\PanCakeSorting.java,com.interview.sort.PanCakeSorting,"swap/3[int[],int,int]",false,43,1,1,1,0,1,0,5,0,1,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Knapsack01.java,com.interview.dynamic.Knapsack01,"bottomUpDP/3[int[],int[],int]",false,29,1,1,1,0,6,1,18,1,3,3,1,0,0,2,2,0,0,0,14,6,11,3,0,0,0,13,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Knapsack01.java,com.interview.dynamic.Knapsack01,"topDownRecursiveUtil/6[int[],int[],int,int,int,java.util.Map<com.interview.dynamic.Knapsack01.Index,java.lang.Integer>]",false,83,3,4,2,2,5,5,20,3,2,6,5,1,0,0,0,0,0,0,6,5,6,1,0,0,0,15,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Knapsack01.java,com.interview.dynamic.Knapsack01,"topDownRecursive/3[int[],int[],int]",false,77,3,2,1,1,1,1,4,1,1,3,1,1,1,0,0,0,0,0,1,1,0,0,0,0,0,12,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\Knapsack01.java,com.interview.dynamic.Knapsack01,main/1[java.lang.String[]],false,114,1,3,0,3,1,3,9,0,5,1,3,2,2,0,0,0,0,0,22,5,0,0,0,0,0,5,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfTreesInBST.java,com.interview.dynamic.CountNumberOfTreesInBST,countTrees/1[int],false,25,1,1,1,0,3,0,11,1,3,1,0,0,0,2,0,0,0,0,8,6,3,2,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfTreesInBST.java,com.interview.dynamic.CountNumberOfTreesInBST,countTreesRec/1[int],false,9,1,2,1,1,3,1,15,2,4,1,1,1,0,1,0,0,2,0,5,5,3,2,0,0,0,9,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\dynamic\CountNumberOfTreesInBST.java,com.interview.dynamic.CountNumberOfTreesInBST,main/1[java.lang.String[]],false,36,1,2,0,2,1,2,5,0,1,1,2,1,1,0,0,0,0,0,2,1,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\geometry\ClosestPairOfPoints.java,com.interview.geometry.XCoordinatorSorter,"compare/2[com.interview.geometry.Point,com.interview.geometry.Point]",false,40,1,0,0,0,2,0,8,2,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GroupElementsInSizeM.java,com.interview.array.Comparators,"compare/2[com.interview.array.Pair,com.interview.array.Pair]",false,27,1,0,0,0,2,0,8,2,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,3,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationLargerThanGivenArray.java,com.interview.number.PermutationLargerThanGivenArray,"sortRemaining/4[int[],int[],boolean[],int]",false,23,2,1,1,0,3,1,10,0,2,4,1,0,0,1,0,0,0,0,1,3,0,2,0,0,0,5,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationLargerThanGivenArray.java,com.interview.number.PermutationLargerThanGivenArray,main/1[java.lang.String[]],false,79,1,2,0,2,3,3,14,0,5,1,3,1,3,1,1,0,0,2,11,5,1,2,0,0,0,12,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationLargerThanGivenArray.java,com.interview.number.PermutationLargerThanGivenArray,"findBiggerNumber/2[int[],int[]]",false,13,3,2,1,1,2,1,9,2,3,2,1,1,2,0,0,0,0,0,1,3,0,1,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\number\PermutationLargerThanGivenArray.java,com.interview.number.PermutationLargerThanGivenArray,"findNumber/5[int[],int[],int[],int,boolean[]]",false,34,3,4,2,2,10,2,40,4,5,5,2,2,1,1,3,0,0,0,6,14,4,3,0,0,0,15,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\regex\MultiSpaceReplacement.java,com.interview.regex.MultiSpaceReplacement,replace/1[java.lang.String],false,8,0,1,1,0,1,4,5,0,2,1,4,0,0,0,0,0,0,2,0,2,0,0,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\regex\MultiSpaceReplacement.java,com.interview.regex.MultiSpaceReplacement,main/1[java.lang.String[]],false,15,1,2,0,2,1,1,5,0,2,1,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DAGShortestPathTopological.java,com.interview.graph.DAGShortestPathTopological,"shortestPath/2[com.interview.graph.Graph<T>,com.interview.graph.Vertex<T>]",false,12,6,7,0,7,4,9,15,1,4,2,9,0,0,2,0,0,0,0,1,4,2,3,0,0,0,12,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DAGShortestPathTopological.java,com.interview.graph.DAGShortestPathTopological,main/1[java.lang.String[]],false,34,3,5,0,5,1,6,14,0,3,1,6,0,0,0,0,0,0,0,24,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\graph\DAGShortestPathTopological.java,com.interview.graph.DAGShortestPathTopological,"getDistance/2[com.interview.graph.Vertex<T>,java.util.Map<com.interview.graph.Vertex<T>,java.lang.Integer>]",false,30,2,0,0,0,2,2,3,1,0,2,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,4,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\test\com\interview\multiarray\Mutable2DSumRangeQueryTest.java,com.interview.multiarray.Mutable2DSumRangeQueryTest,testDifferentCases/0,false,9,3,0,0,0,1,3,13,0,3,0,3,0,0,0,0,0,0,0,32,6,0,0,0,0,0,11,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\array\GroupElementsInSizeM.java,com.interview.array.Pair,"Pair/2[int,int]",true,18,0,1,1,0,1,0,4,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\LongestConsecutiveIntegerInUnsorted2DArray.java,com.interview.multiarray.LongestConsecutiveIntegerInUnsorted2DArray,"DFS/5[int[][],int,int,boolean[][],int]",false,23,3,3,2,1,8,2,18,4,4,5,2,1,0,0,2,0,0,0,13,6,6,1,0,0,0,13,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\LongestConsecutiveIntegerInUnsorted2DArray.java,com.interview.multiarray.LongestConsecutiveIntegerInUnsorted2DArray,longestConsecutiveInteger/1[int[][]],false,8,3,2,1,1,4,1,13,1,5,1,1,1,1,2,0,0,0,0,5,6,0,3,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multiarray\LongestConsecutiveIntegerInUnsorted2DArray.java,com.interview.multiarray.LongestConsecutiveIntegerInUnsorted2DArray,main/1[java.lang.String[]],false,43,1,2,0,2,1,2,5,0,2,1,2,1,2,0,0,0,0,0,9,2,0,0,0,0,0,10,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\RemoveDuplicatesSortedList.java,com.interview.linklist.RemoveDuplicatesSortedList,removeDuplicates/1[com.interview.linklist.Node],false,14,1,1,1,0,5,0,14,1,1,1,0,0,0,1,4,0,0,0,0,3,0,2,0,0,0,6,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\linklist\RemoveDuplicatesSortedList.java,com.interview.linklist.RemoveDuplicatesSortedList,main/1[java.lang.String[]],false,28,3,5,0,5,1,3,16,0,3,1,3,1,1,0,0,0,0,0,9,12,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.ThreadWorker,run/0,false,54,5,5,0,5,8,10,29,0,5,0,10,0,0,3,2,0,0,0,2,6,0,4,0,0,0,10,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\SingleQueueDomainTableUpdate.java,com.interview.multithreaded.ThreadWorker,ThreadWorker/1[com.interview.multithreaded.QueueManager],true,50,1,0,0,0,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,5,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LeavesOfBinaryTree.java,com.interview.tree.LeavesOfBinaryTree,findLeaves/1[com.interview.tree.Node],false,18,2,1,0,1,3,2,13,2,2,1,2,1,1,1,2,0,0,0,0,3,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\LeavesOfBinaryTree.java,com.interview.tree.LeavesOfBinaryTree,"stripLeaves/2[com.interview.tree.Node,java.util.List<java.lang.Integer>]",false,32,2,3,2,1,4,2,12,3,0,2,2,1,0,0,3,0,0,0,0,2,0,1,0,0,0,6,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SameTree.java,com.interview.tree.SameTree,main/1[java.lang.String[]],false,32,3,4,0,4,1,2,15,0,4,1,2,1,1,0,0,0,0,0,8,12,0,0,0,0,0,11,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\SameTree.java,com.interview.tree.SameTree,"sameTree/2[com.interview.tree.Node,com.interview.tree.Node]",false,19,2,3,2,1,6,1,9,3,0,2,1,1,0,0,5,0,0,0,0,0,0,1,0,0,0,8,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\InterpretationOfArray.java,com.interview.recursion.InterpretationOfArray,interpret/1[int[]],false,11,3,3,1,2,6,2,16,0,7,1,2,2,2,4,1,0,0,0,11,9,6,2,0,0,0,7,1,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\InterpretationOfArray.java,com.interview.recursion.InterpretationOfArray,main/1[java.lang.String[]],false,61,1,2,0,2,1,1,5,0,2,1,1,1,3,0,0,0,0,0,5,2,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\InterpretationOfArray.java,com.interview.recursion.InterpretationOfArray,getRepresentation/1[int],false,54,0,1,1,0,3,0,6,2,0,1,0,0,0,0,0,0,1,0,3,0,2,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\InterpretationOfArray.java,com.interview.recursion.InterpretationOfArray,print/1[java.util.List<java.lang.Character>],false,47,0,1,1,0,2,4,6,0,1,1,4,0,0,1,0,0,0,1,1,1,1,1,0,0,0,3,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\recursion\InterpretationOfArray.java,com.interview.recursion.InterpretationOfArray,"interpret/4[int,int,java.util.List<java.lang.Character>,char[][]]",false,28,2,4,2,2,5,5,16,1,0,4,5,2,1,0,3,0,0,0,9,0,5,1,0,0,0,6,2,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.DependencyTaskExecutor,"scheduleTask/2[java.util.List<com.interview.multithreaded.Task>,int]",false,22,2,2,1,1,2,7,14,0,4,2,7,1,1,1,0,0,0,1,0,3,0,2,0,0,2,12,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.DependencyTaskExecutor,main/1[java.lang.String[]],false,50,2,4,0,4,1,3,18,0,8,1,3,1,2,0,0,0,0,7,8,8,0,0,0,0,0,14,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\multithreaded\DependencyTaskExecutor.java,com.interview.multithreaded.DependencyTaskExecutor,"scheduleTaskUtil/2[com.interview.multithreaded.Task,java.util.concurrent.Executor]",false,31,2,6,2,4,4,11,21,3,5,2,11,1,0,1,1,0,0,0,0,5,0,2,0,0,3,8,0,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FenwickTree.java,com.interview.tree.FenwickTree,"getSum/2[int[],int]",false,39,2,2,1,1,2,1,9,1,1,2,1,1,1,1,0,0,0,0,3,4,1,1,0,0,0,16,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FenwickTree.java,com.interview.tree.FenwickTree,createTree/1[int[]],false,52,2,2,1,1,2,1,7,1,2,1,1,1,2,1,0,0,0,0,3,2,2,1,0,0,0,17,1,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FenwickTree.java,com.interview.tree.FenwickTree,getNext/1[int],false,76,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,15,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FenwickTree.java,com.interview.tree.FenwickTree,main/1[java.lang.String[]],false,80,1,3,0,3,8,2,12,0,3,1,2,2,4,0,7,0,0,0,21,3,0,0,0,0,0,6,9,0,false
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FenwickTree.java,com.interview.tree.FenwickTree,getParent/1[int],false,66,0,1,1,0,1,0,3,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,16,2,0,true
C:\Projetos\LabExperimentacao\medicao-lab2\repos\interview\src\com\interview\tree\FenwickTree.java,com.interview.tree.FenwickTree,"updateBinaryIndexedTree/3[int[],int,int]",false,28,2,2,1,1,2,1,6,0,0,3,1,1,1,1,0,0,0,0,0,2,0,1,0,0,0,25,1,0,true
